Args: ./llc -debug --mtriple=redefine --mattr=+has3rows,+has4ce,+has3columns /home/kavitha/Desktop/REDEFINE_MM_REPO/MM_Compiler/redefine-tests/test1/test1hop.ll -filetype=asm -o /home/kavitha/Desktop/REDEFINE_MM_REPO/MM_Compiler/redefine-tests/datatypes/chartest.s 

Features:+has3rows,+has4ce,+has3columns
CPU:

MERGING MOSTLY EMPTY BLOCKS - BEFORE:

for.end:                                          ; preds = %for.cond4
  br label %for.inc12

for.inc12:                                        ; preds = %for.end
  %12 = load i32* %j, align 4
  %inc13 = add nsw i32 %12, 1
  store i32 %inc13, i32* %j, align 4
  br label %for.cond1
AFTER:

for.inc12:                                        ; preds = %for.cond4
  %12 = load i32* %j, align 4
  %inc13 = add nsw i32 %12, 1
  store i32 %inc13, i32* %j, align 4
  br label %for.cond1



MERGING MOSTLY EMPTY BLOCKS - BEFORE:

for.end14:                                        ; preds = %for.cond1
  br label %for.inc15

for.inc15:                                        ; preds = %for.end14
  %13 = load i32* %i, align 4
  %inc16 = add nsw i32 %13, 1
  store i32 %inc16, i32* %i, align 4
  br label %for.cond
AFTER:

for.inc15:                                        ; preds = %for.cond1
  %13 = load i32* %i, align 4
  %inc16 = add nsw i32 %13, 1
  store i32 %inc16, i32* %i, align 4
  br label %for.cond



CGP: Found      local addrmode: [Base:%i]
CGP: Found      local addrmode: [Base:%i]
CGP: Found      local addrmode: [Base:%j]
CGP: Found      local addrmode: [Base:%j]
CGP: Found      local addrmode: [Base:%k]
CGP: Found      local addrmode: [Base:%k]
CGP: Found      local addrmode: [Base:%k]
CGP: Found      local addrmode: [Base:%i]
CGP: Found      local addrmode: [Base:%arrayidx + 4*%3]
CGP: Found      local addrmode: [Base:%j]
CGP: Found      local addrmode: [Base:%k]
CGP: Found      local addrmode: [Base:%arrayidx8 + 4*%6]
CGP: Found      local addrmode: [Base:%j]
CGP: Found      local addrmode: [Base:%i]
CGP: Found      local addrmode: [Base:%arrayidx10 + 4*%9]
CGP: Found      local addrmode: [Base:%k]
CGP: Found      local addrmode: [Base:%k]
CGP: Found      local addrmode: [Base:%j]
CGP: Found      local addrmode: [Base:%j]
CGP: Found      local addrmode: [Base:%i]
CGP: Found      local addrmode: [Base:%i]
To merge:

for.body6:                                        ; preds = %for.cond4
  %3 = load i32* %k, align 4
  %4 = load i32* %i, align 4
  %arrayidx = getelementptr inbounds [10 x [10 x i32]]* @a, i32 0, i32 %4
  %arrayidx7 = getelementptr inbounds [10 x i32]* %arrayidx, i32 0, i32 %3
  %5 = load i32* %arrayidx7, align 4
  %6 = load i32* %j, align 4
  %7 = load i32* %k, align 4
  %arrayidx8 = getelementptr inbounds [10 x [10 x i32]]* @b, i32 0, i32 %7
  %arrayidx9 = getelementptr inbounds [10 x i32]* %arrayidx8, i32 0, i32 %6
  %8 = load i32* %arrayidx9, align 4
  %add = add nsw i32 %5, %8
  %9 = load i32* %j, align 4
  %10 = load i32* %i, align 4
  %arrayidx10 = getelementptr inbounds [10 x [10 x i32]]* @c, i32 0, i32 %10
  %arrayidx11 = getelementptr inbounds [10 x i32]* %arrayidx10, i32 0, i32 %9
  store i32 %add, i32* %arrayidx11, align 4
  br label %for.inc



Computing probabilities for for.inc
set edge for.inc -> 0 successor weight to 124
Computing probabilities for for.inc12
set edge for.inc12 -> 0 successor weight to 124
Computing probabilities for for.cond4
set edge for.cond4 -> 0 successor weight to 124
set edge for.cond4 -> 1 successor weight to 4
Computing probabilities for for.body3
set edge for.body3 -> 0 successor weight to 124
Computing probabilities for for.inc15
set edge for.inc15 -> 0 successor weight to 124
Computing probabilities for for.cond1
set edge for.cond1 -> 0 successor weight to 124
set edge for.cond1 -> 1 successor weight to 4
Computing probabilities for for.body
set edge for.body -> 0 successor weight to 124
Computing probabilities for for.end17
Computing probabilities for for.cond
set edge for.cond -> 0 successor weight to 124
set edge for.cond -> 1 successor weight to 4
Computing probabilities for entry
digraph{
main[label="Name:main
Dom:NULL, PostDom:main0
Map:0:0, Context frame:0
"];
main0[label="Name:main0
Dom:main, PostDom:main4
Map:0:0, Context frame:1
"];
fib00[label="Name:fib0
Dom:fib0, PostDom:main0
Map:0:0, Context frame:50
"];
fib01[label="Name:fib0
Dom:fib0, PostDom:fib1
Map:0:0, Context frame:0
"];
fib0[label="Name:fib0
Dom:fib0, PostDom:fib1
Map:0:1, Context frame:0
"];
fib1[label="Name:fib1
Dom:NULL, PostDom:main0
Map:0:0, Context frame:23
"];
main->main0[label="reference"];
main->fib0[label="scalar"];
fib0->fib00[label="scalar"];
fib0->fib00[label="address"];
fib0->fib01[label="scalar"];
fib0->fib01[label="address"];
fib00->fib1[label="scalar"];
fib01->fib1[label="scalar"];
fib1->main0[label="scalar"];
main->fib0[label="address"];
fib0->fib1[label="address"];
fib0->main0[label="scalar"];

=== main
Initial selection DAG: BB#0 'main:entry'
SelectionDAG has 5 nodes:
    0x2106d78: ch = EntryToken [ORD=1]

    0x2123b80: i32 = Constant<0> [ORD=1]

    0x2123c80: i32 = FrameIndex<0> [ORD=1]

    0x2123d80: i32 = undef [ORD=1]

  0x2123e80: ch = store 0x2106d78, 0x2123b80, 0x2123c80, 0x2123d80<ST4[%i]> [ORD=1]


Optimized lowered selection DAG: BB#0 'main:entry'
SelectionDAG has 5 nodes:
    0x2106d78: ch = EntryToken [ORD=1]

    0x2123b80: i32 = Constant<0> [ORD=1]

    0x2123c80: i32 = FrameIndex<0> [ORD=1]

    0x2123d80: i32 = undef [ORD=1]

  0x2123e80: ch = store 0x2106d78, 0x2123b80, 0x2123c80, 0x2123d80<ST4[%i]> [ORD=1]


Legally typed node: 0x2123d80: i32 = undef [ORD=1] [ID=0]

Legally typed node: 0x2123c80: i32 = FrameIndex<0> [ORD=1] [ID=0]

Legally typed node: 0x2123b80: i32 = Constant<0> [ORD=1] [ID=0]

Legally typed node: 0x2106d78: ch = EntryToken [ORD=1] [ID=0]

Legally typed node: 0x2123e80: ch = store 0x2106d78, 0x2123b80, 0x2123c80, 0x2123d80<ST4[%i]> [ORD=1] [ID=0]

Legally typed node: 0x7ffdc3beb680: ch = handlenode 0x2123e80 [ID=0]

Type-legalized selection DAG: BB#0 'main:entry'
SelectionDAG has 5 nodes:
    0x2106d78: ch = EntryToken [ORD=1] [ID=-3]

    0x2123b80: i32 = Constant<0> [ORD=1] [ID=-3]

    0x2123c80: i32 = FrameIndex<0> [ORD=1] [ID=-3]

    0x2123d80: i32 = undef [ORD=1] [ID=-3]

  0x2123e80: ch = store 0x2106d78, 0x2123b80, 0x2123c80, 0x2123d80<ST4[%i]> [ORD=1] [ID=-3]


Legalized selection DAG: BB#0 'main:entry'
SelectionDAG has 5 nodes:
    0x2106d78: ch = EntryToken [ORD=1] [ID=0]

    0x2123b80: i32 = Constant<0> [ORD=1] [ID=1]

    0x2123c80: i32 = FrameIndex<0> [ORD=1] [ID=2]

    0x2123d80: i32 = undef [ORD=1] [ID=3]

  0x2123e80: ch = store 0x2106d78, 0x2123b80, 0x2123c80, 0x2123d80<ST4[%i]> [ORD=1] [ID=4]


Optimized legalized selection DAG: BB#0 'main:entry'
SelectionDAG has 5 nodes:
    0x2106d78: ch = EntryToken [ORD=1] [ID=0]

    0x2123b80: i32 = Constant<0> [ORD=1] [ID=1]

    0x2123c80: i32 = FrameIndex<0> [ORD=1] [ID=2]

    0x2123d80: i32 = undef [ORD=1] [ID=3]

  0x2123e80: ch = store 0x2106d78, 0x2123b80, 0x2123c80, 0x2123d80<ST4[%i]> [ORD=1] [ID=4]


===== Instruction selection begins: BB#0 'entry'
ISEL: Starting pattern match on root node: 0x2123e80: ch = store 0x2106d78, 0x2123b80, 0x2123c80, 0x2123d80<ST4[%i]> [ORD=1] [ID=4]

  Morphed node: 0x2123e80: ch = SW 0x2123b80, 0x2123c80, 0x2123f80, 0x2106d78<Mem:ST4[%i]> [ORD=1]

ISEL: Match complete!
=> 0x2123e80: ch = SW 0x2123b80, 0x2123c80, 0x2123f80, 0x2106d78<Mem:ST4[%i]> [ORD=1]

ISEL: Starting pattern match on root node: 0x2123b80: i32 = Constant<0> [ORD=1] [ID=1]

  Initial Opcode index to 994
comparing 0 and 0 and returning value:1
ISEL: Match complete!
=> 0x2123b80: i32 = Constant<0> [ORD=1] [ID=1]

=> 0x2106d78: ch = EntryToken [ORD=1]

===== Instruction selection ends:
Selected selection DAG: BB#0 'main:entry'
SelectionDAG has 6 nodes:
  0x2123d80: i32 = Register %zero

    0x2123d80: <multiple use>
      0x2123d80: <multiple use>
      0x2124080: i32 = TargetFrameIndex<0>

    0x2123c80: i32 = ADDI 0x2123d80, 0x2124080 [ORD=1]

    0x2123f80: i32 = TargetConstant<0>

    0x2106d78: ch = EntryToken [ORD=1]

  0x2123e80: ch = SW 0x2123d80, 0x2123c80, 0x2123f80, 0x2106d78<Mem:ST4[%i]> [ORD=1]


********** List Scheduling BB#0 'entry' **********
SU(0): 0x2123e80: ch = SW 0x2123d80, 0x2123c80, 0x2123f80, 0x2106d78<Mem:ST4[%i]> [ORD=1] [ID=0]

  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
   val SU(1): Latency=1

SU(1): 0x2123c80: i32 = ADDI 0x2123d80, 0x2124080 [ORD=1] [ID=1]

  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
   val SU(0): Latency=1


Examining Available:
Height 0: SU(0): 0x2123e80: ch = SW 0x2123d80, 0x2123c80, 0x2123f80, 0x2106d78<Mem:ST4[%i]> [ORD=1] [ID=0]


*** Scheduling [0]: SU(0): 0x2123e80: ch = SW 0x2123d80, 0x2123c80, 0x2123f80, 0x2106d78<Mem:ST4[%i]> [ORD=1] [ID=0]


Examining Available:
Height 1: SU(1): 0x2123c80: i32 = ADDI 0x2123d80, 0x2124080 [ORD=1] [ID=1]


*** Scheduling [1]: SU(1): 0x2123c80: i32 = ADDI 0x2123d80, 0x2124080 [ORD=1] [ID=1]

*** Final schedule ***
SU(1): 0x2123c80: i32 = ADDI 0x2123d80, 0x2124080 [ORD=1] [ID=1]

SU(0): 0x2123e80: ch = SW 0x2123d80, 0x2123c80, 0x2123f80, 0x2106d78<Mem:ST4[%i]> [ORD=1] [ID=0]


Total amount of phi nodes to update: 0
Initial selection DAG: BB#1 'main:for.cond'
SelectionDAG has 14 nodes:
  0x2106d78: ch = EntryToken [ORD=2]

  0x2123d80: i32 = Constant<0>

      0x2106d78: <multiple use>
            0x2106d78: <multiple use>
            0x2124080: i32 = FrameIndex<0> [ORD=2]

            0x2123f80: i32 = undef [ORD=2]

          0x2123e80: i32,ch = load 0x2106d78, 0x2124080, 0x2123f80<LD4[%i]> [ORD=2]

          0x2123c80: i32 = Constant<10> [ORD=3]

          0x2123b80: ch = setlt [ORD=3]

        0x2124180: i1 = setcc 0x2123e80, 0x2123c80, 0x2123b80 [ORD=3]

        0x2124280: i1 = Constant<-1>

      0x2124380: i1 = xor 0x2124180, 0x2124280

      0x2124480: ch = BasicBlock<for.end17 0x2120510>

    0x2124580: ch = brcond 0x2106d78, 0x2124380, 0x2124480

    0x2124680: ch = BasicBlock<for.body 0x2120040>

  0x2124780: ch = br 0x2124580, 0x2124680



Replacing.3 0x2124380: i1 = xor 0x2124180, 0x2124280

With: 0x2124980: i1 = setcc 0x2123e80, 0x2123c80, 0x2124880


Replacing.3 0x2124980: i1 = setcc 0x2123e80, 0x2123c80, 0x2124880

With: 0x2124280: i1 = setcc 0x2123e80, 0x2123b80, 0x2124180

Optimized lowered selection DAG: BB#1 'main:for.cond'
SelectionDAG has 11 nodes:
  0x2106d78: ch = EntryToken [ORD=2]

      0x2106d78: <multiple use>
          0x2106d78: <multiple use>
          0x2124080: i32 = FrameIndex<0> [ORD=2]

          0x2123f80: i32 = undef [ORD=2]

        0x2123e80: i32,ch = load 0x2106d78, 0x2124080, 0x2123f80<LD4[%i]> [ORD=2]

        0x2123b80: i32 = Constant<9>

        0x2124180: ch = setgt

      0x2124280: i1 = setcc 0x2123e80, 0x2123b80, 0x2124180

      0x2124480: ch = BasicBlock<for.end17 0x2120510>

    0x2124580: ch = brcond 0x2106d78, 0x2124280, 0x2124480

    0x2124680: ch = BasicBlock<for.body 0x2120040>

  0x2124780: ch = br 0x2124580, 0x2124680


Legally typed node: 0x2124180: ch = setgt [ID=0]

Legally typed node: 0x2123b80: i32 = Constant<9> [ID=0]

Legally typed node: 0x2124680: ch = BasicBlock<for.body 0x2120040> [ID=0]

Legally typed node: 0x2124480: ch = BasicBlock<for.end17 0x2120510> [ID=0]

Legally typed node: 0x2123f80: i32 = undef [ORD=2] [ID=0]

Legally typed node: 0x2124080: i32 = FrameIndex<0> [ORD=2] [ID=0]

Legally typed node: 0x2106d78: ch = EntryToken [ORD=2] [ID=0]

Legally typed node: 0x2123e80: i32,ch = load 0x2106d78, 0x2124080, 0x2123f80<LD4[%i]> [ORD=2] [ID=0]

Promote integer result: 0x2124280: i1 = setcc 0x2123e80, 0x2123b80, 0x2124180 [ID=0]

Promote integer operand: 0x2124580: ch = brcond 0x2106d78, 0x2124280, 0x2124480 [ID=0]

Promote integer operand: 0x2123c80: i32 = zero_extend 0x2124280 [ID=0]

Legally typed node: 0x2124880: i32 = Constant<1> [ID=0]

Legally typed node: 0x2123d80: i32 = setcc 0x2123e80, 0x2123b80, 0x2124180 [ID=0]

Legally typed node: 0x2124980: i32 = and 0x2123d80, 0x2124880 [ID=0]

Legally typed node: 0x2124580: ch = brcond 0x2106d78, 0x2124980, 0x2124480 [ID=0]

Legally typed node: 0x2124780: ch = br 0x2124580, 0x2124680 [ID=0]

Legally typed node: 0x7ffdc3beb680: ch = handlenode 0x2124780 [ID=0]

Type-legalized selection DAG: BB#1 'main:for.cond'
SelectionDAG has 13 nodes:
  0x2106d78: ch = EntryToken [ORD=2] [ID=-3]

      0x2106d78: <multiple use>
            0x2106d78: <multiple use>
            0x2124080: i32 = FrameIndex<0> [ORD=2] [ID=-3]

            0x2123f80: i32 = undef [ORD=2] [ID=-3]

          0x2123e80: i32,ch = load 0x2106d78, 0x2124080, 0x2123f80<LD4[%i]> [ORD=2] [ID=-3]

          0x2123b80: i32 = Constant<9> [ID=-3]

          0x2124180: ch = setgt [ID=-3]

        0x2123d80: i32 = setcc 0x2123e80, 0x2123b80, 0x2124180 [ID=-3]

        0x2124880: i32 = Constant<1> [ID=-3]

      0x2124980: i32 = and 0x2123d80, 0x2124880 [ID=-3]

      0x2124480: ch = BasicBlock<for.end17 0x2120510> [ID=-3]

    0x2124580: ch = brcond 0x2106d78, 0x2124980, 0x2124480 [ID=-3]

    0x2124680: ch = BasicBlock<for.body 0x2120040> [ID=-3]

  0x2124780: ch = br 0x2124580, 0x2124680 [ID=-3]



Replacing.2 0x2124980: i32 = and 0x2123d80, 0x2124880 [ID=-3]

With: 0x2123d80: i32 = setcc 0x2123e80, 0x2123b80, 0x2124180 [ID=-3]

Optimized type-legalized selection DAG: BB#1 'main:for.cond'
SelectionDAG has 11 nodes:
  0x2106d78: ch = EntryToken [ORD=2] [ID=-3]

      0x2106d78: <multiple use>
          0x2106d78: <multiple use>
          0x2124080: i32 = FrameIndex<0> [ORD=2] [ID=-3]

          0x2123f80: i32 = undef [ORD=2] [ID=-3]

        0x2123e80: i32,ch = load 0x2106d78, 0x2124080, 0x2123f80<LD4[%i]> [ORD=2] [ID=-3]

        0x2123b80: i32 = Constant<9> [ID=-3]

        0x2124180: ch = setgt [ID=-3]

      0x2123d80: i32 = setcc 0x2123e80, 0x2123b80, 0x2124180 [ID=-3]

      0x2124480: ch = BasicBlock<for.end17 0x2120510> [ID=-3]

    0x2124580: ch = brcond 0x2106d78, 0x2123d80, 0x2124480 [ID=-3]

    0x2124680: ch = BasicBlock<for.body 0x2120040> [ID=-3]

  0x2124780: ch = br 0x2124580, 0x2124680 [ID=-3]


Legalized selection DAG: BB#1 'main:for.cond'
SelectionDAG has 11 nodes:
  0x2106d78: ch = EntryToken [ORD=2] [ID=0]

      0x2106d78: <multiple use>
          0x2106d78: <multiple use>
          0x2124080: i32 = FrameIndex<0> [ORD=2] [ID=1]

          0x2123f80: i32 = undef [ORD=2] [ID=2]

        0x2123e80: i32,ch = load 0x2106d78, 0x2124080, 0x2123f80<LD4[%i]> [ORD=2] [ID=7]

        0x2123b80: i32 = Constant<9> [ID=5]

        0x2124180: ch = setgt [ID=6]

      0x2123d80: i32 = setcc 0x2123e80, 0x2123b80, 0x2124180 [ID=8]

      0x2124480: ch = BasicBlock<for.end17 0x2120510> [ID=3]

    0x2124580: ch = brcond 0x2106d78, 0x2123d80, 0x2124480 [ID=9]

    0x2124680: ch = BasicBlock<for.body 0x2120040> [ID=4]

  0x2124780: ch = br 0x2124580, 0x2124680 [ID=10]


Optimized legalized selection DAG: BB#1 'main:for.cond'
SelectionDAG has 11 nodes:
  0x2106d78: ch = EntryToken [ORD=2] [ID=0]

      0x2106d78: <multiple use>
          0x2106d78: <multiple use>
          0x2124080: i32 = FrameIndex<0> [ORD=2] [ID=1]

          0x2123f80: i32 = undef [ORD=2] [ID=2]

        0x2123e80: i32,ch = load 0x2106d78, 0x2124080, 0x2123f80<LD4[%i]> [ORD=2] [ID=7]

        0x2123b80: i32 = Constant<9> [ID=5]

        0x2124180: ch = setgt [ID=6]

      0x2123d80: i32 = setcc 0x2123e80, 0x2123b80, 0x2124180 [ID=8]

      0x2124480: ch = BasicBlock<for.end17 0x2120510> [ID=3]

    0x2124580: ch = brcond 0x2106d78, 0x2123d80, 0x2124480 [ID=9]

    0x2124680: ch = BasicBlock<for.body 0x2120040> [ID=4]

  0x2124780: ch = br 0x2124580, 0x2124680 [ID=10]


===== Instruction selection begins: BB#1 'for.cond'
ISEL: Starting pattern match on root node: 0x2124780: ch = br 0x2124580, 0x2124680 [ID=10]

  Initial Opcode index to 1787
  Morphed node: 0x2124780: ch = JAL 0x2124680, 0x2124580

ISEL: Match complete!
=> 0x2124780: ch = JAL 0x2124680, 0x2124580

ISEL: Starting pattern match on root node: 0x2124580: ch = brcond 0x2106d78, 0x2123d80, 0x2124480 [ID=9]

  Initial Opcode index to 1288
  Skipped scope entry (due to false predicate) at index 1305, continuing at 1326
  Skipped scope entry (due to false predicate) at index 1327, continuing at 1348
  Skipped scope entry (due to false predicate) at index 1349, continuing at 1370
  Skipped scope entry (due to false predicate) at index 1371, continuing at 1392
  Skipped scope entry (due to false predicate) at index 1393, continuing at 1414
  Skipped scope entry (due to false predicate) at index 1415, continuing at 1436
  Morphed node: 0x2124580: ch = BGT 0x2124480, 0x2123e80, 0x2123b80, 0x2106d78

ISEL: Match complete!
=> 0x2124580: ch = BGT 0x2124480, 0x2123e80, 0x2123b80, 0x2106d78

ISEL: Starting pattern match on root node: 0x2123e80: i32,ch = load 0x2106d78, 0x2124080, 0x2123f80<LD4[%i]> [ORD=2] [ID=7]

  Initial Opcode index to 4
  TypeSwitch[i32] from 9 to 12
  Morphed node: 0x2123e80: i32,ch = LW 0x2124080, 0x2124180, 0x2106d78<Mem:LD4[%i]> [ORD=2]

ISEL: Match complete!
=> 0x2123e80: i32,ch = LW 0x2124080, 0x2124180, 0x2106d78<Mem:LD4[%i]> [ORD=2]

ISEL: Starting pattern match on root node: 0x2123b80: i32 = Constant<9> [ID=5]

  Initial Opcode index to 994
comparing 0 and 9 and returning value:0
  Skipped scope entry (due to false predicate) at index 996, continuing at 1004
  Morphed node: 0x2123b80: i32 = ADDI 0x2123f80, 0x2123d80

ISEL: Match complete!
=> 0x2123b80: i32 = ADDI 0x2123f80, 0x2123d80

=> 0x2124680: ch = BasicBlock<for.body 0x2120040>

=> 0x2124480: ch = BasicBlock<for.end17 0x2120510>

=> 0x2106d78: ch = EntryToken [ORD=2]

===== Instruction selection ends:
Selected selection DAG: BB#1 'main:for.cond'
SelectionDAG has 12 nodes:
  0x2106d78: ch = EntryToken [ORD=2]

  0x2123f80: i32 = Register %zero

    0x2124680: ch = BasicBlock<for.body 0x2120040>

      0x2124480: ch = BasicBlock<for.end17 0x2120510>

          0x2123f80: <multiple use>
          0x2124880: i32 = TargetFrameIndex<0>

        0x2124080: i32 = ADDI 0x2123f80, 0x2124880 [ORD=2]

        0x2124180: i32 = TargetConstant<0>

        0x2106d78: <multiple use>
      0x2123e80: i32,ch = LW 0x2124080, 0x2124180, 0x2106d78<Mem:LD4[%i]> [ORD=2]

        0x2123f80: <multiple use>
        0x2123d80: i32 = TargetConstant<9>

      0x2123b80: i32 = ADDI 0x2123f80, 0x2123d80

      0x2106d78: <multiple use>
    0x2124580: ch = BGT 0x2124480, 0x2123e80, 0x2123b80, 0x2106d78

  0x2124780: ch = JAL 0x2124680, 0x2124580


********** List Scheduling BB#1 'for.cond' **********
SU(0): 0x2124780: ch = JAL 0x2124680, 0x2124580 [ID=0]

  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 3
  Height             : 0
  Predecessors:
   ch  SU(1): Latency=1

SU(1): 0x2124580: ch = BGT 0x2124480, 0x2123e80, 0x2123b80, 0x2106d78 [ID=1]

  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 1
  Predecessors:
   val SU(3): Latency=1
   val SU(2): Latency=1
  Successors:
   ch  SU(0): Latency=1

SU(2): 0x2123b80: i32 = ADDI 0x2123f80, 0x2123d80 [ID=2]

  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
   val SU(1): Latency=1

SU(3): 0x2123e80: i32,ch = LW 0x2124080, 0x2124180, 0x2106d78<Mem:LD4[%i]> [ORD=2] [ID=3]

  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 1
  Height             : 2
  Predecessors:
   val SU(4): Latency=1
  Successors:
   val SU(1): Latency=1

SU(4): 0x2124080: i32 = ADDI 0x2123f80, 0x2124880 [ORD=2] [ID=4]

  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 0
  Height             : 3
  Successors:
   val SU(3): Latency=1


Examining Available:
Height 0: SU(0): 0x2124780: ch = JAL 0x2124680, 0x2124580 [ID=0]


*** Scheduling [0]: SU(0): 0x2124780: ch = JAL 0x2124680, 0x2124580 [ID=0]


Examining Available:
Height 1: SU(1): 0x2124580: ch = BGT 0x2124480, 0x2123e80, 0x2123b80, 0x2106d78 [ID=1]


*** Scheduling [1]: SU(1): 0x2124580: ch = BGT 0x2124480, 0x2123e80, 0x2123b80, 0x2106d78 [ID=1]


Examining Available:
Height 2: SU(2): 0x2123b80: i32 = ADDI 0x2123f80, 0x2123d80 [ID=2]

Height 2: SU(3): 0x2123e80: i32,ch = LW 0x2124080, 0x2124180, 0x2106d78<Mem:LD4[%i]> [ORD=2] [ID=3]


*** Scheduling [2]: SU(2): 0x2123b80: i32 = ADDI 0x2123f80, 0x2123d80 [ID=2]


Examining Available:
Height 2: SU(3): 0x2123e80: i32,ch = LW 0x2124080, 0x2124180, 0x2106d78<Mem:LD4[%i]> [ORD=2] [ID=3]


*** Scheduling [3]: SU(3): 0x2123e80: i32,ch = LW 0x2124080, 0x2124180, 0x2106d78<Mem:LD4[%i]> [ORD=2] [ID=3]


Examining Available:
Height 4: SU(4): 0x2124080: i32 = ADDI 0x2123f80, 0x2124880 [ORD=2] [ID=4]


*** Scheduling [4]: SU(4): 0x2124080: i32 = ADDI 0x2123f80, 0x2124880 [ORD=2] [ID=4]

*** Final schedule ***
SU(4): 0x2124080: i32 = ADDI 0x2123f80, 0x2124880 [ORD=2] [ID=4]

SU(3): 0x2123e80: i32,ch = LW 0x2124080, 0x2124180, 0x2106d78<Mem:LD4[%i]> [ORD=2] [ID=3]

SU(2): 0x2123b80: i32 = ADDI 0x2123f80, 0x2123d80 [ID=2]

SU(1): 0x2124580: ch = BGT 0x2124480, 0x2123e80, 0x2123b80, 0x2106d78 [ID=1]

SU(0): 0x2124780: ch = JAL 0x2124680, 0x2124580 [ID=0]


Total amount of phi nodes to update: 0
Initial selection DAG: BB#9 'main:for.end17'
SelectionDAG has 1 nodes:
  0x2106d78: ch = EntryToken


Optimized lowered selection DAG: BB#9 'main:for.end17'
SelectionDAG has 1 nodes:
  0x2106d78: ch = EntryToken


Legally typed node: 0x2106d78: ch = EntryToken [ID=0]

Legally typed node: 0x7ffdc3beb680: ch = handlenode 0x2106d78 [ID=0]

Type-legalized selection DAG: BB#9 'main:for.end17'
SelectionDAG has 1 nodes:
  0x2106d78: ch = EntryToken [ID=-3]


Legalized selection DAG: BB#9 'main:for.end17'
SelectionDAG has 1 nodes:
  0x2106d78: ch = EntryToken [ID=0]


Optimized legalized selection DAG: BB#9 'main:for.end17'
SelectionDAG has 1 nodes:
  0x2106d78: ch = EntryToken [ID=0]


===== Instruction selection begins: BB#9 'for.end17'
=> 0x2106d78: ch = EntryToken

===== Instruction selection ends:
Selected selection DAG: BB#9 'main:for.end17'
SelectionDAG has 1 nodes:
  0x2106d78: ch = EntryToken


********** List Scheduling BB#9 'for.end17' **********
*** Final schedule ***

Total amount of phi nodes to update: 0
Initial selection DAG: BB#2 'main:for.body'
SelectionDAG has 5 nodes:
    0x2106d78: ch = EntryToken [ORD=4]

    0x2124880: i32 = Constant<0> [ORD=4]

    0x2123d80: i32 = FrameIndex<1> [ORD=4]

    0x2123f80: i32 = undef [ORD=4]

  0x2124180: ch = store 0x2106d78, 0x2124880, 0x2123d80, 0x2123f80<ST4[%j]> [ORD=4]


Optimized lowered selection DAG: BB#2 'main:for.body'
SelectionDAG has 5 nodes:
    0x2106d78: ch = EntryToken [ORD=4]

    0x2124880: i32 = Constant<0> [ORD=4]

    0x2123d80: i32 = FrameIndex<1> [ORD=4]

    0x2123f80: i32 = undef [ORD=4]

  0x2124180: ch = store 0x2106d78, 0x2124880, 0x2123d80, 0x2123f80<ST4[%j]> [ORD=4]


Legally typed node: 0x2123f80: i32 = undef [ORD=4] [ID=0]

Legally typed node: 0x2123d80: i32 = FrameIndex<1> [ORD=4] [ID=0]

Legally typed node: 0x2124880: i32 = Constant<0> [ORD=4] [ID=0]

Legally typed node: 0x2106d78: ch = EntryToken [ORD=4] [ID=0]

Legally typed node: 0x2124180: ch = store 0x2106d78, 0x2124880, 0x2123d80, 0x2123f80<ST4[%j]> [ORD=4] [ID=0]

Legally typed node: 0x7ffdc3beb680: ch = handlenode 0x2124180 [ID=0]

Type-legalized selection DAG: BB#2 'main:for.body'
SelectionDAG has 5 nodes:
    0x2106d78: ch = EntryToken [ORD=4] [ID=-3]

    0x2124880: i32 = Constant<0> [ORD=4] [ID=-3]

    0x2123d80: i32 = FrameIndex<1> [ORD=4] [ID=-3]

    0x2123f80: i32 = undef [ORD=4] [ID=-3]

  0x2124180: ch = store 0x2106d78, 0x2124880, 0x2123d80, 0x2123f80<ST4[%j]> [ORD=4] [ID=-3]


Legalized selection DAG: BB#2 'main:for.body'
SelectionDAG has 5 nodes:
    0x2106d78: ch = EntryToken [ORD=4] [ID=0]

    0x2124880: i32 = Constant<0> [ORD=4] [ID=1]

    0x2123d80: i32 = FrameIndex<1> [ORD=4] [ID=2]

    0x2123f80: i32 = undef [ORD=4] [ID=3]

  0x2124180: ch = store 0x2106d78, 0x2124880, 0x2123d80, 0x2123f80<ST4[%j]> [ORD=4] [ID=4]


Optimized legalized selection DAG: BB#2 'main:for.body'
SelectionDAG has 5 nodes:
    0x2106d78: ch = EntryToken [ORD=4] [ID=0]

    0x2124880: i32 = Constant<0> [ORD=4] [ID=1]

    0x2123d80: i32 = FrameIndex<1> [ORD=4] [ID=2]

    0x2123f80: i32 = undef [ORD=4] [ID=3]

  0x2124180: ch = store 0x2106d78, 0x2124880, 0x2123d80, 0x2123f80<ST4[%j]> [ORD=4] [ID=4]


===== Instruction selection begins: BB#2 'for.body'
ISEL: Starting pattern match on root node: 0x2124180: ch = store 0x2106d78, 0x2124880, 0x2123d80, 0x2123f80<ST4[%j]> [ORD=4] [ID=4]

  Initial Opcode index to 123
  Morphed node: 0x2124180: ch = SW 0x2124880, 0x2123d80, 0x2124780, 0x2106d78<Mem:ST4[%j]> [ORD=4]

ISEL: Match complete!
=> 0x2124180: ch = SW 0x2124880, 0x2123d80, 0x2124780, 0x2106d78<Mem:ST4[%j]> [ORD=4]

ISEL: Starting pattern match on root node: 0x2124880: i32 = Constant<0> [ORD=4] [ID=1]

  Initial Opcode index to 994
comparing 0 and 0 and returning value:1
ISEL: Match complete!
=> 0x2124880: i32 = Constant<0> [ORD=4] [ID=1]

=> 0x2106d78: ch = EntryToken [ORD=4]

===== Instruction selection ends:
Selected selection DAG: BB#2 'main:for.body'
SelectionDAG has 6 nodes:
  0x2123f80: i32 = Register %zero

    0x2123f80: <multiple use>
      0x2123f80: <multiple use>
      0x2124580: i32 = TargetFrameIndex<1>

    0x2123d80: i32 = ADDI 0x2123f80, 0x2124580 [ORD=4]

    0x2124780: i32 = TargetConstant<0>

    0x2106d78: ch = EntryToken [ORD=4]

  0x2124180: ch = SW 0x2123f80, 0x2123d80, 0x2124780, 0x2106d78<Mem:ST4[%j]> [ORD=4]


********** List Scheduling BB#2 'for.body' **********
SU(0): 0x2124180: ch = SW 0x2123f80, 0x2123d80, 0x2124780, 0x2106d78<Mem:ST4[%j]> [ORD=4] [ID=0]

  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
   val SU(1): Latency=1

SU(1): 0x2123d80: i32 = ADDI 0x2123f80, 0x2124580 [ORD=4] [ID=1]

  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
   val SU(0): Latency=1


Examining Available:
Height 0: SU(0): 0x2124180: ch = SW 0x2123f80, 0x2123d80, 0x2124780, 0x2106d78<Mem:ST4[%j]> [ORD=4] [ID=0]


*** Scheduling [0]: SU(0): 0x2124180: ch = SW 0x2123f80, 0x2123d80, 0x2124780, 0x2106d78<Mem:ST4[%j]> [ORD=4] [ID=0]


Examining Available:
Height 1: SU(1): 0x2123d80: i32 = ADDI 0x2123f80, 0x2124580 [ORD=4] [ID=1]


*** Scheduling [1]: SU(1): 0x2123d80: i32 = ADDI 0x2123f80, 0x2124580 [ORD=4] [ID=1]

*** Final schedule ***
SU(1): 0x2123d80: i32 = ADDI 0x2123f80, 0x2124580 [ORD=4] [ID=1]

SU(0): 0x2124180: ch = SW 0x2123f80, 0x2123d80, 0x2124780, 0x2106d78<Mem:ST4[%j]> [ORD=4] [ID=0]


Total amount of phi nodes to update: 0
Initial selection DAG: BB#3 'main:for.cond1'
SelectionDAG has 14 nodes:
  0x2106d78: ch = EntryToken [ORD=5]

  0x2123f80: i32 = Constant<0>

      0x2106d78: <multiple use>
            0x2106d78: <multiple use>
            0x2124580: i32 = FrameIndex<1> [ORD=5]

            0x2124780: i32 = undef [ORD=5]

          0x2124180: i32,ch = load 0x2106d78, 0x2124580, 0x2124780<LD4[%j]> [ORD=5]

          0x2123d80: i32 = Constant<10> [ORD=6]

          0x2124880: ch = setlt [ORD=6]

        0x2123e80: i1 = setcc 0x2124180, 0x2123d80, 0x2124880 [ORD=6]

        0x2123b80: i1 = Constant<-1>

      0x2124680: i1 = xor 0x2123e80, 0x2123b80

      0x2124480: ch = BasicBlock<for.inc15 0x2120460>

    0x2124080: ch = brcond 0x2106d78, 0x2124680, 0x2124480

    0x2124980: ch = BasicBlock<for.body3 0x21201a0>

  0x2124280: ch = br 0x2124080, 0x2124980



Replacing.3 0x2124680: i1 = xor 0x2123e80, 0x2123b80

With: 0x2124380: i1 = setcc 0x2124180, 0x2123d80, 0x2123c80


Replacing.3 0x2124380: i1 = setcc 0x2124180, 0x2123d80, 0x2123c80

With: 0x2123b80: i1 = setcc 0x2124180, 0x2124880, 0x2123e80

Optimized lowered selection DAG: BB#3 'main:for.cond1'
SelectionDAG has 11 nodes:
  0x2106d78: ch = EntryToken [ORD=5]

      0x2106d78: <multiple use>
          0x2106d78: <multiple use>
          0x2124580: i32 = FrameIndex<1> [ORD=5]

          0x2124780: i32 = undef [ORD=5]

        0x2124180: i32,ch = load 0x2106d78, 0x2124580, 0x2124780<LD4[%j]> [ORD=5]

        0x2124880: i32 = Constant<9>

        0x2123e80: ch = setgt

      0x2123b80: i1 = setcc 0x2124180, 0x2124880, 0x2123e80

      0x2124480: ch = BasicBlock<for.inc15 0x2120460>

    0x2124080: ch = brcond 0x2106d78, 0x2123b80, 0x2124480

    0x2124980: ch = BasicBlock<for.body3 0x21201a0>

  0x2124280: ch = br 0x2124080, 0x2124980


Legally typed node: 0x2123e80: ch = setgt [ID=0]

Legally typed node: 0x2124880: i32 = Constant<9> [ID=0]

Legally typed node: 0x2124980: ch = BasicBlock<for.body3 0x21201a0> [ID=0]

Legally typed node: 0x2124480: ch = BasicBlock<for.inc15 0x2120460> [ID=0]

Legally typed node: 0x2124780: i32 = undef [ORD=5] [ID=0]

Legally typed node: 0x2124580: i32 = FrameIndex<1> [ORD=5] [ID=0]

Legally typed node: 0x2106d78: ch = EntryToken [ORD=5] [ID=0]

Legally typed node: 0x2124180: i32,ch = load 0x2106d78, 0x2124580, 0x2124780<LD4[%j]> [ORD=5] [ID=0]

Promote integer result: 0x2123b80: i1 = setcc 0x2124180, 0x2124880, 0x2123e80 [ID=0]

Promote integer operand: 0x2124080: ch = brcond 0x2106d78, 0x2123b80, 0x2124480 [ID=0]

Promote integer operand: 0x2123d80: i32 = zero_extend 0x2123b80 [ID=0]

Legally typed node: 0x2123c80: i32 = Constant<1> [ID=0]

Legally typed node: 0x2123f80: i32 = setcc 0x2124180, 0x2124880, 0x2123e80 [ID=0]

Legally typed node: 0x2124380: i32 = and 0x2123f80, 0x2123c80 [ID=0]

Legally typed node: 0x2124080: ch = brcond 0x2106d78, 0x2124380, 0x2124480 [ID=0]

Legally typed node: 0x2124280: ch = br 0x2124080, 0x2124980 [ID=0]

Legally typed node: 0x7ffdc3beb680: ch = handlenode 0x2124280 [ID=0]

Type-legalized selection DAG: BB#3 'main:for.cond1'
SelectionDAG has 13 nodes:
  0x2106d78: ch = EntryToken [ORD=5] [ID=-3]

      0x2106d78: <multiple use>
            0x2106d78: <multiple use>
            0x2124580: i32 = FrameIndex<1> [ORD=5] [ID=-3]

            0x2124780: i32 = undef [ORD=5] [ID=-3]

          0x2124180: i32,ch = load 0x2106d78, 0x2124580, 0x2124780<LD4[%j]> [ORD=5] [ID=-3]

          0x2124880: i32 = Constant<9> [ID=-3]

          0x2123e80: ch = setgt [ID=-3]

        0x2123f80: i32 = setcc 0x2124180, 0x2124880, 0x2123e80 [ID=-3]

        0x2123c80: i32 = Constant<1> [ID=-3]

      0x2124380: i32 = and 0x2123f80, 0x2123c80 [ID=-3]

      0x2124480: ch = BasicBlock<for.inc15 0x2120460> [ID=-3]

    0x2124080: ch = brcond 0x2106d78, 0x2124380, 0x2124480 [ID=-3]

    0x2124980: ch = BasicBlock<for.body3 0x21201a0> [ID=-3]

  0x2124280: ch = br 0x2124080, 0x2124980 [ID=-3]



Replacing.2 0x2124380: i32 = and 0x2123f80, 0x2123c80 [ID=-3]

With: 0x2123f80: i32 = setcc 0x2124180, 0x2124880, 0x2123e80 [ID=-3]

Optimized type-legalized selection DAG: BB#3 'main:for.cond1'
SelectionDAG has 11 nodes:
  0x2106d78: ch = EntryToken [ORD=5] [ID=-3]

      0x2106d78: <multiple use>
          0x2106d78: <multiple use>
          0x2124580: i32 = FrameIndex<1> [ORD=5] [ID=-3]

          0x2124780: i32 = undef [ORD=5] [ID=-3]

        0x2124180: i32,ch = load 0x2106d78, 0x2124580, 0x2124780<LD4[%j]> [ORD=5] [ID=-3]

        0x2124880: i32 = Constant<9> [ID=-3]

        0x2123e80: ch = setgt [ID=-3]

      0x2123f80: i32 = setcc 0x2124180, 0x2124880, 0x2123e80 [ID=-3]

      0x2124480: ch = BasicBlock<for.inc15 0x2120460> [ID=-3]

    0x2124080: ch = brcond 0x2106d78, 0x2123f80, 0x2124480 [ID=-3]

    0x2124980: ch = BasicBlock<for.body3 0x21201a0> [ID=-3]

  0x2124280: ch = br 0x2124080, 0x2124980 [ID=-3]


Legalized selection DAG: BB#3 'main:for.cond1'
SelectionDAG has 11 nodes:
  0x2106d78: ch = EntryToken [ORD=5] [ID=0]

      0x2106d78: <multiple use>
          0x2106d78: <multiple use>
          0x2124580: i32 = FrameIndex<1> [ORD=5] [ID=1]

          0x2124780: i32 = undef [ORD=5] [ID=2]

        0x2124180: i32,ch = load 0x2106d78, 0x2124580, 0x2124780<LD4[%j]> [ORD=5] [ID=7]

        0x2124880: i32 = Constant<9> [ID=5]

        0x2123e80: ch = setgt [ID=6]

      0x2123f80: i32 = setcc 0x2124180, 0x2124880, 0x2123e80 [ID=8]

      0x2124480: ch = BasicBlock<for.inc15 0x2120460> [ID=3]

    0x2124080: ch = brcond 0x2106d78, 0x2123f80, 0x2124480 [ID=9]

    0x2124980: ch = BasicBlock<for.body3 0x21201a0> [ID=4]

  0x2124280: ch = br 0x2124080, 0x2124980 [ID=10]


Optimized legalized selection DAG: BB#3 'main:for.cond1'
SelectionDAG has 11 nodes:
  0x2106d78: ch = EntryToken [ORD=5] [ID=0]

      0x2106d78: <multiple use>
          0x2106d78: <multiple use>
          0x2124580: i32 = FrameIndex<1> [ORD=5] [ID=1]

          0x2124780: i32 = undef [ORD=5] [ID=2]

        0x2124180: i32,ch = load 0x2106d78, 0x2124580, 0x2124780<LD4[%j]> [ORD=5] [ID=7]

        0x2124880: i32 = Constant<9> [ID=5]

        0x2123e80: ch = setgt [ID=6]

      0x2123f80: i32 = setcc 0x2124180, 0x2124880, 0x2123e80 [ID=8]

      0x2124480: ch = BasicBlock<for.inc15 0x2120460> [ID=3]

    0x2124080: ch = brcond 0x2106d78, 0x2123f80, 0x2124480 [ID=9]

    0x2124980: ch = BasicBlock<for.body3 0x21201a0> [ID=4]

  0x2124280: ch = br 0x2124080, 0x2124980 [ID=10]


===== Instruction selection begins: BB#3 'for.cond1'
ISEL: Starting pattern match on root node: 0x2124280: ch = br 0x2124080, 0x2124980 [ID=10]

  Initial Opcode index to 1787
  Morphed node: 0x2124280: ch = JAL 0x2124980, 0x2124080

ISEL: Match complete!
=> 0x2124280: ch = JAL 0x2124980, 0x2124080

ISEL: Starting pattern match on root node: 0x2124080: ch = brcond 0x2106d78, 0x2123f80, 0x2124480 [ID=9]

  Initial Opcode index to 1288
  Skipped scope entry (due to false predicate) at index 1305, continuing at 1326
  Skipped scope entry (due to false predicate) at index 1327, continuing at 1348
  Skipped scope entry (due to false predicate) at index 1349, continuing at 1370
  Skipped scope entry (due to false predicate) at index 1371, continuing at 1392
  Skipped scope entry (due to false predicate) at index 1393, continuing at 1414
  Skipped scope entry (due to false predicate) at index 1415, continuing at 1436
  Morphed node: 0x2124080: ch = BGT 0x2124480, 0x2124180, 0x2124880, 0x2106d78

ISEL: Match complete!
=> 0x2124080: ch = BGT 0x2124480, 0x2124180, 0x2124880, 0x2106d78

ISEL: Starting pattern match on root node: 0x2124180: i32,ch = load 0x2106d78, 0x2124580, 0x2124780<LD4[%j]> [ORD=5] [ID=7]

  Initial Opcode index to 4
  TypeSwitch[i32] from 9 to 12
  Morphed node: 0x2124180: i32,ch = LW 0x2124580, 0x2123e80, 0x2106d78<Mem:LD4[%j]> [ORD=5]

ISEL: Match complete!
=> 0x2124180: i32,ch = LW 0x2124580, 0x2123e80, 0x2106d78<Mem:LD4[%j]> [ORD=5]

ISEL: Starting pattern match on root node: 0x2124880: i32 = Constant<9> [ID=5]

  Initial Opcode index to 994
comparing 0 and 9 and returning value:0
  Skipped scope entry (due to false predicate) at index 996, continuing at 1004
  Morphed node: 0x2124880: i32 = ADDI 0x2124780, 0x2123f80

ISEL: Match complete!
=> 0x2124880: i32 = ADDI 0x2124780, 0x2123f80

=> 0x2124980: ch = BasicBlock<for.body3 0x21201a0>

=> 0x2124480: ch = BasicBlock<for.inc15 0x2120460>

=> 0x2106d78: ch = EntryToken [ORD=5]

===== Instruction selection ends:
Selected selection DAG: BB#3 'main:for.cond1'
SelectionDAG has 12 nodes:
  0x2106d78: ch = EntryToken [ORD=5]

  0x2124780: i32 = Register %zero

    0x2124980: ch = BasicBlock<for.body3 0x21201a0>

      0x2124480: ch = BasicBlock<for.inc15 0x2120460>

          0x2124780: <multiple use>
          0x2123c80: i32 = TargetFrameIndex<1>

        0x2124580: i32 = ADDI 0x2124780, 0x2123c80 [ORD=5]

        0x2123e80: i32 = TargetConstant<0>

        0x2106d78: <multiple use>
      0x2124180: i32,ch = LW 0x2124580, 0x2123e80, 0x2106d78<Mem:LD4[%j]> [ORD=5]

        0x2124780: <multiple use>
        0x2123f80: i32 = TargetConstant<9>

      0x2124880: i32 = ADDI 0x2124780, 0x2123f80

      0x2106d78: <multiple use>
    0x2124080: ch = BGT 0x2124480, 0x2124180, 0x2124880, 0x2106d78

  0x2124280: ch = JAL 0x2124980, 0x2124080


********** List Scheduling BB#3 'for.cond1' **********
SU(0): 0x2124280: ch = JAL 0x2124980, 0x2124080 [ID=0]

  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 3
  Height             : 0
  Predecessors:
   ch  SU(1): Latency=1

SU(1): 0x2124080: ch = BGT 0x2124480, 0x2124180, 0x2124880, 0x2106d78 [ID=1]

  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 1
  Predecessors:
   val SU(3): Latency=1
   val SU(2): Latency=1
  Successors:
   ch  SU(0): Latency=1

SU(2): 0x2124880: i32 = ADDI 0x2124780, 0x2123f80 [ID=2]

  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
   val SU(1): Latency=1

SU(3): 0x2124180: i32,ch = LW 0x2124580, 0x2123e80, 0x2106d78<Mem:LD4[%j]> [ORD=5] [ID=3]

  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 1
  Height             : 2
  Predecessors:
   val SU(4): Latency=1
  Successors:
   val SU(1): Latency=1

SU(4): 0x2124580: i32 = ADDI 0x2124780, 0x2123c80 [ORD=5] [ID=4]

  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 0
  Height             : 3
  Successors:
   val SU(3): Latency=1


Examining Available:
Height 0: SU(0): 0x2124280: ch = JAL 0x2124980, 0x2124080 [ID=0]


*** Scheduling [0]: SU(0): 0x2124280: ch = JAL 0x2124980, 0x2124080 [ID=0]


Examining Available:
Height 1: SU(1): 0x2124080: ch = BGT 0x2124480, 0x2124180, 0x2124880, 0x2106d78 [ID=1]


*** Scheduling [1]: SU(1): 0x2124080: ch = BGT 0x2124480, 0x2124180, 0x2124880, 0x2106d78 [ID=1]


Examining Available:
Height 2: SU(2): 0x2124880: i32 = ADDI 0x2124780, 0x2123f80 [ID=2]

Height 2: SU(3): 0x2124180: i32,ch = LW 0x2124580, 0x2123e80, 0x2106d78<Mem:LD4[%j]> [ORD=5] [ID=3]


*** Scheduling [2]: SU(2): 0x2124880: i32 = ADDI 0x2124780, 0x2123f80 [ID=2]


Examining Available:
Height 2: SU(3): 0x2124180: i32,ch = LW 0x2124580, 0x2123e80, 0x2106d78<Mem:LD4[%j]> [ORD=5] [ID=3]


*** Scheduling [3]: SU(3): 0x2124180: i32,ch = LW 0x2124580, 0x2123e80, 0x2106d78<Mem:LD4[%j]> [ORD=5] [ID=3]


Examining Available:
Height 4: SU(4): 0x2124580: i32 = ADDI 0x2124780, 0x2123c80 [ORD=5] [ID=4]


*** Scheduling [4]: SU(4): 0x2124580: i32 = ADDI 0x2124780, 0x2123c80 [ORD=5] [ID=4]

*** Final schedule ***
SU(4): 0x2124580: i32 = ADDI 0x2124780, 0x2123c80 [ORD=5] [ID=4]

SU(3): 0x2124180: i32,ch = LW 0x2124580, 0x2123e80, 0x2106d78<Mem:LD4[%j]> [ORD=5] [ID=3]

SU(2): 0x2124880: i32 = ADDI 0x2124780, 0x2123f80 [ID=2]

SU(1): 0x2124080: ch = BGT 0x2124480, 0x2124180, 0x2124880, 0x2106d78 [ID=1]

SU(0): 0x2124280: ch = JAL 0x2124980, 0x2124080 [ID=0]


Total amount of phi nodes to update: 0
Initial selection DAG: BB#8 'main:for.inc15'
SelectionDAG has 10 nodes:
  0x2123c80: i32 = FrameIndex<0> [ORD=7]

  0x2123f80: i32 = Constant<0>

  0x2124780: i32 = undef [ORD=7]

    0x2106d78: ch = EntryToken [ORD=7]

    0x2123c80: <multiple use>
    0x2124780: <multiple use>
  0x2123e80: i32,ch = load 0x2106d78, 0x2123c80, 0x2124780<LD4[%i]> [ORD=7]

      0x2123e80: <multiple use>
        0x2123e80: <multiple use>
        0x2124280: i32 = Constant<1> [ORD=8]

      0x2124080: i32 = add 0x2123e80, 0x2124280 [ORD=8]

      0x2123c80: <multiple use>
      0x2124780: <multiple use>
    0x2124180: ch = store 0x2123e80:1, 0x2124080, 0x2123c80, 0x2124780<ST4[%i]> [ORD=9]

    0x2124880: ch = BasicBlock<for.cond 0x211ff90>

  0x2124980: ch = br 0x2124180, 0x2124880


Optimized lowered selection DAG: BB#8 'main:for.inc15'
SelectionDAG has 9 nodes:
  0x2123c80: i32 = FrameIndex<0> [ORD=7]

  0x2124780: i32 = undef [ORD=7]

    0x2106d78: ch = EntryToken [ORD=7]

    0x2123c80: <multiple use>
    0x2124780: <multiple use>
  0x2123e80: i32,ch = load 0x2106d78, 0x2123c80, 0x2124780<LD4[%i]> [ORD=7]

      0x2123e80: <multiple use>
        0x2123e80: <multiple use>
        0x2124280: i32 = Constant<1> [ORD=8]

      0x2124080: i32 = add 0x2123e80, 0x2124280 [ORD=8]

      0x2123c80: <multiple use>
      0x2124780: <multiple use>
    0x2124180: ch = store 0x2123e80:1, 0x2124080, 0x2123c80, 0x2124780<ST4[%i]> [ORD=9]

    0x2124880: ch = BasicBlock<for.cond 0x211ff90>

  0x2124980: ch = br 0x2124180, 0x2124880


Legally typed node: 0x2124880: ch = BasicBlock<for.cond 0x211ff90> [ID=0]

Legally typed node: 0x2124280: i32 = Constant<1> [ORD=8] [ID=0]

Legally typed node: 0x2124780: i32 = undef [ORD=7] [ID=0]

Legally typed node: 0x2123c80: i32 = FrameIndex<0> [ORD=7] [ID=0]

Legally typed node: 0x2106d78: ch = EntryToken [ORD=7] [ID=0]

Legally typed node: 0x2123e80: i32,ch = load 0x2106d78, 0x2123c80, 0x2124780<LD4[%i]> [ORD=7] [ID=0]

Legally typed node: 0x2124080: i32 = add 0x2123e80, 0x2124280 [ORD=8] [ID=0]

Legally typed node: 0x2124180: ch = store 0x2123e80:1, 0x2124080, 0x2123c80, 0x2124780<ST4[%i]> [ORD=9] [ID=0]

Legally typed node: 0x2124980: ch = br 0x2124180, 0x2124880 [ID=0]

Legally typed node: 0x7ffdc3beb680: ch = handlenode 0x2124980 [ID=0]

Type-legalized selection DAG: BB#8 'main:for.inc15'
SelectionDAG has 9 nodes:
  0x2123c80: i32 = FrameIndex<0> [ORD=7] [ID=-3]

  0x2124780: i32 = undef [ORD=7] [ID=-3]

    0x2106d78: ch = EntryToken [ORD=7] [ID=-3]

    0x2123c80: <multiple use>
    0x2124780: <multiple use>
  0x2123e80: i32,ch = load 0x2106d78, 0x2123c80, 0x2124780<LD4[%i]> [ORD=7] [ID=-3]

      0x2123e80: <multiple use>
        0x2123e80: <multiple use>
        0x2124280: i32 = Constant<1> [ORD=8] [ID=-3]

      0x2124080: i32 = add 0x2123e80, 0x2124280 [ORD=8] [ID=-3]

      0x2123c80: <multiple use>
      0x2124780: <multiple use>
    0x2124180: ch = store 0x2123e80:1, 0x2124080, 0x2123c80, 0x2124780<ST4[%i]> [ORD=9] [ID=-3]

    0x2124880: ch = BasicBlock<for.cond 0x211ff90> [ID=-3]

  0x2124980: ch = br 0x2124180, 0x2124880 [ID=-3]


Legalized selection DAG: BB#8 'main:for.inc15'
SelectionDAG has 9 nodes:
  0x2123c80: i32 = FrameIndex<0> [ORD=7] [ID=1]

  0x2124780: i32 = undef [ORD=7] [ID=2]

    0x2106d78: ch = EntryToken [ORD=7] [ID=0]

    0x2123c80: <multiple use>
    0x2124780: <multiple use>
  0x2123e80: i32,ch = load 0x2106d78, 0x2123c80, 0x2124780<LD4[%i]> [ORD=7] [ID=5]

      0x2123e80: <multiple use>
        0x2123e80: <multiple use>
        0x2124280: i32 = Constant<1> [ORD=8] [ID=3]

      0x2124080: i32 = add 0x2123e80, 0x2124280 [ORD=8] [ID=6]

      0x2123c80: <multiple use>
      0x2124780: <multiple use>
    0x2124180: ch = store 0x2123e80:1, 0x2124080, 0x2123c80, 0x2124780<ST4[%i]> [ORD=9] [ID=7]

    0x2124880: ch = BasicBlock<for.cond 0x211ff90> [ID=4]

  0x2124980: ch = br 0x2124180, 0x2124880 [ID=8]


Optimized legalized selection DAG: BB#8 'main:for.inc15'
SelectionDAG has 9 nodes:
  0x2123c80: i32 = FrameIndex<0> [ORD=7] [ID=1]

  0x2124780: i32 = undef [ORD=7] [ID=2]

    0x2106d78: ch = EntryToken [ORD=7] [ID=0]

    0x2123c80: <multiple use>
    0x2124780: <multiple use>
  0x2123e80: i32,ch = load 0x2106d78, 0x2123c80, 0x2124780<LD4[%i]> [ORD=7] [ID=5]

      0x2123e80: <multiple use>
        0x2123e80: <multiple use>
        0x2124280: i32 = Constant<1> [ORD=8] [ID=3]

      0x2124080: i32 = add 0x2123e80, 0x2124280 [ORD=8] [ID=6]

      0x2123c80: <multiple use>
      0x2124780: <multiple use>
    0x2124180: ch = store 0x2123e80:1, 0x2124080, 0x2123c80, 0x2124780<ST4[%i]> [ORD=9] [ID=7]

    0x2124880: ch = BasicBlock<for.cond 0x211ff90> [ID=4]

  0x2124980: ch = br 0x2124180, 0x2124880 [ID=8]


===== Instruction selection begins: BB#8 'for.inc15'
ISEL: Starting pattern match on root node: 0x2124980: ch = br 0x2124180, 0x2124880 [ID=8]

  Initial Opcode index to 1787
  Morphed node: 0x2124980: ch = JAL 0x2124880, 0x2124180

ISEL: Match complete!
=> 0x2124980: ch = JAL 0x2124880, 0x2124180

ISEL: Starting pattern match on root node: 0x2124180: ch = store 0x2123e80:1, 0x2124080, 0x2123c80, 0x2124780<ST4[%i]> [ORD=9] [ID=7]

  Initial Opcode index to 123
  Morphed node: 0x2124180: ch = SW 0x2124080, 0x2123c80, 0x2123f80, 0x2123e80:1<Mem:ST4[%i]> [ORD=9]

ISEL: Match complete!
=> 0x2124180: ch = SW 0x2124080, 0x2123c80, 0x2123f80, 0x2123e80:1<Mem:ST4[%i]> [ORD=9]

ISEL: Starting pattern match on root node: 0x2124080: i32 = add 0x2123e80, 0x2124280 [ORD=8] [ID=6]

  Initial Opcode index to 438
  Morphed node: 0x2124080: i32 = ADDI 0x2123e80, 0x2124480 [ORD=8]

ISEL: Match complete!
=> 0x2124080: i32 = ADDI 0x2123e80, 0x2124480 [ORD=8]

ISEL: Starting pattern match on root node: 0x2123e80: i32,ch = load 0x2106d78, 0x2123c80, 0x2124780<LD4[%i]> [ORD=7] [ID=5]

  Initial Opcode index to 4
  TypeSwitch[i32] from 9 to 12
  Morphed node: 0x2123e80: i32,ch = LW 0x2123c80, 0x2123f80, 0x2106d78<Mem:LD4[%i]> [ORD=7]

ISEL: Match complete!
=> 0x2123e80: i32,ch = LW 0x2123c80, 0x2123f80, 0x2106d78<Mem:LD4[%i]> [ORD=7]

=> 0x2124880: ch = BasicBlock<for.cond 0x211ff90>

=> 0x2106d78: ch = EntryToken [ORD=7]

===== Instruction selection ends:
Selected selection DAG: BB#8 'main:for.inc15'
SelectionDAG has 11 nodes:
    0x2124580: <multiple use>
    0x2123f80: <multiple use>
    0x2106d78: ch = EntryToken [ORD=7]

  0x2123e80: i32,ch = LW 0x2124580, 0x2123f80, 0x2106d78<Mem:LD4[%i]> [ORD=7]

  0x2123f80: i32 = TargetConstant<0>

    0x2124780: i32 = Register %zero

    0x2124280: i32 = TargetFrameIndex<0>

  0x2124580: i32 = ADDI 0x2124780, 0x2124280 [ORD=7]

    0x2124880: ch = BasicBlock<for.cond 0x211ff90>

        0x2123e80: <multiple use>
        0x2124480: i32 = TargetConstant<1>

      0x2124080: i32 = ADDI 0x2123e80, 0x2124480 [ORD=8]

      0x2124580: <multiple use>
      0x2123f80: <multiple use>
      0x2123e80: <multiple use>
    0x2124180: ch = SW 0x2124080, 0x2124580, 0x2123f80, 0x2123e80:1<Mem:ST4[%i]> [ORD=9]

  0x2124980: ch = JAL 0x2124880, 0x2124180


********** List Scheduling BB#8 'for.inc15' **********
SU(0): 0x2124980: ch = JAL 0x2124880, 0x2124180 [ID=0]

  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
   ch  SU(1): Latency=1

SU(1): 0x2124180: ch = SW 0x2124080, 0x2124580, 0x2123f80, 0x2123e80:1<Mem:ST4[%i]> [ORD=9] [ID=1]

  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 3
  Height             : 1
  Predecessors:
   val SU(4): Latency=1
   val SU(3): Latency=1
   ch  SU(2): Latency=1
  Successors:
   ch  SU(0): Latency=1

SU(2): 0x2123e80: i32,ch = LW 0x2124580, 0x2123f80, 0x2106d78<Mem:LD4[%i]> [ORD=7] [ID=2]

  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 1
  Latency            : 1
  Depth              : 1
  Height             : 3
  Predecessors:
   val SU(3): Latency=1
  Successors:
   ch  SU(1): Latency=1
   val SU(4): Latency=1

SU(3): 0x2124580: i32 = ADDI 0x2124780, 0x2124280 [ORD=7] [ID=3]

  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 1
  Latency            : 1
  Depth              : 0
  Height             : 4
  Successors:
   val SU(1): Latency=1
   val SU(2): Latency=1

SU(4): 0x2124080: i32 = ADDI 0x2123e80, 0x2124480 [ORD=8] [ID=4]

  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 2
  Height             : 2
  Predecessors:
   val SU(2): Latency=1
  Successors:
   val SU(1): Latency=1


Examining Available:
Height 0: SU(0): 0x2124980: ch = JAL 0x2124880, 0x2124180 [ID=0]


*** Scheduling [0]: SU(0): 0x2124980: ch = JAL 0x2124880, 0x2124180 [ID=0]


Examining Available:
Height 1: SU(1): 0x2124180: ch = SW 0x2124080, 0x2124580, 0x2123f80, 0x2123e80:1<Mem:ST4[%i]> [ORD=9] [ID=1]


*** Scheduling [1]: SU(1): 0x2124180: ch = SW 0x2124080, 0x2124580, 0x2123f80, 0x2123e80:1<Mem:ST4[%i]> [ORD=9] [ID=1]


Examining Available:
Height 2: SU(4): 0x2124080: i32 = ADDI 0x2123e80, 0x2124480 [ORD=8] [ID=4]


*** Scheduling [2]: SU(4): 0x2124080: i32 = ADDI 0x2123e80, 0x2124480 [ORD=8] [ID=4]


Examining Available:
Height 3: SU(2): 0x2123e80: i32,ch = LW 0x2124580, 0x2123f80, 0x2106d78<Mem:LD4[%i]> [ORD=7] [ID=2]


*** Scheduling [3]: SU(2): 0x2123e80: i32,ch = LW 0x2124580, 0x2123f80, 0x2106d78<Mem:LD4[%i]> [ORD=7] [ID=2]


Examining Available:
Height 4: SU(3): 0x2124580: i32 = ADDI 0x2124780, 0x2124280 [ORD=7] [ID=3]


*** Scheduling [4]: SU(3): 0x2124580: i32 = ADDI 0x2124780, 0x2124280 [ORD=7] [ID=3]

*** Final schedule ***
SU(3): 0x2124580: i32 = ADDI 0x2124780, 0x2124280 [ORD=7] [ID=3]

SU(2): 0x2123e80: i32,ch = LW 0x2124580, 0x2123f80, 0x2106d78<Mem:LD4[%i]> [ORD=7] [ID=2]

SU(4): 0x2124080: i32 = ADDI 0x2123e80, 0x2124480 [ORD=8] [ID=4]

SU(1): 0x2124180: ch = SW 0x2124080, 0x2124580, 0x2123f80, 0x2123e80:1<Mem:ST4[%i]> [ORD=9] [ID=1]

SU(0): 0x2124980: ch = JAL 0x2124880, 0x2124180 [ID=0]


Total amount of phi nodes to update: 0
Initial selection DAG: BB#4 'main:for.body3'
SelectionDAG has 5 nodes:
    0x2106d78: ch = EntryToken [ORD=10]

    0x2124580: i32 = Constant<0> [ORD=10]

    0x2124280: i32 = FrameIndex<2> [ORD=10]

    0x2124780: i32 = undef [ORD=10]

  0x2124480: ch = store 0x2106d78, 0x2124580, 0x2124280, 0x2124780<ST4[%k]> [ORD=10]


Optimized lowered selection DAG: BB#4 'main:for.body3'
SelectionDAG has 5 nodes:
    0x2106d78: ch = EntryToken [ORD=10]

    0x2124580: i32 = Constant<0> [ORD=10]

    0x2124280: i32 = FrameIndex<2> [ORD=10]

    0x2124780: i32 = undef [ORD=10]

  0x2124480: ch = store 0x2106d78, 0x2124580, 0x2124280, 0x2124780<ST4[%k]> [ORD=10]


Legally typed node: 0x2124780: i32 = undef [ORD=10] [ID=0]

Legally typed node: 0x2124280: i32 = FrameIndex<2> [ORD=10] [ID=0]

Legally typed node: 0x2124580: i32 = Constant<0> [ORD=10] [ID=0]

Legally typed node: 0x2106d78: ch = EntryToken [ORD=10] [ID=0]

Legally typed node: 0x2124480: ch = store 0x2106d78, 0x2124580, 0x2124280, 0x2124780<ST4[%k]> [ORD=10] [ID=0]

Legally typed node: 0x7ffdc3beb680: ch = handlenode 0x2124480 [ID=0]

Type-legalized selection DAG: BB#4 'main:for.body3'
SelectionDAG has 5 nodes:
    0x2106d78: ch = EntryToken [ORD=10] [ID=-3]

    0x2124580: i32 = Constant<0> [ORD=10] [ID=-3]

    0x2124280: i32 = FrameIndex<2> [ORD=10] [ID=-3]

    0x2124780: i32 = undef [ORD=10] [ID=-3]

  0x2124480: ch = store 0x2106d78, 0x2124580, 0x2124280, 0x2124780<ST4[%k]> [ORD=10] [ID=-3]


Legalized selection DAG: BB#4 'main:for.body3'
SelectionDAG has 5 nodes:
    0x2106d78: ch = EntryToken [ORD=10] [ID=0]

    0x2124580: i32 = Constant<0> [ORD=10] [ID=1]

    0x2124280: i32 = FrameIndex<2> [ORD=10] [ID=2]

    0x2124780: i32 = undef [ORD=10] [ID=3]

  0x2124480: ch = store 0x2106d78, 0x2124580, 0x2124280, 0x2124780<ST4[%k]> [ORD=10] [ID=4]


Optimized legalized selection DAG: BB#4 'main:for.body3'
SelectionDAG has 5 nodes:
    0x2106d78: ch = EntryToken [ORD=10] [ID=0]

    0x2124580: i32 = Constant<0> [ORD=10] [ID=1]

    0x2124280: i32 = FrameIndex<2> [ORD=10] [ID=2]

    0x2124780: i32 = undef [ORD=10] [ID=3]

  0x2124480: ch = store 0x2106d78, 0x2124580, 0x2124280, 0x2124780<ST4[%k]> [ORD=10] [ID=4]


===== Instruction selection begins: BB#4 'for.body3'
ISEL: Starting pattern match on root node: 0x2124480: ch = store 0x2106d78, 0x2124580, 0x2124280, 0x2124780<ST4[%k]> [ORD=10] [ID=4]

  Initial Opcode index to 123
  Morphed node: 0x2124480: ch = SW 0x2124580, 0x2124280, 0x2123f80, 0x2106d78<Mem:ST4[%k]> [ORD=10]

ISEL: Match complete!
=> 0x2124480: ch = SW 0x2124580, 0x2124280, 0x2123f80, 0x2106d78<Mem:ST4[%k]> [ORD=10]

ISEL: Starting pattern match on root node: 0x2124580: i32 = Constant<0> [ORD=10] [ID=1]

  Initial Opcode index to 994
comparing 0 and 0 and returning value:1
ISEL: Match complete!
=> 0x2124580: i32 = Constant<0> [ORD=10] [ID=1]

=> 0x2106d78: ch = EntryToken [ORD=10]

===== Instruction selection ends:
Selected selection DAG: BB#4 'main:for.body3'
SelectionDAG has 6 nodes:
  0x2124780: i32 = Register %zero

    0x2124780: <multiple use>
      0x2124780: <multiple use>
      0x2124980: i32 = TargetFrameIndex<2>

    0x2124280: i32 = ADDI 0x2124780, 0x2124980 [ORD=10]

    0x2123f80: i32 = TargetConstant<0>

    0x2106d78: ch = EntryToken [ORD=10]

  0x2124480: ch = SW 0x2124780, 0x2124280, 0x2123f80, 0x2106d78<Mem:ST4[%k]> [ORD=10]


********** List Scheduling BB#4 'for.body3' **********
SU(0): 0x2124480: ch = SW 0x2124780, 0x2124280, 0x2123f80, 0x2106d78<Mem:ST4[%k]> [ORD=10] [ID=0]

  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
   val SU(1): Latency=1

SU(1): 0x2124280: i32 = ADDI 0x2124780, 0x2124980 [ORD=10] [ID=1]

  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
   val SU(0): Latency=1


Examining Available:
Height 0: SU(0): 0x2124480: ch = SW 0x2124780, 0x2124280, 0x2123f80, 0x2106d78<Mem:ST4[%k]> [ORD=10] [ID=0]


*** Scheduling [0]: SU(0): 0x2124480: ch = SW 0x2124780, 0x2124280, 0x2123f80, 0x2106d78<Mem:ST4[%k]> [ORD=10] [ID=0]


Examining Available:
Height 1: SU(1): 0x2124280: i32 = ADDI 0x2124780, 0x2124980 [ORD=10] [ID=1]


*** Scheduling [1]: SU(1): 0x2124280: i32 = ADDI 0x2124780, 0x2124980 [ORD=10] [ID=1]

*** Final schedule ***
SU(1): 0x2124280: i32 = ADDI 0x2124780, 0x2124980 [ORD=10] [ID=1]

SU(0): 0x2124480: ch = SW 0x2124780, 0x2124280, 0x2123f80, 0x2106d78<Mem:ST4[%k]> [ORD=10] [ID=0]


Total amount of phi nodes to update: 0
Initial selection DAG: BB#5 'main:for.cond4'
SelectionDAG has 14 nodes:
  0x2106d78: ch = EntryToken [ORD=11]

  0x2124780: i32 = Constant<0>

      0x2106d78: <multiple use>
            0x2106d78: <multiple use>
            0x2124980: i32 = FrameIndex<2> [ORD=11]

            0x2123f80: i32 = undef [ORD=11]

          0x2124480: i32,ch = load 0x2106d78, 0x2124980, 0x2123f80<LD4[%k]> [ORD=11]

          0x2124280: i32 = Constant<10> [ORD=12]

          0x2124580: ch = setlt [ORD=12]

        0x2124180: i1 = setcc 0x2124480, 0x2124280, 0x2124580 [ORD=12]

        0x2124080: i1 = Constant<-1>

      0x2123e80: i1 = xor 0x2124180, 0x2124080

      0x2124880: ch = BasicBlock<for.inc12 0x21203b0>

    0x2123c80: ch = brcond 0x2106d78, 0x2123e80, 0x2124880

    0x2124380: ch = BasicBlock<for.inc 0x2120300>

  0x2123b80: ch = br 0x2123c80, 0x2124380



Replacing.3 0x2123e80: i1 = xor 0x2124180, 0x2124080

With: 0x2124680: i1 = setcc 0x2124480, 0x2124280, 0x2123d80


Replacing.3 0x2124680: i1 = setcc 0x2124480, 0x2124280, 0x2123d80

With: 0x2124080: i1 = setcc 0x2124480, 0x2124580, 0x2124180

Optimized lowered selection DAG: BB#5 'main:for.cond4'
SelectionDAG has 11 nodes:
  0x2106d78: ch = EntryToken [ORD=11]

      0x2106d78: <multiple use>
          0x2106d78: <multiple use>
          0x2124980: i32 = FrameIndex<2> [ORD=11]

          0x2123f80: i32 = undef [ORD=11]

        0x2124480: i32,ch = load 0x2106d78, 0x2124980, 0x2123f80<LD4[%k]> [ORD=11]

        0x2124580: i32 = Constant<9>

        0x2124180: ch = setgt

      0x2124080: i1 = setcc 0x2124480, 0x2124580, 0x2124180

      0x2124880: ch = BasicBlock<for.inc12 0x21203b0>

    0x2123c80: ch = brcond 0x2106d78, 0x2124080, 0x2124880

    0x2124380: ch = BasicBlock<for.inc 0x2120300>

  0x2123b80: ch = br 0x2123c80, 0x2124380


Legally typed node: 0x2124180: ch = setgt [ID=0]

Legally typed node: 0x2124580: i32 = Constant<9> [ID=0]

Legally typed node: 0x2124380: ch = BasicBlock<for.inc 0x2120300> [ID=0]

Legally typed node: 0x2124880: ch = BasicBlock<for.inc12 0x21203b0> [ID=0]

Legally typed node: 0x2123f80: i32 = undef [ORD=11] [ID=0]

Legally typed node: 0x2124980: i32 = FrameIndex<2> [ORD=11] [ID=0]

Legally typed node: 0x2106d78: ch = EntryToken [ORD=11] [ID=0]

Legally typed node: 0x2124480: i32,ch = load 0x2106d78, 0x2124980, 0x2123f80<LD4[%k]> [ORD=11] [ID=0]

Promote integer result: 0x2124080: i1 = setcc 0x2124480, 0x2124580, 0x2124180 [ID=0]

Promote integer operand: 0x2123c80: ch = brcond 0x2106d78, 0x2124080, 0x2124880 [ID=0]

Promote integer operand: 0x2124280: i32 = zero_extend 0x2124080 [ID=0]

Legally typed node: 0x2123d80: i32 = Constant<1> [ID=0]

Legally typed node: 0x2124780: i32 = setcc 0x2124480, 0x2124580, 0x2124180 [ID=0]

Legally typed node: 0x2124680: i32 = and 0x2124780, 0x2123d80 [ID=0]

Legally typed node: 0x2123c80: ch = brcond 0x2106d78, 0x2124680, 0x2124880 [ID=0]

Legally typed node: 0x2123b80: ch = br 0x2123c80, 0x2124380 [ID=0]

Legally typed node: 0x7ffdc3beb680: ch = handlenode 0x2123b80 [ID=0]

Type-legalized selection DAG: BB#5 'main:for.cond4'
SelectionDAG has 13 nodes:
  0x2106d78: ch = EntryToken [ORD=11] [ID=-3]

      0x2106d78: <multiple use>
            0x2106d78: <multiple use>
            0x2124980: i32 = FrameIndex<2> [ORD=11] [ID=-3]

            0x2123f80: i32 = undef [ORD=11] [ID=-3]

          0x2124480: i32,ch = load 0x2106d78, 0x2124980, 0x2123f80<LD4[%k]> [ORD=11] [ID=-3]

          0x2124580: i32 = Constant<9> [ID=-3]

          0x2124180: ch = setgt [ID=-3]

        0x2124780: i32 = setcc 0x2124480, 0x2124580, 0x2124180 [ID=-3]

        0x2123d80: i32 = Constant<1> [ID=-3]

      0x2124680: i32 = and 0x2124780, 0x2123d80 [ID=-3]

      0x2124880: ch = BasicBlock<for.inc12 0x21203b0> [ID=-3]

    0x2123c80: ch = brcond 0x2106d78, 0x2124680, 0x2124880 [ID=-3]

    0x2124380: ch = BasicBlock<for.inc 0x2120300> [ID=-3]

  0x2123b80: ch = br 0x2123c80, 0x2124380 [ID=-3]



Replacing.2 0x2124680: i32 = and 0x2124780, 0x2123d80 [ID=-3]

With: 0x2124780: i32 = setcc 0x2124480, 0x2124580, 0x2124180 [ID=-3]

Optimized type-legalized selection DAG: BB#5 'main:for.cond4'
SelectionDAG has 11 nodes:
  0x2106d78: ch = EntryToken [ORD=11] [ID=-3]

      0x2106d78: <multiple use>
          0x2106d78: <multiple use>
          0x2124980: i32 = FrameIndex<2> [ORD=11] [ID=-3]

          0x2123f80: i32 = undef [ORD=11] [ID=-3]

        0x2124480: i32,ch = load 0x2106d78, 0x2124980, 0x2123f80<LD4[%k]> [ORD=11] [ID=-3]

        0x2124580: i32 = Constant<9> [ID=-3]

        0x2124180: ch = setgt [ID=-3]

      0x2124780: i32 = setcc 0x2124480, 0x2124580, 0x2124180 [ID=-3]

      0x2124880: ch = BasicBlock<for.inc12 0x21203b0> [ID=-3]

    0x2123c80: ch = brcond 0x2106d78, 0x2124780, 0x2124880 [ID=-3]

    0x2124380: ch = BasicBlock<for.inc 0x2120300> [ID=-3]

  0x2123b80: ch = br 0x2123c80, 0x2124380 [ID=-3]


Legalized selection DAG: BB#5 'main:for.cond4'
SelectionDAG has 11 nodes:
  0x2106d78: ch = EntryToken [ORD=11] [ID=0]

      0x2106d78: <multiple use>
          0x2106d78: <multiple use>
          0x2124980: i32 = FrameIndex<2> [ORD=11] [ID=1]

          0x2123f80: i32 = undef [ORD=11] [ID=2]

        0x2124480: i32,ch = load 0x2106d78, 0x2124980, 0x2123f80<LD4[%k]> [ORD=11] [ID=7]

        0x2124580: i32 = Constant<9> [ID=5]

        0x2124180: ch = setgt [ID=6]

      0x2124780: i32 = setcc 0x2124480, 0x2124580, 0x2124180 [ID=8]

      0x2124880: ch = BasicBlock<for.inc12 0x21203b0> [ID=3]

    0x2123c80: ch = brcond 0x2106d78, 0x2124780, 0x2124880 [ID=9]

    0x2124380: ch = BasicBlock<for.inc 0x2120300> [ID=4]

  0x2123b80: ch = br 0x2123c80, 0x2124380 [ID=10]


Optimized legalized selection DAG: BB#5 'main:for.cond4'
SelectionDAG has 11 nodes:
  0x2106d78: ch = EntryToken [ORD=11] [ID=0]

      0x2106d78: <multiple use>
          0x2106d78: <multiple use>
          0x2124980: i32 = FrameIndex<2> [ORD=11] [ID=1]

          0x2123f80: i32 = undef [ORD=11] [ID=2]

        0x2124480: i32,ch = load 0x2106d78, 0x2124980, 0x2123f80<LD4[%k]> [ORD=11] [ID=7]

        0x2124580: i32 = Constant<9> [ID=5]

        0x2124180: ch = setgt [ID=6]

      0x2124780: i32 = setcc 0x2124480, 0x2124580, 0x2124180 [ID=8]

      0x2124880: ch = BasicBlock<for.inc12 0x21203b0> [ID=3]

    0x2123c80: ch = brcond 0x2106d78, 0x2124780, 0x2124880 [ID=9]

    0x2124380: ch = BasicBlock<for.inc 0x2120300> [ID=4]

  0x2123b80: ch = br 0x2123c80, 0x2124380 [ID=10]


===== Instruction selection begins: BB#5 'for.cond4'
ISEL: Starting pattern match on root node: 0x2123b80: ch = br 0x2123c80, 0x2124380 [ID=10]

  Initial Opcode index to 1787
  Morphed node: 0x2123b80: ch = JAL 0x2124380, 0x2123c80

ISEL: Match complete!
=> 0x2123b80: ch = JAL 0x2124380, 0x2123c80

ISEL: Starting pattern match on root node: 0x2123c80: ch = brcond 0x2106d78, 0x2124780, 0x2124880 [ID=9]

  Initial Opcode index to 1288
  Skipped scope entry (due to false predicate) at index 1305, continuing at 1326
  Skipped scope entry (due to false predicate) at index 1327, continuing at 1348
  Skipped scope entry (due to false predicate) at index 1349, continuing at 1370
  Skipped scope entry (due to false predicate) at index 1371, continuing at 1392
  Skipped scope entry (due to false predicate) at index 1393, continuing at 1414
  Skipped scope entry (due to false predicate) at index 1415, continuing at 1436
  Morphed node: 0x2123c80: ch = BGT 0x2124880, 0x2124480, 0x2124580, 0x2106d78

ISEL: Match complete!
=> 0x2123c80: ch = BGT 0x2124880, 0x2124480, 0x2124580, 0x2106d78

ISEL: Starting pattern match on root node: 0x2124480: i32,ch = load 0x2106d78, 0x2124980, 0x2123f80<LD4[%k]> [ORD=11] [ID=7]

  Initial Opcode index to 4
  TypeSwitch[i32] from 9 to 12
  Morphed node: 0x2124480: i32,ch = LW 0x2124980, 0x2124180, 0x2106d78<Mem:LD4[%k]> [ORD=11]

ISEL: Match complete!
=> 0x2124480: i32,ch = LW 0x2124980, 0x2124180, 0x2106d78<Mem:LD4[%k]> [ORD=11]

ISEL: Starting pattern match on root node: 0x2124580: i32 = Constant<9> [ID=5]

  Initial Opcode index to 994
comparing 0 and 9 and returning value:0
  Skipped scope entry (due to false predicate) at index 996, continuing at 1004
  Morphed node: 0x2124580: i32 = ADDI 0x2123f80, 0x2124780

ISEL: Match complete!
=> 0x2124580: i32 = ADDI 0x2123f80, 0x2124780

=> 0x2124380: ch = BasicBlock<for.inc 0x2120300>

=> 0x2124880: ch = BasicBlock<for.inc12 0x21203b0>

=> 0x2106d78: ch = EntryToken [ORD=11]

===== Instruction selection ends:
Selected selection DAG: BB#5 'main:for.cond4'
SelectionDAG has 12 nodes:
  0x2106d78: ch = EntryToken [ORD=11]

  0x2123f80: i32 = Register %zero

    0x2124380: ch = BasicBlock<for.inc 0x2120300>

      0x2124880: ch = BasicBlock<for.inc12 0x21203b0>

          0x2123f80: <multiple use>
          0x2123d80: i32 = TargetFrameIndex<2>

        0x2124980: i32 = ADDI 0x2123f80, 0x2123d80 [ORD=11]

        0x2124180: i32 = TargetConstant<0>

        0x2106d78: <multiple use>
      0x2124480: i32,ch = LW 0x2124980, 0x2124180, 0x2106d78<Mem:LD4[%k]> [ORD=11]

        0x2123f80: <multiple use>
        0x2124780: i32 = TargetConstant<9>

      0x2124580: i32 = ADDI 0x2123f80, 0x2124780

      0x2106d78: <multiple use>
    0x2123c80: ch = BGT 0x2124880, 0x2124480, 0x2124580, 0x2106d78

  0x2123b80: ch = JAL 0x2124380, 0x2123c80


********** List Scheduling BB#5 'for.cond4' **********
SU(0): 0x2123b80: ch = JAL 0x2124380, 0x2123c80 [ID=0]

  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 3
  Height             : 0
  Predecessors:
   ch  SU(1): Latency=1

SU(1): 0x2123c80: ch = BGT 0x2124880, 0x2124480, 0x2124580, 0x2106d78 [ID=1]

  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 1
  Predecessors:
   val SU(3): Latency=1
   val SU(2): Latency=1
  Successors:
   ch  SU(0): Latency=1

SU(2): 0x2124580: i32 = ADDI 0x2123f80, 0x2124780 [ID=2]

  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
   val SU(1): Latency=1

SU(3): 0x2124480: i32,ch = LW 0x2124980, 0x2124180, 0x2106d78<Mem:LD4[%k]> [ORD=11] [ID=3]

  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 1
  Height             : 2
  Predecessors:
   val SU(4): Latency=1
  Successors:
   val SU(1): Latency=1

SU(4): 0x2124980: i32 = ADDI 0x2123f80, 0x2123d80 [ORD=11] [ID=4]

  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 0
  Height             : 3
  Successors:
   val SU(3): Latency=1


Examining Available:
Height 0: SU(0): 0x2123b80: ch = JAL 0x2124380, 0x2123c80 [ID=0]


*** Scheduling [0]: SU(0): 0x2123b80: ch = JAL 0x2124380, 0x2123c80 [ID=0]


Examining Available:
Height 1: SU(1): 0x2123c80: ch = BGT 0x2124880, 0x2124480, 0x2124580, 0x2106d78 [ID=1]


*** Scheduling [1]: SU(1): 0x2123c80: ch = BGT 0x2124880, 0x2124480, 0x2124580, 0x2106d78 [ID=1]


Examining Available:
Height 2: SU(2): 0x2124580: i32 = ADDI 0x2123f80, 0x2124780 [ID=2]

Height 2: SU(3): 0x2124480: i32,ch = LW 0x2124980, 0x2124180, 0x2106d78<Mem:LD4[%k]> [ORD=11] [ID=3]


*** Scheduling [2]: SU(2): 0x2124580: i32 = ADDI 0x2123f80, 0x2124780 [ID=2]


Examining Available:
Height 2: SU(3): 0x2124480: i32,ch = LW 0x2124980, 0x2124180, 0x2106d78<Mem:LD4[%k]> [ORD=11] [ID=3]


*** Scheduling [3]: SU(3): 0x2124480: i32,ch = LW 0x2124980, 0x2124180, 0x2106d78<Mem:LD4[%k]> [ORD=11] [ID=3]


Examining Available:
Height 4: SU(4): 0x2124980: i32 = ADDI 0x2123f80, 0x2123d80 [ORD=11] [ID=4]


*** Scheduling [4]: SU(4): 0x2124980: i32 = ADDI 0x2123f80, 0x2123d80 [ORD=11] [ID=4]

*** Final schedule ***
SU(4): 0x2124980: i32 = ADDI 0x2123f80, 0x2123d80 [ORD=11] [ID=4]

SU(3): 0x2124480: i32,ch = LW 0x2124980, 0x2124180, 0x2106d78<Mem:LD4[%k]> [ORD=11] [ID=3]

SU(2): 0x2124580: i32 = ADDI 0x2123f80, 0x2124780 [ID=2]

SU(1): 0x2123c80: ch = BGT 0x2124880, 0x2124480, 0x2124580, 0x2106d78 [ID=1]

SU(0): 0x2123b80: ch = JAL 0x2124380, 0x2123c80 [ID=0]


Total amount of phi nodes to update: 0
Initial selection DAG: BB#7 'main:for.inc12'
SelectionDAG has 10 nodes:
  0x2123d80: i32 = FrameIndex<1> [ORD=13]

  0x2124780: i32 = Constant<0>

  0x2123f80: i32 = undef [ORD=13]

    0x2106d78: ch = EntryToken [ORD=13]

    0x2123d80: <multiple use>
    0x2123f80: <multiple use>
  0x2124180: i32,ch = load 0x2106d78, 0x2123d80, 0x2123f80<LD4[%j]> [ORD=13]

      0x2124180: <multiple use>
        0x2124180: <multiple use>
        0x2123b80: i32 = Constant<1> [ORD=14]

      0x2123c80: i32 = add 0x2124180, 0x2123b80 [ORD=14]

      0x2123d80: <multiple use>
      0x2123f80: <multiple use>
    0x2124480: ch = store 0x2124180:1, 0x2123c80, 0x2123d80, 0x2123f80<ST4[%j]> [ORD=15]

    0x2124580: ch = BasicBlock<for.cond1 0x21200f0>

  0x2124380: ch = br 0x2124480, 0x2124580


Optimized lowered selection DAG: BB#7 'main:for.inc12'
SelectionDAG has 9 nodes:
  0x2123d80: i32 = FrameIndex<1> [ORD=13]

  0x2123f80: i32 = undef [ORD=13]

    0x2106d78: ch = EntryToken [ORD=13]

    0x2123d80: <multiple use>
    0x2123f80: <multiple use>
  0x2124180: i32,ch = load 0x2106d78, 0x2123d80, 0x2123f80<LD4[%j]> [ORD=13]

      0x2124180: <multiple use>
        0x2124180: <multiple use>
        0x2123b80: i32 = Constant<1> [ORD=14]

      0x2123c80: i32 = add 0x2124180, 0x2123b80 [ORD=14]

      0x2123d80: <multiple use>
      0x2123f80: <multiple use>
    0x2124480: ch = store 0x2124180:1, 0x2123c80, 0x2123d80, 0x2123f80<ST4[%j]> [ORD=15]

    0x2124580: ch = BasicBlock<for.cond1 0x21200f0>

  0x2124380: ch = br 0x2124480, 0x2124580


Legally typed node: 0x2124580: ch = BasicBlock<for.cond1 0x21200f0> [ID=0]

Legally typed node: 0x2123b80: i32 = Constant<1> [ORD=14] [ID=0]

Legally typed node: 0x2123f80: i32 = undef [ORD=13] [ID=0]

Legally typed node: 0x2123d80: i32 = FrameIndex<1> [ORD=13] [ID=0]

Legally typed node: 0x2106d78: ch = EntryToken [ORD=13] [ID=0]

Legally typed node: 0x2124180: i32,ch = load 0x2106d78, 0x2123d80, 0x2123f80<LD4[%j]> [ORD=13] [ID=0]

Legally typed node: 0x2123c80: i32 = add 0x2124180, 0x2123b80 [ORD=14] [ID=0]

Legally typed node: 0x2124480: ch = store 0x2124180:1, 0x2123c80, 0x2123d80, 0x2123f80<ST4[%j]> [ORD=15] [ID=0]

Legally typed node: 0x2124380: ch = br 0x2124480, 0x2124580 [ID=0]

Legally typed node: 0x7ffdc3beb680: ch = handlenode 0x2124380 [ID=0]

Type-legalized selection DAG: BB#7 'main:for.inc12'
SelectionDAG has 9 nodes:
  0x2123d80: i32 = FrameIndex<1> [ORD=13] [ID=-3]

  0x2123f80: i32 = undef [ORD=13] [ID=-3]

    0x2106d78: ch = EntryToken [ORD=13] [ID=-3]

    0x2123d80: <multiple use>
    0x2123f80: <multiple use>
  0x2124180: i32,ch = load 0x2106d78, 0x2123d80, 0x2123f80<LD4[%j]> [ORD=13] [ID=-3]

      0x2124180: <multiple use>
        0x2124180: <multiple use>
        0x2123b80: i32 = Constant<1> [ORD=14] [ID=-3]

      0x2123c80: i32 = add 0x2124180, 0x2123b80 [ORD=14] [ID=-3]

      0x2123d80: <multiple use>
      0x2123f80: <multiple use>
    0x2124480: ch = store 0x2124180:1, 0x2123c80, 0x2123d80, 0x2123f80<ST4[%j]> [ORD=15] [ID=-3]

    0x2124580: ch = BasicBlock<for.cond1 0x21200f0> [ID=-3]

  0x2124380: ch = br 0x2124480, 0x2124580 [ID=-3]


Legalized selection DAG: BB#7 'main:for.inc12'
SelectionDAG has 9 nodes:
  0x2123d80: i32 = FrameIndex<1> [ORD=13] [ID=1]

  0x2123f80: i32 = undef [ORD=13] [ID=2]

    0x2106d78: ch = EntryToken [ORD=13] [ID=0]

    0x2123d80: <multiple use>
    0x2123f80: <multiple use>
  0x2124180: i32,ch = load 0x2106d78, 0x2123d80, 0x2123f80<LD4[%j]> [ORD=13] [ID=5]

      0x2124180: <multiple use>
        0x2124180: <multiple use>
        0x2123b80: i32 = Constant<1> [ORD=14] [ID=3]

      0x2123c80: i32 = add 0x2124180, 0x2123b80 [ORD=14] [ID=6]

      0x2123d80: <multiple use>
      0x2123f80: <multiple use>
    0x2124480: ch = store 0x2124180:1, 0x2123c80, 0x2123d80, 0x2123f80<ST4[%j]> [ORD=15] [ID=7]

    0x2124580: ch = BasicBlock<for.cond1 0x21200f0> [ID=4]

  0x2124380: ch = br 0x2124480, 0x2124580 [ID=8]


Optimized legalized selection DAG: BB#7 'main:for.inc12'
SelectionDAG has 9 nodes:
  0x2123d80: i32 = FrameIndex<1> [ORD=13] [ID=1]

  0x2123f80: i32 = undef [ORD=13] [ID=2]

    0x2106d78: ch = EntryToken [ORD=13] [ID=0]

    0x2123d80: <multiple use>
    0x2123f80: <multiple use>
  0x2124180: i32,ch = load 0x2106d78, 0x2123d80, 0x2123f80<LD4[%j]> [ORD=13] [ID=5]

      0x2124180: <multiple use>
        0x2124180: <multiple use>
        0x2123b80: i32 = Constant<1> [ORD=14] [ID=3]

      0x2123c80: i32 = add 0x2124180, 0x2123b80 [ORD=14] [ID=6]

      0x2123d80: <multiple use>
      0x2123f80: <multiple use>
    0x2124480: ch = store 0x2124180:1, 0x2123c80, 0x2123d80, 0x2123f80<ST4[%j]> [ORD=15] [ID=7]

    0x2124580: ch = BasicBlock<for.cond1 0x21200f0> [ID=4]

  0x2124380: ch = br 0x2124480, 0x2124580 [ID=8]


===== Instruction selection begins: BB#7 'for.inc12'
ISEL: Starting pattern match on root node: 0x2124380: ch = br 0x2124480, 0x2124580 [ID=8]

  Initial Opcode index to 1787
  Morphed node: 0x2124380: ch = JAL 0x2124580, 0x2124480

ISEL: Match complete!
=> 0x2124380: ch = JAL 0x2124580, 0x2124480

ISEL: Starting pattern match on root node: 0x2124480: ch = store 0x2124180:1, 0x2123c80, 0x2123d80, 0x2123f80<ST4[%j]> [ORD=15] [ID=7]

  Initial Opcode index to 123
  Morphed node: 0x2124480: ch = SW 0x2123c80, 0x2123d80, 0x2124780, 0x2124180:1<Mem:ST4[%j]> [ORD=15]

ISEL: Match complete!
=> 0x2124480: ch = SW 0x2123c80, 0x2123d80, 0x2124780, 0x2124180:1<Mem:ST4[%j]> [ORD=15]

ISEL: Starting pattern match on root node: 0x2123c80: i32 = add 0x2124180, 0x2123b80 [ORD=14] [ID=6]

  Initial Opcode index to 438
  Morphed node: 0x2123c80: i32 = ADDI 0x2124180, 0x2124880 [ORD=14]

ISEL: Match complete!
=> 0x2123c80: i32 = ADDI 0x2124180, 0x2124880 [ORD=14]

ISEL: Starting pattern match on root node: 0x2124180: i32,ch = load 0x2106d78, 0x2123d80, 0x2123f80<LD4[%j]> [ORD=13] [ID=5]

  Initial Opcode index to 4
  TypeSwitch[i32] from 9 to 12
  Morphed node: 0x2124180: i32,ch = LW 0x2123d80, 0x2124780, 0x2106d78<Mem:LD4[%j]> [ORD=13]

ISEL: Match complete!
=> 0x2124180: i32,ch = LW 0x2123d80, 0x2124780, 0x2106d78<Mem:LD4[%j]> [ORD=13]

=> 0x2124580: ch = BasicBlock<for.cond1 0x21200f0>

=> 0x2106d78: ch = EntryToken [ORD=13]

===== Instruction selection ends:
Selected selection DAG: BB#7 'main:for.inc12'
SelectionDAG has 11 nodes:
    0x2124980: <multiple use>
    0x2124780: <multiple use>
    0x2106d78: ch = EntryToken [ORD=13]

  0x2124180: i32,ch = LW 0x2124980, 0x2124780, 0x2106d78<Mem:LD4[%j]> [ORD=13]

  0x2124780: i32 = TargetConstant<0>

    0x2123f80: i32 = Register %zero

    0x2123b80: i32 = TargetFrameIndex<1>

  0x2124980: i32 = ADDI 0x2123f80, 0x2123b80 [ORD=13]

    0x2124580: ch = BasicBlock<for.cond1 0x21200f0>

        0x2124180: <multiple use>
        0x2124880: i32 = TargetConstant<1>

      0x2123c80: i32 = ADDI 0x2124180, 0x2124880 [ORD=14]

      0x2124980: <multiple use>
      0x2124780: <multiple use>
      0x2124180: <multiple use>
    0x2124480: ch = SW 0x2123c80, 0x2124980, 0x2124780, 0x2124180:1<Mem:ST4[%j]> [ORD=15]

  0x2124380: ch = JAL 0x2124580, 0x2124480


********** List Scheduling BB#7 'for.inc12' **********
SU(0): 0x2124380: ch = JAL 0x2124580, 0x2124480 [ID=0]

  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
   ch  SU(1): Latency=1

SU(1): 0x2124480: ch = SW 0x2123c80, 0x2124980, 0x2124780, 0x2124180:1<Mem:ST4[%j]> [ORD=15] [ID=1]

  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 3
  Height             : 1
  Predecessors:
   val SU(4): Latency=1
   val SU(3): Latency=1
   ch  SU(2): Latency=1
  Successors:
   ch  SU(0): Latency=1

SU(2): 0x2124180: i32,ch = LW 0x2124980, 0x2124780, 0x2106d78<Mem:LD4[%j]> [ORD=13] [ID=2]

  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 1
  Latency            : 1
  Depth              : 1
  Height             : 3
  Predecessors:
   val SU(3): Latency=1
  Successors:
   ch  SU(1): Latency=1
   val SU(4): Latency=1

SU(3): 0x2124980: i32 = ADDI 0x2123f80, 0x2123b80 [ORD=13] [ID=3]

  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 1
  Latency            : 1
  Depth              : 0
  Height             : 4
  Successors:
   val SU(1): Latency=1
   val SU(2): Latency=1

SU(4): 0x2123c80: i32 = ADDI 0x2124180, 0x2124880 [ORD=14] [ID=4]

  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 2
  Height             : 2
  Predecessors:
   val SU(2): Latency=1
  Successors:
   val SU(1): Latency=1


Examining Available:
Height 0: SU(0): 0x2124380: ch = JAL 0x2124580, 0x2124480 [ID=0]


*** Scheduling [0]: SU(0): 0x2124380: ch = JAL 0x2124580, 0x2124480 [ID=0]


Examining Available:
Height 1: SU(1): 0x2124480: ch = SW 0x2123c80, 0x2124980, 0x2124780, 0x2124180:1<Mem:ST4[%j]> [ORD=15] [ID=1]


*** Scheduling [1]: SU(1): 0x2124480: ch = SW 0x2123c80, 0x2124980, 0x2124780, 0x2124180:1<Mem:ST4[%j]> [ORD=15] [ID=1]


Examining Available:
Height 2: SU(4): 0x2123c80: i32 = ADDI 0x2124180, 0x2124880 [ORD=14] [ID=4]


*** Scheduling [2]: SU(4): 0x2123c80: i32 = ADDI 0x2124180, 0x2124880 [ORD=14] [ID=4]


Examining Available:
Height 3: SU(2): 0x2124180: i32,ch = LW 0x2124980, 0x2124780, 0x2106d78<Mem:LD4[%j]> [ORD=13] [ID=2]


*** Scheduling [3]: SU(2): 0x2124180: i32,ch = LW 0x2124980, 0x2124780, 0x2106d78<Mem:LD4[%j]> [ORD=13] [ID=2]


Examining Available:
Height 4: SU(3): 0x2124980: i32 = ADDI 0x2123f80, 0x2123b80 [ORD=13] [ID=3]


*** Scheduling [4]: SU(3): 0x2124980: i32 = ADDI 0x2123f80, 0x2123b80 [ORD=13] [ID=3]

*** Final schedule ***
SU(3): 0x2124980: i32 = ADDI 0x2123f80, 0x2123b80 [ORD=13] [ID=3]

SU(2): 0x2124180: i32,ch = LW 0x2124980, 0x2124780, 0x2106d78<Mem:LD4[%j]> [ORD=13] [ID=2]

SU(4): 0x2123c80: i32 = ADDI 0x2124180, 0x2124880 [ORD=14] [ID=4]

SU(1): 0x2124480: ch = SW 0x2123c80, 0x2124980, 0x2124780, 0x2124180:1<Mem:ST4[%j]> [ORD=15] [ID=1]

SU(0): 0x2124380: ch = JAL 0x2124580, 0x2124480 [ID=0]


Total amount of phi nodes to update: 0
Initial selection DAG: BB#6 'main:for.inc'
SelectionDAG has 35 nodes:
  0x2106d78: ch = EntryToken [ORD=16]

  0x2124980: i32 = FrameIndex<2> [ORD=16]

  0x2123b80: i32 = Constant<0>

  0x2123f80: i32 = undef [ORD=16]

    0x2106d78: <multiple use>
    0x2124980: <multiple use>
    0x2123f80: <multiple use>
  0x2124880: i32,ch = load 0x2106d78, 0x2124980, 0x2123f80<LD4[%k]> [ORD=16]

    0x2106d78: <multiple use>
    0x2124780: i32 = FrameIndex<0> [ORD=17]

    0x2123f80: <multiple use>
  0x2124380: i32,ch = load 0x2106d78, 0x2124780, 0x2123f80<LD4[%i]> [ORD=17]

  0x2123c80: i32 = Constant<40> [ORD=18]

    0x2124380: <multiple use>
    0x2123c80: <multiple use>
  0x2124180: i32 = mul 0x2124380, 0x2123c80 [ORD=18]

  0x2123d80: i32 = Constant<2> [ORD=19]

    0x2106d78: <multiple use>
        0x2124480: i32 = GlobalAddress<[10 x [10 x i32]]* @a> 0 [ORD=18]

        0x2124180: <multiple use>
      0x2124580: i32 = add 0x2124480, 0x2124180 [ORD=18]

        0x2124880: <multiple use>
        0x2123d80: <multiple use>
      0x2124680: i32 = shl 0x2124880, 0x2123d80 [ORD=19]

    0x2124080: i32 = add 0x2124580, 0x2124680 [ORD=19]

    0x2123f80: <multiple use>
  0x2124280: i32,ch = load 0x2106d78, 0x2124080, 0x2123f80<LD4[%arrayidx7]> [ORD=20]

    0x2106d78: <multiple use>
    0x2123e80: i32 = FrameIndex<1> [ORD=21]

    0x2123f80: <multiple use>
  0x2128410: i32,ch = load 0x2106d78, 0x2123e80, 0x2123f80<LD4[%j]> [ORD=21]

    0x2128410: <multiple use>
    0x2123d80: <multiple use>
  0x2128810: i32 = shl 0x2128410, 0x2123d80 [ORD=24]

    0x2106d78: <multiple use>
        0x2128510: i32 = GlobalAddress<[10 x [10 x i32]]* @b> 0 [ORD=23]

          0x2124880: <multiple use>
          0x2123c80: <multiple use>
        0x2128610: i32 = mul 0x2124880, 0x2123c80 [ORD=23]

      0x2128710: i32 = add 0x2128510, 0x2128610 [ORD=23]

      0x2128810: <multiple use>
    0x2128910: i32 = add 0x2128710, 0x2128810 [ORD=24]

    0x2123f80: <multiple use>
  0x2128a10: i32,ch = load 0x2106d78, 0x2128910, 0x2123f80<LD4[%arrayidx9]> [ORD=25]

        0x2124880: <multiple use>
        0x2124380: <multiple use>
        0x2124280: <multiple use>
        0x2128410: <multiple use>
        0x2124880: <multiple use>
        0x2128a10: <multiple use>
        0x2128410: <multiple use>
        0x2124380: <multiple use>
      0x2128f10: ch = TokenFactor 0x2124880:1, 0x2124380:1, 0x2124280:1, 0x2128410:1, 0x2124880:1, 0x2128a10:1, 0x2128410:1, 0x2124380:1 [ORD=31]

        0x2124280: <multiple use>
        0x2128a10: <multiple use>
      0x2128b10: i32 = add 0x2124280, 0x2128a10 [ORD=26]

          0x2128c10: i32 = GlobalAddress<[10 x [10 x i32]]* @c> 0 [ORD=29]

          0x2124180: <multiple use>
        0x2128d10: i32 = add 0x2128c10, 0x2124180 [ORD=29]

        0x2128810: <multiple use>
      0x2128e10: i32 = add 0x2128d10, 0x2128810 [ORD=30]

      0x2123f80: <multiple use>
    0x2129010: ch = store 0x2128f10, 0x2128b10, 0x2128e10, 0x2123f80<ST4[%arrayidx11]> [ORD=31]

    0x2124980: <multiple use>
    0x2123f80: <multiple use>
  0x2129110: i32,ch = load 0x2129010, 0x2124980, 0x2123f80<LD4[%k]> [ORD=32]

      0x2129110: <multiple use>
        0x2129110: <multiple use>
        0x2129210: i32 = Constant<1> [ORD=33]

      0x2129ce0: i32 = add 0x2129110, 0x2129210 [ORD=33]

      0x2124980: <multiple use>
      0x2123f80: <multiple use>
    0x2129de0: ch = store 0x2129110:1, 0x2129ce0, 0x2124980, 0x2123f80<ST4[%k]> [ORD=34]

    0x2129ee0: ch = BasicBlock<for.cond4 0x2120250>

  0x2129fe0: ch = br 0x2129de0, 0x2129ee0



Replacing.1 0x2128f10: ch = TokenFactor 0x2124880:1, 0x2124380:1, 0x2124280:1, 0x2128410:1, 0x2124880:1, 0x2128a10:1, 0x2128410:1, 0x2124380:1 [ORD=31]

With: 0x212a0e0: ch = TokenFactor 0x2124880:1, 0x2124380:1, 0x2124280:1, 0x2128410:1, 0x2128a10:1
 and 0 other values
Optimized lowered selection DAG: BB#6 'main:for.inc'
SelectionDAG has 34 nodes:
  0x2106d78: ch = EntryToken [ORD=16]

  0x2124980: i32 = FrameIndex<2> [ORD=16]

  0x2123f80: i32 = undef [ORD=16]

    0x2106d78: <multiple use>
    0x2124980: <multiple use>
    0x2123f80: <multiple use>
  0x2124880: i32,ch = load 0x2106d78, 0x2124980, 0x2123f80<LD4[%k]> [ORD=16]

    0x2106d78: <multiple use>
    0x2124780: i32 = FrameIndex<0> [ORD=17]

    0x2123f80: <multiple use>
  0x2124380: i32,ch = load 0x2106d78, 0x2124780, 0x2123f80<LD4[%i]> [ORD=17]

  0x2123c80: i32 = Constant<40> [ORD=18]

    0x2124380: <multiple use>
    0x2123c80: <multiple use>
  0x2124180: i32 = mul 0x2124380, 0x2123c80 [ORD=18]

  0x2123d80: i32 = Constant<2> [ORD=19]

    0x2106d78: <multiple use>
        0x2124480: i32 = GlobalAddress<[10 x [10 x i32]]* @a> 0 [ORD=18]

        0x2124180: <multiple use>
      0x2124580: i32 = add 0x2124480, 0x2124180 [ORD=18]

        0x2124880: <multiple use>
        0x2123d80: <multiple use>
      0x2124680: i32 = shl 0x2124880, 0x2123d80 [ORD=19]

    0x2124080: i32 = add 0x2124580, 0x2124680 [ORD=19]

    0x2123f80: <multiple use>
  0x2124280: i32,ch = load 0x2106d78, 0x2124080, 0x2123f80<LD4[%arrayidx7]> [ORD=20]

    0x2106d78: <multiple use>
    0x2123e80: i32 = FrameIndex<1> [ORD=21]

    0x2123f80: <multiple use>
  0x2128410: i32,ch = load 0x2106d78, 0x2123e80, 0x2123f80<LD4[%j]> [ORD=21]

    0x2128410: <multiple use>
    0x2123d80: <multiple use>
  0x2128810: i32 = shl 0x2128410, 0x2123d80 [ORD=24]

    0x2106d78: <multiple use>
        0x2128510: i32 = GlobalAddress<[10 x [10 x i32]]* @b> 0 [ORD=23]

          0x2124880: <multiple use>
          0x2123c80: <multiple use>
        0x2128610: i32 = mul 0x2124880, 0x2123c80 [ORD=23]

      0x2128710: i32 = add 0x2128510, 0x2128610 [ORD=23]

      0x2128810: <multiple use>
    0x2128910: i32 = add 0x2128710, 0x2128810 [ORD=24]

    0x2123f80: <multiple use>
  0x2128a10: i32,ch = load 0x2106d78, 0x2128910, 0x2123f80<LD4[%arrayidx9]> [ORD=25]

        0x2124880: <multiple use>
        0x2124380: <multiple use>
        0x2124280: <multiple use>
        0x2128410: <multiple use>
        0x2128a10: <multiple use>
      0x212a0e0: ch = TokenFactor 0x2124880:1, 0x2124380:1, 0x2124280:1, 0x2128410:1, 0x2128a10:1

        0x2124280: <multiple use>
        0x2128a10: <multiple use>
      0x2128b10: i32 = add 0x2124280, 0x2128a10 [ORD=26]

          0x2128c10: i32 = GlobalAddress<[10 x [10 x i32]]* @c> 0 [ORD=29]

          0x2124180: <multiple use>
        0x2128d10: i32 = add 0x2128c10, 0x2124180 [ORD=29]

        0x2128810: <multiple use>
      0x2128e10: i32 = add 0x2128d10, 0x2128810 [ORD=30]

      0x2123f80: <multiple use>
    0x2129010: ch = store 0x212a0e0, 0x2128b10, 0x2128e10, 0x2123f80<ST4[%arrayidx11]> [ORD=31]

    0x2124980: <multiple use>
    0x2123f80: <multiple use>
  0x2129110: i32,ch = load 0x2129010, 0x2124980, 0x2123f80<LD4[%k]> [ORD=32]

      0x2129110: <multiple use>
        0x2129110: <multiple use>
        0x2129210: i32 = Constant<1> [ORD=33]

      0x2129ce0: i32 = add 0x2129110, 0x2129210 [ORD=33]

      0x2124980: <multiple use>
      0x2123f80: <multiple use>
    0x2129de0: ch = store 0x2129110:1, 0x2129ce0, 0x2124980, 0x2123f80<ST4[%k]> [ORD=34]

    0x2129ee0: ch = BasicBlock<for.cond4 0x2120250>

  0x2129fe0: ch = br 0x2129de0, 0x2129ee0


Legally typed node: 0x2129ee0: ch = BasicBlock<for.cond4 0x2120250> [ID=0]

Legally typed node: 0x2129210: i32 = Constant<1> [ORD=33] [ID=0]

Legally typed node: 0x2128c10: i32 = GlobalAddress<[10 x [10 x i32]]* @c> 0 [ORD=29] [ID=0]

Legally typed node: 0x2128510: i32 = GlobalAddress<[10 x [10 x i32]]* @b> 0 [ORD=23] [ID=0]

Legally typed node: 0x2123e80: i32 = FrameIndex<1> [ORD=21] [ID=0]

Legally typed node: 0x2123d80: i32 = Constant<2> [ORD=19] [ID=0]

Legally typed node: 0x2123c80: i32 = Constant<40> [ORD=18] [ID=0]

Legally typed node: 0x2124480: i32 = GlobalAddress<[10 x [10 x i32]]* @a> 0 [ORD=18] [ID=0]

Legally typed node: 0x2124780: i32 = FrameIndex<0> [ORD=17] [ID=0]

Legally typed node: 0x2123f80: i32 = undef [ORD=16] [ID=0]

Legally typed node: 0x2124980: i32 = FrameIndex<2> [ORD=16] [ID=0]

Legally typed node: 0x2106d78: ch = EntryToken [ORD=16] [ID=0]

Legally typed node: 0x2124880: i32,ch = load 0x2106d78, 0x2124980, 0x2123f80<LD4[%k]> [ORD=16] [ID=0]

Legally typed node: 0x2124680: i32 = shl 0x2124880, 0x2123d80 [ORD=19] [ID=0]

Legally typed node: 0x2128610: i32 = mul 0x2124880, 0x2123c80 [ORD=23] [ID=0]

Legally typed node: 0x2128710: i32 = add 0x2128510, 0x2128610 [ORD=23] [ID=0]

Legally typed node: 0x2124380: i32,ch = load 0x2106d78, 0x2124780, 0x2123f80<LD4[%i]> [ORD=17] [ID=0]

Legally typed node: 0x2124180: i32 = mul 0x2124380, 0x2123c80 [ORD=18] [ID=0]

Legally typed node: 0x2124580: i32 = add 0x2124480, 0x2124180 [ORD=18] [ID=0]

Legally typed node: 0x2124080: i32 = add 0x2124580, 0x2124680 [ORD=19] [ID=0]

Legally typed node: 0x2124280: i32,ch = load 0x2106d78, 0x2124080, 0x2123f80<LD4[%arrayidx7]> [ORD=20] [ID=0]

Legally typed node: 0x2128d10: i32 = add 0x2128c10, 0x2124180 [ORD=29] [ID=0]

Legally typed node: 0x2128410: i32,ch = load 0x2106d78, 0x2123e80, 0x2123f80<LD4[%j]> [ORD=21] [ID=0]

Legally typed node: 0x2128810: i32 = shl 0x2128410, 0x2123d80 [ORD=24] [ID=0]

Legally typed node: 0x2128910: i32 = add 0x2128710, 0x2128810 [ORD=24] [ID=0]

Legally typed node: 0x2128a10: i32,ch = load 0x2106d78, 0x2128910, 0x2123f80<LD4[%arrayidx9]> [ORD=25] [ID=0]

Legally typed node: 0x2128b10: i32 = add 0x2124280, 0x2128a10 [ORD=26] [ID=0]

Legally typed node: 0x212a0e0: ch = TokenFactor 0x2124880:1, 0x2124380:1, 0x2124280:1, 0x2128410:1, 0x2128a10:1 [ID=0]

Legally typed node: 0x2128e10: i32 = add 0x2128d10, 0x2128810 [ORD=30] [ID=0]

Legally typed node: 0x2129010: ch = store 0x212a0e0, 0x2128b10, 0x2128e10, 0x2123f80<ST4[%arrayidx11]> [ORD=31] [ID=0]

Legally typed node: 0x2129110: i32,ch = load 0x2129010, 0x2124980, 0x2123f80<LD4[%k]> [ORD=32] [ID=0]

Legally typed node: 0x2129ce0: i32 = add 0x2129110, 0x2129210 [ORD=33] [ID=0]

Legally typed node: 0x2129de0: ch = store 0x2129110:1, 0x2129ce0, 0x2124980, 0x2123f80<ST4[%k]> [ORD=34] [ID=0]

Legally typed node: 0x2129fe0: ch = br 0x2129de0, 0x2129ee0 [ID=0]

Legally typed node: 0x7ffdc3beb680: ch = handlenode 0x2129fe0 [ID=0]

Type-legalized selection DAG: BB#6 'main:for.inc'
SelectionDAG has 34 nodes:
  0x2106d78: ch = EntryToken [ORD=16] [ID=-3]

  0x2124980: i32 = FrameIndex<2> [ORD=16] [ID=-3]

  0x2123f80: i32 = undef [ORD=16] [ID=-3]

    0x2106d78: <multiple use>
    0x2124980: <multiple use>
    0x2123f80: <multiple use>
  0x2124880: i32,ch = load 0x2106d78, 0x2124980, 0x2123f80<LD4[%k]> [ORD=16] [ID=-3]

    0x2106d78: <multiple use>
    0x2124780: i32 = FrameIndex<0> [ORD=17] [ID=-3]

    0x2123f80: <multiple use>
  0x2124380: i32,ch = load 0x2106d78, 0x2124780, 0x2123f80<LD4[%i]> [ORD=17] [ID=-3]

  0x2123c80: i32 = Constant<40> [ORD=18] [ID=-3]

    0x2124380: <multiple use>
    0x2123c80: <multiple use>
  0x2124180: i32 = mul 0x2124380, 0x2123c80 [ORD=18] [ID=-3]

  0x2123d80: i32 = Constant<2> [ORD=19] [ID=-3]

    0x2106d78: <multiple use>
        0x2124480: i32 = GlobalAddress<[10 x [10 x i32]]* @a> 0 [ORD=18] [ID=-3]

        0x2124180: <multiple use>
      0x2124580: i32 = add 0x2124480, 0x2124180 [ORD=18] [ID=-3]

        0x2124880: <multiple use>
        0x2123d80: <multiple use>
      0x2124680: i32 = shl 0x2124880, 0x2123d80 [ORD=19] [ID=-3]

    0x2124080: i32 = add 0x2124580, 0x2124680 [ORD=19] [ID=-3]

    0x2123f80: <multiple use>
  0x2124280: i32,ch = load 0x2106d78, 0x2124080, 0x2123f80<LD4[%arrayidx7]> [ORD=20] [ID=-3]

    0x2106d78: <multiple use>
    0x2123e80: i32 = FrameIndex<1> [ORD=21] [ID=-3]

    0x2123f80: <multiple use>
  0x2128410: i32,ch = load 0x2106d78, 0x2123e80, 0x2123f80<LD4[%j]> [ORD=21] [ID=-3]

    0x2128410: <multiple use>
    0x2123d80: <multiple use>
  0x2128810: i32 = shl 0x2128410, 0x2123d80 [ORD=24] [ID=-3]

    0x2106d78: <multiple use>
        0x2128510: i32 = GlobalAddress<[10 x [10 x i32]]* @b> 0 [ORD=23] [ID=-3]

          0x2124880: <multiple use>
          0x2123c80: <multiple use>
        0x2128610: i32 = mul 0x2124880, 0x2123c80 [ORD=23] [ID=-3]

      0x2128710: i32 = add 0x2128510, 0x2128610 [ORD=23] [ID=-3]

      0x2128810: <multiple use>
    0x2128910: i32 = add 0x2128710, 0x2128810 [ORD=24] [ID=-3]

    0x2123f80: <multiple use>
  0x2128a10: i32,ch = load 0x2106d78, 0x2128910, 0x2123f80<LD4[%arrayidx9]> [ORD=25] [ID=-3]

        0x2124880: <multiple use>
        0x2124380: <multiple use>
        0x2124280: <multiple use>
        0x2128410: <multiple use>
        0x2128a10: <multiple use>
      0x212a0e0: ch = TokenFactor 0x2124880:1, 0x2124380:1, 0x2124280:1, 0x2128410:1, 0x2128a10:1 [ID=-3]

        0x2124280: <multiple use>
        0x2128a10: <multiple use>
      0x2128b10: i32 = add 0x2124280, 0x2128a10 [ORD=26] [ID=-3]

          0x2128c10: i32 = GlobalAddress<[10 x [10 x i32]]* @c> 0 [ORD=29] [ID=-3]

          0x2124180: <multiple use>
        0x2128d10: i32 = add 0x2128c10, 0x2124180 [ORD=29] [ID=-3]

        0x2128810: <multiple use>
      0x2128e10: i32 = add 0x2128d10, 0x2128810 [ORD=30] [ID=-3]

      0x2123f80: <multiple use>
    0x2129010: ch = store 0x212a0e0, 0x2128b10, 0x2128e10, 0x2123f80<ST4[%arrayidx11]> [ORD=31] [ID=-3]

    0x2124980: <multiple use>
    0x2123f80: <multiple use>
  0x2129110: i32,ch = load 0x2129010, 0x2124980, 0x2123f80<LD4[%k]> [ORD=32] [ID=-3]

      0x2129110: <multiple use>
        0x2129110: <multiple use>
        0x2129210: i32 = Constant<1> [ORD=33] [ID=-3]

      0x2129ce0: i32 = add 0x2129110, 0x2129210 [ORD=33] [ID=-3]

      0x2124980: <multiple use>
      0x2123f80: <multiple use>
    0x2129de0: ch = store 0x2129110:1, 0x2129ce0, 0x2124980, 0x2123f80<ST4[%k]> [ORD=34] [ID=-3]

    0x2129ee0: ch = BasicBlock<for.cond4 0x2120250> [ID=-3]

  0x2129fe0: ch = br 0x2129de0, 0x2129ee0 [ID=-3]


Legalized selection DAG: BB#6 'main:for.inc'
SelectionDAG has 46 nodes:
  0x2106d78: ch = EntryToken [ORD=16] [ID=0]

  0x2124980: i32 = FrameIndex<2> [ORD=16] [ID=1]

  0x2123f80: i32 = undef [ORD=16] [ID=2]

  0x2123c80: i32 = Constant<40> [ORD=18] [ID=5]

  0x2123d80: i32 = Constant<2> [ORD=19] [ID=6]

    0x2106d78: <multiple use>
    0x2124980: <multiple use>
    0x2123f80: <multiple use>
  0x2124880: i32,ch = load 0x2106d78, 0x2124980, 0x2123f80<LD4[%k]> [ORD=16] [ID=12]

    0x2106d78: <multiple use>
    0x2124780: i32 = FrameIndex<0> [ORD=17] [ID=3]

    0x2123f80: <multiple use>
  0x2124380: i32,ch = load 0x2106d78, 0x2124780, 0x2123f80<LD4[%i]> [ORD=17] [ID=13]

    0x2106d78: <multiple use>
    0x2123e80: i32 = FrameIndex<1> [ORD=21] [ID=7]

    0x2123f80: <multiple use>
  0x2128410: i32,ch = load 0x2106d78, 0x2123e80, 0x2123f80<LD4[%j]> [ORD=21] [ID=14]

    0x2124380: <multiple use>
    0x2123c80: <multiple use>
  0x2124180: i32 = mul 0x2124380, 0x2123c80 [ORD=18] [ID=17]

    0x2128410: <multiple use>
    0x2123d80: <multiple use>
  0x2128810: i32 = shl 0x2128410, 0x2123d80 [ORD=24] [ID=18]

    0x2106d78: <multiple use>
            0x2128c10: i32 = TargetGlobalAddress<[10 x [10 x i32]]* @b> 0 [TF=2]

          0x212a5e0: i32 = REDEFINEISD::Hi 0x2128c10

            0x212a4e0: i32 = TargetGlobalAddress<[10 x [10 x i32]]* @b> 0 [TF=3]

          0x212a6e0: i32 = REDEFINEISD::Lo 0x212a4e0

        0x212a7e0: i32 = add 0x212a5e0, 0x212a6e0

          0x2124880: <multiple use>
          0x2123c80: <multiple use>
        0x2128610: i32 = mul 0x2124880, 0x2123c80 [ORD=23] [ID=15]

      0x2128710: i32 = add 0x212a7e0, 0x2128610 [ORD=23] [ID=19]

      0x2128810: <multiple use>
    0x2128910: i32 = add 0x2128710, 0x2128810 [ORD=24] [ID=22]

    0x2123f80: <multiple use>
  0x2128a10: i32,ch = load 0x2106d78, 0x2128910, 0x2123f80<LD4[%arrayidx9]> [ORD=25] [ID=25]

    0x2106d78: <multiple use>
            0x2128510: i32 = TargetGlobalAddress<[10 x [10 x i32]]* @a> 0 [TF=2]

          0x212a9e0: i32 = REDEFINEISD::Hi 0x2128510

            0x212a8e0: i32 = TargetGlobalAddress<[10 x [10 x i32]]* @a> 0 [TF=3]

          0x212aae0: i32 = REDEFINEISD::Lo 0x212a8e0

        0x212cb40: i32 = add 0x212a9e0, 0x212aae0

        0x2124180: <multiple use>
      0x2124580: i32 = add 0x212cb40, 0x2124180 [ORD=18] [ID=21]

        0x2124880: <multiple use>
        0x2123d80: <multiple use>
      0x2124680: i32 = shl 0x2124880, 0x2123d80 [ORD=19] [ID=16]

    0x2124080: i32 = add 0x2124580, 0x2124680 [ORD=19] [ID=24]

    0x2123f80: <multiple use>
  0x2124280: i32,ch = load 0x2106d78, 0x2124080, 0x2123f80<LD4[%arrayidx7]> [ORD=20] [ID=26]

        0x2124880: <multiple use>
        0x2124380: <multiple use>
        0x2124280: <multiple use>
        0x2128410: <multiple use>
        0x2128a10: <multiple use>
      0x212a0e0: ch = TokenFactor 0x2124880:1, 0x2124380:1, 0x2124280:1, 0x2128410:1, 0x2128a10:1 [ID=27]

        0x2124280: <multiple use>
        0x2128a10: <multiple use>
      0x2128b10: i32 = add 0x2124280, 0x2128a10 [ORD=26] [ID=28]

              0x2123b80: i32 = TargetGlobalAddress<[10 x [10 x i32]]* @c> 0 [TF=2]

            0x212a1e0: i32 = REDEFINEISD::Hi 0x2123b80

              0x2128f10: i32 = TargetGlobalAddress<[10 x [10 x i32]]* @c> 0 [TF=3]

            0x212a2e0: i32 = REDEFINEISD::Lo 0x2128f10

          0x212a3e0: i32 = add 0x212a1e0, 0x212a2e0

          0x2124180: <multiple use>
        0x2128d10: i32 = add 0x212a3e0, 0x2124180 [ORD=29] [ID=20]

        0x2128810: <multiple use>
      0x2128e10: i32 = add 0x2128d10, 0x2128810 [ORD=30] [ID=23]

      0x2123f80: <multiple use>
    0x2129010: ch = store 0x212a0e0, 0x2128b10, 0x2128e10, 0x2123f80<ST4[%arrayidx11]> [ORD=31] [ID=29]

    0x2124980: <multiple use>
    0x2123f80: <multiple use>
  0x2129110: i32,ch = load 0x2129010, 0x2124980, 0x2123f80<LD4[%k]> [ORD=32] [ID=30]

      0x2129110: <multiple use>
        0x2129110: <multiple use>
        0x2129210: i32 = Constant<1> [ORD=33] [ID=10]

      0x2129ce0: i32 = add 0x2129110, 0x2129210 [ORD=33] [ID=31]

      0x2124980: <multiple use>
      0x2123f80: <multiple use>
    0x2129de0: ch = store 0x2129110:1, 0x2129ce0, 0x2124980, 0x2123f80<ST4[%k]> [ORD=34] [ID=32]

    0x2129ee0: ch = BasicBlock<for.cond4 0x2120250> [ID=11]

  0x2129fe0: ch = br 0x2129de0, 0x2129ee0 [ID=33]


Optimized legalized selection DAG: BB#6 'main:for.inc'
SelectionDAG has 46 nodes:
  0x2106d78: ch = EntryToken [ORD=16] [ID=0]

  0x2124980: i32 = FrameIndex<2> [ORD=16] [ID=1]

  0x2123f80: i32 = undef [ORD=16] [ID=2]

  0x2123c80: i32 = Constant<40> [ORD=18] [ID=5]

  0x2123d80: i32 = Constant<2> [ORD=19] [ID=6]

    0x2106d78: <multiple use>
    0x2124980: <multiple use>
    0x2123f80: <multiple use>
  0x2124880: i32,ch = load 0x2106d78, 0x2124980, 0x2123f80<LD4[%k]> [ORD=16] [ID=12]

    0x2106d78: <multiple use>
    0x2124780: i32 = FrameIndex<0> [ORD=17] [ID=3]

    0x2123f80: <multiple use>
  0x2124380: i32,ch = load 0x2106d78, 0x2124780, 0x2123f80<LD4[%i]> [ORD=17] [ID=13]

    0x2106d78: <multiple use>
    0x2123e80: i32 = FrameIndex<1> [ORD=21] [ID=7]

    0x2123f80: <multiple use>
  0x2128410: i32,ch = load 0x2106d78, 0x2123e80, 0x2123f80<LD4[%j]> [ORD=21] [ID=14]

    0x2124380: <multiple use>
    0x2123c80: <multiple use>
  0x2124180: i32 = mul 0x2124380, 0x2123c80 [ORD=18] [ID=17]

    0x2128410: <multiple use>
    0x2123d80: <multiple use>
  0x2128810: i32 = shl 0x2128410, 0x2123d80 [ORD=24] [ID=18]

    0x2106d78: <multiple use>
            0x2128c10: i32 = TargetGlobalAddress<[10 x [10 x i32]]* @b> 0 [TF=2]

          0x212a5e0: i32 = REDEFINEISD::Hi 0x2128c10

            0x212a4e0: i32 = TargetGlobalAddress<[10 x [10 x i32]]* @b> 0 [TF=3]

          0x212a6e0: i32 = REDEFINEISD::Lo 0x212a4e0

        0x212a7e0: i32 = add 0x212a5e0, 0x212a6e0

          0x2124880: <multiple use>
          0x2123c80: <multiple use>
        0x2128610: i32 = mul 0x2124880, 0x2123c80 [ORD=23] [ID=15]

      0x2128710: i32 = add 0x212a7e0, 0x2128610 [ORD=23] [ID=19]

      0x2128810: <multiple use>
    0x2128910: i32 = add 0x2128710, 0x2128810 [ORD=24] [ID=22]

    0x2123f80: <multiple use>
  0x2128a10: i32,ch = load 0x2106d78, 0x2128910, 0x2123f80<LD4[%arrayidx9]> [ORD=25] [ID=25]

    0x2106d78: <multiple use>
            0x2128510: i32 = TargetGlobalAddress<[10 x [10 x i32]]* @a> 0 [TF=2]

          0x212a9e0: i32 = REDEFINEISD::Hi 0x2128510

            0x212a8e0: i32 = TargetGlobalAddress<[10 x [10 x i32]]* @a> 0 [TF=3]

          0x212aae0: i32 = REDEFINEISD::Lo 0x212a8e0

        0x212cb40: i32 = add 0x212a9e0, 0x212aae0

        0x2124180: <multiple use>
      0x2124580: i32 = add 0x212cb40, 0x2124180 [ORD=18] [ID=21]

        0x2124880: <multiple use>
        0x2123d80: <multiple use>
      0x2124680: i32 = shl 0x2124880, 0x2123d80 [ORD=19] [ID=16]

    0x2124080: i32 = add 0x2124580, 0x2124680 [ORD=19] [ID=24]

    0x2123f80: <multiple use>
  0x2124280: i32,ch = load 0x2106d78, 0x2124080, 0x2123f80<LD4[%arrayidx7]> [ORD=20] [ID=26]

        0x2124880: <multiple use>
        0x2124380: <multiple use>
        0x2124280: <multiple use>
        0x2128410: <multiple use>
        0x2128a10: <multiple use>
      0x212a0e0: ch = TokenFactor 0x2124880:1, 0x2124380:1, 0x2124280:1, 0x2128410:1, 0x2128a10:1 [ID=27]

        0x2124280: <multiple use>
        0x2128a10: <multiple use>
      0x2128b10: i32 = add 0x2124280, 0x2128a10 [ORD=26] [ID=28]

              0x2123b80: i32 = TargetGlobalAddress<[10 x [10 x i32]]* @c> 0 [TF=2]

            0x212a1e0: i32 = REDEFINEISD::Hi 0x2123b80

              0x2128f10: i32 = TargetGlobalAddress<[10 x [10 x i32]]* @c> 0 [TF=3]

            0x212a2e0: i32 = REDEFINEISD::Lo 0x2128f10

          0x212a3e0: i32 = add 0x212a1e0, 0x212a2e0

          0x2124180: <multiple use>
        0x2128d10: i32 = add 0x212a3e0, 0x2124180 [ORD=29] [ID=20]

        0x2128810: <multiple use>
      0x2128e10: i32 = add 0x2128d10, 0x2128810 [ORD=30] [ID=23]

      0x2123f80: <multiple use>
    0x2129010: ch = store 0x212a0e0, 0x2128b10, 0x2128e10, 0x2123f80<ST4[%arrayidx11]> [ORD=31] [ID=29]

    0x2124980: <multiple use>
    0x2123f80: <multiple use>
  0x2129110: i32,ch = load 0x2129010, 0x2124980, 0x2123f80<LD4[%k]> [ORD=32] [ID=30]

      0x2129110: <multiple use>
        0x2129110: <multiple use>
        0x2129210: i32 = Constant<1> [ORD=33] [ID=10]

      0x2129ce0: i32 = add 0x2129110, 0x2129210 [ORD=33] [ID=31]

      0x2124980: <multiple use>
      0x2123f80: <multiple use>
    0x2129de0: ch = store 0x2129110:1, 0x2129ce0, 0x2124980, 0x2123f80<ST4[%k]> [ORD=34] [ID=32]

    0x2129ee0: ch = BasicBlock<for.cond4 0x2120250> [ID=11]

  0x2129fe0: ch = br 0x2129de0, 0x2129ee0 [ID=33]


===== Instruction selection begins: BB#6 'for.inc'
ISEL: Starting pattern match on root node: 0x2129fe0: ch = br 0x2129de0, 0x2129ee0 [ID=45]

  Initial Opcode index to 1787
  Morphed node: 0x2129fe0: ch = JAL 0x2129ee0, 0x2129de0

ISEL: Match complete!
=> 0x2129fe0: ch = JAL 0x2129ee0, 0x2129de0

ISEL: Starting pattern match on root node: 0x2129de0: ch = store 0x2129110:1, 0x2129ce0, 0x2124980, 0x2123f80<ST4[%k]> [ORD=34] [ID=44]

  Initial Opcode index to 123
  Morphed node: 0x2129de0: ch = SW 0x2129ce0, 0x2124980, 0x2124480, 0x2129110:1<Mem:ST4[%k]> [ORD=34]

ISEL: Match complete!
=> 0x2129de0: ch = SW 0x2129ce0, 0x2124980, 0x2124480, 0x2129110:1<Mem:ST4[%k]> [ORD=34]

ISEL: Starting pattern match on root node: 0x2129ce0: i32 = add 0x2129110, 0x2129210 [ORD=33] [ID=43]

  Initial Opcode index to 438
  Morphed node: 0x2129ce0: i32 = ADDI 0x2129110, 0x212cc40 [ORD=33]

ISEL: Match complete!
=> 0x2129ce0: i32 = ADDI 0x2129110, 0x212cc40 [ORD=33]

ISEL: Starting pattern match on root node: 0x2129110: i32,ch = load 0x2129010, 0x2124980, 0x2123f80<LD4[%k]> [ORD=32] [ID=42]

  Initial Opcode index to 4
  TypeSwitch[i32] from 9 to 12
  Morphed node: 0x2129110: i32,ch = LW 0x2124980, 0x2124480, 0x2129010<Mem:LD4[%k]> [ORD=32]

ISEL: Match complete!
=> 0x2129110: i32,ch = LW 0x2124980, 0x2124480, 0x2129010<Mem:LD4[%k]> [ORD=32]

ISEL: Starting pattern match on root node: 0x2129010: ch = store 0x212a0e0, 0x2128b10, 0x2128e10, 0x2123f80<ST4[%arrayidx11]> [ORD=31] [ID=41]

  Initial Opcode index to 123
  Morphed node: 0x2129010: ch = SW 0x2128b10, 0x2128e10, 0x2124480, 0x212a0e0<Mem:ST4[%arrayidx11]> [ORD=31]

ISEL: Match complete!
=> 0x2129010: ch = SW 0x2128b10, 0x2128e10, 0x2124480, 0x212a0e0<Mem:ST4[%arrayidx11]> [ORD=31]

ISEL: Starting pattern match on root node: 0x2128b10: i32 = add 0x2124280, 0x2128a10 [ORD=26] [ID=40]

  Initial Opcode index to 438
  Match failed at index 444
  Continuing at 461
  Morphed node: 0x2128b10: i32 = ADD 0x2128a10, 0x2124280 [ORD=26]

ISEL: Match complete!
=> 0x2128b10: i32 = ADD 0x2128a10, 0x2124280 [ORD=26]

=> 0x212a0e0: ch = TokenFactor 0x2124880:1, 0x2124380:1, 0x2124280:1, 0x2128410:1, 0x2128a10:1

ISEL: Starting pattern match on root node: 0x2124280: i32,ch = load 0x2106d78, 0x2124080, 0x2123f80<LD4[%arrayidx7]> [ORD=20] [ID=38]

  Initial Opcode index to 4
  TypeSwitch[i32] from 9 to 12
  Morphed node: 0x2124280: i32,ch = LW 0x2124080, 0x2124480, 0x2106d78<Mem:LD4[%arrayidx7]> [ORD=20]

ISEL: Match complete!
=> 0x2124280: i32,ch = LW 0x2124080, 0x2124480, 0x2106d78<Mem:LD4[%arrayidx7]> [ORD=20]

ISEL: Starting pattern match on root node: 0x2128a10: i32,ch = load 0x2106d78, 0x2128910, 0x2123f80<LD4[%arrayidx9]> [ORD=25] [ID=37]

  Initial Opcode index to 4
  TypeSwitch[i32] from 9 to 12
  Morphed node: 0x2128a10: i32,ch = LW 0x2128910, 0x2124480, 0x2106d78<Mem:LD4[%arrayidx9]> [ORD=25]

ISEL: Match complete!
=> 0x2128a10: i32,ch = LW 0x2128910, 0x2124480, 0x2106d78<Mem:LD4[%arrayidx9]> [ORD=25]

ISEL: Starting pattern match on root node: 0x2124080: i32 = add 0x2124580, 0x2124680 [ORD=19] [ID=36]

  Initial Opcode index to 438
  Match failed at index 444
  Continuing at 461
  Morphed node: 0x2124080: i32 = ADD 0x2124680, 0x2124580 [ORD=19]

ISEL: Match complete!
=> 0x2124080: i32 = ADD 0x2124680, 0x2124580 [ORD=19]

ISEL: Starting pattern match on root node: 0x2128910: i32 = add 0x2128710, 0x2128810 [ORD=24] [ID=35]

  Initial Opcode index to 438
  Match failed at index 444
  Continuing at 461
  Morphed node: 0x2128910: i32 = ADD 0x2128810, 0x2128710 [ORD=24]

ISEL: Match complete!
=> 0x2128910: i32 = ADD 0x2128810, 0x2128710 [ORD=24]

ISEL: Starting pattern match on root node: 0x2128e10: i32 = add 0x2128d10, 0x2128810 [ORD=30] [ID=34]

  Initial Opcode index to 438
  Match failed at index 444
  Continuing at 461
  Morphed node: 0x2128e10: i32 = ADD 0x2128810, 0x2128d10 [ORD=30]

ISEL: Match complete!
=> 0x2128e10: i32 = ADD 0x2128810, 0x2128d10 [ORD=30]

ISEL: Starting pattern match on root node: 0x2124580: i32 = add 0x212cb40, 0x2124180 [ORD=18] [ID=33]

  Initial Opcode index to 438
  Match failed at index 444
  Continuing at 461
  Morphed node: 0x2124580: i32 = ADD 0x2124180, 0x212cb40 [ORD=18]

ISEL: Match complete!
=> 0x2124580: i32 = ADD 0x2124180, 0x212cb40 [ORD=18]

ISEL: Starting pattern match on root node: 0x2128710: i32 = add 0x212a7e0, 0x2128610 [ORD=23] [ID=32]

  Initial Opcode index to 438
  Match failed at index 444
  Continuing at 461
  Morphed node: 0x2128710: i32 = ADD 0x2128610, 0x212a7e0 [ORD=23]

ISEL: Match complete!
=> 0x2128710: i32 = ADD 0x2128610, 0x212a7e0 [ORD=23]

ISEL: Starting pattern match on root node: 0x2128d10: i32 = add 0x212a3e0, 0x2124180 [ORD=29] [ID=31]

  Initial Opcode index to 438
  Match failed at index 444
  Continuing at 461
  Morphed node: 0x2128d10: i32 = ADD 0x2124180, 0x212a3e0 [ORD=29]

ISEL: Match complete!
=> 0x2128d10: i32 = ADD 0x2124180, 0x212a3e0 [ORD=29]

ISEL: Starting pattern match on root node: 0x212cb40: i32 = add 0x212a9e0, 0x212aae0 [ID=30]

  Initial Opcode index to 438
  Match failed at index 444
  Continuing at 461
  Morphed node: 0x212cb40: i32 = ADD 0x212aae0, 0x212a9e0

ISEL: Match complete!
=> 0x212cb40: i32 = ADD 0x212aae0, 0x212a9e0

ISEL: Starting pattern match on root node: 0x212a7e0: i32 = add 0x212a5e0, 0x212a6e0 [ID=29]

  Initial Opcode index to 438
  Match failed at index 444
  Continuing at 461
  Morphed node: 0x212a7e0: i32 = ADD 0x212a6e0, 0x212a5e0

ISEL: Match complete!
=> 0x212a7e0: i32 = ADD 0x212a6e0, 0x212a5e0

ISEL: Starting pattern match on root node: 0x212a3e0: i32 = add 0x212a1e0, 0x212a2e0 [ID=28]

  Initial Opcode index to 438
  Match failed at index 444
  Continuing at 461
  Morphed node: 0x212a3e0: i32 = ADD 0x212a2e0, 0x212a1e0

ISEL: Match complete!
=> 0x212a3e0: i32 = ADD 0x212a2e0, 0x212a1e0

ISEL: Starting pattern match on root node: 0x2128810: i32 = shl 0x2128410, 0x2123d80 [ORD=24] [ID=27]

  Initial Opcode index to 213
  Match failed at index 218
  Continuing at 239
  Morphed node: 0x2128810: i32 = SLLI 0x2128410, 0x2129210 [ORD=24]

ISEL: Match complete!
=> 0x2128810: i32 = SLLI 0x2128410, 0x2129210 [ORD=24]

ISEL: Starting pattern match on root node: 0x2124180: i32 = mul 0x2124380, 0x2123c80 [ORD=18] [ID=26]

  Initial Opcode index to 1114
  Morphed node: 0x2124180: i32 = MUL 0x2123c80, 0x2124380 [ORD=18]

ISEL: Match complete!
=> 0x2124180: i32 = MUL 0x2123c80, 0x2124380 [ORD=18]

ISEL: Starting pattern match on root node: 0x2124680: i32 = shl 0x2124880, 0x2123d80 [ORD=19] [ID=25]

  Initial Opcode index to 213
  Match failed at index 218
  Continuing at 239
  Morphed node: 0x2124680: i32 = SLLI 0x2124880, 0x2129210 [ORD=19]

ISEL: Match complete!
=> 0x2124680: i32 = SLLI 0x2124880, 0x2129210 [ORD=19]

ISEL: Starting pattern match on root node: 0x2128610: i32 = mul 0x2124880, 0x2123c80 [ORD=23] [ID=24]

  Initial Opcode index to 1114
  Morphed node: 0x2128610: i32 = MUL 0x2123c80, 0x2124880 [ORD=23]

ISEL: Match complete!
=> 0x2128610: i32 = MUL 0x2123c80, 0x2124880 [ORD=23]

ISEL: Starting pattern match on root node: 0x212aae0: i32 = REDEFINEISD::Lo 0x212a8e0 [ID=23]

  Initial Opcode index to 972
  Morphed node: 0x212aae0: i32 = ADDI 0x2123d80, 0x212a8e0

ISEL: Match complete!
=> 0x212aae0: i32 = ADDI 0x2123d80, 0x212a8e0

ISEL: Starting pattern match on root node: 0x212a9e0: i32 = REDEFINEISD::Hi 0x2128510 [ID=22]

  Initial Opcode index to 954
  Morphed node: 0x212a9e0: i32 = LUI 0x2128510

ISEL: Match complete!
=> 0x212a9e0: i32 = LUI 0x2128510

ISEL: Starting pattern match on root node: 0x212a6e0: i32 = REDEFINEISD::Lo 0x212a4e0 [ID=21]

  Initial Opcode index to 972
  Morphed node: 0x212a6e0: i32 = ADDI 0x2123d80, 0x212a4e0

ISEL: Match complete!
=> 0x212a6e0: i32 = ADDI 0x2123d80, 0x212a4e0

ISEL: Starting pattern match on root node: 0x212a5e0: i32 = REDEFINEISD::Hi 0x2128c10 [ID=20]

  Initial Opcode index to 954
  Morphed node: 0x212a5e0: i32 = LUI 0x2128c10

ISEL: Match complete!
=> 0x212a5e0: i32 = LUI 0x2128c10

ISEL: Starting pattern match on root node: 0x212a2e0: i32 = REDEFINEISD::Lo 0x2128f10 [ID=19]

  Initial Opcode index to 972
  Morphed node: 0x212a2e0: i32 = ADDI 0x2123d80, 0x2128f10

ISEL: Match complete!
=> 0x212a2e0: i32 = ADDI 0x2123d80, 0x2128f10

ISEL: Starting pattern match on root node: 0x212a1e0: i32 = REDEFINEISD::Hi 0x2123b80 [ID=18]

  Initial Opcode index to 954
  Morphed node: 0x212a1e0: i32 = LUI 0x2123b80

ISEL: Match complete!
=> 0x212a1e0: i32 = LUI 0x2123b80

ISEL: Starting pattern match on root node: 0x2128410: i32,ch = load 0x2106d78, 0x2123e80, 0x2123f80<LD4[%j]> [ORD=21] [ID=17]

  Initial Opcode index to 4
  TypeSwitch[i32] from 9 to 12
  Morphed node: 0x2128410: i32,ch = LW 0x2123e80, 0x2124480, 0x2106d78<Mem:LD4[%j]> [ORD=21]

ISEL: Match complete!
=> 0x2128410: i32,ch = LW 0x2123e80, 0x2124480, 0x2106d78<Mem:LD4[%j]> [ORD=21]

ISEL: Starting pattern match on root node: 0x2124380: i32,ch = load 0x2106d78, 0x2124780, 0x2123f80<LD4[%i]> [ORD=17] [ID=16]

  Initial Opcode index to 4
  TypeSwitch[i32] from 9 to 12
  Morphed node: 0x2124380: i32,ch = LW 0x2124780, 0x2124480, 0x2106d78<Mem:LD4[%i]> [ORD=17]

ISEL: Match complete!
=> 0x2124380: i32,ch = LW 0x2124780, 0x2124480, 0x2106d78<Mem:LD4[%i]> [ORD=17]

ISEL: Starting pattern match on root node: 0x2124880: i32,ch = load 0x2106d78, 0x2124980, 0x2123f80<LD4[%k]> [ORD=16] [ID=15]

  Initial Opcode index to 4
  TypeSwitch[i32] from 9 to 12
  Morphed node: 0x2124880: i32,ch = LW 0x2124980, 0x2124480, 0x2106d78<Mem:LD4[%k]> [ORD=16]

ISEL: Match complete!
=> 0x2124880: i32,ch = LW 0x2124980, 0x2124480, 0x2106d78<Mem:LD4[%k]> [ORD=16]

=> 0x212a8e0: i32 = TargetGlobalAddress<[10 x [10 x i32]]* @a> 0 [TF=3]

=> 0x2128510: i32 = TargetGlobalAddress<[10 x [10 x i32]]* @a> 0 [TF=2]

=> 0x212a4e0: i32 = TargetGlobalAddress<[10 x [10 x i32]]* @b> 0 [TF=3]

=> 0x2128c10: i32 = TargetGlobalAddress<[10 x [10 x i32]]* @b> 0 [TF=2]

=> 0x2128f10: i32 = TargetGlobalAddress<[10 x [10 x i32]]* @c> 0 [TF=3]

=> 0x2123b80: i32 = TargetGlobalAddress<[10 x [10 x i32]]* @c> 0 [TF=2]

=> 0x2129ee0: ch = BasicBlock<for.cond4 0x2120250>

ISEL: Starting pattern match on root node: 0x2123c80: i32 = Constant<40> [ORD=18] [ID=4]

  Initial Opcode index to 994
comparing 0 and 40 and returning value:0
  Skipped scope entry (due to false predicate) at index 996, continuing at 1004
  Morphed node: 0x2123c80: i32 = ADDI 0x2123d80, 0x212cd40 [ORD=18]

ISEL: Match complete!
=> 0x2123c80: i32 = ADDI 0x2123d80, 0x212cd40 [ORD=18]

=> 0x2106d78: ch = EntryToken [ORD=16]

===== Instruction selection ends:
Selected selection DAG: BB#6 'main:for.inc'
SelectionDAG has 51 nodes:
  0x2106d78: ch = EntryToken [ORD=16]

    0x2123d80: <multiple use>
    0x212cd40: i32 = TargetConstant<40>

  0x2123c80: i32 = ADDI 0x2123d80, 0x212cd40 [ORD=18]

    0x212d040: <multiple use>
    0x2124480: <multiple use>
    0x2106d78: <multiple use>
  0x2124880: i32,ch = LW 0x212d040, 0x2124480, 0x2106d78<Mem:LD4[%k]> [ORD=16]

      0x2123d80: <multiple use>
      0x212ce40: i32 = TargetFrameIndex<0>

    0x2124780: i32 = ADDI 0x2123d80, 0x212ce40 [ORD=17]

    0x2124480: <multiple use>
    0x2106d78: <multiple use>
  0x2124380: i32,ch = LW 0x2124780, 0x2124480, 0x2106d78<Mem:LD4[%i]> [ORD=17]

      0x2123d80: <multiple use>
      0x2123f80: i32 = TargetFrameIndex<1>

    0x2123e80: i32 = ADDI 0x2123d80, 0x2123f80 [ORD=21]

    0x2124480: <multiple use>
    0x2106d78: <multiple use>
  0x2128410: i32,ch = LW 0x2123e80, 0x2124480, 0x2106d78<Mem:LD4[%j]> [ORD=21]

    0x2123c80: <multiple use>
    0x2124380: <multiple use>
  0x2124180: i32 = MUL 0x2123c80, 0x2124380 [ORD=18]

    0x2128410: <multiple use>
    0x2129210: <multiple use>
  0x2128810: i32 = SLLI 0x2128410, 0x2129210 [ORD=24]

      0x2128810: <multiple use>
          0x2123c80: <multiple use>
          0x2124880: <multiple use>
        0x2128610: i32 = MUL 0x2123c80, 0x2124880 [ORD=23]

            0x2123d80: <multiple use>
            0x212a4e0: i32 = TargetGlobalAddress<[10 x [10 x i32]]* @b> 0 [TF=3]

          0x212a6e0: i32 = ADDI 0x2123d80, 0x212a4e0

            0x2128c10: i32 = TargetGlobalAddress<[10 x [10 x i32]]* @b> 0 [TF=2]

          0x212a5e0: i32 = LUI 0x2128c10

        0x212a7e0: i32 = ADD 0x212a6e0, 0x212a5e0

      0x2128710: i32 = ADD 0x2128610, 0x212a7e0 [ORD=23]

    0x2128910: i32 = ADD 0x2128810, 0x2128710 [ORD=24]

    0x2124480: <multiple use>
    0x2106d78: <multiple use>
  0x2128a10: i32,ch = LW 0x2128910, 0x2124480, 0x2106d78<Mem:LD4[%arrayidx9]> [ORD=25]

        0x2124880: <multiple use>
        0x2129210: <multiple use>
      0x2124680: i32 = SLLI 0x2124880, 0x2129210 [ORD=19]

        0x2124180: <multiple use>
            0x2123d80: <multiple use>
            0x212a8e0: i32 = TargetGlobalAddress<[10 x [10 x i32]]* @a> 0 [TF=3]

          0x212aae0: i32 = ADDI 0x2123d80, 0x212a8e0

            0x2128510: i32 = TargetGlobalAddress<[10 x [10 x i32]]* @a> 0 [TF=2]

          0x212a9e0: i32 = LUI 0x2128510

        0x212cb40: i32 = ADD 0x212aae0, 0x212a9e0

      0x2124580: i32 = ADD 0x2124180, 0x212cb40 [ORD=18]

    0x2124080: i32 = ADD 0x2124680, 0x2124580 [ORD=19]

    0x2124480: <multiple use>
    0x2106d78: <multiple use>
  0x2124280: i32,ch = LW 0x2124080, 0x2124480, 0x2106d78<Mem:LD4[%arrayidx7]> [ORD=20]

    0x212d040: <multiple use>
    0x2124480: <multiple use>
        0x2128a10: <multiple use>
        0x2124280: <multiple use>
      0x2128b10: i32 = ADD 0x2128a10, 0x2124280 [ORD=26]

        0x2128810: <multiple use>
          0x2124180: <multiple use>
              0x2123d80: <multiple use>
              0x2128f10: i32 = TargetGlobalAddress<[10 x [10 x i32]]* @c> 0 [TF=3]

            0x212a2e0: i32 = ADDI 0x2123d80, 0x2128f10

              0x2123b80: i32 = TargetGlobalAddress<[10 x [10 x i32]]* @c> 0 [TF=2]

            0x212a1e0: i32 = LUI 0x2123b80

          0x212a3e0: i32 = ADD 0x212a2e0, 0x212a1e0

        0x2128d10: i32 = ADD 0x2124180, 0x212a3e0 [ORD=29]

      0x2128e10: i32 = ADD 0x2128810, 0x2128d10 [ORD=30]

      0x2124480: <multiple use>
        0x2124880: <multiple use>
        0x2124380: <multiple use>
        0x2124280: <multiple use>
        0x2128410: <multiple use>
        0x2128a10: <multiple use>
      0x212a0e0: ch = TokenFactor 0x2124880:1, 0x2124380:1, 0x2124280:1, 0x2128410:1, 0x2128a10:1

    0x2129010: ch = SW 0x2128b10, 0x2128e10, 0x2124480, 0x212a0e0<Mem:ST4[%arrayidx11]> [ORD=31]

  0x2129110: i32,ch = LW 0x212d040, 0x2124480, 0x2129010<Mem:LD4[%k]> [ORD=32]

  0x2124480: i32 = TargetConstant<0>

  0x2129210: i32 = TargetConstant<2>

  0x2123d80: i32 = Register %zero

    0x2123d80: <multiple use>
    0x212cf40: i32 = TargetFrameIndex<2>

  0x212d040: i32 = ADDI 0x2123d80, 0x212cf40 [ORD=16]

    0x2129ee0: ch = BasicBlock<for.cond4 0x2120250>

        0x2129110: <multiple use>
        0x212cc40: i32 = TargetConstant<1>

      0x2129ce0: i32 = ADDI 0x2129110, 0x212cc40 [ORD=33]

      0x212d040: <multiple use>
      0x2124480: <multiple use>
      0x2129110: <multiple use>
    0x2129de0: ch = SW 0x2129ce0, 0x212d040, 0x2124480, 0x2129110:1<Mem:ST4[%k]> [ORD=34]

  0x2129fe0: ch = JAL 0x2129ee0, 0x2129de0


********** List Scheduling BB#6 'for.inc' **********
SU(0): 0x2129fe0: ch = JAL 0x2129ee0, 0x2129de0 [ID=0]

  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 0
  Predecessors:
   ch  SU(1): Latency=1

SU(1): 0x2129de0: ch = SW 0x2129ce0, 0x212d040, 0x2124480, 0x2129110:1<Mem:ST4[%k]> [ORD=34] [ID=1]

  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 1
  Predecessors:
   val SU(34): Latency=1
   val SU(33): Latency=1
   ch  SU(2): Latency=1
  Successors:
   ch  SU(0): Latency=1

SU(2): 0x2129110: i32,ch = LW 0x212d040, 0x2124480, 0x2129010<Mem:LD4[%k]> [ORD=32] [ID=2]

  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 1
  Latency            : 1
  Depth              : 8
  Height             : 3
  Predecessors:
   val SU(33): Latency=1
   ch  SU(3): Latency=1
  Successors:
   ch  SU(1): Latency=1
   val SU(34): Latency=1

SU(3): 0x2129010: ch = SW 0x2128b10, 0x2128e10, 0x2124480, 0x212a0e0<Mem:ST4[%arrayidx11]> [ORD=31] [ID=3]

  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 4
  Predecessors:
   val SU(32): Latency=1
   val SU(27): Latency=1
   ch  SU(4): Latency=0
  Successors:
   ch  SU(2): Latency=1

SU(4): 0x212a0e0: ch = TokenFactor 0x2124880:1, 0x2124380:1, 0x2124280:1, 0x2128410:1, 0x2128a10:1 [ID=4]

  # preds left       : 5
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 6
  Height             : 4
  Predecessors:
   ch  SU(26): Latency=1
   ch  SU(24): Latency=1
   ch  SU(16): Latency=1
   ch  SU(14): Latency=1
   ch  SU(5): Latency=1
  Successors:
   ch  SU(3): Latency=0

SU(5): 0x2128a10: i32,ch = LW 0x2128910, 0x2124480, 0x2106d78<Mem:LD4[%arrayidx9]> [ORD=25] [ID=5]

  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 1
  Latency            : 1
  Depth              : 5
  Height             : 6
  Predecessors:
   val SU(6): Latency=1
  Successors:
   ch  SU(4): Latency=1
   val SU(32): Latency=1

SU(6): 0x2128910: i32 = ADD 0x2128810, 0x2128710 [ORD=24] [ID=6]

  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 4
  Height             : 7
  Predecessors:
   val SU(13): Latency=1
   val SU(7): Latency=1
  Successors:
   val SU(5): Latency=1

SU(7): 0x2128710: i32 = ADD 0x2128610, 0x212a7e0 [ORD=23] [ID=7]

  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 3
  Height             : 8
  Predecessors:
   val SU(11): Latency=1
   val SU(8): Latency=1
  Successors:
   val SU(6): Latency=1

SU(8): 0x212a7e0: i32 = ADD 0x212a6e0, 0x212a5e0 [ID=8]

  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 1
  Height             : 9
  Predecessors:
   val SU(10): Latency=1
   val SU(9): Latency=1
  Successors:
   val SU(7): Latency=1

SU(9): 0x212a5e0: i32 = LUI 0x2128c10 [ID=9]

  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 0
  Height             : 10
  Successors:
   val SU(8): Latency=1

SU(10): 0x212a6e0: i32 = ADDI 0x2123d80, 0x212a4e0 [ID=10]

  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 0
  Height             : 10
  Successors:
   val SU(8): Latency=1

SU(11): 0x2128610: i32 = MUL 0x2123c80, 0x2124880 [ORD=23] [ID=11]

  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 2
  Height             : 9
  Predecessors:
   val SU(12): Latency=1
   val SU(26): Latency=1
  Successors:
   val SU(7): Latency=1

SU(12): 0x2123c80: i32 = ADDI 0x2123d80, 0x212cd40 [ORD=18] [ID=12]

  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 1
  Latency            : 1
  Depth              : 0
  Height             : 10
  Successors:
   val SU(11): Latency=1
   val SU(22): Latency=1

SU(13): 0x2128810: i32 = SLLI 0x2128410, 0x2129210 [ORD=24] [ID=13]

  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 1
  Latency            : 1
  Depth              : 2
  Height             : 8
  Predecessors:
   val SU(14): Latency=1
  Successors:
   val SU(6): Latency=1
   val SU(27): Latency=1

SU(14): 0x2128410: i32,ch = LW 0x2123e80, 0x2124480, 0x2106d78<Mem:LD4[%j]> [ORD=21] [ID=14]

  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 1
  Latency            : 1
  Depth              : 1
  Height             : 9
  Predecessors:
   val SU(15): Latency=1
  Successors:
   ch  SU(4): Latency=1
   val SU(13): Latency=1

SU(15): 0x2123e80: i32 = ADDI 0x2123d80, 0x2123f80 [ORD=21] [ID=15]

  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 0
  Height             : 10
  Successors:
   val SU(14): Latency=1

SU(16): 0x2124280: i32,ch = LW 0x2124080, 0x2124480, 0x2106d78<Mem:LD4[%arrayidx7]> [ORD=20] [ID=16]

  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 1
  Latency            : 1
  Depth              : 5
  Height             : 6
  Predecessors:
   val SU(17): Latency=1
  Successors:
   ch  SU(4): Latency=1
   val SU(32): Latency=1

SU(17): 0x2124080: i32 = ADD 0x2124680, 0x2124580 [ORD=19] [ID=17]

  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 4
  Height             : 7
  Predecessors:
   val SU(23): Latency=1
   val SU(18): Latency=1
  Successors:
   val SU(16): Latency=1

SU(18): 0x2124580: i32 = ADD 0x2124180, 0x212cb40 [ORD=18] [ID=18]

  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 3
  Height             : 8
  Predecessors:
   val SU(22): Latency=1
   val SU(19): Latency=1
  Successors:
   val SU(17): Latency=1

SU(19): 0x212cb40: i32 = ADD 0x212aae0, 0x212a9e0 [ID=19]

  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 1
  Height             : 9
  Predecessors:
   val SU(21): Latency=1
   val SU(20): Latency=1
  Successors:
   val SU(18): Latency=1

SU(20): 0x212a9e0: i32 = LUI 0x2128510 [ID=20]

  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 0
  Height             : 10
  Successors:
   val SU(19): Latency=1

SU(21): 0x212aae0: i32 = ADDI 0x2123d80, 0x212a8e0 [ID=21]

  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 0
  Height             : 10
  Successors:
   val SU(19): Latency=1

SU(22): 0x2124180: i32 = MUL 0x2123c80, 0x2124380 [ORD=18] [ID=22]

  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 1
  Latency            : 1
  Depth              : 2
  Height             : 9
  Predecessors:
   val SU(12): Latency=1
   val SU(24): Latency=1
  Successors:
   val SU(18): Latency=1
   val SU(28): Latency=1

SU(23): 0x2124680: i32 = SLLI 0x2124880, 0x2129210 [ORD=19] [ID=23]

  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 2
  Height             : 8
  Predecessors:
   val SU(26): Latency=1
  Successors:
   val SU(17): Latency=1

SU(24): 0x2124380: i32,ch = LW 0x2124780, 0x2124480, 0x2106d78<Mem:LD4[%i]> [ORD=17] [ID=24]

  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 1
  Latency            : 1
  Depth              : 1
  Height             : 10
  Predecessors:
   val SU(25): Latency=1
  Successors:
   ch  SU(4): Latency=1
   val SU(22): Latency=1

SU(25): 0x2124780: i32 = ADDI 0x2123d80, 0x212ce40 [ORD=17] [ID=25]

  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 0
  Height             : 11
  Successors:
   val SU(24): Latency=1

SU(26): 0x2124880: i32,ch = LW 0x212d040, 0x2124480, 0x2106d78<Mem:LD4[%k]> [ORD=16] [ID=26]

  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 1
  Latency            : 1
  Depth              : 1
  Height             : 10
  Predecessors:
   val SU(33): Latency=1
  Successors:
   ch  SU(4): Latency=1
   val SU(11): Latency=1
   val SU(23): Latency=1

SU(27): 0x2128e10: i32 = ADD 0x2128810, 0x2128d10 [ORD=30] [ID=27]

  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 4
  Height             : 5
  Predecessors:
   val SU(13): Latency=1
   val SU(28): Latency=1
  Successors:
   val SU(3): Latency=1

SU(28): 0x2128d10: i32 = ADD 0x2124180, 0x212a3e0 [ORD=29] [ID=28]

  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 3
  Height             : 6
  Predecessors:
   val SU(22): Latency=1
   val SU(29): Latency=1
  Successors:
   val SU(27): Latency=1

SU(29): 0x212a3e0: i32 = ADD 0x212a2e0, 0x212a1e0 [ID=29]

  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 1
  Height             : 7
  Predecessors:
   val SU(31): Latency=1
   val SU(30): Latency=1
  Successors:
   val SU(28): Latency=1

SU(30): 0x212a1e0: i32 = LUI 0x2123b80 [ID=30]

  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 0
  Height             : 8
  Successors:
   val SU(29): Latency=1

SU(31): 0x212a2e0: i32 = ADDI 0x2123d80, 0x2128f10 [ID=31]

  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 0
  Height             : 8
  Successors:
   val SU(29): Latency=1

SU(32): 0x2128b10: i32 = ADD 0x2128a10, 0x2124280 [ORD=26] [ID=32]

  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 6
  Height             : 5
  Predecessors:
   val SU(5): Latency=1
   val SU(16): Latency=1
  Successors:
   val SU(3): Latency=1

SU(33): 0x212d040: i32 = ADDI 0x2123d80, 0x212cf40 [ORD=16] [ID=33]

  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 1
  Latency            : 1
  Depth              : 0
  Height             : 11
  Successors:
   val SU(1): Latency=1
   val SU(2): Latency=1
   val SU(26): Latency=1

SU(34): 0x2129ce0: i32 = ADDI 0x2129110, 0x212cc40 [ORD=33] [ID=34]

  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 1
  Latency            : 1
  Depth              : 9
  Height             : 2
  Predecessors:
   val SU(2): Latency=1
  Successors:
   val SU(1): Latency=1


Examining Available:
Height 0: SU(0): 0x2129fe0: ch = JAL 0x2129ee0, 0x2129de0 [ID=0]


*** Scheduling [0]: SU(0): 0x2129fe0: ch = JAL 0x2129ee0, 0x2129de0 [ID=0]


Examining Available:
Height 1: SU(1): 0x2129de0: ch = SW 0x2129ce0, 0x212d040, 0x2124480, 0x2129110:1<Mem:ST4[%k]> [ORD=34] [ID=1]


*** Scheduling [1]: SU(1): 0x2129de0: ch = SW 0x2129ce0, 0x212d040, 0x2124480, 0x2129110:1<Mem:ST4[%k]> [ORD=34] [ID=1]


Examining Available:
Height 2: SU(34): 0x2129ce0: i32 = ADDI 0x2129110, 0x212cc40 [ORD=33] [ID=34]


*** Scheduling [2]: SU(34): 0x2129ce0: i32 = ADDI 0x2129110, 0x212cc40 [ORD=33] [ID=34]


Examining Available:
Height 3: SU(2): 0x2129110: i32,ch = LW 0x212d040, 0x2124480, 0x2129010<Mem:LD4[%k]> [ORD=32] [ID=2]


*** Scheduling [3]: SU(2): 0x2129110: i32,ch = LW 0x212d040, 0x2124480, 0x2129010<Mem:LD4[%k]> [ORD=32] [ID=2]


Examining Available:
Height 4: SU(3): 0x2129010: ch = SW 0x2128b10, 0x2128e10, 0x2124480, 0x212a0e0<Mem:ST4[%arrayidx11]> [ORD=31] [ID=3]


*** Scheduling [4]: SU(3): 0x2129010: ch = SW 0x2128b10, 0x2128e10, 0x2124480, 0x212a0e0<Mem:ST4[%arrayidx11]> [ORD=31] [ID=3]


Examining Available:
Height 4: SU(4): 0x212a0e0: ch = TokenFactor 0x2124880:1, 0x2124380:1, 0x2124280:1, 0x2128410:1, 0x2128a10:1 [ID=4]

Height 5: SU(27): 0x2128e10: i32 = ADD 0x2128810, 0x2128d10 [ORD=30] [ID=27]

Height 5: SU(32): 0x2128b10: i32 = ADD 0x2128a10, 0x2124280 [ORD=26] [ID=32]


*** Scheduling [5]: SU(4): 0x212a0e0: ch = TokenFactor 0x2124880:1, 0x2124380:1, 0x2124280:1, 0x2128410:1, 0x2128a10:1 [ID=4]


Examining Available:
Height 5: SU(27): 0x2128e10: i32 = ADD 0x2128810, 0x2128d10 [ORD=30] [ID=27]

Height 5: SU(32): 0x2128b10: i32 = ADD 0x2128a10, 0x2124280 [ORD=26] [ID=32]


*** Scheduling [6]: SU(27): 0x2128e10: i32 = ADD 0x2128810, 0x2128d10 [ORD=30] [ID=27]


Examining Available:
Height 7: SU(28): 0x2128d10: i32 = ADD 0x2124180, 0x212a3e0 [ORD=29] [ID=28]

Height 5: SU(32): 0x2128b10: i32 = ADD 0x2128a10, 0x2124280 [ORD=26] [ID=32]


*** Scheduling [7]: SU(28): 0x2128d10: i32 = ADD 0x2124180, 0x212a3e0 [ORD=29] [ID=28]


Examining Available:
Height 8: SU(29): 0x212a3e0: i32 = ADD 0x212a2e0, 0x212a1e0 [ID=29]

Height 5: SU(32): 0x2128b10: i32 = ADD 0x2128a10, 0x2124280 [ORD=26] [ID=32]


*** Scheduling [8]: SU(29): 0x212a3e0: i32 = ADD 0x212a2e0, 0x212a1e0 [ID=29]


Examining Available:
Height 9: SU(31): 0x212a2e0: i32 = ADDI 0x2123d80, 0x2128f10 [ID=31]

Height 9: SU(30): 0x212a1e0: i32 = LUI 0x2123b80 [ID=30]

Height 5: SU(32): 0x2128b10: i32 = ADD 0x2128a10, 0x2124280 [ORD=26] [ID=32]


*** Scheduling [9]: SU(31): 0x212a2e0: i32 = ADDI 0x2123d80, 0x2128f10 [ID=31]


Examining Available:
Height 9: SU(30): 0x212a1e0: i32 = LUI 0x2123b80 [ID=30]

Height 5: SU(32): 0x2128b10: i32 = ADD 0x2128a10, 0x2124280 [ORD=26] [ID=32]


*** Scheduling [10]: SU(30): 0x212a1e0: i32 = LUI 0x2123b80 [ID=30]


Examining Available:
Height 5: SU(32): 0x2128b10: i32 = ADD 0x2128a10, 0x2124280 [ORD=26] [ID=32]


*** Scheduling [11]: SU(32): 0x2128b10: i32 = ADD 0x2128a10, 0x2124280 [ORD=26] [ID=32]


Examining Available:
Height 12: SU(5): 0x2128a10: i32,ch = LW 0x2128910, 0x2124480, 0x2106d78<Mem:LD4[%arrayidx9]> [ORD=25] [ID=5]

Height 12: SU(16): 0x2124280: i32,ch = LW 0x2124080, 0x2124480, 0x2106d78<Mem:LD4[%arrayidx7]> [ORD=20] [ID=16]


*** Scheduling [12]: SU(5): 0x2128a10: i32,ch = LW 0x2128910, 0x2124480, 0x2106d78<Mem:LD4[%arrayidx9]> [ORD=25] [ID=5]


Examining Available:
Height 13: SU(6): 0x2128910: i32 = ADD 0x2128810, 0x2128710 [ORD=24] [ID=6]

Height 12: SU(16): 0x2124280: i32,ch = LW 0x2124080, 0x2124480, 0x2106d78<Mem:LD4[%arrayidx7]> [ORD=20] [ID=16]


*** Scheduling [13]: SU(6): 0x2128910: i32 = ADD 0x2128810, 0x2128710 [ORD=24] [ID=6]


Examining Available:
Height 14: SU(13): 0x2128810: i32 = SLLI 0x2128410, 0x2129210 [ORD=24] [ID=13]

Height 14: SU(7): 0x2128710: i32 = ADD 0x2128610, 0x212a7e0 [ORD=23] [ID=7]

Height 12: SU(16): 0x2124280: i32,ch = LW 0x2124080, 0x2124480, 0x2106d78<Mem:LD4[%arrayidx7]> [ORD=20] [ID=16]


*** Scheduling [14]: SU(13): 0x2128810: i32 = SLLI 0x2128410, 0x2129210 [ORD=24] [ID=13]


Examining Available:
Height 14: SU(7): 0x2128710: i32 = ADD 0x2128610, 0x212a7e0 [ORD=23] [ID=7]

Height 15: SU(14): 0x2128410: i32,ch = LW 0x2123e80, 0x2124480, 0x2106d78<Mem:LD4[%j]> [ORD=21] [ID=14]

Height 12: SU(16): 0x2124280: i32,ch = LW 0x2124080, 0x2124480, 0x2106d78<Mem:LD4[%arrayidx7]> [ORD=20] [ID=16]


*** Scheduling [15]: SU(7): 0x2128710: i32 = ADD 0x2128610, 0x212a7e0 [ORD=23] [ID=7]


Examining Available:
Height 16: SU(8): 0x212a7e0: i32 = ADD 0x212a6e0, 0x212a5e0 [ID=8]

Height 16: SU(11): 0x2128610: i32 = MUL 0x2123c80, 0x2124880 [ORD=23] [ID=11]

Height 15: SU(14): 0x2128410: i32,ch = LW 0x2123e80, 0x2124480, 0x2106d78<Mem:LD4[%j]> [ORD=21] [ID=14]

Height 12: SU(16): 0x2124280: i32,ch = LW 0x2124080, 0x2124480, 0x2106d78<Mem:LD4[%arrayidx7]> [ORD=20] [ID=16]


*** Scheduling [16]: SU(8): 0x212a7e0: i32 = ADD 0x212a6e0, 0x212a5e0 [ID=8]


Examining Available:
Height 17: SU(10): 0x212a6e0: i32 = ADDI 0x2123d80, 0x212a4e0 [ID=10]

Height 17: SU(9): 0x212a5e0: i32 = LUI 0x2128c10 [ID=9]

Height 16: SU(11): 0x2128610: i32 = MUL 0x2123c80, 0x2124880 [ORD=23] [ID=11]

Height 15: SU(14): 0x2128410: i32,ch = LW 0x2123e80, 0x2124480, 0x2106d78<Mem:LD4[%j]> [ORD=21] [ID=14]

Height 12: SU(16): 0x2124280: i32,ch = LW 0x2124080, 0x2124480, 0x2106d78<Mem:LD4[%arrayidx7]> [ORD=20] [ID=16]


*** Scheduling [17]: SU(10): 0x212a6e0: i32 = ADDI 0x2123d80, 0x212a4e0 [ID=10]


Examining Available:
Height 17: SU(9): 0x212a5e0: i32 = LUI 0x2128c10 [ID=9]

Height 16: SU(11): 0x2128610: i32 = MUL 0x2123c80, 0x2124880 [ORD=23] [ID=11]

Height 15: SU(14): 0x2128410: i32,ch = LW 0x2123e80, 0x2124480, 0x2106d78<Mem:LD4[%j]> [ORD=21] [ID=14]

Height 12: SU(16): 0x2124280: i32,ch = LW 0x2124080, 0x2124480, 0x2106d78<Mem:LD4[%arrayidx7]> [ORD=20] [ID=16]


*** Scheduling [18]: SU(9): 0x212a5e0: i32 = LUI 0x2128c10 [ID=9]


Examining Available:
Height 16: SU(11): 0x2128610: i32 = MUL 0x2123c80, 0x2124880 [ORD=23] [ID=11]

Height 15: SU(14): 0x2128410: i32,ch = LW 0x2123e80, 0x2124480, 0x2106d78<Mem:LD4[%j]> [ORD=21] [ID=14]

Height 12: SU(16): 0x2124280: i32,ch = LW 0x2124080, 0x2124480, 0x2106d78<Mem:LD4[%arrayidx7]> [ORD=20] [ID=16]


*** Scheduling [19]: SU(11): 0x2128610: i32 = MUL 0x2123c80, 0x2124880 [ORD=23] [ID=11]


Examining Available:
Height 15: SU(14): 0x2128410: i32,ch = LW 0x2123e80, 0x2124480, 0x2106d78<Mem:LD4[%j]> [ORD=21] [ID=14]

Height 12: SU(16): 0x2124280: i32,ch = LW 0x2124080, 0x2124480, 0x2106d78<Mem:LD4[%arrayidx7]> [ORD=20] [ID=16]


*** Scheduling [20]: SU(14): 0x2128410: i32,ch = LW 0x2123e80, 0x2124480, 0x2106d78<Mem:LD4[%j]> [ORD=21] [ID=14]


Examining Available:
Height 21: SU(15): 0x2123e80: i32 = ADDI 0x2123d80, 0x2123f80 [ORD=21] [ID=15]

Height 12: SU(16): 0x2124280: i32,ch = LW 0x2124080, 0x2124480, 0x2106d78<Mem:LD4[%arrayidx7]> [ORD=20] [ID=16]


*** Scheduling [21]: SU(15): 0x2123e80: i32 = ADDI 0x2123d80, 0x2123f80 [ORD=21] [ID=15]


Examining Available:
Height 12: SU(16): 0x2124280: i32,ch = LW 0x2124080, 0x2124480, 0x2106d78<Mem:LD4[%arrayidx7]> [ORD=20] [ID=16]


*** Scheduling [22]: SU(16): 0x2124280: i32,ch = LW 0x2124080, 0x2124480, 0x2106d78<Mem:LD4[%arrayidx7]> [ORD=20] [ID=16]


Examining Available:
Height 23: SU(17): 0x2124080: i32 = ADD 0x2124680, 0x2124580 [ORD=19] [ID=17]


*** Scheduling [23]: SU(17): 0x2124080: i32 = ADD 0x2124680, 0x2124580 [ORD=19] [ID=17]


Examining Available:
Height 24: SU(23): 0x2124680: i32 = SLLI 0x2124880, 0x2129210 [ORD=19] [ID=23]

Height 24: SU(18): 0x2124580: i32 = ADD 0x2124180, 0x212cb40 [ORD=18] [ID=18]


*** Scheduling [24]: SU(23): 0x2124680: i32 = SLLI 0x2124880, 0x2129210 [ORD=19] [ID=23]


Examining Available:
Height 24: SU(18): 0x2124580: i32 = ADD 0x2124180, 0x212cb40 [ORD=18] [ID=18]

Height 25: SU(26): 0x2124880: i32,ch = LW 0x212d040, 0x2124480, 0x2106d78<Mem:LD4[%k]> [ORD=16] [ID=26]


*** Scheduling [25]: SU(18): 0x2124580: i32 = ADD 0x2124180, 0x212cb40 [ORD=18] [ID=18]


Examining Available:
Height 26: SU(19): 0x212cb40: i32 = ADD 0x212aae0, 0x212a9e0 [ID=19]

Height 26: SU(22): 0x2124180: i32 = MUL 0x2123c80, 0x2124380 [ORD=18] [ID=22]

Height 25: SU(26): 0x2124880: i32,ch = LW 0x212d040, 0x2124480, 0x2106d78<Mem:LD4[%k]> [ORD=16] [ID=26]


*** Scheduling [26]: SU(19): 0x212cb40: i32 = ADD 0x212aae0, 0x212a9e0 [ID=19]


Examining Available:
Height 27: SU(21): 0x212aae0: i32 = ADDI 0x2123d80, 0x212a8e0 [ID=21]

Height 27: SU(20): 0x212a9e0: i32 = LUI 0x2128510 [ID=20]

Height 26: SU(22): 0x2124180: i32 = MUL 0x2123c80, 0x2124380 [ORD=18] [ID=22]

Height 25: SU(26): 0x2124880: i32,ch = LW 0x212d040, 0x2124480, 0x2106d78<Mem:LD4[%k]> [ORD=16] [ID=26]


*** Scheduling [27]: SU(21): 0x212aae0: i32 = ADDI 0x2123d80, 0x212a8e0 [ID=21]


Examining Available:
Height 27: SU(20): 0x212a9e0: i32 = LUI 0x2128510 [ID=20]

Height 26: SU(22): 0x2124180: i32 = MUL 0x2123c80, 0x2124380 [ORD=18] [ID=22]

Height 25: SU(26): 0x2124880: i32,ch = LW 0x212d040, 0x2124480, 0x2106d78<Mem:LD4[%k]> [ORD=16] [ID=26]


*** Scheduling [28]: SU(20): 0x212a9e0: i32 = LUI 0x2128510 [ID=20]


Examining Available:
Height 26: SU(22): 0x2124180: i32 = MUL 0x2123c80, 0x2124380 [ORD=18] [ID=22]

Height 25: SU(26): 0x2124880: i32,ch = LW 0x212d040, 0x2124480, 0x2106d78<Mem:LD4[%k]> [ORD=16] [ID=26]


*** Scheduling [29]: SU(22): 0x2124180: i32 = MUL 0x2123c80, 0x2124380 [ORD=18] [ID=22]


Examining Available:
Height 30: SU(12): 0x2123c80: i32 = ADDI 0x2123d80, 0x212cd40 [ORD=18] [ID=12]

Height 30: SU(24): 0x2124380: i32,ch = LW 0x2124780, 0x2124480, 0x2106d78<Mem:LD4[%i]> [ORD=17] [ID=24]

Height 25: SU(26): 0x2124880: i32,ch = LW 0x212d040, 0x2124480, 0x2106d78<Mem:LD4[%k]> [ORD=16] [ID=26]


*** Scheduling [30]: SU(12): 0x2123c80: i32 = ADDI 0x2123d80, 0x212cd40 [ORD=18] [ID=12]


Examining Available:
Height 30: SU(24): 0x2124380: i32,ch = LW 0x2124780, 0x2124480, 0x2106d78<Mem:LD4[%i]> [ORD=17] [ID=24]

Height 25: SU(26): 0x2124880: i32,ch = LW 0x212d040, 0x2124480, 0x2106d78<Mem:LD4[%k]> [ORD=16] [ID=26]


*** Scheduling [31]: SU(24): 0x2124380: i32,ch = LW 0x2124780, 0x2124480, 0x2106d78<Mem:LD4[%i]> [ORD=17] [ID=24]


Examining Available:
Height 32: SU(25): 0x2124780: i32 = ADDI 0x2123d80, 0x212ce40 [ORD=17] [ID=25]

Height 25: SU(26): 0x2124880: i32,ch = LW 0x212d040, 0x2124480, 0x2106d78<Mem:LD4[%k]> [ORD=16] [ID=26]


*** Scheduling [32]: SU(25): 0x2124780: i32 = ADDI 0x2123d80, 0x212ce40 [ORD=17] [ID=25]


Examining Available:
Height 25: SU(26): 0x2124880: i32,ch = LW 0x212d040, 0x2124480, 0x2106d78<Mem:LD4[%k]> [ORD=16] [ID=26]


*** Scheduling [33]: SU(26): 0x2124880: i32,ch = LW 0x212d040, 0x2124480, 0x2106d78<Mem:LD4[%k]> [ORD=16] [ID=26]


Examining Available:
Height 34: SU(33): 0x212d040: i32 = ADDI 0x2123d80, 0x212cf40 [ORD=16] [ID=33]


*** Scheduling [34]: SU(33): 0x212d040: i32 = ADDI 0x2123d80, 0x212cf40 [ORD=16] [ID=33]

*** Final schedule ***
SU(33): 0x212d040: i32 = ADDI 0x2123d80, 0x212cf40 [ORD=16] [ID=33]

SU(26): 0x2124880: i32,ch = LW 0x212d040, 0x2124480, 0x2106d78<Mem:LD4[%k]> [ORD=16] [ID=26]

SU(25): 0x2124780: i32 = ADDI 0x2123d80, 0x212ce40 [ORD=17] [ID=25]

SU(24): 0x2124380: i32,ch = LW 0x2124780, 0x2124480, 0x2106d78<Mem:LD4[%i]> [ORD=17] [ID=24]

SU(12): 0x2123c80: i32 = ADDI 0x2123d80, 0x212cd40 [ORD=18] [ID=12]

SU(22): 0x2124180: i32 = MUL 0x2123c80, 0x2124380 [ORD=18] [ID=22]

SU(20): 0x212a9e0: i32 = LUI 0x2128510 [ID=20]

SU(21): 0x212aae0: i32 = ADDI 0x2123d80, 0x212a8e0 [ID=21]

SU(19): 0x212cb40: i32 = ADD 0x212aae0, 0x212a9e0 [ID=19]

SU(18): 0x2124580: i32 = ADD 0x2124180, 0x212cb40 [ORD=18] [ID=18]

SU(23): 0x2124680: i32 = SLLI 0x2124880, 0x2129210 [ORD=19] [ID=23]

SU(17): 0x2124080: i32 = ADD 0x2124680, 0x2124580 [ORD=19] [ID=17]

SU(16): 0x2124280: i32,ch = LW 0x2124080, 0x2124480, 0x2106d78<Mem:LD4[%arrayidx7]> [ORD=20] [ID=16]

SU(15): 0x2123e80: i32 = ADDI 0x2123d80, 0x2123f80 [ORD=21] [ID=15]

SU(14): 0x2128410: i32,ch = LW 0x2123e80, 0x2124480, 0x2106d78<Mem:LD4[%j]> [ORD=21] [ID=14]

SU(11): 0x2128610: i32 = MUL 0x2123c80, 0x2124880 [ORD=23] [ID=11]

SU(9): 0x212a5e0: i32 = LUI 0x2128c10 [ID=9]

SU(10): 0x212a6e0: i32 = ADDI 0x2123d80, 0x212a4e0 [ID=10]

SU(8): 0x212a7e0: i32 = ADD 0x212a6e0, 0x212a5e0 [ID=8]

SU(7): 0x2128710: i32 = ADD 0x2128610, 0x212a7e0 [ORD=23] [ID=7]

SU(13): 0x2128810: i32 = SLLI 0x2128410, 0x2129210 [ORD=24] [ID=13]

SU(6): 0x2128910: i32 = ADD 0x2128810, 0x2128710 [ORD=24] [ID=6]

SU(5): 0x2128a10: i32,ch = LW 0x2128910, 0x2124480, 0x2106d78<Mem:LD4[%arrayidx9]> [ORD=25] [ID=5]

SU(32): 0x2128b10: i32 = ADD 0x2128a10, 0x2124280 [ORD=26] [ID=32]

SU(30): 0x212a1e0: i32 = LUI 0x2123b80 [ID=30]

SU(31): 0x212a2e0: i32 = ADDI 0x2123d80, 0x2128f10 [ID=31]

SU(29): 0x212a3e0: i32 = ADD 0x212a2e0, 0x212a1e0 [ID=29]

SU(28): 0x2128d10: i32 = ADD 0x2124180, 0x212a3e0 [ORD=29] [ID=28]

SU(27): 0x2128e10: i32 = ADD 0x2128810, 0x2128d10 [ORD=30] [ID=27]

SU(4): 0x212a0e0: ch = TokenFactor 0x2124880:1, 0x2124380:1, 0x2124280:1, 0x2128410:1, 0x2128a10:1 [ID=4]

SU(3): 0x2129010: ch = SW 0x2128b10, 0x2128e10, 0x2124480, 0x212a0e0<Mem:ST4[%arrayidx11]> [ORD=31] [ID=3]

SU(2): 0x2129110: i32,ch = LW 0x212d040, 0x2124480, 0x2129010<Mem:LD4[%k]> [ORD=32] [ID=2]

SU(34): 0x2129ce0: i32 = ADDI 0x2129110, 0x212cc40 [ORD=33] [ID=34]

SU(1): 0x2129de0: ch = SW 0x2129ce0, 0x212d040, 0x2124480, 0x2129110:1<Mem:ST4[%k]> [ORD=34] [ID=1]

SU(0): 0x2129fe0: ch = JAL 0x2129ee0, 0x2129de0 [ID=0]


Total amount of phi nodes to update: 0
# Machine code for function main: SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]

0B	BB#0: derived from LLVM BB %entry
16B		%vreg0<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg0
32B		SW %zero, %vreg0<kill>, 0; mem:ST4[%i] GR32Bit:%vreg0
	    Successors according to CFG: BB#1

48B	BB#1: derived from LLVM BB %for.cond
	    Predecessors according to CFG: BB#0 BB#8
64B		%vreg1<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg1
80B		%vreg2<def> = LW %vreg1<kill>, 0; mem:LD4[%i] GR32Bit:%vreg2,%vreg1
96B		%vreg3<def> = ADDI %zero, 9; GR32Bit:%vreg3
112B		BGT <BB#9>, %vreg2<kill>, %vreg3<kill>; GR32Bit:%vreg2,%vreg3
128B		JAL <BB#2>
	    Successors according to CFG: BB#2(124) BB#9(4)

144B	BB#2: derived from LLVM BB %for.body
	    Predecessors according to CFG: BB#1
160B		%vreg4<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg4
176B		SW %zero, %vreg4<kill>, 0; mem:ST4[%j] GR32Bit:%vreg4
	    Successors according to CFG: BB#3

192B	BB#3: derived from LLVM BB %for.cond1
	    Predecessors according to CFG: BB#2 BB#7
208B		%vreg5<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg5
224B		%vreg6<def> = LW %vreg5<kill>, 0; mem:LD4[%j] GR32Bit:%vreg6,%vreg5
240B		%vreg7<def> = ADDI %zero, 9; GR32Bit:%vreg7
256B		BGT <BB#8>, %vreg6<kill>, %vreg7<kill>; GR32Bit:%vreg6,%vreg7
272B		JAL <BB#4>
	    Successors according to CFG: BB#4(124) BB#8(4)

288B	BB#4: derived from LLVM BB %for.body3
	    Predecessors according to CFG: BB#3
304B		%vreg11<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg11
320B		SW %zero, %vreg11<kill>, 0; mem:ST4[%k] GR32Bit:%vreg11
	    Successors according to CFG: BB#5

336B	BB#5: derived from LLVM BB %for.cond4
	    Predecessors according to CFG: BB#4 BB#6
352B		%vreg12<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg12
368B		%vreg13<def> = LW %vreg12<kill>, 0; mem:LD4[%k] GR32Bit:%vreg13,%vreg12
384B		%vreg14<def> = ADDI %zero, 9; GR32Bit:%vreg14
400B		BGT <BB#7>, %vreg13<kill>, %vreg14<kill>; GR32Bit:%vreg13,%vreg14
416B		JAL <BB#6>
	    Successors according to CFG: BB#6(124) BB#7(4)

432B	BB#6: derived from LLVM BB %for.inc
	    Predecessors according to CFG: BB#5
448B		%vreg18<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg18
464B		%vreg19<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg19,%vreg18
480B		%vreg20<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg20
496B		%vreg21<def> = LW %vreg20<kill>, 0; mem:LD4[%i] GR32Bit:%vreg21,%vreg20
512B		%vreg22<def> = ADDI %zero, 40; GR32Bit:%vreg22
528B		%vreg23<def> = MUL %vreg22, %vreg21<kill>; GR32Bit:%vreg23,%vreg22,%vreg21
544B		%vreg24<def> = LUI <ga:@a>[TF=2]; GR32Bit:%vreg24
560B		%vreg25<def> = ADDI %zero, <ga:@a>[TF=3]; GR32Bit:%vreg25
576B		%vreg26<def> = ADD %vreg25<kill>, %vreg24<kill>; GR32Bit:%vreg26,%vreg25,%vreg24
592B		%vreg27<def> = ADD %vreg23, %vreg26<kill>; GR32Bit:%vreg27,%vreg23,%vreg26
608B		%vreg28<def> = SLLI %vreg19, 2; GR32Bit:%vreg28,%vreg19
624B		%vreg29<def> = ADD %vreg28<kill>, %vreg27<kill>; GR32Bit:%vreg29,%vreg28,%vreg27
640B		%vreg30<def> = LW %vreg29<kill>, 0; mem:LD4[%arrayidx7] GR32Bit:%vreg30,%vreg29
656B		%vreg31<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg31
672B		%vreg32<def> = LW %vreg31<kill>, 0; mem:LD4[%j] GR32Bit:%vreg32,%vreg31
688B		%vreg33<def> = MUL %vreg22, %vreg19; GR32Bit:%vreg33,%vreg22,%vreg19
704B		%vreg34<def> = LUI <ga:@b>[TF=2]; GR32Bit:%vreg34
720B		%vreg35<def> = ADDI %zero, <ga:@b>[TF=3]; GR32Bit:%vreg35
736B		%vreg36<def> = ADD %vreg35<kill>, %vreg34<kill>; GR32Bit:%vreg36,%vreg35,%vreg34
752B		%vreg37<def> = ADD %vreg33<kill>, %vreg36<kill>; GR32Bit:%vreg37,%vreg33,%vreg36
768B		%vreg38<def> = SLLI %vreg32<kill>, 2; GR32Bit:%vreg38,%vreg32
784B		%vreg39<def> = ADD %vreg38, %vreg37<kill>; GR32Bit:%vreg39,%vreg38,%vreg37
800B		%vreg40<def> = LW %vreg39<kill>, 0; mem:LD4[%arrayidx9] GR32Bit:%vreg40,%vreg39
816B		%vreg41<def> = ADD %vreg40<kill>, %vreg30<kill>; GR32Bit:%vreg41,%vreg40,%vreg30
832B		%vreg42<def> = LUI <ga:@c>[TF=2]; GR32Bit:%vreg42
848B		%vreg43<def> = ADDI %zero, <ga:@c>[TF=3]; GR32Bit:%vreg43
864B		%vreg44<def> = ADD %vreg43<kill>, %vreg42<kill>; GR32Bit:%vreg44,%vreg43,%vreg42
880B		%vreg45<def> = ADD %vreg23, %vreg44<kill>; GR32Bit:%vreg45,%vreg23,%vreg44
896B		%vreg46<def> = ADD %vreg38, %vreg45<kill>; GR32Bit:%vreg46,%vreg38,%vreg45
912B		SW %vreg41<kill>, %vreg46<kill>, 0; mem:ST4[%arrayidx11] GR32Bit:%vreg41,%vreg46
928B		%vreg47<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg47,%vreg18
944B		%vreg48<def> = ADDI %vreg47<kill>, 1; GR32Bit:%vreg48,%vreg47
960B		SW %vreg48<kill>, %vreg18, 0; mem:ST4[%k] GR32Bit:%vreg48,%vreg18
976B		JAL <BB#5>
	    Successors according to CFG: BB#5

992B	BB#7: derived from LLVM BB %for.inc12
	    Predecessors according to CFG: BB#5
1008B		%vreg15<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg15
1024B		%vreg16<def> = LW %vreg15, 0; mem:LD4[%j] GR32Bit:%vreg16,%vreg15
1040B		%vreg17<def> = ADDI %vreg16<kill>, 1; GR32Bit:%vreg17,%vreg16
1056B		SW %vreg17<kill>, %vreg15, 0; mem:ST4[%j] GR32Bit:%vreg17,%vreg15
1072B		JAL <BB#3>
	    Successors according to CFG: BB#3

1088B	BB#8: derived from LLVM BB %for.inc15
	    Predecessors according to CFG: BB#3
1104B		%vreg8<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg8
1120B		%vreg9<def> = LW %vreg8, 0; mem:LD4[%i] GR32Bit:%vreg9,%vreg8
1136B		%vreg10<def> = ADDI %vreg9<kill>, 1; GR32Bit:%vreg10,%vreg9
1152B		SW %vreg10<kill>, %vreg8, 0; mem:ST4[%i] GR32Bit:%vreg10,%vreg8
1168B		JAL <BB#1>
	    Successors according to CFG: BB#1

1184B	BB#9: derived from LLVM BB %for.end17
	    Predecessors according to CFG: BB#1

# End machine code for function main.

********** Stack Coloring **********
********** Function: main
Found 0 markers and 3 slots
Slot structure:
Slot #0 - 4 bytes.
Slot #1 - 4 bytes.
Slot #2 - 4 bytes.
Total Stack size: 12 bytes

Will not try to merge slots.
Removed 0 markers.
******** Pre-regalloc Machine LICM: main ********
Entering: for.cond
Can't remat / high reg-pressure: %vreg1<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg1
Can't remat / high reg-pressure: %vreg3<def> = ADDI %zero, 9; GR32Bit:%vreg3
Entering: for.body
Won't speculate: %vreg4<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg4
Entering: for.cond1
Won't speculate: %vreg5<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg5
Won't speculate: %vreg7<def> = ADDI %zero, 9; GR32Bit:%vreg7
Entering: for.body3
Won't speculate: %vreg11<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg11
Entering: for.cond4
Won't speculate: %vreg12<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg12
Won't speculate: %vreg14<def> = ADDI %zero, 9; GR32Bit:%vreg14
Entering: for.inc
Won't speculate: %vreg18<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg18
Won't speculate: %vreg20<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg20
Won't speculate: %vreg22<def> = ADDI %zero, 40; GR32Bit:%vreg22
Won't speculate: %vreg24<def> = LUI <ga:@a>[TF=2]; GR32Bit:%vreg24
Won't speculate: %vreg25<def> = ADDI %zero, <ga:@a>[TF=3]; GR32Bit:%vreg25
Won't speculate: %vreg31<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg31
Won't speculate: %vreg34<def> = LUI <ga:@b>[TF=2]; GR32Bit:%vreg34
Won't speculate: %vreg35<def> = ADDI %zero, <ga:@b>[TF=3]; GR32Bit:%vreg35
Won't speculate: %vreg42<def> = LUI <ga:@c>[TF=2]; GR32Bit:%vreg42
Won't speculate: %vreg43<def> = ADDI %zero, <ga:@c>[TF=3]; GR32Bit:%vreg43
Exiting: for.inc
Entering: for.inc12
Won't speculate: %vreg15<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg15
Exiting: for.inc12
Exiting: for.cond4
Exiting: for.body3
Entering: for.inc15
Won't speculate: %vreg8<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg8
Exiting: for.inc15
Exiting: for.cond1
Exiting: for.body
******** Machine Sinking ********
********** PEEPHOLE OPTIMIZER **********
********** Function: main
********** PROCESS IMPLICIT DEFS **********
********** Function: main
********** REWRITING TWO-ADDR INSTRS **********
********** Function: main
# Machine code for function main: Post SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]

0B	BB#0: derived from LLVM BB %entry
16B		%vreg0<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg0
32B		SW %zero, %vreg0<kill>, 0; mem:ST4[%i] GR32Bit:%vreg0
	    Successors according to CFG: BB#1

48B	BB#1: derived from LLVM BB %for.cond
	    Predecessors according to CFG: BB#0 BB#8
64B		%vreg1<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg1
80B		%vreg2<def> = LW %vreg1<kill>, 0; mem:LD4[%i] GR32Bit:%vreg2,%vreg1
96B		%vreg3<def> = ADDI %zero, 9; GR32Bit:%vreg3
112B		BGT <BB#9>, %vreg2<kill>, %vreg3<kill>; GR32Bit:%vreg2,%vreg3
128B		JAL <BB#2>
	    Successors according to CFG: BB#2(124) BB#9(4)

144B	BB#2: derived from LLVM BB %for.body
	    Predecessors according to CFG: BB#1
160B		%vreg4<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg4
176B		SW %zero, %vreg4<kill>, 0; mem:ST4[%j] GR32Bit:%vreg4
	    Successors according to CFG: BB#3

192B	BB#3: derived from LLVM BB %for.cond1
	    Predecessors according to CFG: BB#2 BB#7
208B		%vreg5<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg5
224B		%vreg6<def> = LW %vreg5<kill>, 0; mem:LD4[%j] GR32Bit:%vreg6,%vreg5
240B		%vreg7<def> = ADDI %zero, 9; GR32Bit:%vreg7
256B		BGT <BB#8>, %vreg6<kill>, %vreg7<kill>; GR32Bit:%vreg6,%vreg7
272B		JAL <BB#4>
	    Successors according to CFG: BB#4(124) BB#8(4)

288B	BB#4: derived from LLVM BB %for.body3
	    Predecessors according to CFG: BB#3
304B		%vreg11<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg11
320B		SW %zero, %vreg11<kill>, 0; mem:ST4[%k] GR32Bit:%vreg11
	    Successors according to CFG: BB#5

336B	BB#5: derived from LLVM BB %for.cond4
	    Predecessors according to CFG: BB#4 BB#6
352B		%vreg12<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg12
368B		%vreg13<def> = LW %vreg12<kill>, 0; mem:LD4[%k] GR32Bit:%vreg13,%vreg12
384B		%vreg14<def> = ADDI %zero, 9; GR32Bit:%vreg14
400B		BGT <BB#7>, %vreg13<kill>, %vreg14<kill>; GR32Bit:%vreg13,%vreg14
416B		JAL <BB#6>
	    Successors according to CFG: BB#6(124) BB#7(4)

432B	BB#6: derived from LLVM BB %for.inc
	    Predecessors according to CFG: BB#5
448B		%vreg18<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg18
464B		%vreg19<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg19,%vreg18
480B		%vreg20<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg20
496B		%vreg21<def> = LW %vreg20<kill>, 0; mem:LD4[%i] GR32Bit:%vreg21,%vreg20
512B		%vreg22<def> = ADDI %zero, 40; GR32Bit:%vreg22
528B		%vreg23<def> = MUL %vreg22, %vreg21<kill>; GR32Bit:%vreg23,%vreg22,%vreg21
544B		%vreg24<def> = LUI <ga:@a>[TF=2]; GR32Bit:%vreg24
560B		%vreg25<def> = ADDI %zero, <ga:@a>[TF=3]; GR32Bit:%vreg25
576B		%vreg26<def> = ADD %vreg25<kill>, %vreg24<kill>; GR32Bit:%vreg26,%vreg25,%vreg24
592B		%vreg27<def> = ADD %vreg23, %vreg26<kill>; GR32Bit:%vreg27,%vreg23,%vreg26
608B		%vreg28<def> = SLLI %vreg19, 2; GR32Bit:%vreg28,%vreg19
624B		%vreg29<def> = ADD %vreg28<kill>, %vreg27<kill>; GR32Bit:%vreg29,%vreg28,%vreg27
640B		%vreg30<def> = LW %vreg29<kill>, 0; mem:LD4[%arrayidx7] GR32Bit:%vreg30,%vreg29
656B		%vreg31<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg31
672B		%vreg32<def> = LW %vreg31<kill>, 0; mem:LD4[%j] GR32Bit:%vreg32,%vreg31
688B		%vreg33<def> = MUL %vreg22<kill>, %vreg19<kill>; GR32Bit:%vreg33,%vreg22,%vreg19
704B		%vreg34<def> = LUI <ga:@b>[TF=2]; GR32Bit:%vreg34
720B		%vreg35<def> = ADDI %zero, <ga:@b>[TF=3]; GR32Bit:%vreg35
736B		%vreg36<def> = ADD %vreg35<kill>, %vreg34<kill>; GR32Bit:%vreg36,%vreg35,%vreg34
752B		%vreg37<def> = ADD %vreg33<kill>, %vreg36<kill>; GR32Bit:%vreg37,%vreg33,%vreg36
768B		%vreg38<def> = SLLI %vreg32<kill>, 2; GR32Bit:%vreg38,%vreg32
784B		%vreg39<def> = ADD %vreg38, %vreg37<kill>; GR32Bit:%vreg39,%vreg38,%vreg37
800B		%vreg40<def> = LW %vreg39<kill>, 0; mem:LD4[%arrayidx9] GR32Bit:%vreg40,%vreg39
816B		%vreg41<def> = ADD %vreg40<kill>, %vreg30<kill>; GR32Bit:%vreg41,%vreg40,%vreg30
832B		%vreg42<def> = LUI <ga:@c>[TF=2]; GR32Bit:%vreg42
848B		%vreg43<def> = ADDI %zero, <ga:@c>[TF=3]; GR32Bit:%vreg43
864B		%vreg44<def> = ADD %vreg43<kill>, %vreg42<kill>; GR32Bit:%vreg44,%vreg43,%vreg42
880B		%vreg45<def> = ADD %vreg23<kill>, %vreg44<kill>; GR32Bit:%vreg45,%vreg23,%vreg44
896B		%vreg46<def> = ADD %vreg38<kill>, %vreg45<kill>; GR32Bit:%vreg46,%vreg38,%vreg45
912B		SW %vreg41<kill>, %vreg46<kill>, 0; mem:ST4[%arrayidx11] GR32Bit:%vreg41,%vreg46
928B		%vreg47<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg47,%vreg18
944B		%vreg48<def> = ADDI %vreg47<kill>, 1; GR32Bit:%vreg48,%vreg47
960B		SW %vreg48<kill>, %vreg18<kill>, 0; mem:ST4[%k] GR32Bit:%vreg48,%vreg18
976B		JAL <BB#5>
	    Successors according to CFG: BB#5

992B	BB#7: derived from LLVM BB %for.inc12
	    Predecessors according to CFG: BB#5
1008B		%vreg15<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg15
1024B		%vreg16<def> = LW %vreg15, 0; mem:LD4[%j] GR32Bit:%vreg16,%vreg15
1040B		%vreg17<def> = ADDI %vreg16<kill>, 1; GR32Bit:%vreg17,%vreg16
1056B		SW %vreg17<kill>, %vreg15<kill>, 0; mem:ST4[%j] GR32Bit:%vreg17,%vreg15
1072B		JAL <BB#3>
	    Successors according to CFG: BB#3

1088B	BB#8: derived from LLVM BB %for.inc15
	    Predecessors according to CFG: BB#3
1104B		%vreg8<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg8
1120B		%vreg9<def> = LW %vreg8, 0; mem:LD4[%i] GR32Bit:%vreg9,%vreg8
1136B		%vreg10<def> = ADDI %vreg9<kill>, 1; GR32Bit:%vreg10,%vreg9
1152B		SW %vreg10<kill>, %vreg8<kill>, 0; mem:ST4[%i] GR32Bit:%vreg10,%vreg8
1168B		JAL <BB#1>
	    Successors according to CFG: BB#1

1184B	BB#9: derived from LLVM BB %for.end17
	    Predecessors according to CFG: BB#1

# End machine code for function main.

Computing live-in reg-units in ABI blocks.
Created 0 new intervals.
********** INTERVALS **********
%vreg0 = [16r,32r:0)  0@16r
%vreg1 = [64r,80r:0)  0@64r
%vreg2 = [80r,112r:0)  0@80r
%vreg3 = [96r,112r:0)  0@96r
%vreg4 = [160r,176r:0)  0@160r
%vreg5 = [208r,224r:0)  0@208r
%vreg6 = [224r,256r:0)  0@224r
%vreg7 = [240r,256r:0)  0@240r
%vreg8 = [1104r,1152r:0)  0@1104r
%vreg9 = [1120r,1136r:0)  0@1120r
%vreg10 = [1136r,1152r:0)  0@1136r
%vreg11 = [304r,320r:0)  0@304r
%vreg12 = [352r,368r:0)  0@352r
%vreg13 = [368r,400r:0)  0@368r
%vreg14 = [384r,400r:0)  0@384r
%vreg15 = [1008r,1056r:0)  0@1008r
%vreg16 = [1024r,1040r:0)  0@1024r
%vreg17 = [1040r,1056r:0)  0@1040r
%vreg18 = [448r,960r:0)  0@448r
%vreg19 = [464r,688r:0)  0@464r
%vreg20 = [480r,496r:0)  0@480r
%vreg21 = [496r,528r:0)  0@496r
%vreg22 = [512r,688r:0)  0@512r
%vreg23 = [528r,880r:0)  0@528r
%vreg24 = [544r,576r:0)  0@544r
%vreg25 = [560r,576r:0)  0@560r
%vreg26 = [576r,592r:0)  0@576r
%vreg27 = [592r,624r:0)  0@592r
%vreg28 = [608r,624r:0)  0@608r
%vreg29 = [624r,640r:0)  0@624r
%vreg30 = [640r,816r:0)  0@640r
%vreg31 = [656r,672r:0)  0@656r
%vreg32 = [672r,768r:0)  0@672r
%vreg33 = [688r,752r:0)  0@688r
%vreg34 = [704r,736r:0)  0@704r
%vreg35 = [720r,736r:0)  0@720r
%vreg36 = [736r,752r:0)  0@736r
%vreg37 = [752r,784r:0)  0@752r
%vreg38 = [768r,896r:0)  0@768r
%vreg39 = [784r,800r:0)  0@784r
%vreg40 = [800r,816r:0)  0@800r
%vreg41 = [816r,912r:0)  0@816r
%vreg42 = [832r,864r:0)  0@832r
%vreg43 = [848r,864r:0)  0@848r
%vreg44 = [864r,880r:0)  0@864r
%vreg45 = [880r,896r:0)  0@880r
%vreg46 = [896r,912r:0)  0@896r
%vreg47 = [928r,944r:0)  0@928r
%vreg48 = [944r,960r:0)  0@944r
RegMasks:
********** MACHINEINSTRS **********
# Machine code for function main: Post SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]

0B	BB#0: derived from LLVM BB %entry
16B		%vreg0<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg0
32B		SW %zero, %vreg0, 0; mem:ST4[%i] GR32Bit:%vreg0
	    Successors according to CFG: BB#1

48B	BB#1: derived from LLVM BB %for.cond
	    Predecessors according to CFG: BB#0 BB#8
64B		%vreg1<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg1
80B		%vreg2<def> = LW %vreg1, 0; mem:LD4[%i] GR32Bit:%vreg2,%vreg1
96B		%vreg3<def> = ADDI %zero, 9; GR32Bit:%vreg3
112B		BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
128B		JAL <BB#2>
	    Successors according to CFG: BB#2(124) BB#9(4)

144B	BB#2: derived from LLVM BB %for.body
	    Predecessors according to CFG: BB#1
160B		%vreg4<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg4
176B		SW %zero, %vreg4, 0; mem:ST4[%j] GR32Bit:%vreg4
	    Successors according to CFG: BB#3

192B	BB#3: derived from LLVM BB %for.cond1
	    Predecessors according to CFG: BB#2 BB#7
208B		%vreg5<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg5
224B		%vreg6<def> = LW %vreg5, 0; mem:LD4[%j] GR32Bit:%vreg6,%vreg5
240B		%vreg7<def> = ADDI %zero, 9; GR32Bit:%vreg7
256B		BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
272B		JAL <BB#4>
	    Successors according to CFG: BB#4(124) BB#8(4)

288B	BB#4: derived from LLVM BB %for.body3
	    Predecessors according to CFG: BB#3
304B		%vreg11<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg11
320B		SW %zero, %vreg11, 0; mem:ST4[%k] GR32Bit:%vreg11
	    Successors according to CFG: BB#5

336B	BB#5: derived from LLVM BB %for.cond4
	    Predecessors according to CFG: BB#4 BB#6
352B		%vreg12<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg12
368B		%vreg13<def> = LW %vreg12, 0; mem:LD4[%k] GR32Bit:%vreg13,%vreg12
384B		%vreg14<def> = ADDI %zero, 9; GR32Bit:%vreg14
400B		BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
416B		JAL <BB#6>
	    Successors according to CFG: BB#6(124) BB#7(4)

432B	BB#6: derived from LLVM BB %for.inc
	    Predecessors according to CFG: BB#5
448B		%vreg18<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg18
464B		%vreg19<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg19,%vreg18
480B		%vreg20<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg20
496B		%vreg21<def> = LW %vreg20, 0; mem:LD4[%i] GR32Bit:%vreg21,%vreg20
512B		%vreg22<def> = ADDI %zero, 40; GR32Bit:%vreg22
528B		%vreg23<def> = MUL %vreg22, %vreg21; GR32Bit:%vreg23,%vreg22,%vreg21
544B		%vreg24<def> = LUI <ga:@a>[TF=2]; GR32Bit:%vreg24
560B		%vreg25<def> = ADDI %zero, <ga:@a>[TF=3]; GR32Bit:%vreg25
576B		%vreg26<def> = ADD %vreg25, %vreg24; GR32Bit:%vreg26,%vreg25,%vreg24
592B		%vreg27<def> = ADD %vreg23, %vreg26; GR32Bit:%vreg27,%vreg23,%vreg26
608B		%vreg28<def> = SLLI %vreg19, 2; GR32Bit:%vreg28,%vreg19
624B		%vreg29<def> = ADD %vreg28, %vreg27; GR32Bit:%vreg29,%vreg28,%vreg27
640B		%vreg30<def> = LW %vreg29, 0; mem:LD4[%arrayidx7] GR32Bit:%vreg30,%vreg29
656B		%vreg31<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg31
672B		%vreg32<def> = LW %vreg31, 0; mem:LD4[%j] GR32Bit:%vreg32,%vreg31
688B		%vreg33<def> = MUL %vreg22, %vreg19; GR32Bit:%vreg33,%vreg22,%vreg19
704B		%vreg34<def> = LUI <ga:@b>[TF=2]; GR32Bit:%vreg34
720B		%vreg35<def> = ADDI %zero, <ga:@b>[TF=3]; GR32Bit:%vreg35
736B		%vreg36<def> = ADD %vreg35, %vreg34; GR32Bit:%vreg36,%vreg35,%vreg34
752B		%vreg37<def> = ADD %vreg33, %vreg36; GR32Bit:%vreg37,%vreg33,%vreg36
768B		%vreg38<def> = SLLI %vreg32, 2; GR32Bit:%vreg38,%vreg32
784B		%vreg39<def> = ADD %vreg38, %vreg37; GR32Bit:%vreg39,%vreg38,%vreg37
800B		%vreg40<def> = LW %vreg39, 0; mem:LD4[%arrayidx9] GR32Bit:%vreg40,%vreg39
816B		%vreg41<def> = ADD %vreg40, %vreg30; GR32Bit:%vreg41,%vreg40,%vreg30
832B		%vreg42<def> = LUI <ga:@c>[TF=2]; GR32Bit:%vreg42
848B		%vreg43<def> = ADDI %zero, <ga:@c>[TF=3]; GR32Bit:%vreg43
864B		%vreg44<def> = ADD %vreg43, %vreg42; GR32Bit:%vreg44,%vreg43,%vreg42
880B		%vreg45<def> = ADD %vreg23, %vreg44; GR32Bit:%vreg45,%vreg23,%vreg44
896B		%vreg46<def> = ADD %vreg38, %vreg45; GR32Bit:%vreg46,%vreg38,%vreg45
912B		SW %vreg41, %vreg46, 0; mem:ST4[%arrayidx11] GR32Bit:%vreg41,%vreg46
928B		%vreg47<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg47,%vreg18
944B		%vreg48<def> = ADDI %vreg47, 1; GR32Bit:%vreg48,%vreg47
960B		SW %vreg48, %vreg18, 0; mem:ST4[%k] GR32Bit:%vreg48,%vreg18
976B		JAL <BB#5>
	    Successors according to CFG: BB#5

992B	BB#7: derived from LLVM BB %for.inc12
	    Predecessors according to CFG: BB#5
1008B		%vreg15<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg15
1024B		%vreg16<def> = LW %vreg15, 0; mem:LD4[%j] GR32Bit:%vreg16,%vreg15
1040B		%vreg17<def> = ADDI %vreg16, 1; GR32Bit:%vreg17,%vreg16
1056B		SW %vreg17, %vreg15, 0; mem:ST4[%j] GR32Bit:%vreg17,%vreg15
1072B		JAL <BB#3>
	    Successors according to CFG: BB#3

1088B	BB#8: derived from LLVM BB %for.inc15
	    Predecessors according to CFG: BB#3
1104B		%vreg8<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg8
1120B		%vreg9<def> = LW %vreg8, 0; mem:LD4[%i] GR32Bit:%vreg9,%vreg8
1136B		%vreg10<def> = ADDI %vreg9, 1; GR32Bit:%vreg10,%vreg9
1152B		SW %vreg10, %vreg8, 0; mem:ST4[%i] GR32Bit:%vreg10,%vreg8
1168B		JAL <BB#1>
	    Successors according to CFG: BB#1

1184B	BB#9: derived from LLVM BB %for.end17
	    Predecessors according to CFG: BB#1

# End machine code for function main.

********** SIMPLE REGISTER COALESCING **********
********** Function: main
********** JOINING INTERVALS ***********
for.cond4:
for.inc:
for.cond1:
for.body3:
for.inc12:
for.cond:
for.body:
for.inc15:
entry:
for.end17:
Trying to inflate 0 regs.
********** INTERVALS **********
%vreg0 = [16r,32r:0)  0@16r
%vreg1 = [64r,80r:0)  0@64r
%vreg2 = [80r,112r:0)  0@80r
%vreg3 = [96r,112r:0)  0@96r
%vreg4 = [160r,176r:0)  0@160r
%vreg5 = [208r,224r:0)  0@208r
%vreg6 = [224r,256r:0)  0@224r
%vreg7 = [240r,256r:0)  0@240r
%vreg8 = [1104r,1152r:0)  0@1104r
%vreg9 = [1120r,1136r:0)  0@1120r
%vreg10 = [1136r,1152r:0)  0@1136r
%vreg11 = [304r,320r:0)  0@304r
%vreg12 = [352r,368r:0)  0@352r
%vreg13 = [368r,400r:0)  0@368r
%vreg14 = [384r,400r:0)  0@384r
%vreg15 = [1008r,1056r:0)  0@1008r
%vreg16 = [1024r,1040r:0)  0@1024r
%vreg17 = [1040r,1056r:0)  0@1040r
%vreg18 = [448r,960r:0)  0@448r
%vreg19 = [464r,688r:0)  0@464r
%vreg20 = [480r,496r:0)  0@480r
%vreg21 = [496r,528r:0)  0@496r
%vreg22 = [512r,688r:0)  0@512r
%vreg23 = [528r,880r:0)  0@528r
%vreg24 = [544r,576r:0)  0@544r
%vreg25 = [560r,576r:0)  0@560r
%vreg26 = [576r,592r:0)  0@576r
%vreg27 = [592r,624r:0)  0@592r
%vreg28 = [608r,624r:0)  0@608r
%vreg29 = [624r,640r:0)  0@624r
%vreg30 = [640r,816r:0)  0@640r
%vreg31 = [656r,672r:0)  0@656r
%vreg32 = [672r,768r:0)  0@672r
%vreg33 = [688r,752r:0)  0@688r
%vreg34 = [704r,736r:0)  0@704r
%vreg35 = [720r,736r:0)  0@720r
%vreg36 = [736r,752r:0)  0@736r
%vreg37 = [752r,784r:0)  0@752r
%vreg38 = [768r,896r:0)  0@768r
%vreg39 = [784r,800r:0)  0@784r
%vreg40 = [800r,816r:0)  0@800r
%vreg41 = [816r,912r:0)  0@816r
%vreg42 = [832r,864r:0)  0@832r
%vreg43 = [848r,864r:0)  0@848r
%vreg44 = [864r,880r:0)  0@864r
%vreg45 = [880r,896r:0)  0@880r
%vreg46 = [896r,912r:0)  0@896r
%vreg47 = [928r,944r:0)  0@928r
%vreg48 = [944r,960r:0)  0@944r
RegMasks:
********** MACHINEINSTRS **********
# Machine code for function main: Post SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]

0B	BB#0: derived from LLVM BB %entry
16B		%vreg0<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg0
32B		SW %zero, %vreg0, 0; mem:ST4[%i] GR32Bit:%vreg0
	    Successors according to CFG: BB#1

48B	BB#1: derived from LLVM BB %for.cond
	    Predecessors according to CFG: BB#0 BB#8
64B		%vreg1<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg1
80B		%vreg2<def> = LW %vreg1, 0; mem:LD4[%i] GR32Bit:%vreg2,%vreg1
96B		%vreg3<def> = ADDI %zero, 9; GR32Bit:%vreg3
112B		BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
128B		JAL <BB#2>
	    Successors according to CFG: BB#2(124) BB#9(4)

144B	BB#2: derived from LLVM BB %for.body
	    Predecessors according to CFG: BB#1
160B		%vreg4<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg4
176B		SW %zero, %vreg4, 0; mem:ST4[%j] GR32Bit:%vreg4
	    Successors according to CFG: BB#3

192B	BB#3: derived from LLVM BB %for.cond1
	    Predecessors according to CFG: BB#2 BB#7
208B		%vreg5<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg5
224B		%vreg6<def> = LW %vreg5, 0; mem:LD4[%j] GR32Bit:%vreg6,%vreg5
240B		%vreg7<def> = ADDI %zero, 9; GR32Bit:%vreg7
256B		BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
272B		JAL <BB#4>
	    Successors according to CFG: BB#4(124) BB#8(4)

288B	BB#4: derived from LLVM BB %for.body3
	    Predecessors according to CFG: BB#3
304B		%vreg11<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg11
320B		SW %zero, %vreg11, 0; mem:ST4[%k] GR32Bit:%vreg11
	    Successors according to CFG: BB#5

336B	BB#5: derived from LLVM BB %for.cond4
	    Predecessors according to CFG: BB#4 BB#6
352B		%vreg12<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg12
368B		%vreg13<def> = LW %vreg12, 0; mem:LD4[%k] GR32Bit:%vreg13,%vreg12
384B		%vreg14<def> = ADDI %zero, 9; GR32Bit:%vreg14
400B		BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
416B		JAL <BB#6>
	    Successors according to CFG: BB#6(124) BB#7(4)

432B	BB#6: derived from LLVM BB %for.inc
	    Predecessors according to CFG: BB#5
448B		%vreg18<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg18
464B		%vreg19<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg19,%vreg18
480B		%vreg20<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg20
496B		%vreg21<def> = LW %vreg20, 0; mem:LD4[%i] GR32Bit:%vreg21,%vreg20
512B		%vreg22<def> = ADDI %zero, 40; GR32Bit:%vreg22
528B		%vreg23<def> = MUL %vreg22, %vreg21; GR32Bit:%vreg23,%vreg22,%vreg21
544B		%vreg24<def> = LUI <ga:@a>[TF=2]; GR32Bit:%vreg24
560B		%vreg25<def> = ADDI %zero, <ga:@a>[TF=3]; GR32Bit:%vreg25
576B		%vreg26<def> = ADD %vreg25, %vreg24; GR32Bit:%vreg26,%vreg25,%vreg24
592B		%vreg27<def> = ADD %vreg23, %vreg26; GR32Bit:%vreg27,%vreg23,%vreg26
608B		%vreg28<def> = SLLI %vreg19, 2; GR32Bit:%vreg28,%vreg19
624B		%vreg29<def> = ADD %vreg28, %vreg27; GR32Bit:%vreg29,%vreg28,%vreg27
640B		%vreg30<def> = LW %vreg29, 0; mem:LD4[%arrayidx7] GR32Bit:%vreg30,%vreg29
656B		%vreg31<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg31
672B		%vreg32<def> = LW %vreg31, 0; mem:LD4[%j] GR32Bit:%vreg32,%vreg31
688B		%vreg33<def> = MUL %vreg22, %vreg19; GR32Bit:%vreg33,%vreg22,%vreg19
704B		%vreg34<def> = LUI <ga:@b>[TF=2]; GR32Bit:%vreg34
720B		%vreg35<def> = ADDI %zero, <ga:@b>[TF=3]; GR32Bit:%vreg35
736B		%vreg36<def> = ADD %vreg35, %vreg34; GR32Bit:%vreg36,%vreg35,%vreg34
752B		%vreg37<def> = ADD %vreg33, %vreg36; GR32Bit:%vreg37,%vreg33,%vreg36
768B		%vreg38<def> = SLLI %vreg32, 2; GR32Bit:%vreg38,%vreg32
784B		%vreg39<def> = ADD %vreg38, %vreg37; GR32Bit:%vreg39,%vreg38,%vreg37
800B		%vreg40<def> = LW %vreg39, 0; mem:LD4[%arrayidx9] GR32Bit:%vreg40,%vreg39
816B		%vreg41<def> = ADD %vreg40, %vreg30; GR32Bit:%vreg41,%vreg40,%vreg30
832B		%vreg42<def> = LUI <ga:@c>[TF=2]; GR32Bit:%vreg42
848B		%vreg43<def> = ADDI %zero, <ga:@c>[TF=3]; GR32Bit:%vreg43
864B		%vreg44<def> = ADD %vreg43, %vreg42; GR32Bit:%vreg44,%vreg43,%vreg42
880B		%vreg45<def> = ADD %vreg23, %vreg44; GR32Bit:%vreg45,%vreg23,%vreg44
896B		%vreg46<def> = ADD %vreg38, %vreg45; GR32Bit:%vreg46,%vreg38,%vreg45
912B		SW %vreg41, %vreg46, 0; mem:ST4[%arrayidx11] GR32Bit:%vreg41,%vreg46
928B		%vreg47<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg47,%vreg18
944B		%vreg48<def> = ADDI %vreg47, 1; GR32Bit:%vreg48,%vreg47
960B		SW %vreg48, %vreg18, 0; mem:ST4[%k] GR32Bit:%vreg48,%vreg18
976B		JAL <BB#5>
	    Successors according to CFG: BB#5

992B	BB#7: derived from LLVM BB %for.inc12
	    Predecessors according to CFG: BB#5
1008B		%vreg15<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg15
1024B		%vreg16<def> = LW %vreg15, 0; mem:LD4[%j] GR32Bit:%vreg16,%vreg15
1040B		%vreg17<def> = ADDI %vreg16, 1; GR32Bit:%vreg17,%vreg16
1056B		SW %vreg17, %vreg15, 0; mem:ST4[%j] GR32Bit:%vreg17,%vreg15
1072B		JAL <BB#3>
	    Successors according to CFG: BB#3

1088B	BB#8: derived from LLVM BB %for.inc15
	    Predecessors according to CFG: BB#3
1104B		%vreg8<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg8
1120B		%vreg9<def> = LW %vreg8, 0; mem:LD4[%i] GR32Bit:%vreg9,%vreg8
1136B		%vreg10<def> = ADDI %vreg9, 1; GR32Bit:%vreg10,%vreg9
1152B		SW %vreg10, %vreg8, 0; mem:ST4[%i] GR32Bit:%vreg10,%vreg8
1168B		JAL <BB#1>
	    Successors according to CFG: BB#1

1184B	BB#9: derived from LLVM BB %for.end17
	    Predecessors according to CFG: BB#1

# End machine code for function main.

Before MISched:
# Machine code for function main: Post SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg0
	SW %zero, %vreg0, 0; mem:ST4[%i] GR32Bit:%vreg0
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#8
	%vreg1<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg1
	%vreg2<def> = LW %vreg1, 0; mem:LD4[%i] GR32Bit:%vreg2,%vreg1
	%vreg3<def> = ADDI %zero, 9; GR32Bit:%vreg3
	BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
	JAL <BB#2>
    Successors according to CFG: BB#2(124) BB#9(4)

BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	%vreg4<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg4
	SW %zero, %vreg4, 0; mem:ST4[%j] GR32Bit:%vreg4
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %for.cond1
    Predecessors according to CFG: BB#2 BB#7
	%vreg5<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg5
	%vreg6<def> = LW %vreg5, 0; mem:LD4[%j] GR32Bit:%vreg6,%vreg5
	%vreg7<def> = ADDI %zero, 9; GR32Bit:%vreg7
	BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
	JAL <BB#4>
    Successors according to CFG: BB#4(124) BB#8(4)

BB#4: derived from LLVM BB %for.body3
    Predecessors according to CFG: BB#3
	%vreg11<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg11
	SW %zero, %vreg11, 0; mem:ST4[%k] GR32Bit:%vreg11
    Successors according to CFG: BB#5

BB#5: derived from LLVM BB %for.cond4
    Predecessors according to CFG: BB#4 BB#6
	%vreg12<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg12
	%vreg13<def> = LW %vreg12, 0; mem:LD4[%k] GR32Bit:%vreg13,%vreg12
	%vreg14<def> = ADDI %zero, 9; GR32Bit:%vreg14
	BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
	JAL <BB#6>
    Successors according to CFG: BB#6(124) BB#7(4)

BB#6: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#5
	%vreg18<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg18
	%vreg19<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg19,%vreg18
	%vreg20<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg20
	%vreg21<def> = LW %vreg20, 0; mem:LD4[%i] GR32Bit:%vreg21,%vreg20
	%vreg22<def> = ADDI %zero, 40; GR32Bit:%vreg22
	%vreg23<def> = MUL %vreg22, %vreg21; GR32Bit:%vreg23,%vreg22,%vreg21
	%vreg24<def> = LUI <ga:@a>[TF=2]; GR32Bit:%vreg24
	%vreg25<def> = ADDI %zero, <ga:@a>[TF=3]; GR32Bit:%vreg25
	%vreg26<def> = ADD %vreg25, %vreg24; GR32Bit:%vreg26,%vreg25,%vreg24
	%vreg27<def> = ADD %vreg23, %vreg26; GR32Bit:%vreg27,%vreg23,%vreg26
	%vreg28<def> = SLLI %vreg19, 2; GR32Bit:%vreg28,%vreg19
	%vreg29<def> = ADD %vreg28, %vreg27; GR32Bit:%vreg29,%vreg28,%vreg27
	%vreg30<def> = LW %vreg29, 0; mem:LD4[%arrayidx7] GR32Bit:%vreg30,%vreg29
	%vreg31<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg31
	%vreg32<def> = LW %vreg31, 0; mem:LD4[%j] GR32Bit:%vreg32,%vreg31
	%vreg33<def> = MUL %vreg22, %vreg19; GR32Bit:%vreg33,%vreg22,%vreg19
	%vreg34<def> = LUI <ga:@b>[TF=2]; GR32Bit:%vreg34
	%vreg35<def> = ADDI %zero, <ga:@b>[TF=3]; GR32Bit:%vreg35
	%vreg36<def> = ADD %vreg35, %vreg34; GR32Bit:%vreg36,%vreg35,%vreg34
	%vreg37<def> = ADD %vreg33, %vreg36; GR32Bit:%vreg37,%vreg33,%vreg36
	%vreg38<def> = SLLI %vreg32, 2; GR32Bit:%vreg38,%vreg32
	%vreg39<def> = ADD %vreg38, %vreg37; GR32Bit:%vreg39,%vreg38,%vreg37
	%vreg40<def> = LW %vreg39, 0; mem:LD4[%arrayidx9] GR32Bit:%vreg40,%vreg39
	%vreg41<def> = ADD %vreg40, %vreg30; GR32Bit:%vreg41,%vreg40,%vreg30
	%vreg42<def> = LUI <ga:@c>[TF=2]; GR32Bit:%vreg42
	%vreg43<def> = ADDI %zero, <ga:@c>[TF=3]; GR32Bit:%vreg43
	%vreg44<def> = ADD %vreg43, %vreg42; GR32Bit:%vreg44,%vreg43,%vreg42
	%vreg45<def> = ADD %vreg23, %vreg44; GR32Bit:%vreg45,%vreg23,%vreg44
	%vreg46<def> = ADD %vreg38, %vreg45; GR32Bit:%vreg46,%vreg38,%vreg45
	SW %vreg41, %vreg46, 0; mem:ST4[%arrayidx11] GR32Bit:%vreg41,%vreg46
	%vreg47<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg47,%vreg18
	%vreg48<def> = ADDI %vreg47, 1; GR32Bit:%vreg48,%vreg47
	SW %vreg48, %vreg18, 0; mem:ST4[%k] GR32Bit:%vreg48,%vreg18
	JAL <BB#5>
    Successors according to CFG: BB#5

BB#7: derived from LLVM BB %for.inc12
    Predecessors according to CFG: BB#5
	%vreg15<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg15
	%vreg16<def> = LW %vreg15, 0; mem:LD4[%j] GR32Bit:%vreg16,%vreg15
	%vreg17<def> = ADDI %vreg16, 1; GR32Bit:%vreg17,%vreg16
	SW %vreg17, %vreg15, 0; mem:ST4[%j] GR32Bit:%vreg17,%vreg15
	JAL <BB#3>
    Successors according to CFG: BB#3

BB#8: derived from LLVM BB %for.inc15
    Predecessors according to CFG: BB#3
	%vreg8<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg8
	%vreg9<def> = LW %vreg8, 0; mem:LD4[%i] GR32Bit:%vreg9,%vreg8
	%vreg10<def> = ADDI %vreg9, 1; GR32Bit:%vreg10,%vreg9
	SW %vreg10, %vreg8, 0; mem:ST4[%i] GR32Bit:%vreg10,%vreg8
	JAL <BB#1>
    Successors according to CFG: BB#1

BB#9: derived from LLVM BB %for.end17
    Predecessors according to CFG: BB#1

# End machine code for function main.

Starting new basic block BB#0
********** MI Scheduling **********
main:BB#0 entry
  From: %vreg0<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg0
    To: End Remaining: 0
Max Pressure: GR32Bit=1
Live In: 
Live Out: 
FP32BitLimit 32 Actual 0
GR32BitLimit 32 Actual 1
Excess PSets: 
1 subtrees:
  SU(0) in tree 0
  SU(1) in tree 0
SU(0):   %vreg0<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
   val SU(1): Latency=1 Reg=%vreg0

SU(1):   SW %zero, %vreg0, 0; mem:ST4[%i] GR32Bit:%vreg0
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
   val SU(0): Latency=1 Reg=%vreg0
  Successors:
   ch  SU(4294967295) *: Latency=0

SU(0):   %vreg0<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
   val SU(1): Latency=1 Reg=%vreg0

SU(1):   SW %zero, %vreg0, 0; mem:ST4[%i] GR32Bit:%vreg0
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
   val SU(0): Latency=1 Reg=%vreg0
  Successors:
   ch  SU(4294967295) *: Latency=0

Pick node SU(0)  ILP: 1 / 1 = 1 Tree: 0 @0
Scheduling %vreg0<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg0
Pick node SU(1)  ILP: 2 / 2 = 1 Tree: 0 @0
Scheduling SW %zero, %vreg0, 0; mem:ST4[%i] GR32Bit:%vreg0
*** Final schedule for BB#0 ***
SU(0):   %vreg0<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg0
SU(1):   SW %zero, %vreg0, 0; mem:ST4[%i] GR32Bit:%vreg0

Partitioning instructions of the region into multiple CEs

*** Renumbered SlotIndexes 28-44 ***
Shuffling instructions within the region such that successive instructions belong to the same pHyperOp to ease bundle creation
state of basic block BB#0BB#0: derived from LLVM BB %entry
	%vreg0<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg0
	%vreg49<def> = LUI 1; GR32Bit:%vreg49
	WRITEPM %vreg49<internal>, %vreg0<internal>, 0; GR32Bit:%vreg49,%vreg0
	%vreg50<def> = LUI 1; GR32Bit:%vreg50
	READPM %vreg0<kill>, %vreg50<internal>, 0; GR32Bit:%vreg0,%vreg50
	SW %zero, %vreg0, 0; mem:ST4[%i] GR32Bit:%vreg0
    Successors according to CFG: BB#1
BB before region shuffle:BB#0: derived from LLVM BB %entry
	%vreg0<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg0
	%vreg49<def> = LUI 1; GR32Bit:%vreg49
	WRITEPM %vreg49<internal>, %vreg0<internal>, 0; GR32Bit:%vreg49,%vreg0
	%vreg50<def> = LUI 1; GR32Bit:%vreg50
	READPM %vreg0<kill>, %vreg50<internal>, 0; GR32Bit:%vreg0,%vreg50
	SW %zero, %vreg0, 0; mem:ST4[%i] GR32Bit:%vreg0
    Successors according to CFG: BB#1
After Shuffling basic block, state of BB#0:
BB#0: derived from LLVM BB %entry
	%vreg0<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg0
	%vreg49<def> = LUI 1; GR32Bit:%vreg49
	WRITEPM %vreg49<internal>, %vreg0<internal>, 0; GR32Bit:%vreg49,%vreg0
	%vreg50<def> = LUI 1; GR32Bit:%vreg50
	READPM %vreg0<kill>, %vreg50<internal>, 0; GR32Bit:%vreg0,%vreg50
	SW %zero, %vreg0, 0; mem:ST4[%i] GR32Bit:%vreg0
    Successors according to CFG: BB#1
Creating pHyperOp bundles for CEs
Starting new basic block BB#1
Partitioning instructions of the region into multiple CEs

*** Renumbered SlotIndexes 124-140 ***

*** Renumbered SlotIndexes 136-168 ***

*** Renumbered SlotIndexes 148-188 ***

*** Renumbered SlotIndexes 160-216 ***

*** Renumbered SlotIndexes 172-236 ***

*** Renumbered SlotIndexes 184-264 ***

*** Renumbered SlotIndexes 196-284 ***

*** Renumbered SlotIndexes 208-312 ***

*** Renumbered SlotIndexes 220-332 ***

*** Renumbered SlotIndexes 232-360 ***

*** Renumbered SlotIndexes 244-380 ***

*** Renumbered SlotIndexes 256-408 ***

*** Renumbered SlotIndexes 268-428 ***

*** Renumbered SlotIndexes 280-456 ***

*** Renumbered SlotIndexes 292-476 ***

*** Renumbered SlotIndexes 304-504 ***

*** Renumbered SlotIndexes 316-524 ***

*** Renumbered SlotIndexes 328-552 ***

*** Renumbered SlotIndexes 340-572 ***

*** Renumbered SlotIndexes 352-600 ***

*** Renumbered SlotIndexes 364-620 ***

*** Renumbered SlotIndexes 376-648 ***

*** Renumbered SlotIndexes 388-668 ***
Dumping all live-out registers to memory

*** Renumbered SlotIndexes 408-696 ***

*** Renumbered SlotIndexes 420-716 ***

*** Renumbered SlotIndexes 432-744 ***

*** Renumbered SlotIndexes 444-764 ***

*** Renumbered SlotIndexes 456-792 ***
Shuffling instructions within the region such that successive instructions belong to the same pHyperOp to ease bundle creation
state of basic block BB#1BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#8
	%vreg1<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg1
	%vreg2<def> = LW %vreg1, 0; mem:LD4[%i] GR32Bit:%vreg2,%vreg1
	%vreg3<def> = ADDI %zero, 9; GR32Bit:%vreg3
	BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
	%vreg51<def> = LUI 2; GR32Bit:%vreg51
	WRITEPM %vreg51<internal>, %vreg51<internal>, -68; GR32Bit:%vreg51
	%vreg51<def> = LUI 3; GR32Bit:%vreg51
	WRITEPM %vreg51<internal>, %vreg51<internal>, -68; GR32Bit:%vreg51
	%vreg51<def> = LUI 4; GR32Bit:%vreg51
	WRITEPM %vreg51<internal>, %vreg51<internal>, -68; GR32Bit:%vreg51
	%vreg51<def> = LUI 1; GR32Bit:%vreg51
	READPM %vreg51<kill>, %vreg51<internal>, -84; GR32Bit:%vreg51
	%vreg51<def> = LUI 1; GR32Bit:%vreg51
	READPM %vreg51<kill>, %vreg51<internal>, -100; GR32Bit:%vreg51
	%vreg51<def> = LUI 1; GR32Bit:%vreg51
	READPM %vreg51<kill>, %vreg51<internal>, -116; GR32Bit:%vreg51
	%vreg52<def> = LUI 1; GR32Bit:%vreg52
	WRITEPM %vreg52<internal>, %vreg52<internal>, -84; GR32Bit:%vreg52
	%vreg52<def> = LUI 3; GR32Bit:%vreg52
	WRITEPM %vreg52<internal>, %vreg52<internal>, -84; GR32Bit:%vreg52
	%vreg52<def> = LUI 4; GR32Bit:%vreg52
	WRITEPM %vreg52<internal>, %vreg52<internal>, -84; GR32Bit:%vreg52
	%vreg52<def> = LUI 2; GR32Bit:%vreg52
	READPM %vreg52<kill>, %vreg52<internal>, -68; GR32Bit:%vreg52
	%vreg52<def> = LUI 2; GR32Bit:%vreg52
	READPM %vreg52<kill>, %vreg52<internal>, -100; GR32Bit:%vreg52
	%vreg52<def> = LUI 2; GR32Bit:%vreg52
	READPM %vreg52<kill>, %vreg52<internal>, -116; GR32Bit:%vreg52
	%vreg53<def> = LUI 1; GR32Bit:%vreg53
	WRITEPM %vreg53<internal>, %vreg53<internal>, -100; GR32Bit:%vreg53
	%vreg53<def> = LUI 2; GR32Bit:%vreg53
	WRITEPM %vreg53<internal>, %vreg53<internal>, -100; GR32Bit:%vreg53
	%vreg53<def> = LUI 4; GR32Bit:%vreg53
	WRITEPM %vreg53<internal>, %vreg53<internal>, -100; GR32Bit:%vreg53
	%vreg53<def> = LUI 3; GR32Bit:%vreg53
	READPM %vreg53<kill>, %vreg53<internal>, -68; GR32Bit:%vreg53
	%vreg53<def> = LUI 3; GR32Bit:%vreg53
	READPM %vreg53<kill>, %vreg53<internal>, -84; GR32Bit:%vreg53
	%vreg53<def> = LUI 3; GR32Bit:%vreg53
	READPM %vreg53<kill>, %vreg53<internal>, -116; GR32Bit:%vreg53
	%vreg54<def> = LUI 1; GR32Bit:%vreg54
	WRITEPM %vreg54<internal>, %vreg54<internal>, -116; GR32Bit:%vreg54
	%vreg54<def> = LUI 2; GR32Bit:%vreg54
	WRITEPM %vreg54<internal>, %vreg54<internal>, -116; GR32Bit:%vreg54
	%vreg54<def> = LUI 3; GR32Bit:%vreg54
	WRITEPM %vreg54<internal>, %vreg54<internal>, -116; GR32Bit:%vreg54
	%vreg54<def> = LUI 4; GR32Bit:%vreg54
	READPM %vreg54<kill>, %vreg54<internal>, -68; GR32Bit:%vreg54
	%vreg54<def> = LUI 4; GR32Bit:%vreg54
	READPM %vreg54<kill>, %vreg54<internal>, -84; GR32Bit:%vreg54
	%vreg54<def> = LUI 4; GR32Bit:%vreg54
	READPM %vreg54<kill>, %vreg54<internal>, -100; GR32Bit:%vreg54
	JAL <BB#2>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#2>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#2>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#2>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#2(124) BB#9(4)
********** MI Scheduling **********
main:BB#1 for.cond
  From: %vreg1<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg1
    To: BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
 Remaining: 0
Max Pressure: GR32Bit=2
Live In: 
Live Out: 
FP32BitLimit 32 Actual 0
GR32BitLimit 32 Actual 2
Excess PSets: 
2 subtrees:
  SU(0) in tree 0
  SU(1) in tree 0
  SU(2) in tree 1
SU(0):   %vreg1<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
   val SU(1): Latency=1 Reg=%vreg1

SU(1):   %vreg2<def> = LW %vreg1, 0; mem:LD4[%i] GR32Bit:%vreg2,%vreg1
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
   val SU(0): Latency=1 Reg=%vreg1
  Successors:
   val SU(4294967295): Latency=4 Reg=%vreg2

SU(2):   %vreg3<def> = ADDI %zero, 9; GR32Bit:%vreg3
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
   val SU(4294967295): Latency=1 Reg=%vreg3

SU(0):   %vreg1<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
   val SU(1): Latency=1 Reg=%vreg1

SU(1):   %vreg2<def> = LW %vreg1, 0; mem:LD4[%i] GR32Bit:%vreg2,%vreg1
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
   val SU(0): Latency=1 Reg=%vreg1
  Successors:
   val SU(4294967295): Latency=4 Reg=%vreg2

SU(2):   %vreg3<def> = ADDI %zero, 9; GR32Bit:%vreg3
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
   val SU(4294967295): Latency=1 Reg=%vreg3

Pick node SU(2)  ILP: 1 / 1 = 1 Tree: 1 @0
Scheduling %vreg3<def> = ADDI %zero, 9; GR32Bit:%vreg3
handleMove 96B -> 56B: %vreg3<def> = ADDI %zero, 9; GR32Bit:%vreg3
     %vreg3:	[96r,112r:0)  0@96r
        -->	[56r,112r:0)  0@56r
     zero:	EMPTY
        -->	EMPTY
Pick node SU(0)  ILP: 1 / 1 = 1 Tree: 0 @0
Scheduling %vreg1<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg1
Pick node SU(1)  ILP: 2 / 2 = 1 Tree: 0 @0
Scheduling %vreg2<def> = LW %vreg1, 0; mem:LD4[%i] GR32Bit:%vreg2,%vreg1
*** Final schedule for BB#1 ***
SU(2):   %vreg3<def> = ADDI %zero, 9; GR32Bit:%vreg3
SU(0):   %vreg1<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg1
SU(1):   %vreg2<def> = LW %vreg1, 0; mem:LD4[%i] GR32Bit:%vreg2,%vreg1

Partitioning instructions of the region into multiple CEs

*** Renumbered SlotIndexes 76-92 ***

*** Renumbered SlotIndexes 92-108 ***

*** Renumbered SlotIndexes 104-1080 ***

*** Renumbered SlotIndexes 116-1100 ***

*** Renumbered SlotIndexes 128-1128 ***

*** Renumbered SlotIndexes 140-1148 ***

*** Renumbered SlotIndexes 152-1176 ***

*** Renumbered SlotIndexes 164-1196 ***

*** Renumbered SlotIndexes 176-1216 ***

*** Renumbered SlotIndexes 188-1228 ***

*** Renumbered SlotIndexes 200-1240 ***

*** Renumbered SlotIndexes 212-1252 ***

*** Renumbered SlotIndexes 224-1264 ***

*** Renumbered SlotIndexes 236-1276 ***

*** Renumbered SlotIndexes 248-1288 ***

*** Renumbered SlotIndexes 260-1300 ***

*** Renumbered SlotIndexes 272-1312 ***

*** Renumbered SlotIndexes 284-1324 ***

*** Renumbered SlotIndexes 296-1336 ***

*** Renumbered SlotIndexes 308-1348 ***

*** Renumbered SlotIndexes 320-1360 ***

*** Renumbered SlotIndexes 332-1372 ***

*** Renumbered SlotIndexes 344-1384 ***

*** Renumbered SlotIndexes 356-1396 ***

*** Renumbered SlotIndexes 368-1408 ***
Dumping all live-out registers to memory

*** Renumbered SlotIndexes 380-1420 ***

*** Renumbered SlotIndexes 392-1432 ***

*** Renumbered SlotIndexes 404-1444 ***

*** Renumbered SlotIndexes 416-1456 ***

*** Renumbered SlotIndexes 428-1468 ***

*** Renumbered SlotIndexes 440-1480 ***

*** Renumbered SlotIndexes 452-1492 ***

*** Renumbered SlotIndexes 464-1504 ***

*** Renumbered SlotIndexes 476-1516 ***

*** Renumbered SlotIndexes 488-1528 ***

*** Renumbered SlotIndexes 500-1540 ***

*** Renumbered SlotIndexes 528-1552 ***

*** Renumbered SlotIndexes 540-1564 ***

*** Renumbered SlotIndexes 552-1576 ***

*** Renumbered SlotIndexes 564-1588 ***

*** Renumbered SlotIndexes 576-1600 ***
Shuffling instructions within the region such that successive instructions belong to the same pHyperOp to ease bundle creation
state of basic block BB#1BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#8
	%vreg3<def> = ADDI %zero, 9; GR32Bit:%vreg3
	%vreg57<def> = LUI 2; GR32Bit:%vreg57
	WRITEPM %vreg57<internal>, %vreg57<internal>, -68; GR32Bit:%vreg57
	%vreg57<def> = LUI 3; GR32Bit:%vreg57
	WRITEPM %vreg57<internal>, %vreg57<internal>, -68; GR32Bit:%vreg57
	%vreg57<def> = LUI 4; GR32Bit:%vreg57
	WRITEPM %vreg57<internal>, %vreg57<internal>, -68; GR32Bit:%vreg57
	%vreg58<def> = LUI 2; GR32Bit:%vreg58
	READPM %vreg58<kill>, %vreg58<internal>, -68; GR32Bit:%vreg58
	%vreg59<def> = LUI 3; GR32Bit:%vreg59
	READPM %vreg59<kill>, %vreg59<internal>, -68; GR32Bit:%vreg59
	%vreg60<def> = LUI 4; GR32Bit:%vreg60
	READPM %vreg60<kill>, %vreg60<internal>, -68; GR32Bit:%vreg60
	%vreg62<def> = LUI 0; GR32Bit:%vreg62
	READPM %vreg2<kill>, %vreg62<internal>, 0; GR32Bit:%vreg2,%vreg62
	%vreg67<def> = LUI 1; GR32Bit:%vreg67
	WRITEPM %vreg67<internal>, %vreg3<internal>, 4; GR32Bit:%vreg67,%vreg3
	%vreg68<def> = LUI 2; GR32Bit:%vreg68
	WRITEPM %vreg68<internal>, %vreg3<internal>, 0; GR32Bit:%vreg68,%vreg3
	%vreg69<def> = LUI 3; GR32Bit:%vreg69
	WRITEPM %vreg69<internal>, %vreg3<internal>, 4; GR32Bit:%vreg69,%vreg3
	BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg1<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg1
	%vreg55<def> = LUI 2; GR32Bit:%vreg55
	WRITEPM %vreg55<internal>, %vreg1<internal>, 0; GR32Bit:%vreg55,%vreg1
	%vreg57<def> = LUI 1; GR32Bit:%vreg57
	READPM %vreg57<kill>, %vreg57<internal>, -84; GR32Bit:%vreg57
	%vreg58<def> = LUI 1; GR32Bit:%vreg58
	WRITEPM %vreg58<internal>, %vreg58<internal>, -84; GR32Bit:%vreg58
	%vreg58<def> = LUI 3; GR32Bit:%vreg58
	WRITEPM %vreg58<internal>, %vreg58<internal>, -84; GR32Bit:%vreg58
	%vreg58<def> = LUI 4; GR32Bit:%vreg58
	WRITEPM %vreg58<internal>, %vreg58<internal>, -84; GR32Bit:%vreg58
	%vreg59<def> = LUI 3; GR32Bit:%vreg59
	READPM %vreg59<kill>, %vreg59<internal>, -84; GR32Bit:%vreg59
	%vreg60<def> = LUI 4; GR32Bit:%vreg60
	READPM %vreg60<kill>, %vreg60<internal>, -84; GR32Bit:%vreg60
	%vreg64<def> = LUI 1; GR32Bit:%vreg64
	READPM %vreg2<kill>, %vreg64<internal>, 0; GR32Bit:%vreg2,%vreg64
	READPM %vreg3<kill>, %vreg64<internal>, 4; GR32Bit:%vreg3,%vreg64
	BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg56<def> = LUI 2; GR32Bit:%vreg56
	READPM %vreg1<kill>, %vreg56<internal>, 0; GR32Bit:%vreg1,%vreg56
	%vreg2<def> = LW %vreg1, 0; mem:LD4[%i] GR32Bit:%vreg2,%vreg1
	%vreg57<def> = LUI 1; GR32Bit:%vreg57
	READPM %vreg57<kill>, %vreg57<internal>, -100; GR32Bit:%vreg57
	%vreg57<def> = LUI 1; GR32Bit:%vreg57
	READPM %vreg57<kill>, %vreg57<internal>, -116; GR32Bit:%vreg57
	%vreg58<def> = LUI 2; GR32Bit:%vreg58
	READPM %vreg58<kill>, %vreg58<internal>, -100; GR32Bit:%vreg58
	%vreg58<def> = LUI 2; GR32Bit:%vreg58
	READPM %vreg58<kill>, %vreg58<internal>, -116; GR32Bit:%vreg58
	%vreg59<def> = LUI 1; GR32Bit:%vreg59
	WRITEPM %vreg59<internal>, %vreg59<internal>, -100; GR32Bit:%vreg59
	%vreg59<def> = LUI 2; GR32Bit:%vreg59
	WRITEPM %vreg59<internal>, %vreg59<internal>, -100; GR32Bit:%vreg59
	%vreg59<def> = LUI 4; GR32Bit:%vreg59
	WRITEPM %vreg59<internal>, %vreg59<internal>, -100; GR32Bit:%vreg59
	%vreg59<def> = LUI 3; GR32Bit:%vreg59
	READPM %vreg59<kill>, %vreg59<internal>, -116; GR32Bit:%vreg59
	%vreg60<def> = LUI 1; GR32Bit:%vreg60
	WRITEPM %vreg60<internal>, %vreg60<internal>, -116; GR32Bit:%vreg60
	%vreg60<def> = LUI 2; GR32Bit:%vreg60
	WRITEPM %vreg60<internal>, %vreg60<internal>, -116; GR32Bit:%vreg60
	%vreg60<def> = LUI 3; GR32Bit:%vreg60
	WRITEPM %vreg60<internal>, %vreg60<internal>, -116; GR32Bit:%vreg60
	%vreg60<def> = LUI 4; GR32Bit:%vreg60
	READPM %vreg60<kill>, %vreg60<internal>, -100; GR32Bit:%vreg60
	%vreg61<def> = LUI 0; GR32Bit:%vreg61
	WRITEPM %vreg61<internal>, %vreg2<internal>, 0; GR32Bit:%vreg61,%vreg2
	%vreg63<def> = LUI 1; GR32Bit:%vreg63
	WRITEPM %vreg63<internal>, %vreg2<internal>, 0; GR32Bit:%vreg63,%vreg2
	%vreg65<def> = LUI 3; GR32Bit:%vreg65
	WRITEPM %vreg65<internal>, %vreg2<internal>, 0; GR32Bit:%vreg65,%vreg2
	READPM %vreg3<kill>, %vreg56<internal>, 0; GR32Bit:%vreg3,%vreg56
	BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg66<def> = LUI 3; GR32Bit:%vreg66
	READPM %vreg2<kill>, %vreg66<internal>, 0; GR32Bit:%vreg2,%vreg66
	READPM %vreg3<kill>, %vreg66<internal>, 4; GR32Bit:%vreg3,%vreg66
	BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg51<def> = LUI 2; GR32Bit:%vreg51
	WRITEPM %vreg51<internal>, %vreg51<internal>, -68; GR32Bit:%vreg51
	%vreg51<def> = LUI 3; GR32Bit:%vreg51
	WRITEPM %vreg51<internal>, %vreg51<internal>, -68; GR32Bit:%vreg51
	%vreg51<def> = LUI 4; GR32Bit:%vreg51
	WRITEPM %vreg51<internal>, %vreg51<internal>, -68; GR32Bit:%vreg51
	%vreg51<def> = LUI 1; GR32Bit:%vreg51
	READPM %vreg51<kill>, %vreg51<internal>, -84; GR32Bit:%vreg51
	%vreg51<def> = LUI 1; GR32Bit:%vreg51
	READPM %vreg51<kill>, %vreg51<internal>, -100; GR32Bit:%vreg51
	%vreg51<def> = LUI 1; GR32Bit:%vreg51
	READPM %vreg51<kill>, %vreg51<internal>, -116; GR32Bit:%vreg51
	%vreg52<def> = LUI 1; GR32Bit:%vreg52
	WRITEPM %vreg52<internal>, %vreg52<internal>, -84; GR32Bit:%vreg52
	%vreg52<def> = LUI 3; GR32Bit:%vreg52
	WRITEPM %vreg52<internal>, %vreg52<internal>, -84; GR32Bit:%vreg52
	%vreg52<def> = LUI 4; GR32Bit:%vreg52
	WRITEPM %vreg52<internal>, %vreg52<internal>, -84; GR32Bit:%vreg52
	%vreg52<def> = LUI 2; GR32Bit:%vreg52
	READPM %vreg52<kill>, %vreg52<internal>, -68; GR32Bit:%vreg52
	%vreg52<def> = LUI 2; GR32Bit:%vreg52
	READPM %vreg52<kill>, %vreg52<internal>, -100; GR32Bit:%vreg52
	%vreg52<def> = LUI 2; GR32Bit:%vreg52
	READPM %vreg52<kill>, %vreg52<internal>, -116; GR32Bit:%vreg52
	%vreg53<def> = LUI 1; GR32Bit:%vreg53
	WRITEPM %vreg53<internal>, %vreg53<internal>, -100; GR32Bit:%vreg53
	%vreg53<def> = LUI 2; GR32Bit:%vreg53
	WRITEPM %vreg53<internal>, %vreg53<internal>, -100; GR32Bit:%vreg53
	%vreg53<def> = LUI 4; GR32Bit:%vreg53
	WRITEPM %vreg53<internal>, %vreg53<internal>, -100; GR32Bit:%vreg53
	%vreg53<def> = LUI 3; GR32Bit:%vreg53
	READPM %vreg53<kill>, %vreg53<internal>, -68; GR32Bit:%vreg53
	%vreg53<def> = LUI 3; GR32Bit:%vreg53
	READPM %vreg53<kill>, %vreg53<internal>, -84; GR32Bit:%vreg53
	%vreg53<def> = LUI 3; GR32Bit:%vreg53
	READPM %vreg53<kill>, %vreg53<internal>, -116; GR32Bit:%vreg53
	%vreg54<def> = LUI 1; GR32Bit:%vreg54
	WRITEPM %vreg54<internal>, %vreg54<internal>, -116; GR32Bit:%vreg54
	%vreg54<def> = LUI 2; GR32Bit:%vreg54
	WRITEPM %vreg54<internal>, %vreg54<internal>, -116; GR32Bit:%vreg54
	%vreg54<def> = LUI 3; GR32Bit:%vreg54
	WRITEPM %vreg54<internal>, %vreg54<internal>, -116; GR32Bit:%vreg54
	%vreg54<def> = LUI 4; GR32Bit:%vreg54
	READPM %vreg54<kill>, %vreg54<internal>, -68; GR32Bit:%vreg54
	%vreg54<def> = LUI 4; GR32Bit:%vreg54
	READPM %vreg54<kill>, %vreg54<internal>, -84; GR32Bit:%vreg54
	%vreg54<def> = LUI 4; GR32Bit:%vreg54
	READPM %vreg54<kill>, %vreg54<internal>, -100; GR32Bit:%vreg54
	JAL <BB#2>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#2>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#2>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#2>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#2(124) BB#9(4)
BB before region shuffle:BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#8
	%vreg3<def> = ADDI %zero, 9; GR32Bit:%vreg3
	%vreg57<def> = LUI 2; GR32Bit:%vreg57
	WRITEPM %vreg57<internal>, %vreg57<internal>, -68; GR32Bit:%vreg57
	%vreg57<def> = LUI 3; GR32Bit:%vreg57
	WRITEPM %vreg57<internal>, %vreg57<internal>, -68; GR32Bit:%vreg57
	%vreg57<def> = LUI 4; GR32Bit:%vreg57
	WRITEPM %vreg57<internal>, %vreg57<internal>, -68; GR32Bit:%vreg57
	%vreg58<def> = LUI 2; GR32Bit:%vreg58
	READPM %vreg58<kill>, %vreg58<internal>, -68; GR32Bit:%vreg58
	%vreg59<def> = LUI 3; GR32Bit:%vreg59
	READPM %vreg59<kill>, %vreg59<internal>, -68; GR32Bit:%vreg59
	%vreg60<def> = LUI 4; GR32Bit:%vreg60
	READPM %vreg60<kill>, %vreg60<internal>, -68; GR32Bit:%vreg60
	%vreg62<def> = LUI 0; GR32Bit:%vreg62
	READPM %vreg2<kill>, %vreg62<internal>, 0; GR32Bit:%vreg2,%vreg62
	%vreg67<def> = LUI 1; GR32Bit:%vreg67
	WRITEPM %vreg67<internal>, %vreg3<internal>, 4; GR32Bit:%vreg67,%vreg3
	%vreg68<def> = LUI 2; GR32Bit:%vreg68
	WRITEPM %vreg68<internal>, %vreg3<internal>, 0; GR32Bit:%vreg68,%vreg3
	%vreg69<def> = LUI 3; GR32Bit:%vreg69
	WRITEPM %vreg69<internal>, %vreg3<internal>, 4; GR32Bit:%vreg69,%vreg3
	BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg1<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg1
	%vreg55<def> = LUI 2; GR32Bit:%vreg55
	WRITEPM %vreg55<internal>, %vreg1<internal>, 0; GR32Bit:%vreg55,%vreg1
	%vreg57<def> = LUI 1; GR32Bit:%vreg57
	READPM %vreg57<kill>, %vreg57<internal>, -84; GR32Bit:%vreg57
	%vreg58<def> = LUI 1; GR32Bit:%vreg58
	WRITEPM %vreg58<internal>, %vreg58<internal>, -84; GR32Bit:%vreg58
	%vreg58<def> = LUI 3; GR32Bit:%vreg58
	WRITEPM %vreg58<internal>, %vreg58<internal>, -84; GR32Bit:%vreg58
	%vreg58<def> = LUI 4; GR32Bit:%vreg58
	WRITEPM %vreg58<internal>, %vreg58<internal>, -84; GR32Bit:%vreg58
	%vreg59<def> = LUI 3; GR32Bit:%vreg59
	READPM %vreg59<kill>, %vreg59<internal>, -84; GR32Bit:%vreg59
	%vreg60<def> = LUI 4; GR32Bit:%vreg60
	READPM %vreg60<kill>, %vreg60<internal>, -84; GR32Bit:%vreg60
	%vreg64<def> = LUI 1; GR32Bit:%vreg64
	READPM %vreg2<kill>, %vreg64<internal>, 0; GR32Bit:%vreg2,%vreg64
	READPM %vreg3<kill>, %vreg64<internal>, 4; GR32Bit:%vreg3,%vreg64
	BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg56<def> = LUI 2; GR32Bit:%vreg56
	READPM %vreg1<kill>, %vreg56<internal>, 0; GR32Bit:%vreg1,%vreg56
	%vreg2<def> = LW %vreg1, 0; mem:LD4[%i] GR32Bit:%vreg2,%vreg1
	%vreg57<def> = LUI 1; GR32Bit:%vreg57
	READPM %vreg57<kill>, %vreg57<internal>, -100; GR32Bit:%vreg57
	%vreg57<def> = LUI 1; GR32Bit:%vreg57
	READPM %vreg57<kill>, %vreg57<internal>, -116; GR32Bit:%vreg57
	%vreg58<def> = LUI 2; GR32Bit:%vreg58
	READPM %vreg58<kill>, %vreg58<internal>, -100; GR32Bit:%vreg58
	%vreg58<def> = LUI 2; GR32Bit:%vreg58
	READPM %vreg58<kill>, %vreg58<internal>, -116; GR32Bit:%vreg58
	%vreg59<def> = LUI 1; GR32Bit:%vreg59
	WRITEPM %vreg59<internal>, %vreg59<internal>, -100; GR32Bit:%vreg59
	%vreg59<def> = LUI 2; GR32Bit:%vreg59
	WRITEPM %vreg59<internal>, %vreg59<internal>, -100; GR32Bit:%vreg59
	%vreg59<def> = LUI 4; GR32Bit:%vreg59
	WRITEPM %vreg59<internal>, %vreg59<internal>, -100; GR32Bit:%vreg59
	%vreg59<def> = LUI 3; GR32Bit:%vreg59
	READPM %vreg59<kill>, %vreg59<internal>, -116; GR32Bit:%vreg59
	%vreg60<def> = LUI 1; GR32Bit:%vreg60
	WRITEPM %vreg60<internal>, %vreg60<internal>, -116; GR32Bit:%vreg60
	%vreg60<def> = LUI 2; GR32Bit:%vreg60
	WRITEPM %vreg60<internal>, %vreg60<internal>, -116; GR32Bit:%vreg60
	%vreg60<def> = LUI 3; GR32Bit:%vreg60
	WRITEPM %vreg60<internal>, %vreg60<internal>, -116; GR32Bit:%vreg60
	%vreg60<def> = LUI 4; GR32Bit:%vreg60
	READPM %vreg60<kill>, %vreg60<internal>, -100; GR32Bit:%vreg60
	%vreg61<def> = LUI 0; GR32Bit:%vreg61
	WRITEPM %vreg61<internal>, %vreg2<internal>, 0; GR32Bit:%vreg61,%vreg2
	%vreg63<def> = LUI 1; GR32Bit:%vreg63
	WRITEPM %vreg63<internal>, %vreg2<internal>, 0; GR32Bit:%vreg63,%vreg2
	%vreg65<def> = LUI 3; GR32Bit:%vreg65
	WRITEPM %vreg65<internal>, %vreg2<internal>, 0; GR32Bit:%vreg65,%vreg2
	READPM %vreg3<kill>, %vreg56<internal>, 0; GR32Bit:%vreg3,%vreg56
	BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg66<def> = LUI 3; GR32Bit:%vreg66
	READPM %vreg2<kill>, %vreg66<internal>, 0; GR32Bit:%vreg2,%vreg66
	READPM %vreg3<kill>, %vreg66<internal>, 4; GR32Bit:%vreg3,%vreg66
	BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg51<def> = LUI 2; GR32Bit:%vreg51
	WRITEPM %vreg51<internal>, %vreg51<internal>, -68; GR32Bit:%vreg51
	%vreg51<def> = LUI 3; GR32Bit:%vreg51
	WRITEPM %vreg51<internal>, %vreg51<internal>, -68; GR32Bit:%vreg51
	%vreg51<def> = LUI 4; GR32Bit:%vreg51
	WRITEPM %vreg51<internal>, %vreg51<internal>, -68; GR32Bit:%vreg51
	%vreg51<def> = LUI 1; GR32Bit:%vreg51
	READPM %vreg51<kill>, %vreg51<internal>, -84; GR32Bit:%vreg51
	%vreg51<def> = LUI 1; GR32Bit:%vreg51
	READPM %vreg51<kill>, %vreg51<internal>, -100; GR32Bit:%vreg51
	%vreg51<def> = LUI 1; GR32Bit:%vreg51
	READPM %vreg51<kill>, %vreg51<internal>, -116; GR32Bit:%vreg51
	%vreg52<def> = LUI 1; GR32Bit:%vreg52
	WRITEPM %vreg52<internal>, %vreg52<internal>, -84; GR32Bit:%vreg52
	%vreg52<def> = LUI 3; GR32Bit:%vreg52
	WRITEPM %vreg52<internal>, %vreg52<internal>, -84; GR32Bit:%vreg52
	%vreg52<def> = LUI 4; GR32Bit:%vreg52
	WRITEPM %vreg52<internal>, %vreg52<internal>, -84; GR32Bit:%vreg52
	%vreg52<def> = LUI 2; GR32Bit:%vreg52
	READPM %vreg52<kill>, %vreg52<internal>, -68; GR32Bit:%vreg52
	%vreg52<def> = LUI 2; GR32Bit:%vreg52
	READPM %vreg52<kill>, %vreg52<internal>, -100; GR32Bit:%vreg52
	%vreg52<def> = LUI 2; GR32Bit:%vreg52
	READPM %vreg52<kill>, %vreg52<internal>, -116; GR32Bit:%vreg52
	%vreg53<def> = LUI 1; GR32Bit:%vreg53
	WRITEPM %vreg53<internal>, %vreg53<internal>, -100; GR32Bit:%vreg53
	%vreg53<def> = LUI 2; GR32Bit:%vreg53
	WRITEPM %vreg53<internal>, %vreg53<internal>, -100; GR32Bit:%vreg53
	%vreg53<def> = LUI 4; GR32Bit:%vreg53
	WRITEPM %vreg53<internal>, %vreg53<internal>, -100; GR32Bit:%vreg53
	%vreg53<def> = LUI 3; GR32Bit:%vreg53
	READPM %vreg53<kill>, %vreg53<internal>, -68; GR32Bit:%vreg53
	%vreg53<def> = LUI 3; GR32Bit:%vreg53
	READPM %vreg53<kill>, %vreg53<internal>, -84; GR32Bit:%vreg53
	%vreg53<def> = LUI 3; GR32Bit:%vreg53
	READPM %vreg53<kill>, %vreg53<internal>, -116; GR32Bit:%vreg53
	%vreg54<def> = LUI 1; GR32Bit:%vreg54
	WRITEPM %vreg54<internal>, %vreg54<internal>, -116; GR32Bit:%vreg54
	%vreg54<def> = LUI 2; GR32Bit:%vreg54
	WRITEPM %vreg54<internal>, %vreg54<internal>, -116; GR32Bit:%vreg54
	%vreg54<def> = LUI 3; GR32Bit:%vreg54
	WRITEPM %vreg54<internal>, %vreg54<internal>, -116; GR32Bit:%vreg54
	%vreg54<def> = LUI 4; GR32Bit:%vreg54
	READPM %vreg54<kill>, %vreg54<internal>, -68; GR32Bit:%vreg54
	%vreg54<def> = LUI 4; GR32Bit:%vreg54
	READPM %vreg54<kill>, %vreg54<internal>, -84; GR32Bit:%vreg54
	%vreg54<def> = LUI 4; GR32Bit:%vreg54
	READPM %vreg54<kill>, %vreg54<internal>, -100; GR32Bit:%vreg54
	JAL <BB#2>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#2>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#2>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#2>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#2(124) BB#9(4)
Merging regions of basic block BB#1
merging regions:0 and 1
merging regions:0 and 1
merging regions:0 and 1
merging regions:0 and 1
After Shuffling basic block, state of BB#1:
BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#8
	%vreg3<def> = ADDI %zero, 9; GR32Bit:%vreg3
	%vreg57<def> = LUI 2; GR32Bit:%vreg57
	WRITEPM %vreg57<internal>, %vreg57<internal>, -68; GR32Bit:%vreg57
	%vreg57<def> = LUI 3; GR32Bit:%vreg57
	WRITEPM %vreg57<internal>, %vreg57<internal>, -68; GR32Bit:%vreg57
	%vreg57<def> = LUI 4; GR32Bit:%vreg57
	WRITEPM %vreg57<internal>, %vreg57<internal>, -68; GR32Bit:%vreg57
	%vreg58<def> = LUI 2; GR32Bit:%vreg58
	READPM %vreg58<kill>, %vreg58<internal>, -68; GR32Bit:%vreg58
	%vreg59<def> = LUI 3; GR32Bit:%vreg59
	READPM %vreg59<kill>, %vreg59<internal>, -68; GR32Bit:%vreg59
	%vreg60<def> = LUI 4; GR32Bit:%vreg60
	READPM %vreg60<kill>, %vreg60<internal>, -68; GR32Bit:%vreg60
	%vreg62<def> = LUI 0; GR32Bit:%vreg62
	READPM %vreg2<kill>, %vreg62<internal>, 0; GR32Bit:%vreg2,%vreg62
	%vreg67<def> = LUI 1; GR32Bit:%vreg67
	WRITEPM %vreg67<internal>, %vreg3<internal>, 4; GR32Bit:%vreg67,%vreg3
	%vreg68<def> = LUI 2; GR32Bit:%vreg68
	WRITEPM %vreg68<internal>, %vreg3<internal>, 0; GR32Bit:%vreg68,%vreg3
	%vreg69<def> = LUI 3; GR32Bit:%vreg69
	WRITEPM %vreg69<internal>, %vreg3<internal>, 4; GR32Bit:%vreg69,%vreg3
	BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#2>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg1<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg1
	%vreg55<def> = LUI 2; GR32Bit:%vreg55
	WRITEPM %vreg55<internal>, %vreg1<internal>, 0; GR32Bit:%vreg55,%vreg1
	%vreg57<def> = LUI 1; GR32Bit:%vreg57
	READPM %vreg57<kill>, %vreg57<internal>, -84; GR32Bit:%vreg57
	%vreg58<def> = LUI 1; GR32Bit:%vreg58
	WRITEPM %vreg58<internal>, %vreg58<internal>, -84; GR32Bit:%vreg58
	%vreg58<def> = LUI 3; GR32Bit:%vreg58
	WRITEPM %vreg58<internal>, %vreg58<internal>, -84; GR32Bit:%vreg58
	%vreg58<def> = LUI 4; GR32Bit:%vreg58
	WRITEPM %vreg58<internal>, %vreg58<internal>, -84; GR32Bit:%vreg58
	%vreg59<def> = LUI 3; GR32Bit:%vreg59
	READPM %vreg59<kill>, %vreg59<internal>, -84; GR32Bit:%vreg59
	%vreg60<def> = LUI 4; GR32Bit:%vreg60
	READPM %vreg60<kill>, %vreg60<internal>, -84; GR32Bit:%vreg60
	%vreg64<def> = LUI 1; GR32Bit:%vreg64
	READPM %vreg2<kill>, %vreg64<internal>, 0; GR32Bit:%vreg2,%vreg64
	READPM %vreg3<kill>, %vreg64<internal>, 4; GR32Bit:%vreg3,%vreg64
	BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#2>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg56<def> = LUI 2; GR32Bit:%vreg56
	READPM %vreg1<kill>, %vreg56<internal>, 0; GR32Bit:%vreg1,%vreg56
	%vreg2<def> = LW %vreg1, 0; mem:LD4[%i] GR32Bit:%vreg2,%vreg1
	%vreg57<def> = LUI 1; GR32Bit:%vreg57
	READPM %vreg57<kill>, %vreg57<internal>, -100; GR32Bit:%vreg57
	%vreg57<def> = LUI 1; GR32Bit:%vreg57
	READPM %vreg57<kill>, %vreg57<internal>, -116; GR32Bit:%vreg57
	%vreg58<def> = LUI 2; GR32Bit:%vreg58
	READPM %vreg58<kill>, %vreg58<internal>, -100; GR32Bit:%vreg58
	%vreg58<def> = LUI 2; GR32Bit:%vreg58
	READPM %vreg58<kill>, %vreg58<internal>, -116; GR32Bit:%vreg58
	%vreg59<def> = LUI 1; GR32Bit:%vreg59
	WRITEPM %vreg59<internal>, %vreg59<internal>, -100; GR32Bit:%vreg59
	%vreg59<def> = LUI 2; GR32Bit:%vreg59
	WRITEPM %vreg59<internal>, %vreg59<internal>, -100; GR32Bit:%vreg59
	%vreg59<def> = LUI 4; GR32Bit:%vreg59
	WRITEPM %vreg59<internal>, %vreg59<internal>, -100; GR32Bit:%vreg59
	%vreg59<def> = LUI 3; GR32Bit:%vreg59
	READPM %vreg59<kill>, %vreg59<internal>, -116; GR32Bit:%vreg59
	%vreg60<def> = LUI 1; GR32Bit:%vreg60
	WRITEPM %vreg60<internal>, %vreg60<internal>, -116; GR32Bit:%vreg60
	%vreg60<def> = LUI 2; GR32Bit:%vreg60
	WRITEPM %vreg60<internal>, %vreg60<internal>, -116; GR32Bit:%vreg60
	%vreg60<def> = LUI 3; GR32Bit:%vreg60
	WRITEPM %vreg60<internal>, %vreg60<internal>, -116; GR32Bit:%vreg60
	%vreg60<def> = LUI 4; GR32Bit:%vreg60
	READPM %vreg60<kill>, %vreg60<internal>, -100; GR32Bit:%vreg60
	%vreg61<def> = LUI 0; GR32Bit:%vreg61
	WRITEPM %vreg61<internal>, %vreg2<internal>, 0; GR32Bit:%vreg61,%vreg2
	%vreg63<def> = LUI 1; GR32Bit:%vreg63
	WRITEPM %vreg63<internal>, %vreg2<internal>, 0; GR32Bit:%vreg63,%vreg2
	%vreg65<def> = LUI 3; GR32Bit:%vreg65
	WRITEPM %vreg65<internal>, %vreg2<internal>, 0; GR32Bit:%vreg65,%vreg2
	READPM %vreg3<kill>, %vreg56<internal>, 0; GR32Bit:%vreg3,%vreg56
	BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#2>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg66<def> = LUI 3; GR32Bit:%vreg66
	READPM %vreg2<kill>, %vreg66<internal>, 0; GR32Bit:%vreg2,%vreg66
	READPM %vreg3<kill>, %vreg66<internal>, 4; GR32Bit:%vreg3,%vreg66
	BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg51<def> = LUI 2; GR32Bit:%vreg51
	WRITEPM %vreg51<internal>, %vreg51<internal>, -68; GR32Bit:%vreg51
	%vreg51<def> = LUI 3; GR32Bit:%vreg51
	WRITEPM %vreg51<internal>, %vreg51<internal>, -68; GR32Bit:%vreg51
	%vreg51<def> = LUI 4; GR32Bit:%vreg51
	WRITEPM %vreg51<internal>, %vreg51<internal>, -68; GR32Bit:%vreg51
	%vreg51<def> = LUI 1; GR32Bit:%vreg51
	READPM %vreg51<kill>, %vreg51<internal>, -84; GR32Bit:%vreg51
	%vreg51<def> = LUI 1; GR32Bit:%vreg51
	READPM %vreg51<kill>, %vreg51<internal>, -100; GR32Bit:%vreg51
	%vreg51<def> = LUI 1; GR32Bit:%vreg51
	READPM %vreg51<kill>, %vreg51<internal>, -116; GR32Bit:%vreg51
	%vreg52<def> = LUI 1; GR32Bit:%vreg52
	WRITEPM %vreg52<internal>, %vreg52<internal>, -84; GR32Bit:%vreg52
	%vreg52<def> = LUI 3; GR32Bit:%vreg52
	WRITEPM %vreg52<internal>, %vreg52<internal>, -84; GR32Bit:%vreg52
	%vreg52<def> = LUI 4; GR32Bit:%vreg52
	WRITEPM %vreg52<internal>, %vreg52<internal>, -84; GR32Bit:%vreg52
	%vreg52<def> = LUI 2; GR32Bit:%vreg52
	READPM %vreg52<kill>, %vreg52<internal>, -68; GR32Bit:%vreg52
	%vreg52<def> = LUI 2; GR32Bit:%vreg52
	READPM %vreg52<kill>, %vreg52<internal>, -100; GR32Bit:%vreg52
	%vreg52<def> = LUI 2; GR32Bit:%vreg52
	READPM %vreg52<kill>, %vreg52<internal>, -116; GR32Bit:%vreg52
	%vreg53<def> = LUI 1; GR32Bit:%vreg53
	WRITEPM %vreg53<internal>, %vreg53<internal>, -100; GR32Bit:%vreg53
	%vreg53<def> = LUI 2; GR32Bit:%vreg53
	WRITEPM %vreg53<internal>, %vreg53<internal>, -100; GR32Bit:%vreg53
	%vreg53<def> = LUI 4; GR32Bit:%vreg53
	WRITEPM %vreg53<internal>, %vreg53<internal>, -100; GR32Bit:%vreg53
	%vreg53<def> = LUI 3; GR32Bit:%vreg53
	READPM %vreg53<kill>, %vreg53<internal>, -68; GR32Bit:%vreg53
	%vreg53<def> = LUI 3; GR32Bit:%vreg53
	READPM %vreg53<kill>, %vreg53<internal>, -84; GR32Bit:%vreg53
	%vreg53<def> = LUI 3; GR32Bit:%vreg53
	READPM %vreg53<kill>, %vreg53<internal>, -116; GR32Bit:%vreg53
	%vreg54<def> = LUI 1; GR32Bit:%vreg54
	WRITEPM %vreg54<internal>, %vreg54<internal>, -116; GR32Bit:%vreg54
	%vreg54<def> = LUI 2; GR32Bit:%vreg54
	WRITEPM %vreg54<internal>, %vreg54<internal>, -116; GR32Bit:%vreg54
	%vreg54<def> = LUI 3; GR32Bit:%vreg54
	WRITEPM %vreg54<internal>, %vreg54<internal>, -116; GR32Bit:%vreg54
	%vreg54<def> = LUI 4; GR32Bit:%vreg54
	READPM %vreg54<kill>, %vreg54<internal>, -68; GR32Bit:%vreg54
	%vreg54<def> = LUI 4; GR32Bit:%vreg54
	READPM %vreg54<kill>, %vreg54<internal>, -84; GR32Bit:%vreg54
	%vreg54<def> = LUI 4; GR32Bit:%vreg54
	READPM %vreg54<kill>, %vreg54<internal>, -100; GR32Bit:%vreg54
	JAL <BB#2>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#2(124) BB#9(4)
Creating pHyperOp bundles for CEs
Starting new basic block BB#2
********** MI Scheduling **********
main:BB#2 for.body
  From: %vreg4<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg4
    To: End Remaining: 0
Max Pressure: GR32Bit=1
Live In: 
Live Out: 
FP32BitLimit 32 Actual 0
GR32BitLimit 32 Actual 1
Excess PSets: 
1 subtrees:
  SU(0) in tree 0
  SU(1) in tree 0
SU(0):   %vreg4<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg4
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
   val SU(1): Latency=1 Reg=%vreg4

SU(1):   SW %zero, %vreg4, 0; mem:ST4[%j] GR32Bit:%vreg4
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
   val SU(0): Latency=1 Reg=%vreg4
  Successors:
   ch  SU(4294967295) *: Latency=0

SU(0):   %vreg4<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg4
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
   val SU(1): Latency=1 Reg=%vreg4

SU(1):   SW %zero, %vreg4, 0; mem:ST4[%j] GR32Bit:%vreg4
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
   val SU(0): Latency=1 Reg=%vreg4
  Successors:
   ch  SU(4294967295) *: Latency=0

Pick node SU(0)  ILP: 1 / 1 = 1 Tree: 0 @0
Scheduling %vreg4<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg4
Pick node SU(1)  ILP: 2 / 2 = 1 Tree: 0 @0
Scheduling SW %zero, %vreg4, 0; mem:ST4[%j] GR32Bit:%vreg4
*** Final schedule for BB#2 ***
SU(0):   %vreg4<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg4
SU(1):   SW %zero, %vreg4, 0; mem:ST4[%j] GR32Bit:%vreg4

Partitioning instructions of the region into multiple CEs

*** Renumbered SlotIndexes 1084-1612 ***

*** Renumbered SlotIndexes 1096-1624 ***
Shuffling instructions within the region such that successive instructions belong to the same pHyperOp to ease bundle creation
state of basic block BB#2BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	%vreg4<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg4
	%vreg70<def> = LUI 1; GR32Bit:%vreg70
	WRITEPM %vreg70<internal>, %vreg4<internal>, 0; GR32Bit:%vreg70,%vreg4
	%vreg71<def> = LUI 1; GR32Bit:%vreg71
	READPM %vreg4<kill>, %vreg71<internal>, 0; GR32Bit:%vreg4,%vreg71
	SW %zero, %vreg4, 0; mem:ST4[%j] GR32Bit:%vreg4
    Successors according to CFG: BB#3
BB before region shuffle:BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	%vreg4<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg4
	%vreg70<def> = LUI 1; GR32Bit:%vreg70
	WRITEPM %vreg70<internal>, %vreg4<internal>, 0; GR32Bit:%vreg70,%vreg4
	%vreg71<def> = LUI 1; GR32Bit:%vreg71
	READPM %vreg4<kill>, %vreg71<internal>, 0; GR32Bit:%vreg4,%vreg71
	SW %zero, %vreg4, 0; mem:ST4[%j] GR32Bit:%vreg4
    Successors according to CFG: BB#3
After Shuffling basic block, state of BB#2:
BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	%vreg4<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg4
	%vreg70<def> = LUI 1; GR32Bit:%vreg70
	WRITEPM %vreg70<internal>, %vreg4<internal>, 0; GR32Bit:%vreg70,%vreg4
	%vreg71<def> = LUI 1; GR32Bit:%vreg71
	READPM %vreg4<kill>, %vreg71<internal>, 0; GR32Bit:%vreg4,%vreg71
	SW %zero, %vreg4, 0; mem:ST4[%j] GR32Bit:%vreg4
    Successors according to CFG: BB#3
Creating pHyperOp bundles for CEs
Starting new basic block BB#3
Partitioning instructions of the region into multiple CEs

*** Renumbered SlotIndexes 1156-1636 ***

*** Renumbered SlotIndexes 1168-1648 ***

*** Renumbered SlotIndexes 1180-1660 ***

*** Renumbered SlotIndexes 1192-1672 ***

*** Renumbered SlotIndexes 1204-1684 ***

*** Renumbered SlotIndexes 1216-1696 ***

*** Renumbered SlotIndexes 1228-1708 ***

*** Renumbered SlotIndexes 1240-1720 ***

*** Renumbered SlotIndexes 1252-1732 ***

*** Renumbered SlotIndexes 1264-1744 ***

*** Renumbered SlotIndexes 1276-1756 ***

*** Renumbered SlotIndexes 1288-1768 ***

*** Renumbered SlotIndexes 1300-1780 ***

*** Renumbered SlotIndexes 1312-1792 ***

*** Renumbered SlotIndexes 1324-1804 ***

*** Renumbered SlotIndexes 1336-1816 ***

*** Renumbered SlotIndexes 1348-1828 ***

*** Renumbered SlotIndexes 1360-1840 ***

*** Renumbered SlotIndexes 1372-1852 ***

*** Renumbered SlotIndexes 1384-1864 ***

*** Renumbered SlotIndexes 1396-1876 ***

*** Renumbered SlotIndexes 1408-1888 ***

*** Renumbered SlotIndexes 1420-1900 ***

*** Renumbered SlotIndexes 1432-1912 ***
Dumping all live-out registers to memory

*** Renumbered SlotIndexes 1452-1924 ***

*** Renumbered SlotIndexes 1464-1936 ***

*** Renumbered SlotIndexes 1476-1948 ***

*** Renumbered SlotIndexes 1488-1960 ***

*** Renumbered SlotIndexes 1500-1972 ***
Shuffling instructions within the region such that successive instructions belong to the same pHyperOp to ease bundle creation
state of basic block BB#3BB#3: derived from LLVM BB %for.cond1
    Predecessors according to CFG: BB#2 BB#7
	%vreg5<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg5
	%vreg6<def> = LW %vreg5, 0; mem:LD4[%j] GR32Bit:%vreg6,%vreg5
	%vreg7<def> = ADDI %zero, 9; GR32Bit:%vreg7
	BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
	%vreg72<def> = LUI 2; GR32Bit:%vreg72
	WRITEPM %vreg72<internal>, %vreg72<internal>, -68; GR32Bit:%vreg72
	%vreg72<def> = LUI 3; GR32Bit:%vreg72
	WRITEPM %vreg72<internal>, %vreg72<internal>, -68; GR32Bit:%vreg72
	%vreg72<def> = LUI 4; GR32Bit:%vreg72
	WRITEPM %vreg72<internal>, %vreg72<internal>, -68; GR32Bit:%vreg72
	%vreg72<def> = LUI 1; GR32Bit:%vreg72
	READPM %vreg72<kill>, %vreg72<internal>, -84; GR32Bit:%vreg72
	%vreg72<def> = LUI 1; GR32Bit:%vreg72
	READPM %vreg72<kill>, %vreg72<internal>, -100; GR32Bit:%vreg72
	%vreg72<def> = LUI 1; GR32Bit:%vreg72
	READPM %vreg72<kill>, %vreg72<internal>, -116; GR32Bit:%vreg72
	%vreg73<def> = LUI 1; GR32Bit:%vreg73
	WRITEPM %vreg73<internal>, %vreg73<internal>, -84; GR32Bit:%vreg73
	%vreg73<def> = LUI 3; GR32Bit:%vreg73
	WRITEPM %vreg73<internal>, %vreg73<internal>, -84; GR32Bit:%vreg73
	%vreg73<def> = LUI 4; GR32Bit:%vreg73
	WRITEPM %vreg73<internal>, %vreg73<internal>, -84; GR32Bit:%vreg73
	%vreg73<def> = LUI 2; GR32Bit:%vreg73
	READPM %vreg73<kill>, %vreg73<internal>, -68; GR32Bit:%vreg73
	%vreg73<def> = LUI 2; GR32Bit:%vreg73
	READPM %vreg73<kill>, %vreg73<internal>, -100; GR32Bit:%vreg73
	%vreg73<def> = LUI 2; GR32Bit:%vreg73
	READPM %vreg73<kill>, %vreg73<internal>, -116; GR32Bit:%vreg73
	%vreg74<def> = LUI 1; GR32Bit:%vreg74
	WRITEPM %vreg74<internal>, %vreg74<internal>, -100; GR32Bit:%vreg74
	%vreg74<def> = LUI 2; GR32Bit:%vreg74
	WRITEPM %vreg74<internal>, %vreg74<internal>, -100; GR32Bit:%vreg74
	%vreg74<def> = LUI 4; GR32Bit:%vreg74
	WRITEPM %vreg74<internal>, %vreg74<internal>, -100; GR32Bit:%vreg74
	%vreg74<def> = LUI 3; GR32Bit:%vreg74
	READPM %vreg74<kill>, %vreg74<internal>, -68; GR32Bit:%vreg74
	%vreg74<def> = LUI 3; GR32Bit:%vreg74
	READPM %vreg74<kill>, %vreg74<internal>, -84; GR32Bit:%vreg74
	%vreg74<def> = LUI 3; GR32Bit:%vreg74
	READPM %vreg74<kill>, %vreg74<internal>, -116; GR32Bit:%vreg74
	%vreg75<def> = LUI 1; GR32Bit:%vreg75
	WRITEPM %vreg75<internal>, %vreg75<internal>, -116; GR32Bit:%vreg75
	%vreg75<def> = LUI 2; GR32Bit:%vreg75
	WRITEPM %vreg75<internal>, %vreg75<internal>, -116; GR32Bit:%vreg75
	%vreg75<def> = LUI 3; GR32Bit:%vreg75
	WRITEPM %vreg75<internal>, %vreg75<internal>, -116; GR32Bit:%vreg75
	%vreg75<def> = LUI 4; GR32Bit:%vreg75
	READPM %vreg75<kill>, %vreg75<internal>, -68; GR32Bit:%vreg75
	%vreg75<def> = LUI 4; GR32Bit:%vreg75
	READPM %vreg75<kill>, %vreg75<internal>, -84; GR32Bit:%vreg75
	%vreg75<def> = LUI 4; GR32Bit:%vreg75
	READPM %vreg75<kill>, %vreg75<internal>, -100; GR32Bit:%vreg75
	JAL <BB#4>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#4>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#4>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#4>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#4(124) BB#8(4)
********** MI Scheduling **********
main:BB#3 for.cond1
  From: %vreg5<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg5
    To: BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
 Remaining: 0
Max Pressure: GR32Bit=2
Live In: 
Live Out: 
FP32BitLimit 32 Actual 0
GR32BitLimit 32 Actual 2
Excess PSets: 
2 subtrees:
  SU(0) in tree 0
  SU(1) in tree 0
  SU(2) in tree 1
SU(0):   %vreg5<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
   val SU(1): Latency=1 Reg=%vreg5

SU(1):   %vreg6<def> = LW %vreg5, 0; mem:LD4[%j] GR32Bit:%vreg6,%vreg5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
   val SU(0): Latency=1 Reg=%vreg5
  Successors:
   val SU(4294967295): Latency=4 Reg=%vreg6

SU(2):   %vreg7<def> = ADDI %zero, 9; GR32Bit:%vreg7
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
   val SU(4294967295): Latency=1 Reg=%vreg7

SU(0):   %vreg5<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
   val SU(1): Latency=1 Reg=%vreg5

SU(1):   %vreg6<def> = LW %vreg5, 0; mem:LD4[%j] GR32Bit:%vreg6,%vreg5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
   val SU(0): Latency=1 Reg=%vreg5
  Successors:
   val SU(4294967295): Latency=4 Reg=%vreg6

SU(2):   %vreg7<def> = ADDI %zero, 9; GR32Bit:%vreg7
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
   val SU(4294967295): Latency=1 Reg=%vreg7

Pick node SU(2)  ILP: 1 / 1 = 1 Tree: 1 @0
Scheduling %vreg7<def> = ADDI %zero, 9; GR32Bit:%vreg7
handleMove 1144B -> 1124B: %vreg7<def> = ADDI %zero, 9; GR32Bit:%vreg7
     %vreg7:	[1144r,1152r:0)  0@1144r
        -->	[1124r,1152r:0)  0@1124r
     zero:	EMPTY
        -->	EMPTY
Pick node SU(0)  ILP: 1 / 1 = 1 Tree: 0 @0
Scheduling %vreg5<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg5
Pick node SU(1)  ILP: 2 / 2 = 1 Tree: 0 @0
Scheduling %vreg6<def> = LW %vreg5, 0; mem:LD4[%j] GR32Bit:%vreg6,%vreg5
*** Final schedule for BB#3 ***
SU(2):   %vreg7<def> = ADDI %zero, 9; GR32Bit:%vreg7
SU(0):   %vreg5<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg5
SU(1):   %vreg6<def> = LW %vreg5, 0; mem:LD4[%j] GR32Bit:%vreg6,%vreg5

Partitioning instructions of the region into multiple CEs

*** Renumbered SlotIndexes 1132-2108 ***

*** Renumbered SlotIndexes 1144-2120 ***

*** Renumbered SlotIndexes 1164-2132 ***

*** Renumbered SlotIndexes 1176-2144 ***

*** Renumbered SlotIndexes 1188-2156 ***

*** Renumbered SlotIndexes 1200-2168 ***

*** Renumbered SlotIndexes 1212-2180 ***

*** Renumbered SlotIndexes 1224-2192 ***

*** Renumbered SlotIndexes 1236-2204 ***

*** Renumbered SlotIndexes 1248-2216 ***

*** Renumbered SlotIndexes 1260-2228 ***

*** Renumbered SlotIndexes 1272-2240 ***

*** Renumbered SlotIndexes 1284-2252 ***

*** Renumbered SlotIndexes 1296-2264 ***

*** Renumbered SlotIndexes 1308-2276 ***

*** Renumbered SlotIndexes 1320-2288 ***

*** Renumbered SlotIndexes 1332-2300 ***

*** Renumbered SlotIndexes 1344-2312 ***

*** Renumbered SlotIndexes 1356-2324 ***

*** Renumbered SlotIndexes 1368-2336 ***

*** Renumbered SlotIndexes 1380-2348 ***

*** Renumbered SlotIndexes 1392-2360 ***

*** Renumbered SlotIndexes 1404-2372 ***

*** Renumbered SlotIndexes 1416-2384 ***

*** Renumbered SlotIndexes 1428-2396 ***

*** Renumbered SlotIndexes 1440-2408 ***
Dumping all live-out registers to memory

*** Renumbered SlotIndexes 1452-2420 ***

*** Renumbered SlotIndexes 1464-2432 ***

*** Renumbered SlotIndexes 1476-2444 ***

*** Renumbered SlotIndexes 1488-2456 ***

*** Renumbered SlotIndexes 1500-2468 ***

*** Renumbered SlotIndexes 1512-2480 ***

*** Renumbered SlotIndexes 1524-2492 ***

*** Renumbered SlotIndexes 1536-2504 ***

*** Renumbered SlotIndexes 1548-2516 ***

*** Renumbered SlotIndexes 1560-2528 ***

*** Renumbered SlotIndexes 1588-2540 ***

*** Renumbered SlotIndexes 1600-2552 ***

*** Renumbered SlotIndexes 1612-2564 ***

*** Renumbered SlotIndexes 1624-2576 ***

*** Renumbered SlotIndexes 1636-2588 ***
Shuffling instructions within the region such that successive instructions belong to the same pHyperOp to ease bundle creation
state of basic block BB#3BB#3: derived from LLVM BB %for.cond1
    Predecessors according to CFG: BB#2 BB#7
	%vreg7<def> = ADDI %zero, 9; GR32Bit:%vreg7
	%vreg78<def> = LUI 2; GR32Bit:%vreg78
	WRITEPM %vreg78<internal>, %vreg78<internal>, -68; GR32Bit:%vreg78
	%vreg78<def> = LUI 3; GR32Bit:%vreg78
	WRITEPM %vreg78<internal>, %vreg78<internal>, -68; GR32Bit:%vreg78
	%vreg78<def> = LUI 4; GR32Bit:%vreg78
	WRITEPM %vreg78<internal>, %vreg78<internal>, -68; GR32Bit:%vreg78
	%vreg79<def> = LUI 2; GR32Bit:%vreg79
	READPM %vreg79<kill>, %vreg79<internal>, -68; GR32Bit:%vreg79
	%vreg80<def> = LUI 3; GR32Bit:%vreg80
	READPM %vreg80<kill>, %vreg80<internal>, -68; GR32Bit:%vreg80
	%vreg81<def> = LUI 4; GR32Bit:%vreg81
	READPM %vreg81<kill>, %vreg81<internal>, -68; GR32Bit:%vreg81
	%vreg83<def> = LUI 0; GR32Bit:%vreg83
	READPM %vreg6<kill>, %vreg83<internal>, 0; GR32Bit:%vreg6,%vreg83
	%vreg88<def> = LUI 1; GR32Bit:%vreg88
	WRITEPM %vreg88<internal>, %vreg7<internal>, 4; GR32Bit:%vreg88,%vreg7
	%vreg89<def> = LUI 2; GR32Bit:%vreg89
	WRITEPM %vreg89<internal>, %vreg7<internal>, 0; GR32Bit:%vreg89,%vreg7
	%vreg90<def> = LUI 3; GR32Bit:%vreg90
	WRITEPM %vreg90<internal>, %vreg7<internal>, 4; GR32Bit:%vreg90,%vreg7
	BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg5<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg5
	%vreg76<def> = LUI 2; GR32Bit:%vreg76
	WRITEPM %vreg76<internal>, %vreg5<internal>, 0; GR32Bit:%vreg76,%vreg5
	%vreg78<def> = LUI 1; GR32Bit:%vreg78
	READPM %vreg78<kill>, %vreg78<internal>, -84; GR32Bit:%vreg78
	%vreg79<def> = LUI 1; GR32Bit:%vreg79
	WRITEPM %vreg79<internal>, %vreg79<internal>, -84; GR32Bit:%vreg79
	%vreg79<def> = LUI 3; GR32Bit:%vreg79
	WRITEPM %vreg79<internal>, %vreg79<internal>, -84; GR32Bit:%vreg79
	%vreg79<def> = LUI 4; GR32Bit:%vreg79
	WRITEPM %vreg79<internal>, %vreg79<internal>, -84; GR32Bit:%vreg79
	%vreg80<def> = LUI 3; GR32Bit:%vreg80
	READPM %vreg80<kill>, %vreg80<internal>, -84; GR32Bit:%vreg80
	%vreg81<def> = LUI 4; GR32Bit:%vreg81
	READPM %vreg81<kill>, %vreg81<internal>, -84; GR32Bit:%vreg81
	%vreg85<def> = LUI 1; GR32Bit:%vreg85
	READPM %vreg6<kill>, %vreg85<internal>, 0; GR32Bit:%vreg6,%vreg85
	READPM %vreg7<kill>, %vreg85<internal>, 4; GR32Bit:%vreg7,%vreg85
	BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg77<def> = LUI 2; GR32Bit:%vreg77
	READPM %vreg5<kill>, %vreg77<internal>, 0; GR32Bit:%vreg5,%vreg77
	%vreg6<def> = LW %vreg5, 0; mem:LD4[%j] GR32Bit:%vreg6,%vreg5
	%vreg78<def> = LUI 1; GR32Bit:%vreg78
	READPM %vreg78<kill>, %vreg78<internal>, -100; GR32Bit:%vreg78
	%vreg78<def> = LUI 1; GR32Bit:%vreg78
	READPM %vreg78<kill>, %vreg78<internal>, -116; GR32Bit:%vreg78
	%vreg79<def> = LUI 2; GR32Bit:%vreg79
	READPM %vreg79<kill>, %vreg79<internal>, -100; GR32Bit:%vreg79
	%vreg79<def> = LUI 2; GR32Bit:%vreg79
	READPM %vreg79<kill>, %vreg79<internal>, -116; GR32Bit:%vreg79
	%vreg80<def> = LUI 1; GR32Bit:%vreg80
	WRITEPM %vreg80<internal>, %vreg80<internal>, -100; GR32Bit:%vreg80
	%vreg80<def> = LUI 2; GR32Bit:%vreg80
	WRITEPM %vreg80<internal>, %vreg80<internal>, -100; GR32Bit:%vreg80
	%vreg80<def> = LUI 4; GR32Bit:%vreg80
	WRITEPM %vreg80<internal>, %vreg80<internal>, -100; GR32Bit:%vreg80
	%vreg80<def> = LUI 3; GR32Bit:%vreg80
	READPM %vreg80<kill>, %vreg80<internal>, -116; GR32Bit:%vreg80
	%vreg81<def> = LUI 1; GR32Bit:%vreg81
	WRITEPM %vreg81<internal>, %vreg81<internal>, -116; GR32Bit:%vreg81
	%vreg81<def> = LUI 2; GR32Bit:%vreg81
	WRITEPM %vreg81<internal>, %vreg81<internal>, -116; GR32Bit:%vreg81
	%vreg81<def> = LUI 3; GR32Bit:%vreg81
	WRITEPM %vreg81<internal>, %vreg81<internal>, -116; GR32Bit:%vreg81
	%vreg81<def> = LUI 4; GR32Bit:%vreg81
	READPM %vreg81<kill>, %vreg81<internal>, -100; GR32Bit:%vreg81
	%vreg82<def> = LUI 0; GR32Bit:%vreg82
	WRITEPM %vreg82<internal>, %vreg6<internal>, 0; GR32Bit:%vreg82,%vreg6
	%vreg84<def> = LUI 1; GR32Bit:%vreg84
	WRITEPM %vreg84<internal>, %vreg6<internal>, 0; GR32Bit:%vreg84,%vreg6
	%vreg86<def> = LUI 3; GR32Bit:%vreg86
	WRITEPM %vreg86<internal>, %vreg6<internal>, 0; GR32Bit:%vreg86,%vreg6
	READPM %vreg7<kill>, %vreg77<internal>, 0; GR32Bit:%vreg7,%vreg77
	BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg87<def> = LUI 3; GR32Bit:%vreg87
	READPM %vreg6<kill>, %vreg87<internal>, 0; GR32Bit:%vreg6,%vreg87
	READPM %vreg7<kill>, %vreg87<internal>, 4; GR32Bit:%vreg7,%vreg87
	BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg72<def> = LUI 2; GR32Bit:%vreg72
	WRITEPM %vreg72<internal>, %vreg72<internal>, -68; GR32Bit:%vreg72
	%vreg72<def> = LUI 3; GR32Bit:%vreg72
	WRITEPM %vreg72<internal>, %vreg72<internal>, -68; GR32Bit:%vreg72
	%vreg72<def> = LUI 4; GR32Bit:%vreg72
	WRITEPM %vreg72<internal>, %vreg72<internal>, -68; GR32Bit:%vreg72
	%vreg72<def> = LUI 1; GR32Bit:%vreg72
	READPM %vreg72<kill>, %vreg72<internal>, -84; GR32Bit:%vreg72
	%vreg72<def> = LUI 1; GR32Bit:%vreg72
	READPM %vreg72<kill>, %vreg72<internal>, -100; GR32Bit:%vreg72
	%vreg72<def> = LUI 1; GR32Bit:%vreg72
	READPM %vreg72<kill>, %vreg72<internal>, -116; GR32Bit:%vreg72
	%vreg73<def> = LUI 1; GR32Bit:%vreg73
	WRITEPM %vreg73<internal>, %vreg73<internal>, -84; GR32Bit:%vreg73
	%vreg73<def> = LUI 3; GR32Bit:%vreg73
	WRITEPM %vreg73<internal>, %vreg73<internal>, -84; GR32Bit:%vreg73
	%vreg73<def> = LUI 4; GR32Bit:%vreg73
	WRITEPM %vreg73<internal>, %vreg73<internal>, -84; GR32Bit:%vreg73
	%vreg73<def> = LUI 2; GR32Bit:%vreg73
	READPM %vreg73<kill>, %vreg73<internal>, -68; GR32Bit:%vreg73
	%vreg73<def> = LUI 2; GR32Bit:%vreg73
	READPM %vreg73<kill>, %vreg73<internal>, -100; GR32Bit:%vreg73
	%vreg73<def> = LUI 2; GR32Bit:%vreg73
	READPM %vreg73<kill>, %vreg73<internal>, -116; GR32Bit:%vreg73
	%vreg74<def> = LUI 1; GR32Bit:%vreg74
	WRITEPM %vreg74<internal>, %vreg74<internal>, -100; GR32Bit:%vreg74
	%vreg74<def> = LUI 2; GR32Bit:%vreg74
	WRITEPM %vreg74<internal>, %vreg74<internal>, -100; GR32Bit:%vreg74
	%vreg74<def> = LUI 4; GR32Bit:%vreg74
	WRITEPM %vreg74<internal>, %vreg74<internal>, -100; GR32Bit:%vreg74
	%vreg74<def> = LUI 3; GR32Bit:%vreg74
	READPM %vreg74<kill>, %vreg74<internal>, -68; GR32Bit:%vreg74
	%vreg74<def> = LUI 3; GR32Bit:%vreg74
	READPM %vreg74<kill>, %vreg74<internal>, -84; GR32Bit:%vreg74
	%vreg74<def> = LUI 3; GR32Bit:%vreg74
	READPM %vreg74<kill>, %vreg74<internal>, -116; GR32Bit:%vreg74
	%vreg75<def> = LUI 1; GR32Bit:%vreg75
	WRITEPM %vreg75<internal>, %vreg75<internal>, -116; GR32Bit:%vreg75
	%vreg75<def> = LUI 2; GR32Bit:%vreg75
	WRITEPM %vreg75<internal>, %vreg75<internal>, -116; GR32Bit:%vreg75
	%vreg75<def> = LUI 3; GR32Bit:%vreg75
	WRITEPM %vreg75<internal>, %vreg75<internal>, -116; GR32Bit:%vreg75
	%vreg75<def> = LUI 4; GR32Bit:%vreg75
	READPM %vreg75<kill>, %vreg75<internal>, -68; GR32Bit:%vreg75
	%vreg75<def> = LUI 4; GR32Bit:%vreg75
	READPM %vreg75<kill>, %vreg75<internal>, -84; GR32Bit:%vreg75
	%vreg75<def> = LUI 4; GR32Bit:%vreg75
	READPM %vreg75<kill>, %vreg75<internal>, -100; GR32Bit:%vreg75
	JAL <BB#4>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#4>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#4>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#4>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#4(124) BB#8(4)
BB before region shuffle:BB#3: derived from LLVM BB %for.cond1
    Predecessors according to CFG: BB#2 BB#7
	%vreg7<def> = ADDI %zero, 9; GR32Bit:%vreg7
	%vreg78<def> = LUI 2; GR32Bit:%vreg78
	WRITEPM %vreg78<internal>, %vreg78<internal>, -68; GR32Bit:%vreg78
	%vreg78<def> = LUI 3; GR32Bit:%vreg78
	WRITEPM %vreg78<internal>, %vreg78<internal>, -68; GR32Bit:%vreg78
	%vreg78<def> = LUI 4; GR32Bit:%vreg78
	WRITEPM %vreg78<internal>, %vreg78<internal>, -68; GR32Bit:%vreg78
	%vreg79<def> = LUI 2; GR32Bit:%vreg79
	READPM %vreg79<kill>, %vreg79<internal>, -68; GR32Bit:%vreg79
	%vreg80<def> = LUI 3; GR32Bit:%vreg80
	READPM %vreg80<kill>, %vreg80<internal>, -68; GR32Bit:%vreg80
	%vreg81<def> = LUI 4; GR32Bit:%vreg81
	READPM %vreg81<kill>, %vreg81<internal>, -68; GR32Bit:%vreg81
	%vreg83<def> = LUI 0; GR32Bit:%vreg83
	READPM %vreg6<kill>, %vreg83<internal>, 0; GR32Bit:%vreg6,%vreg83
	%vreg88<def> = LUI 1; GR32Bit:%vreg88
	WRITEPM %vreg88<internal>, %vreg7<internal>, 4; GR32Bit:%vreg88,%vreg7
	%vreg89<def> = LUI 2; GR32Bit:%vreg89
	WRITEPM %vreg89<internal>, %vreg7<internal>, 0; GR32Bit:%vreg89,%vreg7
	%vreg90<def> = LUI 3; GR32Bit:%vreg90
	WRITEPM %vreg90<internal>, %vreg7<internal>, 4; GR32Bit:%vreg90,%vreg7
	BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg5<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg5
	%vreg76<def> = LUI 2; GR32Bit:%vreg76
	WRITEPM %vreg76<internal>, %vreg5<internal>, 0; GR32Bit:%vreg76,%vreg5
	%vreg78<def> = LUI 1; GR32Bit:%vreg78
	READPM %vreg78<kill>, %vreg78<internal>, -84; GR32Bit:%vreg78
	%vreg79<def> = LUI 1; GR32Bit:%vreg79
	WRITEPM %vreg79<internal>, %vreg79<internal>, -84; GR32Bit:%vreg79
	%vreg79<def> = LUI 3; GR32Bit:%vreg79
	WRITEPM %vreg79<internal>, %vreg79<internal>, -84; GR32Bit:%vreg79
	%vreg79<def> = LUI 4; GR32Bit:%vreg79
	WRITEPM %vreg79<internal>, %vreg79<internal>, -84; GR32Bit:%vreg79
	%vreg80<def> = LUI 3; GR32Bit:%vreg80
	READPM %vreg80<kill>, %vreg80<internal>, -84; GR32Bit:%vreg80
	%vreg81<def> = LUI 4; GR32Bit:%vreg81
	READPM %vreg81<kill>, %vreg81<internal>, -84; GR32Bit:%vreg81
	%vreg85<def> = LUI 1; GR32Bit:%vreg85
	READPM %vreg6<kill>, %vreg85<internal>, 0; GR32Bit:%vreg6,%vreg85
	READPM %vreg7<kill>, %vreg85<internal>, 4; GR32Bit:%vreg7,%vreg85
	BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg77<def> = LUI 2; GR32Bit:%vreg77
	READPM %vreg5<kill>, %vreg77<internal>, 0; GR32Bit:%vreg5,%vreg77
	%vreg6<def> = LW %vreg5, 0; mem:LD4[%j] GR32Bit:%vreg6,%vreg5
	%vreg78<def> = LUI 1; GR32Bit:%vreg78
	READPM %vreg78<kill>, %vreg78<internal>, -100; GR32Bit:%vreg78
	%vreg78<def> = LUI 1; GR32Bit:%vreg78
	READPM %vreg78<kill>, %vreg78<internal>, -116; GR32Bit:%vreg78
	%vreg79<def> = LUI 2; GR32Bit:%vreg79
	READPM %vreg79<kill>, %vreg79<internal>, -100; GR32Bit:%vreg79
	%vreg79<def> = LUI 2; GR32Bit:%vreg79
	READPM %vreg79<kill>, %vreg79<internal>, -116; GR32Bit:%vreg79
	%vreg80<def> = LUI 1; GR32Bit:%vreg80
	WRITEPM %vreg80<internal>, %vreg80<internal>, -100; GR32Bit:%vreg80
	%vreg80<def> = LUI 2; GR32Bit:%vreg80
	WRITEPM %vreg80<internal>, %vreg80<internal>, -100; GR32Bit:%vreg80
	%vreg80<def> = LUI 4; GR32Bit:%vreg80
	WRITEPM %vreg80<internal>, %vreg80<internal>, -100; GR32Bit:%vreg80
	%vreg80<def> = LUI 3; GR32Bit:%vreg80
	READPM %vreg80<kill>, %vreg80<internal>, -116; GR32Bit:%vreg80
	%vreg81<def> = LUI 1; GR32Bit:%vreg81
	WRITEPM %vreg81<internal>, %vreg81<internal>, -116; GR32Bit:%vreg81
	%vreg81<def> = LUI 2; GR32Bit:%vreg81
	WRITEPM %vreg81<internal>, %vreg81<internal>, -116; GR32Bit:%vreg81
	%vreg81<def> = LUI 3; GR32Bit:%vreg81
	WRITEPM %vreg81<internal>, %vreg81<internal>, -116; GR32Bit:%vreg81
	%vreg81<def> = LUI 4; GR32Bit:%vreg81
	READPM %vreg81<kill>, %vreg81<internal>, -100; GR32Bit:%vreg81
	%vreg82<def> = LUI 0; GR32Bit:%vreg82
	WRITEPM %vreg82<internal>, %vreg6<internal>, 0; GR32Bit:%vreg82,%vreg6
	%vreg84<def> = LUI 1; GR32Bit:%vreg84
	WRITEPM %vreg84<internal>, %vreg6<internal>, 0; GR32Bit:%vreg84,%vreg6
	%vreg86<def> = LUI 3; GR32Bit:%vreg86
	WRITEPM %vreg86<internal>, %vreg6<internal>, 0; GR32Bit:%vreg86,%vreg6
	READPM %vreg7<kill>, %vreg77<internal>, 0; GR32Bit:%vreg7,%vreg77
	BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg87<def> = LUI 3; GR32Bit:%vreg87
	READPM %vreg6<kill>, %vreg87<internal>, 0; GR32Bit:%vreg6,%vreg87
	READPM %vreg7<kill>, %vreg87<internal>, 4; GR32Bit:%vreg7,%vreg87
	BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg72<def> = LUI 2; GR32Bit:%vreg72
	WRITEPM %vreg72<internal>, %vreg72<internal>, -68; GR32Bit:%vreg72
	%vreg72<def> = LUI 3; GR32Bit:%vreg72
	WRITEPM %vreg72<internal>, %vreg72<internal>, -68; GR32Bit:%vreg72
	%vreg72<def> = LUI 4; GR32Bit:%vreg72
	WRITEPM %vreg72<internal>, %vreg72<internal>, -68; GR32Bit:%vreg72
	%vreg72<def> = LUI 1; GR32Bit:%vreg72
	READPM %vreg72<kill>, %vreg72<internal>, -84; GR32Bit:%vreg72
	%vreg72<def> = LUI 1; GR32Bit:%vreg72
	READPM %vreg72<kill>, %vreg72<internal>, -100; GR32Bit:%vreg72
	%vreg72<def> = LUI 1; GR32Bit:%vreg72
	READPM %vreg72<kill>, %vreg72<internal>, -116; GR32Bit:%vreg72
	%vreg73<def> = LUI 1; GR32Bit:%vreg73
	WRITEPM %vreg73<internal>, %vreg73<internal>, -84; GR32Bit:%vreg73
	%vreg73<def> = LUI 3; GR32Bit:%vreg73
	WRITEPM %vreg73<internal>, %vreg73<internal>, -84; GR32Bit:%vreg73
	%vreg73<def> = LUI 4; GR32Bit:%vreg73
	WRITEPM %vreg73<internal>, %vreg73<internal>, -84; GR32Bit:%vreg73
	%vreg73<def> = LUI 2; GR32Bit:%vreg73
	READPM %vreg73<kill>, %vreg73<internal>, -68; GR32Bit:%vreg73
	%vreg73<def> = LUI 2; GR32Bit:%vreg73
	READPM %vreg73<kill>, %vreg73<internal>, -100; GR32Bit:%vreg73
	%vreg73<def> = LUI 2; GR32Bit:%vreg73
	READPM %vreg73<kill>, %vreg73<internal>, -116; GR32Bit:%vreg73
	%vreg74<def> = LUI 1; GR32Bit:%vreg74
	WRITEPM %vreg74<internal>, %vreg74<internal>, -100; GR32Bit:%vreg74
	%vreg74<def> = LUI 2; GR32Bit:%vreg74
	WRITEPM %vreg74<internal>, %vreg74<internal>, -100; GR32Bit:%vreg74
	%vreg74<def> = LUI 4; GR32Bit:%vreg74
	WRITEPM %vreg74<internal>, %vreg74<internal>, -100; GR32Bit:%vreg74
	%vreg74<def> = LUI 3; GR32Bit:%vreg74
	READPM %vreg74<kill>, %vreg74<internal>, -68; GR32Bit:%vreg74
	%vreg74<def> = LUI 3; GR32Bit:%vreg74
	READPM %vreg74<kill>, %vreg74<internal>, -84; GR32Bit:%vreg74
	%vreg74<def> = LUI 3; GR32Bit:%vreg74
	READPM %vreg74<kill>, %vreg74<internal>, -116; GR32Bit:%vreg74
	%vreg75<def> = LUI 1; GR32Bit:%vreg75
	WRITEPM %vreg75<internal>, %vreg75<internal>, -116; GR32Bit:%vreg75
	%vreg75<def> = LUI 2; GR32Bit:%vreg75
	WRITEPM %vreg75<internal>, %vreg75<internal>, -116; GR32Bit:%vreg75
	%vreg75<def> = LUI 3; GR32Bit:%vreg75
	WRITEPM %vreg75<internal>, %vreg75<internal>, -116; GR32Bit:%vreg75
	%vreg75<def> = LUI 4; GR32Bit:%vreg75
	READPM %vreg75<kill>, %vreg75<internal>, -68; GR32Bit:%vreg75
	%vreg75<def> = LUI 4; GR32Bit:%vreg75
	READPM %vreg75<kill>, %vreg75<internal>, -84; GR32Bit:%vreg75
	%vreg75<def> = LUI 4; GR32Bit:%vreg75
	READPM %vreg75<kill>, %vreg75<internal>, -100; GR32Bit:%vreg75
	JAL <BB#4>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#4>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#4>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#4>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#4(124) BB#8(4)
Merging regions of basic block BB#3
merging regions:0 and 1
merging regions:0 and 1
merging regions:0 and 1
merging regions:0 and 1
After Shuffling basic block, state of BB#3:
BB#3: derived from LLVM BB %for.cond1
    Predecessors according to CFG: BB#2 BB#7
	%vreg7<def> = ADDI %zero, 9; GR32Bit:%vreg7
	%vreg78<def> = LUI 2; GR32Bit:%vreg78
	WRITEPM %vreg78<internal>, %vreg78<internal>, -68; GR32Bit:%vreg78
	%vreg78<def> = LUI 3; GR32Bit:%vreg78
	WRITEPM %vreg78<internal>, %vreg78<internal>, -68; GR32Bit:%vreg78
	%vreg78<def> = LUI 4; GR32Bit:%vreg78
	WRITEPM %vreg78<internal>, %vreg78<internal>, -68; GR32Bit:%vreg78
	%vreg79<def> = LUI 2; GR32Bit:%vreg79
	READPM %vreg79<kill>, %vreg79<internal>, -68; GR32Bit:%vreg79
	%vreg80<def> = LUI 3; GR32Bit:%vreg80
	READPM %vreg80<kill>, %vreg80<internal>, -68; GR32Bit:%vreg80
	%vreg81<def> = LUI 4; GR32Bit:%vreg81
	READPM %vreg81<kill>, %vreg81<internal>, -68; GR32Bit:%vreg81
	%vreg83<def> = LUI 0; GR32Bit:%vreg83
	READPM %vreg6<kill>, %vreg83<internal>, 0; GR32Bit:%vreg6,%vreg83
	%vreg88<def> = LUI 1; GR32Bit:%vreg88
	WRITEPM %vreg88<internal>, %vreg7<internal>, 4; GR32Bit:%vreg88,%vreg7
	%vreg89<def> = LUI 2; GR32Bit:%vreg89
	WRITEPM %vreg89<internal>, %vreg7<internal>, 0; GR32Bit:%vreg89,%vreg7
	%vreg90<def> = LUI 3; GR32Bit:%vreg90
	WRITEPM %vreg90<internal>, %vreg7<internal>, 4; GR32Bit:%vreg90,%vreg7
	BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#4>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg5<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg5
	%vreg76<def> = LUI 2; GR32Bit:%vreg76
	WRITEPM %vreg76<internal>, %vreg5<internal>, 0; GR32Bit:%vreg76,%vreg5
	%vreg78<def> = LUI 1; GR32Bit:%vreg78
	READPM %vreg78<kill>, %vreg78<internal>, -84; GR32Bit:%vreg78
	%vreg79<def> = LUI 1; GR32Bit:%vreg79
	WRITEPM %vreg79<internal>, %vreg79<internal>, -84; GR32Bit:%vreg79
	%vreg79<def> = LUI 3; GR32Bit:%vreg79
	WRITEPM %vreg79<internal>, %vreg79<internal>, -84; GR32Bit:%vreg79
	%vreg79<def> = LUI 4; GR32Bit:%vreg79
	WRITEPM %vreg79<internal>, %vreg79<internal>, -84; GR32Bit:%vreg79
	%vreg80<def> = LUI 3; GR32Bit:%vreg80
	READPM %vreg80<kill>, %vreg80<internal>, -84; GR32Bit:%vreg80
	%vreg81<def> = LUI 4; GR32Bit:%vreg81
	READPM %vreg81<kill>, %vreg81<internal>, -84; GR32Bit:%vreg81
	%vreg85<def> = LUI 1; GR32Bit:%vreg85
	READPM %vreg6<kill>, %vreg85<internal>, 0; GR32Bit:%vreg6,%vreg85
	READPM %vreg7<kill>, %vreg85<internal>, 4; GR32Bit:%vreg7,%vreg85
	BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#4>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg77<def> = LUI 2; GR32Bit:%vreg77
	READPM %vreg5<kill>, %vreg77<internal>, 0; GR32Bit:%vreg5,%vreg77
	%vreg6<def> = LW %vreg5, 0; mem:LD4[%j] GR32Bit:%vreg6,%vreg5
	%vreg78<def> = LUI 1; GR32Bit:%vreg78
	READPM %vreg78<kill>, %vreg78<internal>, -100; GR32Bit:%vreg78
	%vreg78<def> = LUI 1; GR32Bit:%vreg78
	READPM %vreg78<kill>, %vreg78<internal>, -116; GR32Bit:%vreg78
	%vreg79<def> = LUI 2; GR32Bit:%vreg79
	READPM %vreg79<kill>, %vreg79<internal>, -100; GR32Bit:%vreg79
	%vreg79<def> = LUI 2; GR32Bit:%vreg79
	READPM %vreg79<kill>, %vreg79<internal>, -116; GR32Bit:%vreg79
	%vreg80<def> = LUI 1; GR32Bit:%vreg80
	WRITEPM %vreg80<internal>, %vreg80<internal>, -100; GR32Bit:%vreg80
	%vreg80<def> = LUI 2; GR32Bit:%vreg80
	WRITEPM %vreg80<internal>, %vreg80<internal>, -100; GR32Bit:%vreg80
	%vreg80<def> = LUI 4; GR32Bit:%vreg80
	WRITEPM %vreg80<internal>, %vreg80<internal>, -100; GR32Bit:%vreg80
	%vreg80<def> = LUI 3; GR32Bit:%vreg80
	READPM %vreg80<kill>, %vreg80<internal>, -116; GR32Bit:%vreg80
	%vreg81<def> = LUI 1; GR32Bit:%vreg81
	WRITEPM %vreg81<internal>, %vreg81<internal>, -116; GR32Bit:%vreg81
	%vreg81<def> = LUI 2; GR32Bit:%vreg81
	WRITEPM %vreg81<internal>, %vreg81<internal>, -116; GR32Bit:%vreg81
	%vreg81<def> = LUI 3; GR32Bit:%vreg81
	WRITEPM %vreg81<internal>, %vreg81<internal>, -116; GR32Bit:%vreg81
	%vreg81<def> = LUI 4; GR32Bit:%vreg81
	READPM %vreg81<kill>, %vreg81<internal>, -100; GR32Bit:%vreg81
	%vreg82<def> = LUI 0; GR32Bit:%vreg82
	WRITEPM %vreg82<internal>, %vreg6<internal>, 0; GR32Bit:%vreg82,%vreg6
	%vreg84<def> = LUI 1; GR32Bit:%vreg84
	WRITEPM %vreg84<internal>, %vreg6<internal>, 0; GR32Bit:%vreg84,%vreg6
	%vreg86<def> = LUI 3; GR32Bit:%vreg86
	WRITEPM %vreg86<internal>, %vreg6<internal>, 0; GR32Bit:%vreg86,%vreg6
	READPM %vreg7<kill>, %vreg77<internal>, 0; GR32Bit:%vreg7,%vreg77
	BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#4>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg87<def> = LUI 3; GR32Bit:%vreg87
	READPM %vreg6<kill>, %vreg87<internal>, 0; GR32Bit:%vreg6,%vreg87
	READPM %vreg7<kill>, %vreg87<internal>, 4; GR32Bit:%vreg7,%vreg87
	BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg72<def> = LUI 2; GR32Bit:%vreg72
	WRITEPM %vreg72<internal>, %vreg72<internal>, -68; GR32Bit:%vreg72
	%vreg72<def> = LUI 3; GR32Bit:%vreg72
	WRITEPM %vreg72<internal>, %vreg72<internal>, -68; GR32Bit:%vreg72
	%vreg72<def> = LUI 4; GR32Bit:%vreg72
	WRITEPM %vreg72<internal>, %vreg72<internal>, -68; GR32Bit:%vreg72
	%vreg72<def> = LUI 1; GR32Bit:%vreg72
	READPM %vreg72<kill>, %vreg72<internal>, -84; GR32Bit:%vreg72
	%vreg72<def> = LUI 1; GR32Bit:%vreg72
	READPM %vreg72<kill>, %vreg72<internal>, -100; GR32Bit:%vreg72
	%vreg72<def> = LUI 1; GR32Bit:%vreg72
	READPM %vreg72<kill>, %vreg72<internal>, -116; GR32Bit:%vreg72
	%vreg73<def> = LUI 1; GR32Bit:%vreg73
	WRITEPM %vreg73<internal>, %vreg73<internal>, -84; GR32Bit:%vreg73
	%vreg73<def> = LUI 3; GR32Bit:%vreg73
	WRITEPM %vreg73<internal>, %vreg73<internal>, -84; GR32Bit:%vreg73
	%vreg73<def> = LUI 4; GR32Bit:%vreg73
	WRITEPM %vreg73<internal>, %vreg73<internal>, -84; GR32Bit:%vreg73
	%vreg73<def> = LUI 2; GR32Bit:%vreg73
	READPM %vreg73<kill>, %vreg73<internal>, -68; GR32Bit:%vreg73
	%vreg73<def> = LUI 2; GR32Bit:%vreg73
	READPM %vreg73<kill>, %vreg73<internal>, -100; GR32Bit:%vreg73
	%vreg73<def> = LUI 2; GR32Bit:%vreg73
	READPM %vreg73<kill>, %vreg73<internal>, -116; GR32Bit:%vreg73
	%vreg74<def> = LUI 1; GR32Bit:%vreg74
	WRITEPM %vreg74<internal>, %vreg74<internal>, -100; GR32Bit:%vreg74
	%vreg74<def> = LUI 2; GR32Bit:%vreg74
	WRITEPM %vreg74<internal>, %vreg74<internal>, -100; GR32Bit:%vreg74
	%vreg74<def> = LUI 4; GR32Bit:%vreg74
	WRITEPM %vreg74<internal>, %vreg74<internal>, -100; GR32Bit:%vreg74
	%vreg74<def> = LUI 3; GR32Bit:%vreg74
	READPM %vreg74<kill>, %vreg74<internal>, -68; GR32Bit:%vreg74
	%vreg74<def> = LUI 3; GR32Bit:%vreg74
	READPM %vreg74<kill>, %vreg74<internal>, -84; GR32Bit:%vreg74
	%vreg74<def> = LUI 3; GR32Bit:%vreg74
	READPM %vreg74<kill>, %vreg74<internal>, -116; GR32Bit:%vreg74
	%vreg75<def> = LUI 1; GR32Bit:%vreg75
	WRITEPM %vreg75<internal>, %vreg75<internal>, -116; GR32Bit:%vreg75
	%vreg75<def> = LUI 2; GR32Bit:%vreg75
	WRITEPM %vreg75<internal>, %vreg75<internal>, -116; GR32Bit:%vreg75
	%vreg75<def> = LUI 3; GR32Bit:%vreg75
	WRITEPM %vreg75<internal>, %vreg75<internal>, -116; GR32Bit:%vreg75
	%vreg75<def> = LUI 4; GR32Bit:%vreg75
	READPM %vreg75<kill>, %vreg75<internal>, -68; GR32Bit:%vreg75
	%vreg75<def> = LUI 4; GR32Bit:%vreg75
	READPM %vreg75<kill>, %vreg75<internal>, -84; GR32Bit:%vreg75
	%vreg75<def> = LUI 4; GR32Bit:%vreg75
	READPM %vreg75<kill>, %vreg75<internal>, -100; GR32Bit:%vreg75
	JAL <BB#4>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#4(124) BB#8(4)
Creating pHyperOp bundles for CEs
Starting new basic block BB#4
********** MI Scheduling **********
main:BB#4 for.body3
  From: %vreg11<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg11
    To: End Remaining: 0
Max Pressure: GR32Bit=1
Live In: 
Live Out: 
FP32BitLimit 32 Actual 0
GR32BitLimit 32 Actual 1
Excess PSets: 
1 subtrees:
  SU(0) in tree 0
  SU(1) in tree 0
SU(0):   %vreg11<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg11
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
   val SU(1): Latency=1 Reg=%vreg11

SU(1):   SW %zero, %vreg11, 0; mem:ST4[%k] GR32Bit:%vreg11
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
   val SU(0): Latency=1 Reg=%vreg11
  Successors:
   ch  SU(4294967295) *: Latency=0

SU(0):   %vreg11<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg11
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
   val SU(1): Latency=1 Reg=%vreg11

SU(1):   SW %zero, %vreg11, 0; mem:ST4[%k] GR32Bit:%vreg11
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
   val SU(0): Latency=1 Reg=%vreg11
  Successors:
   ch  SU(4294967295) *: Latency=0

Pick node SU(0)  ILP: 1 / 1 = 1 Tree: 0 @0
Scheduling %vreg11<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg11
Pick node SU(1)  ILP: 2 / 2 = 1 Tree: 0 @0
Scheduling SW %zero, %vreg11, 0; mem:ST4[%k] GR32Bit:%vreg11
*** Final schedule for BB#4 ***
SU(0):   %vreg11<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg11
SU(1):   SW %zero, %vreg11, 0; mem:ST4[%k] GR32Bit:%vreg11

Partitioning instructions of the region into multiple CEs

*** Renumbered SlotIndexes 2144-2600 ***

*** Renumbered SlotIndexes 2156-2612 ***
Shuffling instructions within the region such that successive instructions belong to the same pHyperOp to ease bundle creation
state of basic block BB#4BB#4: derived from LLVM BB %for.body3
    Predecessors according to CFG: BB#3
	%vreg11<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg11
	%vreg91<def> = LUI 1; GR32Bit:%vreg91
	WRITEPM %vreg91<internal>, %vreg11<internal>, 0; GR32Bit:%vreg91,%vreg11
	%vreg92<def> = LUI 1; GR32Bit:%vreg92
	READPM %vreg11<kill>, %vreg92<internal>, 0; GR32Bit:%vreg11,%vreg92
	SW %zero, %vreg11, 0; mem:ST4[%k] GR32Bit:%vreg11
    Successors according to CFG: BB#5
BB before region shuffle:BB#4: derived from LLVM BB %for.body3
    Predecessors according to CFG: BB#3
	%vreg11<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg11
	%vreg91<def> = LUI 1; GR32Bit:%vreg91
	WRITEPM %vreg91<internal>, %vreg11<internal>, 0; GR32Bit:%vreg91,%vreg11
	%vreg92<def> = LUI 1; GR32Bit:%vreg92
	READPM %vreg11<kill>, %vreg92<internal>, 0; GR32Bit:%vreg11,%vreg92
	SW %zero, %vreg11, 0; mem:ST4[%k] GR32Bit:%vreg11
    Successors according to CFG: BB#5
After Shuffling basic block, state of BB#4:
BB#4: derived from LLVM BB %for.body3
    Predecessors according to CFG: BB#3
	%vreg11<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg11
	%vreg91<def> = LUI 1; GR32Bit:%vreg91
	WRITEPM %vreg91<internal>, %vreg11<internal>, 0; GR32Bit:%vreg91,%vreg11
	%vreg92<def> = LUI 1; GR32Bit:%vreg92
	READPM %vreg11<kill>, %vreg92<internal>, 0; GR32Bit:%vreg11,%vreg92
	SW %zero, %vreg11, 0; mem:ST4[%k] GR32Bit:%vreg11
    Successors according to CFG: BB#5
Creating pHyperOp bundles for CEs
Starting new basic block BB#5
Partitioning instructions of the region into multiple CEs

*** Renumbered SlotIndexes 2216-2624 ***

*** Renumbered SlotIndexes 2228-2636 ***

*** Renumbered SlotIndexes 2240-2648 ***

*** Renumbered SlotIndexes 2252-2660 ***

*** Renumbered SlotIndexes 2264-2672 ***

*** Renumbered SlotIndexes 2276-2684 ***

*** Renumbered SlotIndexes 2288-2696 ***

*** Renumbered SlotIndexes 2300-2708 ***

*** Renumbered SlotIndexes 2312-2720 ***

*** Renumbered SlotIndexes 2324-2732 ***

*** Renumbered SlotIndexes 2336-2744 ***

*** Renumbered SlotIndexes 2348-2756 ***

*** Renumbered SlotIndexes 2360-2768 ***

*** Renumbered SlotIndexes 2372-2780 ***

*** Renumbered SlotIndexes 2384-2792 ***

*** Renumbered SlotIndexes 2396-2804 ***

*** Renumbered SlotIndexes 2408-2816 ***

*** Renumbered SlotIndexes 2420-2828 ***

*** Renumbered SlotIndexes 2432-2840 ***

*** Renumbered SlotIndexes 2444-2852 ***

*** Renumbered SlotIndexes 2456-2864 ***

*** Renumbered SlotIndexes 2468-2876 ***

*** Renumbered SlotIndexes 2480-2888 ***

*** Renumbered SlotIndexes 2492-2900 ***
Dumping all live-out registers to memory

*** Renumbered SlotIndexes 2512-2912 ***

*** Renumbered SlotIndexes 2524-2924 ***

*** Renumbered SlotIndexes 2536-2936 ***

*** Renumbered SlotIndexes 2548-2948 ***

*** Renumbered SlotIndexes 2560-2960 ***
Shuffling instructions within the region such that successive instructions belong to the same pHyperOp to ease bundle creation
state of basic block BB#5BB#5: derived from LLVM BB %for.cond4
    Predecessors according to CFG: BB#4 BB#6
	%vreg12<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg12
	%vreg13<def> = LW %vreg12, 0; mem:LD4[%k] GR32Bit:%vreg13,%vreg12
	%vreg14<def> = ADDI %zero, 9; GR32Bit:%vreg14
	BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
	%vreg93<def> = LUI 2; GR32Bit:%vreg93
	WRITEPM %vreg93<internal>, %vreg93<internal>, -68; GR32Bit:%vreg93
	%vreg93<def> = LUI 3; GR32Bit:%vreg93
	WRITEPM %vreg93<internal>, %vreg93<internal>, -68; GR32Bit:%vreg93
	%vreg93<def> = LUI 4; GR32Bit:%vreg93
	WRITEPM %vreg93<internal>, %vreg93<internal>, -68; GR32Bit:%vreg93
	%vreg93<def> = LUI 1; GR32Bit:%vreg93
	READPM %vreg93<kill>, %vreg93<internal>, -84; GR32Bit:%vreg93
	%vreg93<def> = LUI 1; GR32Bit:%vreg93
	READPM %vreg93<kill>, %vreg93<internal>, -100; GR32Bit:%vreg93
	%vreg93<def> = LUI 1; GR32Bit:%vreg93
	READPM %vreg93<kill>, %vreg93<internal>, -116; GR32Bit:%vreg93
	%vreg94<def> = LUI 1; GR32Bit:%vreg94
	WRITEPM %vreg94<internal>, %vreg94<internal>, -84; GR32Bit:%vreg94
	%vreg94<def> = LUI 3; GR32Bit:%vreg94
	WRITEPM %vreg94<internal>, %vreg94<internal>, -84; GR32Bit:%vreg94
	%vreg94<def> = LUI 4; GR32Bit:%vreg94
	WRITEPM %vreg94<internal>, %vreg94<internal>, -84; GR32Bit:%vreg94
	%vreg94<def> = LUI 2; GR32Bit:%vreg94
	READPM %vreg94<kill>, %vreg94<internal>, -68; GR32Bit:%vreg94
	%vreg94<def> = LUI 2; GR32Bit:%vreg94
	READPM %vreg94<kill>, %vreg94<internal>, -100; GR32Bit:%vreg94
	%vreg94<def> = LUI 2; GR32Bit:%vreg94
	READPM %vreg94<kill>, %vreg94<internal>, -116; GR32Bit:%vreg94
	%vreg95<def> = LUI 1; GR32Bit:%vreg95
	WRITEPM %vreg95<internal>, %vreg95<internal>, -100; GR32Bit:%vreg95
	%vreg95<def> = LUI 2; GR32Bit:%vreg95
	WRITEPM %vreg95<internal>, %vreg95<internal>, -100; GR32Bit:%vreg95
	%vreg95<def> = LUI 4; GR32Bit:%vreg95
	WRITEPM %vreg95<internal>, %vreg95<internal>, -100; GR32Bit:%vreg95
	%vreg95<def> = LUI 3; GR32Bit:%vreg95
	READPM %vreg95<kill>, %vreg95<internal>, -68; GR32Bit:%vreg95
	%vreg95<def> = LUI 3; GR32Bit:%vreg95
	READPM %vreg95<kill>, %vreg95<internal>, -84; GR32Bit:%vreg95
	%vreg95<def> = LUI 3; GR32Bit:%vreg95
	READPM %vreg95<kill>, %vreg95<internal>, -116; GR32Bit:%vreg95
	%vreg96<def> = LUI 1; GR32Bit:%vreg96
	WRITEPM %vreg96<internal>, %vreg96<internal>, -116; GR32Bit:%vreg96
	%vreg96<def> = LUI 2; GR32Bit:%vreg96
	WRITEPM %vreg96<internal>, %vreg96<internal>, -116; GR32Bit:%vreg96
	%vreg96<def> = LUI 3; GR32Bit:%vreg96
	WRITEPM %vreg96<internal>, %vreg96<internal>, -116; GR32Bit:%vreg96
	%vreg96<def> = LUI 4; GR32Bit:%vreg96
	READPM %vreg96<kill>, %vreg96<internal>, -68; GR32Bit:%vreg96
	%vreg96<def> = LUI 4; GR32Bit:%vreg96
	READPM %vreg96<kill>, %vreg96<internal>, -84; GR32Bit:%vreg96
	%vreg96<def> = LUI 4; GR32Bit:%vreg96
	READPM %vreg96<kill>, %vreg96<internal>, -100; GR32Bit:%vreg96
	JAL <BB#6>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#6>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#6>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#6>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#6(124) BB#7(4)
********** MI Scheduling **********
main:BB#5 for.cond4
  From: %vreg12<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg12
    To: BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
 Remaining: 0
Max Pressure: GR32Bit=2
Live In: 
Live Out: 
FP32BitLimit 32 Actual 0
GR32BitLimit 32 Actual 2
Excess PSets: 
2 subtrees:
  SU(0) in tree 0
  SU(1) in tree 0
  SU(2) in tree 1
SU(0):   %vreg12<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg12
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
   val SU(1): Latency=1 Reg=%vreg12

SU(1):   %vreg13<def> = LW %vreg12, 0; mem:LD4[%k] GR32Bit:%vreg13,%vreg12
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
   val SU(0): Latency=1 Reg=%vreg12
  Successors:
   val SU(4294967295): Latency=4 Reg=%vreg13

SU(2):   %vreg14<def> = ADDI %zero, 9; GR32Bit:%vreg14
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
   val SU(4294967295): Latency=1 Reg=%vreg14

SU(0):   %vreg12<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg12
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
   val SU(1): Latency=1 Reg=%vreg12

SU(1):   %vreg13<def> = LW %vreg12, 0; mem:LD4[%k] GR32Bit:%vreg13,%vreg12
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
   val SU(0): Latency=1 Reg=%vreg12
  Successors:
   val SU(4294967295): Latency=4 Reg=%vreg13

SU(2):   %vreg14<def> = ADDI %zero, 9; GR32Bit:%vreg14
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
   val SU(4294967295): Latency=1 Reg=%vreg14

Pick node SU(2)  ILP: 1 / 1 = 1 Tree: 1 @0
Scheduling %vreg14<def> = ADDI %zero, 9; GR32Bit:%vreg14
handleMove 2204B -> 2184B: %vreg14<def> = ADDI %zero, 9; GR32Bit:%vreg14
     %vreg14:	[2204r,2212r:0)  0@2204r
        -->	[2184r,2212r:0)  0@2184r
     zero:	EMPTY
        -->	EMPTY
Pick node SU(0)  ILP: 1 / 1 = 1 Tree: 0 @0
Scheduling %vreg12<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg12
Pick node SU(1)  ILP: 2 / 2 = 1 Tree: 0 @0
Scheduling %vreg13<def> = LW %vreg12, 0; mem:LD4[%k] GR32Bit:%vreg13,%vreg12
*** Final schedule for BB#5 ***
SU(2):   %vreg14<def> = ADDI %zero, 9; GR32Bit:%vreg14
SU(0):   %vreg12<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg12
SU(1):   %vreg13<def> = LW %vreg12, 0; mem:LD4[%k] GR32Bit:%vreg13,%vreg12

Partitioning instructions of the region into multiple CEs

*** Renumbered SlotIndexes 2192-3096 ***

*** Renumbered SlotIndexes 2204-3108 ***

*** Renumbered SlotIndexes 2224-3120 ***

*** Renumbered SlotIndexes 2236-3132 ***

*** Renumbered SlotIndexes 2248-3144 ***

*** Renumbered SlotIndexes 2260-3156 ***

*** Renumbered SlotIndexes 2272-3168 ***

*** Renumbered SlotIndexes 2284-3180 ***

*** Renumbered SlotIndexes 2296-3192 ***

*** Renumbered SlotIndexes 2308-3204 ***

*** Renumbered SlotIndexes 2320-3216 ***

*** Renumbered SlotIndexes 2332-3228 ***

*** Renumbered SlotIndexes 2344-3240 ***

*** Renumbered SlotIndexes 2356-3252 ***

*** Renumbered SlotIndexes 2368-3264 ***

*** Renumbered SlotIndexes 2380-3276 ***

*** Renumbered SlotIndexes 2392-3288 ***

*** Renumbered SlotIndexes 2404-3300 ***

*** Renumbered SlotIndexes 2416-3312 ***

*** Renumbered SlotIndexes 2428-3324 ***

*** Renumbered SlotIndexes 2440-3336 ***

*** Renumbered SlotIndexes 2452-3348 ***

*** Renumbered SlotIndexes 2464-3360 ***

*** Renumbered SlotIndexes 2476-3372 ***

*** Renumbered SlotIndexes 2488-3384 ***

*** Renumbered SlotIndexes 2500-3396 ***
Dumping all live-out registers to memory

*** Renumbered SlotIndexes 2512-3408 ***

*** Renumbered SlotIndexes 2524-3420 ***

*** Renumbered SlotIndexes 2536-3432 ***

*** Renumbered SlotIndexes 2548-3444 ***

*** Renumbered SlotIndexes 2560-3456 ***

*** Renumbered SlotIndexes 2572-3468 ***

*** Renumbered SlotIndexes 2584-3480 ***

*** Renumbered SlotIndexes 2596-3492 ***

*** Renumbered SlotIndexes 2608-3504 ***

*** Renumbered SlotIndexes 2620-3516 ***

*** Renumbered SlotIndexes 2648-3528 ***

*** Renumbered SlotIndexes 2660-3540 ***

*** Renumbered SlotIndexes 2672-3552 ***

*** Renumbered SlotIndexes 2684-3564 ***

*** Renumbered SlotIndexes 2696-3576 ***
Shuffling instructions within the region such that successive instructions belong to the same pHyperOp to ease bundle creation
state of basic block BB#5BB#5: derived from LLVM BB %for.cond4
    Predecessors according to CFG: BB#4 BB#6
	%vreg14<def> = ADDI %zero, 9; GR32Bit:%vreg14
	%vreg99<def> = LUI 2; GR32Bit:%vreg99
	WRITEPM %vreg99<internal>, %vreg99<internal>, -68; GR32Bit:%vreg99
	%vreg99<def> = LUI 3; GR32Bit:%vreg99
	WRITEPM %vreg99<internal>, %vreg99<internal>, -68; GR32Bit:%vreg99
	%vreg99<def> = LUI 4; GR32Bit:%vreg99
	WRITEPM %vreg99<internal>, %vreg99<internal>, -68; GR32Bit:%vreg99
	%vreg100<def> = LUI 2; GR32Bit:%vreg100
	READPM %vreg100<kill>, %vreg100<internal>, -68; GR32Bit:%vreg100
	%vreg101<def> = LUI 3; GR32Bit:%vreg101
	READPM %vreg101<kill>, %vreg101<internal>, -68; GR32Bit:%vreg101
	%vreg102<def> = LUI 4; GR32Bit:%vreg102
	READPM %vreg102<kill>, %vreg102<internal>, -68; GR32Bit:%vreg102
	%vreg104<def> = LUI 0; GR32Bit:%vreg104
	READPM %vreg13<kill>, %vreg104<internal>, 0; GR32Bit:%vreg13,%vreg104
	%vreg109<def> = LUI 1; GR32Bit:%vreg109
	WRITEPM %vreg109<internal>, %vreg14<internal>, 4; GR32Bit:%vreg109,%vreg14
	%vreg110<def> = LUI 2; GR32Bit:%vreg110
	WRITEPM %vreg110<internal>, %vreg14<internal>, 0; GR32Bit:%vreg110,%vreg14
	%vreg111<def> = LUI 3; GR32Bit:%vreg111
	WRITEPM %vreg111<internal>, %vreg14<internal>, 4; GR32Bit:%vreg111,%vreg14
	BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg12<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg12
	%vreg97<def> = LUI 2; GR32Bit:%vreg97
	WRITEPM %vreg97<internal>, %vreg12<internal>, 0; GR32Bit:%vreg97,%vreg12
	%vreg99<def> = LUI 1; GR32Bit:%vreg99
	READPM %vreg99<kill>, %vreg99<internal>, -84; GR32Bit:%vreg99
	%vreg100<def> = LUI 1; GR32Bit:%vreg100
	WRITEPM %vreg100<internal>, %vreg100<internal>, -84; GR32Bit:%vreg100
	%vreg100<def> = LUI 3; GR32Bit:%vreg100
	WRITEPM %vreg100<internal>, %vreg100<internal>, -84; GR32Bit:%vreg100
	%vreg100<def> = LUI 4; GR32Bit:%vreg100
	WRITEPM %vreg100<internal>, %vreg100<internal>, -84; GR32Bit:%vreg100
	%vreg101<def> = LUI 3; GR32Bit:%vreg101
	READPM %vreg101<kill>, %vreg101<internal>, -84; GR32Bit:%vreg101
	%vreg102<def> = LUI 4; GR32Bit:%vreg102
	READPM %vreg102<kill>, %vreg102<internal>, -84; GR32Bit:%vreg102
	%vreg106<def> = LUI 1; GR32Bit:%vreg106
	READPM %vreg13<kill>, %vreg106<internal>, 0; GR32Bit:%vreg13,%vreg106
	READPM %vreg14<kill>, %vreg106<internal>, 4; GR32Bit:%vreg14,%vreg106
	BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg98<def> = LUI 2; GR32Bit:%vreg98
	READPM %vreg12<kill>, %vreg98<internal>, 0; GR32Bit:%vreg12,%vreg98
	%vreg13<def> = LW %vreg12, 0; mem:LD4[%k] GR32Bit:%vreg13,%vreg12
	%vreg99<def> = LUI 1; GR32Bit:%vreg99
	READPM %vreg99<kill>, %vreg99<internal>, -100; GR32Bit:%vreg99
	%vreg99<def> = LUI 1; GR32Bit:%vreg99
	READPM %vreg99<kill>, %vreg99<internal>, -116; GR32Bit:%vreg99
	%vreg100<def> = LUI 2; GR32Bit:%vreg100
	READPM %vreg100<kill>, %vreg100<internal>, -100; GR32Bit:%vreg100
	%vreg100<def> = LUI 2; GR32Bit:%vreg100
	READPM %vreg100<kill>, %vreg100<internal>, -116; GR32Bit:%vreg100
	%vreg101<def> = LUI 1; GR32Bit:%vreg101
	WRITEPM %vreg101<internal>, %vreg101<internal>, -100; GR32Bit:%vreg101
	%vreg101<def> = LUI 2; GR32Bit:%vreg101
	WRITEPM %vreg101<internal>, %vreg101<internal>, -100; GR32Bit:%vreg101
	%vreg101<def> = LUI 4; GR32Bit:%vreg101
	WRITEPM %vreg101<internal>, %vreg101<internal>, -100; GR32Bit:%vreg101
	%vreg101<def> = LUI 3; GR32Bit:%vreg101
	READPM %vreg101<kill>, %vreg101<internal>, -116; GR32Bit:%vreg101
	%vreg102<def> = LUI 1; GR32Bit:%vreg102
	WRITEPM %vreg102<internal>, %vreg102<internal>, -116; GR32Bit:%vreg102
	%vreg102<def> = LUI 2; GR32Bit:%vreg102
	WRITEPM %vreg102<internal>, %vreg102<internal>, -116; GR32Bit:%vreg102
	%vreg102<def> = LUI 3; GR32Bit:%vreg102
	WRITEPM %vreg102<internal>, %vreg102<internal>, -116; GR32Bit:%vreg102
	%vreg102<def> = LUI 4; GR32Bit:%vreg102
	READPM %vreg102<kill>, %vreg102<internal>, -100; GR32Bit:%vreg102
	%vreg103<def> = LUI 0; GR32Bit:%vreg103
	WRITEPM %vreg103<internal>, %vreg13<internal>, 0; GR32Bit:%vreg103,%vreg13
	%vreg105<def> = LUI 1; GR32Bit:%vreg105
	WRITEPM %vreg105<internal>, %vreg13<internal>, 0; GR32Bit:%vreg105,%vreg13
	%vreg107<def> = LUI 3; GR32Bit:%vreg107
	WRITEPM %vreg107<internal>, %vreg13<internal>, 0; GR32Bit:%vreg107,%vreg13
	READPM %vreg14<kill>, %vreg98<internal>, 0; GR32Bit:%vreg14,%vreg98
	BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg108<def> = LUI 3; GR32Bit:%vreg108
	READPM %vreg13<kill>, %vreg108<internal>, 0; GR32Bit:%vreg13,%vreg108
	READPM %vreg14<kill>, %vreg108<internal>, 4; GR32Bit:%vreg14,%vreg108
	BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg93<def> = LUI 2; GR32Bit:%vreg93
	WRITEPM %vreg93<internal>, %vreg93<internal>, -68; GR32Bit:%vreg93
	%vreg93<def> = LUI 3; GR32Bit:%vreg93
	WRITEPM %vreg93<internal>, %vreg93<internal>, -68; GR32Bit:%vreg93
	%vreg93<def> = LUI 4; GR32Bit:%vreg93
	WRITEPM %vreg93<internal>, %vreg93<internal>, -68; GR32Bit:%vreg93
	%vreg93<def> = LUI 1; GR32Bit:%vreg93
	READPM %vreg93<kill>, %vreg93<internal>, -84; GR32Bit:%vreg93
	%vreg93<def> = LUI 1; GR32Bit:%vreg93
	READPM %vreg93<kill>, %vreg93<internal>, -100; GR32Bit:%vreg93
	%vreg93<def> = LUI 1; GR32Bit:%vreg93
	READPM %vreg93<kill>, %vreg93<internal>, -116; GR32Bit:%vreg93
	%vreg94<def> = LUI 1; GR32Bit:%vreg94
	WRITEPM %vreg94<internal>, %vreg94<internal>, -84; GR32Bit:%vreg94
	%vreg94<def> = LUI 3; GR32Bit:%vreg94
	WRITEPM %vreg94<internal>, %vreg94<internal>, -84; GR32Bit:%vreg94
	%vreg94<def> = LUI 4; GR32Bit:%vreg94
	WRITEPM %vreg94<internal>, %vreg94<internal>, -84; GR32Bit:%vreg94
	%vreg94<def> = LUI 2; GR32Bit:%vreg94
	READPM %vreg94<kill>, %vreg94<internal>, -68; GR32Bit:%vreg94
	%vreg94<def> = LUI 2; GR32Bit:%vreg94
	READPM %vreg94<kill>, %vreg94<internal>, -100; GR32Bit:%vreg94
	%vreg94<def> = LUI 2; GR32Bit:%vreg94
	READPM %vreg94<kill>, %vreg94<internal>, -116; GR32Bit:%vreg94
	%vreg95<def> = LUI 1; GR32Bit:%vreg95
	WRITEPM %vreg95<internal>, %vreg95<internal>, -100; GR32Bit:%vreg95
	%vreg95<def> = LUI 2; GR32Bit:%vreg95
	WRITEPM %vreg95<internal>, %vreg95<internal>, -100; GR32Bit:%vreg95
	%vreg95<def> = LUI 4; GR32Bit:%vreg95
	WRITEPM %vreg95<internal>, %vreg95<internal>, -100; GR32Bit:%vreg95
	%vreg95<def> = LUI 3; GR32Bit:%vreg95
	READPM %vreg95<kill>, %vreg95<internal>, -68; GR32Bit:%vreg95
	%vreg95<def> = LUI 3; GR32Bit:%vreg95
	READPM %vreg95<kill>, %vreg95<internal>, -84; GR32Bit:%vreg95
	%vreg95<def> = LUI 3; GR32Bit:%vreg95
	READPM %vreg95<kill>, %vreg95<internal>, -116; GR32Bit:%vreg95
	%vreg96<def> = LUI 1; GR32Bit:%vreg96
	WRITEPM %vreg96<internal>, %vreg96<internal>, -116; GR32Bit:%vreg96
	%vreg96<def> = LUI 2; GR32Bit:%vreg96
	WRITEPM %vreg96<internal>, %vreg96<internal>, -116; GR32Bit:%vreg96
	%vreg96<def> = LUI 3; GR32Bit:%vreg96
	WRITEPM %vreg96<internal>, %vreg96<internal>, -116; GR32Bit:%vreg96
	%vreg96<def> = LUI 4; GR32Bit:%vreg96
	READPM %vreg96<kill>, %vreg96<internal>, -68; GR32Bit:%vreg96
	%vreg96<def> = LUI 4; GR32Bit:%vreg96
	READPM %vreg96<kill>, %vreg96<internal>, -84; GR32Bit:%vreg96
	%vreg96<def> = LUI 4; GR32Bit:%vreg96
	READPM %vreg96<kill>, %vreg96<internal>, -100; GR32Bit:%vreg96
	JAL <BB#6>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#6>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#6>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#6>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#6(124) BB#7(4)
BB before region shuffle:BB#5: derived from LLVM BB %for.cond4
    Predecessors according to CFG: BB#4 BB#6
	%vreg14<def> = ADDI %zero, 9; GR32Bit:%vreg14
	%vreg99<def> = LUI 2; GR32Bit:%vreg99
	WRITEPM %vreg99<internal>, %vreg99<internal>, -68; GR32Bit:%vreg99
	%vreg99<def> = LUI 3; GR32Bit:%vreg99
	WRITEPM %vreg99<internal>, %vreg99<internal>, -68; GR32Bit:%vreg99
	%vreg99<def> = LUI 4; GR32Bit:%vreg99
	WRITEPM %vreg99<internal>, %vreg99<internal>, -68; GR32Bit:%vreg99
	%vreg100<def> = LUI 2; GR32Bit:%vreg100
	READPM %vreg100<kill>, %vreg100<internal>, -68; GR32Bit:%vreg100
	%vreg101<def> = LUI 3; GR32Bit:%vreg101
	READPM %vreg101<kill>, %vreg101<internal>, -68; GR32Bit:%vreg101
	%vreg102<def> = LUI 4; GR32Bit:%vreg102
	READPM %vreg102<kill>, %vreg102<internal>, -68; GR32Bit:%vreg102
	%vreg104<def> = LUI 0; GR32Bit:%vreg104
	READPM %vreg13<kill>, %vreg104<internal>, 0; GR32Bit:%vreg13,%vreg104
	%vreg109<def> = LUI 1; GR32Bit:%vreg109
	WRITEPM %vreg109<internal>, %vreg14<internal>, 4; GR32Bit:%vreg109,%vreg14
	%vreg110<def> = LUI 2; GR32Bit:%vreg110
	WRITEPM %vreg110<internal>, %vreg14<internal>, 0; GR32Bit:%vreg110,%vreg14
	%vreg111<def> = LUI 3; GR32Bit:%vreg111
	WRITEPM %vreg111<internal>, %vreg14<internal>, 4; GR32Bit:%vreg111,%vreg14
	BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg12<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg12
	%vreg97<def> = LUI 2; GR32Bit:%vreg97
	WRITEPM %vreg97<internal>, %vreg12<internal>, 0; GR32Bit:%vreg97,%vreg12
	%vreg99<def> = LUI 1; GR32Bit:%vreg99
	READPM %vreg99<kill>, %vreg99<internal>, -84; GR32Bit:%vreg99
	%vreg100<def> = LUI 1; GR32Bit:%vreg100
	WRITEPM %vreg100<internal>, %vreg100<internal>, -84; GR32Bit:%vreg100
	%vreg100<def> = LUI 3; GR32Bit:%vreg100
	WRITEPM %vreg100<internal>, %vreg100<internal>, -84; GR32Bit:%vreg100
	%vreg100<def> = LUI 4; GR32Bit:%vreg100
	WRITEPM %vreg100<internal>, %vreg100<internal>, -84; GR32Bit:%vreg100
	%vreg101<def> = LUI 3; GR32Bit:%vreg101
	READPM %vreg101<kill>, %vreg101<internal>, -84; GR32Bit:%vreg101
	%vreg102<def> = LUI 4; GR32Bit:%vreg102
	READPM %vreg102<kill>, %vreg102<internal>, -84; GR32Bit:%vreg102
	%vreg106<def> = LUI 1; GR32Bit:%vreg106
	READPM %vreg13<kill>, %vreg106<internal>, 0; GR32Bit:%vreg13,%vreg106
	READPM %vreg14<kill>, %vreg106<internal>, 4; GR32Bit:%vreg14,%vreg106
	BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg98<def> = LUI 2; GR32Bit:%vreg98
	READPM %vreg12<kill>, %vreg98<internal>, 0; GR32Bit:%vreg12,%vreg98
	%vreg13<def> = LW %vreg12, 0; mem:LD4[%k] GR32Bit:%vreg13,%vreg12
	%vreg99<def> = LUI 1; GR32Bit:%vreg99
	READPM %vreg99<kill>, %vreg99<internal>, -100; GR32Bit:%vreg99
	%vreg99<def> = LUI 1; GR32Bit:%vreg99
	READPM %vreg99<kill>, %vreg99<internal>, -116; GR32Bit:%vreg99
	%vreg100<def> = LUI 2; GR32Bit:%vreg100
	READPM %vreg100<kill>, %vreg100<internal>, -100; GR32Bit:%vreg100
	%vreg100<def> = LUI 2; GR32Bit:%vreg100
	READPM %vreg100<kill>, %vreg100<internal>, -116; GR32Bit:%vreg100
	%vreg101<def> = LUI 1; GR32Bit:%vreg101
	WRITEPM %vreg101<internal>, %vreg101<internal>, -100; GR32Bit:%vreg101
	%vreg101<def> = LUI 2; GR32Bit:%vreg101
	WRITEPM %vreg101<internal>, %vreg101<internal>, -100; GR32Bit:%vreg101
	%vreg101<def> = LUI 4; GR32Bit:%vreg101
	WRITEPM %vreg101<internal>, %vreg101<internal>, -100; GR32Bit:%vreg101
	%vreg101<def> = LUI 3; GR32Bit:%vreg101
	READPM %vreg101<kill>, %vreg101<internal>, -116; GR32Bit:%vreg101
	%vreg102<def> = LUI 1; GR32Bit:%vreg102
	WRITEPM %vreg102<internal>, %vreg102<internal>, -116; GR32Bit:%vreg102
	%vreg102<def> = LUI 2; GR32Bit:%vreg102
	WRITEPM %vreg102<internal>, %vreg102<internal>, -116; GR32Bit:%vreg102
	%vreg102<def> = LUI 3; GR32Bit:%vreg102
	WRITEPM %vreg102<internal>, %vreg102<internal>, -116; GR32Bit:%vreg102
	%vreg102<def> = LUI 4; GR32Bit:%vreg102
	READPM %vreg102<kill>, %vreg102<internal>, -100; GR32Bit:%vreg102
	%vreg103<def> = LUI 0; GR32Bit:%vreg103
	WRITEPM %vreg103<internal>, %vreg13<internal>, 0; GR32Bit:%vreg103,%vreg13
	%vreg105<def> = LUI 1; GR32Bit:%vreg105
	WRITEPM %vreg105<internal>, %vreg13<internal>, 0; GR32Bit:%vreg105,%vreg13
	%vreg107<def> = LUI 3; GR32Bit:%vreg107
	WRITEPM %vreg107<internal>, %vreg13<internal>, 0; GR32Bit:%vreg107,%vreg13
	READPM %vreg14<kill>, %vreg98<internal>, 0; GR32Bit:%vreg14,%vreg98
	BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg108<def> = LUI 3; GR32Bit:%vreg108
	READPM %vreg13<kill>, %vreg108<internal>, 0; GR32Bit:%vreg13,%vreg108
	READPM %vreg14<kill>, %vreg108<internal>, 4; GR32Bit:%vreg14,%vreg108
	BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg93<def> = LUI 2; GR32Bit:%vreg93
	WRITEPM %vreg93<internal>, %vreg93<internal>, -68; GR32Bit:%vreg93
	%vreg93<def> = LUI 3; GR32Bit:%vreg93
	WRITEPM %vreg93<internal>, %vreg93<internal>, -68; GR32Bit:%vreg93
	%vreg93<def> = LUI 4; GR32Bit:%vreg93
	WRITEPM %vreg93<internal>, %vreg93<internal>, -68; GR32Bit:%vreg93
	%vreg93<def> = LUI 1; GR32Bit:%vreg93
	READPM %vreg93<kill>, %vreg93<internal>, -84; GR32Bit:%vreg93
	%vreg93<def> = LUI 1; GR32Bit:%vreg93
	READPM %vreg93<kill>, %vreg93<internal>, -100; GR32Bit:%vreg93
	%vreg93<def> = LUI 1; GR32Bit:%vreg93
	READPM %vreg93<kill>, %vreg93<internal>, -116; GR32Bit:%vreg93
	%vreg94<def> = LUI 1; GR32Bit:%vreg94
	WRITEPM %vreg94<internal>, %vreg94<internal>, -84; GR32Bit:%vreg94
	%vreg94<def> = LUI 3; GR32Bit:%vreg94
	WRITEPM %vreg94<internal>, %vreg94<internal>, -84; GR32Bit:%vreg94
	%vreg94<def> = LUI 4; GR32Bit:%vreg94
	WRITEPM %vreg94<internal>, %vreg94<internal>, -84; GR32Bit:%vreg94
	%vreg94<def> = LUI 2; GR32Bit:%vreg94
	READPM %vreg94<kill>, %vreg94<internal>, -68; GR32Bit:%vreg94
	%vreg94<def> = LUI 2; GR32Bit:%vreg94
	READPM %vreg94<kill>, %vreg94<internal>, -100; GR32Bit:%vreg94
	%vreg94<def> = LUI 2; GR32Bit:%vreg94
	READPM %vreg94<kill>, %vreg94<internal>, -116; GR32Bit:%vreg94
	%vreg95<def> = LUI 1; GR32Bit:%vreg95
	WRITEPM %vreg95<internal>, %vreg95<internal>, -100; GR32Bit:%vreg95
	%vreg95<def> = LUI 2; GR32Bit:%vreg95
	WRITEPM %vreg95<internal>, %vreg95<internal>, -100; GR32Bit:%vreg95
	%vreg95<def> = LUI 4; GR32Bit:%vreg95
	WRITEPM %vreg95<internal>, %vreg95<internal>, -100; GR32Bit:%vreg95
	%vreg95<def> = LUI 3; GR32Bit:%vreg95
	READPM %vreg95<kill>, %vreg95<internal>, -68; GR32Bit:%vreg95
	%vreg95<def> = LUI 3; GR32Bit:%vreg95
	READPM %vreg95<kill>, %vreg95<internal>, -84; GR32Bit:%vreg95
	%vreg95<def> = LUI 3; GR32Bit:%vreg95
	READPM %vreg95<kill>, %vreg95<internal>, -116; GR32Bit:%vreg95
	%vreg96<def> = LUI 1; GR32Bit:%vreg96
	WRITEPM %vreg96<internal>, %vreg96<internal>, -116; GR32Bit:%vreg96
	%vreg96<def> = LUI 2; GR32Bit:%vreg96
	WRITEPM %vreg96<internal>, %vreg96<internal>, -116; GR32Bit:%vreg96
	%vreg96<def> = LUI 3; GR32Bit:%vreg96
	WRITEPM %vreg96<internal>, %vreg96<internal>, -116; GR32Bit:%vreg96
	%vreg96<def> = LUI 4; GR32Bit:%vreg96
	READPM %vreg96<kill>, %vreg96<internal>, -68; GR32Bit:%vreg96
	%vreg96<def> = LUI 4; GR32Bit:%vreg96
	READPM %vreg96<kill>, %vreg96<internal>, -84; GR32Bit:%vreg96
	%vreg96<def> = LUI 4; GR32Bit:%vreg96
	READPM %vreg96<kill>, %vreg96<internal>, -100; GR32Bit:%vreg96
	JAL <BB#6>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#6>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#6>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#6>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#6(124) BB#7(4)
Merging regions of basic block BB#5
merging regions:0 and 1
merging regions:0 and 1
merging regions:0 and 1
merging regions:0 and 1
After Shuffling basic block, state of BB#5:
BB#5: derived from LLVM BB %for.cond4
    Predecessors according to CFG: BB#4 BB#6
	%vreg14<def> = ADDI %zero, 9; GR32Bit:%vreg14
	%vreg99<def> = LUI 2; GR32Bit:%vreg99
	WRITEPM %vreg99<internal>, %vreg99<internal>, -68; GR32Bit:%vreg99
	%vreg99<def> = LUI 3; GR32Bit:%vreg99
	WRITEPM %vreg99<internal>, %vreg99<internal>, -68; GR32Bit:%vreg99
	%vreg99<def> = LUI 4; GR32Bit:%vreg99
	WRITEPM %vreg99<internal>, %vreg99<internal>, -68; GR32Bit:%vreg99
	%vreg100<def> = LUI 2; GR32Bit:%vreg100
	READPM %vreg100<kill>, %vreg100<internal>, -68; GR32Bit:%vreg100
	%vreg101<def> = LUI 3; GR32Bit:%vreg101
	READPM %vreg101<kill>, %vreg101<internal>, -68; GR32Bit:%vreg101
	%vreg102<def> = LUI 4; GR32Bit:%vreg102
	READPM %vreg102<kill>, %vreg102<internal>, -68; GR32Bit:%vreg102
	%vreg104<def> = LUI 0; GR32Bit:%vreg104
	READPM %vreg13<kill>, %vreg104<internal>, 0; GR32Bit:%vreg13,%vreg104
	%vreg109<def> = LUI 1; GR32Bit:%vreg109
	WRITEPM %vreg109<internal>, %vreg14<internal>, 4; GR32Bit:%vreg109,%vreg14
	%vreg110<def> = LUI 2; GR32Bit:%vreg110
	WRITEPM %vreg110<internal>, %vreg14<internal>, 0; GR32Bit:%vreg110,%vreg14
	%vreg111<def> = LUI 3; GR32Bit:%vreg111
	WRITEPM %vreg111<internal>, %vreg14<internal>, 4; GR32Bit:%vreg111,%vreg14
	BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#6>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg12<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg12
	%vreg97<def> = LUI 2; GR32Bit:%vreg97
	WRITEPM %vreg97<internal>, %vreg12<internal>, 0; GR32Bit:%vreg97,%vreg12
	%vreg99<def> = LUI 1; GR32Bit:%vreg99
	READPM %vreg99<kill>, %vreg99<internal>, -84; GR32Bit:%vreg99
	%vreg100<def> = LUI 1; GR32Bit:%vreg100
	WRITEPM %vreg100<internal>, %vreg100<internal>, -84; GR32Bit:%vreg100
	%vreg100<def> = LUI 3; GR32Bit:%vreg100
	WRITEPM %vreg100<internal>, %vreg100<internal>, -84; GR32Bit:%vreg100
	%vreg100<def> = LUI 4; GR32Bit:%vreg100
	WRITEPM %vreg100<internal>, %vreg100<internal>, -84; GR32Bit:%vreg100
	%vreg101<def> = LUI 3; GR32Bit:%vreg101
	READPM %vreg101<kill>, %vreg101<internal>, -84; GR32Bit:%vreg101
	%vreg102<def> = LUI 4; GR32Bit:%vreg102
	READPM %vreg102<kill>, %vreg102<internal>, -84; GR32Bit:%vreg102
	%vreg106<def> = LUI 1; GR32Bit:%vreg106
	READPM %vreg13<kill>, %vreg106<internal>, 0; GR32Bit:%vreg13,%vreg106
	READPM %vreg14<kill>, %vreg106<internal>, 4; GR32Bit:%vreg14,%vreg106
	BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#6>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg98<def> = LUI 2; GR32Bit:%vreg98
	READPM %vreg12<kill>, %vreg98<internal>, 0; GR32Bit:%vreg12,%vreg98
	%vreg13<def> = LW %vreg12, 0; mem:LD4[%k] GR32Bit:%vreg13,%vreg12
	%vreg99<def> = LUI 1; GR32Bit:%vreg99
	READPM %vreg99<kill>, %vreg99<internal>, -100; GR32Bit:%vreg99
	%vreg99<def> = LUI 1; GR32Bit:%vreg99
	READPM %vreg99<kill>, %vreg99<internal>, -116; GR32Bit:%vreg99
	%vreg100<def> = LUI 2; GR32Bit:%vreg100
	READPM %vreg100<kill>, %vreg100<internal>, -100; GR32Bit:%vreg100
	%vreg100<def> = LUI 2; GR32Bit:%vreg100
	READPM %vreg100<kill>, %vreg100<internal>, -116; GR32Bit:%vreg100
	%vreg101<def> = LUI 1; GR32Bit:%vreg101
	WRITEPM %vreg101<internal>, %vreg101<internal>, -100; GR32Bit:%vreg101
	%vreg101<def> = LUI 2; GR32Bit:%vreg101
	WRITEPM %vreg101<internal>, %vreg101<internal>, -100; GR32Bit:%vreg101
	%vreg101<def> = LUI 4; GR32Bit:%vreg101
	WRITEPM %vreg101<internal>, %vreg101<internal>, -100; GR32Bit:%vreg101
	%vreg101<def> = LUI 3; GR32Bit:%vreg101
	READPM %vreg101<kill>, %vreg101<internal>, -116; GR32Bit:%vreg101
	%vreg102<def> = LUI 1; GR32Bit:%vreg102
	WRITEPM %vreg102<internal>, %vreg102<internal>, -116; GR32Bit:%vreg102
	%vreg102<def> = LUI 2; GR32Bit:%vreg102
	WRITEPM %vreg102<internal>, %vreg102<internal>, -116; GR32Bit:%vreg102
	%vreg102<def> = LUI 3; GR32Bit:%vreg102
	WRITEPM %vreg102<internal>, %vreg102<internal>, -116; GR32Bit:%vreg102
	%vreg102<def> = LUI 4; GR32Bit:%vreg102
	READPM %vreg102<kill>, %vreg102<internal>, -100; GR32Bit:%vreg102
	%vreg103<def> = LUI 0; GR32Bit:%vreg103
	WRITEPM %vreg103<internal>, %vreg13<internal>, 0; GR32Bit:%vreg103,%vreg13
	%vreg105<def> = LUI 1; GR32Bit:%vreg105
	WRITEPM %vreg105<internal>, %vreg13<internal>, 0; GR32Bit:%vreg105,%vreg13
	%vreg107<def> = LUI 3; GR32Bit:%vreg107
	WRITEPM %vreg107<internal>, %vreg13<internal>, 0; GR32Bit:%vreg107,%vreg13
	READPM %vreg14<kill>, %vreg98<internal>, 0; GR32Bit:%vreg14,%vreg98
	BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	JAL <BB#6>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg108<def> = LUI 3; GR32Bit:%vreg108
	READPM %vreg13<kill>, %vreg108<internal>, 0; GR32Bit:%vreg13,%vreg108
	READPM %vreg14<kill>, %vreg108<internal>, 4; GR32Bit:%vreg14,%vreg108
	BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg93<def> = LUI 2; GR32Bit:%vreg93
	WRITEPM %vreg93<internal>, %vreg93<internal>, -68; GR32Bit:%vreg93
	%vreg93<def> = LUI 3; GR32Bit:%vreg93
	WRITEPM %vreg93<internal>, %vreg93<internal>, -68; GR32Bit:%vreg93
	%vreg93<def> = LUI 4; GR32Bit:%vreg93
	WRITEPM %vreg93<internal>, %vreg93<internal>, -68; GR32Bit:%vreg93
	%vreg93<def> = LUI 1; GR32Bit:%vreg93
	READPM %vreg93<kill>, %vreg93<internal>, -84; GR32Bit:%vreg93
	%vreg93<def> = LUI 1; GR32Bit:%vreg93
	READPM %vreg93<kill>, %vreg93<internal>, -100; GR32Bit:%vreg93
	%vreg93<def> = LUI 1; GR32Bit:%vreg93
	READPM %vreg93<kill>, %vreg93<internal>, -116; GR32Bit:%vreg93
	%vreg94<def> = LUI 1; GR32Bit:%vreg94
	WRITEPM %vreg94<internal>, %vreg94<internal>, -84; GR32Bit:%vreg94
	%vreg94<def> = LUI 3; GR32Bit:%vreg94
	WRITEPM %vreg94<internal>, %vreg94<internal>, -84; GR32Bit:%vreg94
	%vreg94<def> = LUI 4; GR32Bit:%vreg94
	WRITEPM %vreg94<internal>, %vreg94<internal>, -84; GR32Bit:%vreg94
	%vreg94<def> = LUI 2; GR32Bit:%vreg94
	READPM %vreg94<kill>, %vreg94<internal>, -68; GR32Bit:%vreg94
	%vreg94<def> = LUI 2; GR32Bit:%vreg94
	READPM %vreg94<kill>, %vreg94<internal>, -100; GR32Bit:%vreg94
	%vreg94<def> = LUI 2; GR32Bit:%vreg94
	READPM %vreg94<kill>, %vreg94<internal>, -116; GR32Bit:%vreg94
	%vreg95<def> = LUI 1; GR32Bit:%vreg95
	WRITEPM %vreg95<internal>, %vreg95<internal>, -100; GR32Bit:%vreg95
	%vreg95<def> = LUI 2; GR32Bit:%vreg95
	WRITEPM %vreg95<internal>, %vreg95<internal>, -100; GR32Bit:%vreg95
	%vreg95<def> = LUI 4; GR32Bit:%vreg95
	WRITEPM %vreg95<internal>, %vreg95<internal>, -100; GR32Bit:%vreg95
	%vreg95<def> = LUI 3; GR32Bit:%vreg95
	READPM %vreg95<kill>, %vreg95<internal>, -68; GR32Bit:%vreg95
	%vreg95<def> = LUI 3; GR32Bit:%vreg95
	READPM %vreg95<kill>, %vreg95<internal>, -84; GR32Bit:%vreg95
	%vreg95<def> = LUI 3; GR32Bit:%vreg95
	READPM %vreg95<kill>, %vreg95<internal>, -116; GR32Bit:%vreg95
	%vreg96<def> = LUI 1; GR32Bit:%vreg96
	WRITEPM %vreg96<internal>, %vreg96<internal>, -116; GR32Bit:%vreg96
	%vreg96<def> = LUI 2; GR32Bit:%vreg96
	WRITEPM %vreg96<internal>, %vreg96<internal>, -116; GR32Bit:%vreg96
	%vreg96<def> = LUI 3; GR32Bit:%vreg96
	WRITEPM %vreg96<internal>, %vreg96<internal>, -116; GR32Bit:%vreg96
	%vreg96<def> = LUI 4; GR32Bit:%vreg96
	READPM %vreg96<kill>, %vreg96<internal>, -68; GR32Bit:%vreg96
	%vreg96<def> = LUI 4; GR32Bit:%vreg96
	READPM %vreg96<kill>, %vreg96<internal>, -84; GR32Bit:%vreg96
	%vreg96<def> = LUI 4; GR32Bit:%vreg96
	READPM %vreg96<kill>, %vreg96<internal>, -100; GR32Bit:%vreg96
	JAL <BB#6>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#6(124) BB#7(4)
Creating pHyperOp bundles for CEs
Starting new basic block BB#6
********** MI Scheduling **********
main:BB#6 for.inc
  From: %vreg18<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg18
    To: JAL <BB#5>
 Remaining: 0
Max Pressure: GR32Bit=7
Live In: 
Live Out: 
FP32BitLimit 32 Actual 0
GR32BitLimit 32 Actual 7
Excess PSets: 
4 subtrees:
  SU(0) in tree 0
  SU(1) in tree 0
  SU(2) in tree 1
  SU(3) in tree 1
  SU(4) in tree 0
  SU(5) in tree 1
  SU(6) in tree 1
  SU(7) in tree 1
  SU(8) in tree 1
  SU(9) in tree 1
  SU(10) in tree 1
  SU(11) in tree 1
  SU(12) in tree 1
  SU(13) in tree 0
  SU(14) in tree 0
  SU(15) in tree 0
  SU(16) in tree 0
  SU(17) in tree 0
  SU(18) in tree 0
  SU(19) in tree 0
  SU(20) in tree 0
  SU(21) in tree 0
  SU(22) in tree 0
  SU(23) in tree 2
  SU(24) in tree 2
  SU(25) in tree 2
  SU(26) in tree 2
  SU(27) in tree 2
  SU(28) in tree 2
  SU(29) in tree 2
  SU(30) in tree 3
  SU(31) in tree 3
  SU(32) in tree 3
SU(0):   %vreg18<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg18
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 13
  Successors:
   val SU(32): Latency=1 Reg=%vreg18
   val SU(30): Latency=1 Reg=%vreg18
   val SU(1): Latency=1 Reg=%vreg18

SU(1):   %vreg19<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg19,%vreg18
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 12
  Predecessors:
   val SU(0): Latency=1 Reg=%vreg18
  Successors:
   val SU(15): Latency=4 Reg=%vreg19
   val SU(10): Latency=4 Reg=%vreg19
   ch  SU(32): Latency=0

SU(2):   %vreg20<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg20
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 13
  Successors:
   val SU(3): Latency=1 Reg=%vreg20

SU(3):   %vreg21<def> = LW %vreg20, 0; mem:LD4[%i] GR32Bit:%vreg21,%vreg20
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 12
  Predecessors:
   val SU(2): Latency=1 Reg=%vreg20
  Successors:
   val SU(5): Latency=4 Reg=%vreg21

SU(4):   %vreg22<def> = ADDI %zero, 40; GR32Bit:%vreg22
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 9
  Successors:
   val SU(15): Latency=1 Reg=%vreg22
   val SU(5): Latency=1 Reg=%vreg22

SU(5):   %vreg23<def> = MUL %vreg22, %vreg21; GR32Bit:%vreg23,%vreg22,%vreg21
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 8
  Predecessors:
   val SU(3): Latency=4 Reg=%vreg21
   val SU(4): Latency=1 Reg=%vreg22
  Successors:
   val SU(27): Latency=1 Reg=%vreg23
   val SU(9): Latency=1 Reg=%vreg23

SU(6):   %vreg24<def> = LUI <ga:@a>[TF=2]; GR32Bit:%vreg24
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 9
  Successors:
   val SU(8): Latency=1 Reg=%vreg24

SU(7):   %vreg25<def> = ADDI %zero, <ga:@a>[TF=3]; GR32Bit:%vreg25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 9
  Successors:
   val SU(8): Latency=1 Reg=%vreg25

SU(8):   %vreg26<def> = ADD %vreg25, %vreg24; GR32Bit:%vreg26,%vreg25,%vreg24
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 8
  Predecessors:
   val SU(7): Latency=1 Reg=%vreg25
   val SU(6): Latency=1 Reg=%vreg24
  Successors:
   val SU(9): Latency=1 Reg=%vreg26

SU(9):   %vreg27<def> = ADD %vreg23, %vreg26; GR32Bit:%vreg27,%vreg23,%vreg26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 7
  Predecessors:
   val SU(5): Latency=1 Reg=%vreg23
   val SU(8): Latency=1 Reg=%vreg26
  Successors:
   val SU(11): Latency=1 Reg=%vreg27

SU(10):   %vreg28<def> = SLLI %vreg19, 2; GR32Bit:%vreg28,%vreg19
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 7
  Predecessors:
   val SU(1): Latency=4 Reg=%vreg19
  Successors:
   val SU(11): Latency=1 Reg=%vreg28

SU(11):   %vreg29<def> = ADD %vreg28, %vreg27; GR32Bit:%vreg29,%vreg28,%vreg27
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 6
  Predecessors:
   val SU(9): Latency=1 Reg=%vreg27
   val SU(10): Latency=1 Reg=%vreg28
  Successors:
   val SU(12): Latency=1 Reg=%vreg29

SU(12):   %vreg30<def> = LW %vreg29, 0; mem:LD4[%arrayidx7] GR32Bit:%vreg30,%vreg29
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 8
  Height             : 5
  Predecessors:
   val SU(11): Latency=1 Reg=%vreg29
  Successors:
   val SU(23): Latency=4 Reg=%vreg30

SU(13):   %vreg31<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg31
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 12
  Successors:
   val SU(14): Latency=1 Reg=%vreg31

SU(14):   %vreg32<def> = LW %vreg31, 0; mem:LD4[%j] GR32Bit:%vreg32,%vreg31
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 11
  Predecessors:
   val SU(13): Latency=1 Reg=%vreg31
  Successors:
   val SU(20): Latency=4 Reg=%vreg32

SU(15):   %vreg33<def> = MUL %vreg22, %vreg19; GR32Bit:%vreg33,%vreg22,%vreg19
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 8
  Predecessors:
   val SU(1): Latency=4 Reg=%vreg19
   val SU(4): Latency=1 Reg=%vreg22
  Successors:
   val SU(19): Latency=1 Reg=%vreg33

SU(16):   %vreg34<def> = LUI <ga:@b>[TF=2]; GR32Bit:%vreg34
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 9
  Successors:
   val SU(18): Latency=1 Reg=%vreg34

SU(17):   %vreg35<def> = ADDI %zero, <ga:@b>[TF=3]; GR32Bit:%vreg35
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 9
  Successors:
   val SU(18): Latency=1 Reg=%vreg35

SU(18):   %vreg36<def> = ADD %vreg35, %vreg34; GR32Bit:%vreg36,%vreg35,%vreg34
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 8
  Predecessors:
   val SU(17): Latency=1 Reg=%vreg35
   val SU(16): Latency=1 Reg=%vreg34
  Successors:
   val SU(19): Latency=1 Reg=%vreg36

SU(19):   %vreg37<def> = ADD %vreg33, %vreg36; GR32Bit:%vreg37,%vreg33,%vreg36
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 7
  Predecessors:
   val SU(15): Latency=1 Reg=%vreg33
   val SU(18): Latency=1 Reg=%vreg36
  Successors:
   val SU(21): Latency=1 Reg=%vreg37

SU(20):   %vreg38<def> = SLLI %vreg32, 2; GR32Bit:%vreg38,%vreg32
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 7
  Predecessors:
   val SU(14): Latency=4 Reg=%vreg32
  Successors:
   val SU(28): Latency=1 Reg=%vreg38
   val SU(21): Latency=1 Reg=%vreg38

SU(21):   %vreg39<def> = ADD %vreg38, %vreg37; GR32Bit:%vreg39,%vreg38,%vreg37
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 6
  Predecessors:
   val SU(19): Latency=1 Reg=%vreg37
   val SU(20): Latency=1 Reg=%vreg38
  Successors:
   val SU(22): Latency=1 Reg=%vreg39

SU(22):   %vreg40<def> = LW %vreg39, 0; mem:LD4[%arrayidx9] GR32Bit:%vreg40,%vreg39
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 8
  Height             : 5
  Predecessors:
   val SU(21): Latency=1 Reg=%vreg39
  Successors:
   val SU(23): Latency=4 Reg=%vreg40

SU(23):   %vreg41<def> = ADD %vreg40, %vreg30; GR32Bit:%vreg41,%vreg40,%vreg30
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 12
  Height             : 1
  Predecessors:
   val SU(22): Latency=4 Reg=%vreg40
   val SU(12): Latency=4 Reg=%vreg30
  Successors:
   val SU(29): Latency=1 Reg=%vreg41

SU(24):   %vreg42<def> = LUI <ga:@c>[TF=2]; GR32Bit:%vreg42
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 4
  Successors:
   val SU(26): Latency=1 Reg=%vreg42

SU(25):   %vreg43<def> = ADDI %zero, <ga:@c>[TF=3]; GR32Bit:%vreg43
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 4
  Successors:
   val SU(26): Latency=1 Reg=%vreg43

SU(26):   %vreg44<def> = ADD %vreg43, %vreg42; GR32Bit:%vreg44,%vreg43,%vreg42
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 3
  Predecessors:
   val SU(25): Latency=1 Reg=%vreg43
   val SU(24): Latency=1 Reg=%vreg42
  Successors:
   val SU(27): Latency=1 Reg=%vreg44

SU(27):   %vreg45<def> = ADD %vreg23, %vreg44; GR32Bit:%vreg45,%vreg23,%vreg44
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 2
  Predecessors:
   val SU(5): Latency=1 Reg=%vreg23
   val SU(26): Latency=1 Reg=%vreg44
  Successors:
   val SU(28): Latency=1 Reg=%vreg45

SU(28):   %vreg46<def> = ADD %vreg38, %vreg45; GR32Bit:%vreg46,%vreg38,%vreg45
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
   val SU(27): Latency=1 Reg=%vreg45
   val SU(20): Latency=1 Reg=%vreg38
  Successors:
   val SU(29): Latency=1 Reg=%vreg46

SU(29):   SW %vreg41, %vreg46, 0; mem:ST4[%arrayidx11] GR32Bit:%vreg41,%vreg46
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 13
  Height             : 0
  Predecessors:
   val SU(23): Latency=1 Reg=%vreg41
   val SU(28): Latency=1 Reg=%vreg46
  Successors:
   ch  SU(4294967295) *: Latency=0

SU(30):   %vreg47<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg47,%vreg18
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 5
  Predecessors:
   val SU(0): Latency=1 Reg=%vreg18
  Successors:
   val SU(31): Latency=4 Reg=%vreg47
   ch  SU(32): Latency=0

SU(31):   %vreg48<def> = ADDI %vreg47, 1; GR32Bit:%vreg48,%vreg47
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
   val SU(30): Latency=4 Reg=%vreg47
  Successors:
   val SU(32): Latency=1 Reg=%vreg48

SU(32):   SW %vreg48, %vreg18, 0; mem:ST4[%k] GR32Bit:%vreg48,%vreg18
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
   val SU(31): Latency=1 Reg=%vreg48
   val SU(0): Latency=1 Reg=%vreg18
   ch  SU(30): Latency=0
   ch  SU(1): Latency=0
  Successors:
   ch  SU(4294967295) *: Latency=0

SU(0):   %vreg18<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg18
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 13
  Successors:
   val SU(32): Latency=1 Reg=%vreg18
   val SU(30): Latency=1 Reg=%vreg18
   val SU(1): Latency=1 Reg=%vreg18

SU(1):   %vreg19<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg19,%vreg18
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 12
  Predecessors:
   val SU(0): Latency=1 Reg=%vreg18
  Successors:
   val SU(15): Latency=4 Reg=%vreg19
   val SU(10): Latency=4 Reg=%vreg19
   ch  SU(32): Latency=0

SU(2):   %vreg20<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg20
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 13
  Successors:
   val SU(3): Latency=1 Reg=%vreg20

SU(3):   %vreg21<def> = LW %vreg20, 0; mem:LD4[%i] GR32Bit:%vreg21,%vreg20
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 12
  Predecessors:
   val SU(2): Latency=1 Reg=%vreg20
  Successors:
   val SU(5): Latency=4 Reg=%vreg21

SU(4):   %vreg22<def> = ADDI %zero, 40; GR32Bit:%vreg22
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 9
  Successors:
   val SU(15): Latency=1 Reg=%vreg22
   val SU(5): Latency=1 Reg=%vreg22

SU(5):   %vreg23<def> = MUL %vreg22, %vreg21; GR32Bit:%vreg23,%vreg22,%vreg21
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 8
  Predecessors:
   val SU(3): Latency=4 Reg=%vreg21
   val SU(4): Latency=1 Reg=%vreg22
  Successors:
   val SU(27): Latency=1 Reg=%vreg23
   val SU(9): Latency=1 Reg=%vreg23

SU(6):   %vreg24<def> = LUI <ga:@a>[TF=2]; GR32Bit:%vreg24
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 9
  Successors:
   val SU(8): Latency=1 Reg=%vreg24

SU(7):   %vreg25<def> = ADDI %zero, <ga:@a>[TF=3]; GR32Bit:%vreg25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 9
  Successors:
   val SU(8): Latency=1 Reg=%vreg25

SU(8):   %vreg26<def> = ADD %vreg25, %vreg24; GR32Bit:%vreg26,%vreg25,%vreg24
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 8
  Predecessors:
   val SU(7): Latency=1 Reg=%vreg25
   val SU(6): Latency=1 Reg=%vreg24
  Successors:
   val SU(9): Latency=1 Reg=%vreg26

SU(9):   %vreg27<def> = ADD %vreg23, %vreg26; GR32Bit:%vreg27,%vreg23,%vreg26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 7
  Predecessors:
   val SU(5): Latency=1 Reg=%vreg23
   val SU(8): Latency=1 Reg=%vreg26
  Successors:
   val SU(11): Latency=1 Reg=%vreg27

SU(10):   %vreg28<def> = SLLI %vreg19, 2; GR32Bit:%vreg28,%vreg19
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 7
  Predecessors:
   val SU(1): Latency=4 Reg=%vreg19
  Successors:
   val SU(11): Latency=1 Reg=%vreg28

SU(11):   %vreg29<def> = ADD %vreg28, %vreg27; GR32Bit:%vreg29,%vreg28,%vreg27
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 6
  Predecessors:
   val SU(9): Latency=1 Reg=%vreg27
   val SU(10): Latency=1 Reg=%vreg28
  Successors:
   val SU(12): Latency=1 Reg=%vreg29

SU(12):   %vreg30<def> = LW %vreg29, 0; mem:LD4[%arrayidx7] GR32Bit:%vreg30,%vreg29
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 8
  Height             : 5
  Predecessors:
   val SU(11): Latency=1 Reg=%vreg29
  Successors:
   val SU(23): Latency=4 Reg=%vreg30

SU(13):   %vreg31<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg31
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 12
  Successors:
   val SU(14): Latency=1 Reg=%vreg31

SU(14):   %vreg32<def> = LW %vreg31, 0; mem:LD4[%j] GR32Bit:%vreg32,%vreg31
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 11
  Predecessors:
   val SU(13): Latency=1 Reg=%vreg31
  Successors:
   val SU(20): Latency=4 Reg=%vreg32

SU(15):   %vreg33<def> = MUL %vreg22, %vreg19; GR32Bit:%vreg33,%vreg22,%vreg19
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 8
  Predecessors:
   val SU(1): Latency=4 Reg=%vreg19
   val SU(4): Latency=1 Reg=%vreg22
  Successors:
   val SU(19): Latency=1 Reg=%vreg33

SU(16):   %vreg34<def> = LUI <ga:@b>[TF=2]; GR32Bit:%vreg34
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 9
  Successors:
   val SU(18): Latency=1 Reg=%vreg34

SU(17):   %vreg35<def> = ADDI %zero, <ga:@b>[TF=3]; GR32Bit:%vreg35
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 9
  Successors:
   val SU(18): Latency=1 Reg=%vreg35

SU(18):   %vreg36<def> = ADD %vreg35, %vreg34; GR32Bit:%vreg36,%vreg35,%vreg34
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 8
  Predecessors:
   val SU(17): Latency=1 Reg=%vreg35
   val SU(16): Latency=1 Reg=%vreg34
  Successors:
   val SU(19): Latency=1 Reg=%vreg36

SU(19):   %vreg37<def> = ADD %vreg33, %vreg36; GR32Bit:%vreg37,%vreg33,%vreg36
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 7
  Predecessors:
   val SU(15): Latency=1 Reg=%vreg33
   val SU(18): Latency=1 Reg=%vreg36
  Successors:
   val SU(21): Latency=1 Reg=%vreg37

SU(20):   %vreg38<def> = SLLI %vreg32, 2; GR32Bit:%vreg38,%vreg32
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 7
  Predecessors:
   val SU(14): Latency=4 Reg=%vreg32
  Successors:
   val SU(28): Latency=1 Reg=%vreg38
   val SU(21): Latency=1 Reg=%vreg38

SU(21):   %vreg39<def> = ADD %vreg38, %vreg37; GR32Bit:%vreg39,%vreg38,%vreg37
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 6
  Predecessors:
   val SU(19): Latency=1 Reg=%vreg37
   val SU(20): Latency=1 Reg=%vreg38
  Successors:
   val SU(22): Latency=1 Reg=%vreg39

SU(22):   %vreg40<def> = LW %vreg39, 0; mem:LD4[%arrayidx9] GR32Bit:%vreg40,%vreg39
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 8
  Height             : 5
  Predecessors:
   val SU(21): Latency=1 Reg=%vreg39
  Successors:
   val SU(23): Latency=4 Reg=%vreg40

SU(23):   %vreg41<def> = ADD %vreg40, %vreg30; GR32Bit:%vreg41,%vreg40,%vreg30
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 12
  Height             : 1
  Predecessors:
   val SU(22): Latency=4 Reg=%vreg40
   val SU(12): Latency=4 Reg=%vreg30
  Successors:
   val SU(29): Latency=1 Reg=%vreg41

SU(24):   %vreg42<def> = LUI <ga:@c>[TF=2]; GR32Bit:%vreg42
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 4
  Successors:
   val SU(26): Latency=1 Reg=%vreg42

SU(25):   %vreg43<def> = ADDI %zero, <ga:@c>[TF=3]; GR32Bit:%vreg43
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 4
  Successors:
   val SU(26): Latency=1 Reg=%vreg43

SU(26):   %vreg44<def> = ADD %vreg43, %vreg42; GR32Bit:%vreg44,%vreg43,%vreg42
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 3
  Predecessors:
   val SU(25): Latency=1 Reg=%vreg43
   val SU(24): Latency=1 Reg=%vreg42
  Successors:
   val SU(27): Latency=1 Reg=%vreg44

SU(27):   %vreg45<def> = ADD %vreg23, %vreg44; GR32Bit:%vreg45,%vreg23,%vreg44
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 2
  Predecessors:
   val SU(5): Latency=1 Reg=%vreg23
   val SU(26): Latency=1 Reg=%vreg44
  Successors:
   val SU(28): Latency=1 Reg=%vreg45

SU(28):   %vreg46<def> = ADD %vreg38, %vreg45; GR32Bit:%vreg46,%vreg38,%vreg45
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
   val SU(27): Latency=1 Reg=%vreg45
   val SU(20): Latency=1 Reg=%vreg38
  Successors:
   val SU(29): Latency=1 Reg=%vreg46

SU(29):   SW %vreg41, %vreg46, 0; mem:ST4[%arrayidx11] GR32Bit:%vreg41,%vreg46
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 13
  Height             : 0
  Predecessors:
   val SU(23): Latency=1 Reg=%vreg41
   val SU(28): Latency=1 Reg=%vreg46
  Successors:
   ch  SU(4294967295) *: Latency=0

SU(30):   %vreg47<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg47,%vreg18
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 5
  Predecessors:
   val SU(0): Latency=1 Reg=%vreg18
  Successors:
   val SU(31): Latency=4 Reg=%vreg47
   ch  SU(32): Latency=0

SU(31):   %vreg48<def> = ADDI %vreg47, 1; GR32Bit:%vreg48,%vreg47
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
   val SU(30): Latency=4 Reg=%vreg47
  Successors:
   val SU(32): Latency=1 Reg=%vreg48

SU(32):   SW %vreg48, %vreg18, 0; mem:ST4[%k] GR32Bit:%vreg48,%vreg18
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
   val SU(31): Latency=1 Reg=%vreg48
   val SU(0): Latency=1 Reg=%vreg18
   ch  SU(30): Latency=0
   ch  SU(1): Latency=0
  Successors:
   ch  SU(4294967295) *: Latency=0

Pick node SU(16)  ILP: 1 / 1 = 1 Tree: 0 @0
Scheduling %vreg34<def> = LUI <ga:@b>[TF=2]; GR32Bit:%vreg34
handleMove 3328B -> 3196B: %vreg34<def> = LUI <ga:@b>[TF=2]; GR32Bit:%vreg34
     %vreg34:	[3328r,3344r:0)  0@3328r
        -->	[3196r,3344r:0)  0@3196r
  Tree: 1 @1
  Tree: 2 @5
Pick node SU(13)  ILP: 1 / 1 = 1 Tree: 0 @0
Scheduling %vreg31<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg31

*** Renumbered SlotIndexes 3196-3588 ***
handleMove 3316B -> 3204B: %vreg31<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg31
     %vreg31:	[3316r,3324r:0)  0@3316r
        -->	[3204r,3324r:0)  0@3204r
     zero:	EMPTY
        -->	EMPTY
Pick node SU(0)  ILP: 1 / 1 = 1 Tree: 0 @0
Scheduling %vreg18<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg18
Pick node SU(4)  ILP: 1 / 1 = 1 Tree: 0 @0
Scheduling %vreg22<def> = ADDI %zero, 40; GR32Bit:%vreg22
handleMove 3244B -> 3216B: %vreg22<def> = ADDI %zero, 40; GR32Bit:%vreg22
     %vreg22:	[3244r,3332r:0)  0@3244r
        -->	[3216r,3332r:0)  0@3216r
     zero:	EMPTY
        -->	EMPTY
Pick node SU(17)  ILP: 1 / 1 = 1 Tree: 0 @0
Scheduling %vreg35<def> = ADDI %zero, <ga:@b>[TF=3]; GR32Bit:%vreg35

*** Renumbered SlotIndexes 3216-3600 ***
handleMove 3360B -> 3224B: %vreg35<def> = ADDI %zero, <ga:@b>[TF=3]; GR32Bit:%vreg35
     %vreg35:	[3360r,3368r:0)  0@3360r
        -->	[3224r,3368r:0)  0@3224r
     zero:	EMPTY
        -->	EMPTY
Pick node SU(18)  ILP: 3 / 2 = 1.5 Tree: 0 @0
Scheduling %vreg36<def> = ADD %vreg35, %vreg34; GR32Bit:%vreg36,%vreg35,%vreg34
handleMove 3368B -> 3228B: %vreg36<def> = ADD %vreg35, %vreg34; GR32Bit:%vreg36,%vreg35,%vreg34
     %vreg36:	[3368r,3376r:0)  0@3368r
        -->	[3228r,3376r:0)  0@3228r
     %vreg35:	[3224r,3368r:0)  0@3224r
        -->	[3224r,3228r:0)  0@3224r
     %vreg34:	[3196r,3368r:0)  0@3196r
        -->	[3196r,3228r:0)  0@3196r
Pick node SU(1)  ILP: 2 / 2 = 1 Tree: 0 @0
Scheduling %vreg19<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg19,%vreg18
Pick node SU(14)  ILP: 2 / 2 = 1 Tree: 0 @0
Scheduling %vreg32<def> = LW %vreg31, 0; mem:LD4[%j] GR32Bit:%vreg32,%vreg31
handleMove 3336B -> 3236B: %vreg32<def> = LW %vreg31, 0; mem:LD4[%j] GR32Bit:%vreg32,%vreg31
     %vreg32:	[3336r,3384r:0)  0@3336r
        -->	[3236r,3384r:0)  0@3236r
     %vreg31:	[3204r,3336r:0)  0@3204r
        -->	[3204r,3236r:0)  0@3204r
Pick node SU(15)  ILP: 4 / 6 = 0.666667 Tree: 0 @0
Scheduling %vreg33<def> = MUL %vreg22, %vreg19; GR32Bit:%vreg33,%vreg22,%vreg19

*** Renumbered SlotIndexes 3236-3612 ***
handleMove 3356B -> 3244B: %vreg33<def> = MUL %vreg22, %vreg19; GR32Bit:%vreg33,%vreg22,%vreg19
     %vreg33:	[3356r,3388r:0)  0@3356r
        -->	[3244r,3388r:0)  0@3244r
     %vreg22:	[3216r,3356r:0)  0@3216r
        -->	[3216r,3276r:0)  0@3216r
     %vreg19:	[3232r,3356r:0)  0@3232r
        -->	[3232r,3316r:0)  0@3232r
Pick node SU(19)  ILP: 8 / 7 = 1.14286 Tree: 0 @0
Scheduling %vreg37<def> = ADD %vreg33, %vreg36; GR32Bit:%vreg37,%vreg33,%vreg36
handleMove 3388B -> 3248B: %vreg37<def> = ADD %vreg33, %vreg36; GR32Bit:%vreg37,%vreg33,%vreg36
     %vreg37:	[3388r,3404r:0)  0@3388r
        -->	[3248r,3404r:0)  0@3248r
     %vreg33:	[3244r,3388r:0)  0@3244r
        -->	[3244r,3248r:0)  0@3244r
     %vreg36:	[3228r,3388r:0)  0@3228r
        -->	[3228r,3248r:0)  0@3228r
Pick node SU(20)  ILP: 3 / 6 = 0.5 Tree: 0 @0
Scheduling %vreg38<def> = SLLI %vreg32, 2; GR32Bit:%vreg38,%vreg32

*** Renumbered SlotIndexes 3248-3624 ***
handleMove 3408B -> 3256B: %vreg38<def> = SLLI %vreg32, 2; GR32Bit:%vreg38,%vreg32
     %vreg38:	[3408r,3472r:0)  0@3408r
        -->	[3256r,3472r:0)  0@3256r
     %vreg32:	[3236r,3408r:0)  0@3236r
        -->	[3236r,3256r:0)  0@3236r
Pick node SU(21)  ILP: 12 / 8 = 1.5 Tree: 0 @0
Scheduling %vreg39<def> = ADD %vreg38, %vreg37; GR32Bit:%vreg39,%vreg38,%vreg37
handleMove 3416B -> 3260B: %vreg39<def> = ADD %vreg38, %vreg37; GR32Bit:%vreg39,%vreg38,%vreg37
     %vreg39:	[3416r,3424r:0)  0@3416r
        -->	[3260r,3424r:0)  0@3260r
     %vreg38:	[3256r,3472r:0)  0@3256r
        -->	[3256r,3472r:0)  0@3256r
     %vreg37:	[3248r,3416r:0)  0@3248r
        -->	[3248r,3260r:0)  0@3248r
Pick node SU(22)  ILP: 13 / 9 = 1.44444 Tree: 0 @0
Scheduling %vreg40<def> = LW %vreg39, 0; mem:LD4[%arrayidx9] GR32Bit:%vreg40,%vreg39

*** Renumbered SlotIndexes 3260-3636 ***
handleMove 3436B -> 3268B: %vreg40<def> = LW %vreg39, 0; mem:LD4[%arrayidx9] GR32Bit:%vreg40,%vreg39
     %vreg40:	[3436r,3444r:0)  0@3436r
        -->	[3268r,3444r:0)  0@3268r
     %vreg39:	[3260r,3436r:0)  0@3260r
        -->	[3260r,3268r:0)  0@3260r
Pick node SU(24)  ILP: 1 / 1 = 1 Tree: 2 @5
Scheduling %vreg42<def> = LUI <ga:@c>[TF=2]; GR32Bit:%vreg42
handleMove 3452B -> 3272B: %vreg42<def> = LUI <ga:@c>[TF=2]; GR32Bit:%vreg42
     %vreg42:	[3452r,3468r:0)  0@3452r
        -->	[3272r,3468r:0)  0@3272r
  Tree: 1 @5
  Tree: 0 @5
  Tree: 2 @5
Pick node SU(25)  ILP: 1 / 1 = 1 Tree: 2 @5
Scheduling %vreg43<def> = ADDI %zero, <ga:@c>[TF=3]; GR32Bit:%vreg43

*** Renumbered SlotIndexes 3272-3648 ***
handleMove 3472B -> 3280B: %vreg43<def> = ADDI %zero, <ga:@c>[TF=3]; GR32Bit:%vreg43
     %vreg43:	[3472r,3480r:0)  0@3472r
        -->	[3280r,3480r:0)  0@3280r
     zero:	EMPTY
        -->	EMPTY
Pick node SU(26)  ILP: 3 / 2 = 1.5 Tree: 2 @5
Scheduling %vreg44<def> = ADD %vreg43, %vreg42; GR32Bit:%vreg44,%vreg43,%vreg42
handleMove 3480B -> 3284B: %vreg44<def> = ADD %vreg43, %vreg42; GR32Bit:%vreg44,%vreg43,%vreg42
     %vreg44:	[3480r,3488r:0)  0@3480r
        -->	[3284r,3488r:0)  0@3284r
     %vreg43:	[3280r,3480r:0)  0@3280r
        -->	[3280r,3284r:0)  0@3280r
     %vreg42:	[3272r,3480r:0)  0@3272r
        -->	[3272r,3284r:0)  0@3272r
Pick node SU(6)  ILP: 1 / 1 = 1 Tree: 1 @5
Scheduling %vreg24<def> = LUI <ga:@a>[TF=2]; GR32Bit:%vreg24

*** Renumbered SlotIndexes 3284-3660 ***
handleMove 3332B -> 3292B: %vreg24<def> = LUI <ga:@a>[TF=2]; GR32Bit:%vreg24
     %vreg24:	[3332r,3348r:0)  0@3332r
        -->	[3292r,3348r:0)  0@3292r
  Tree: 0 @5
  Tree: 2 @5
Pick node SU(7)  ILP: 1 / 1 = 1 Tree: 1 @5
Scheduling %vreg25<def> = ADDI %zero, <ga:@a>[TF=3]; GR32Bit:%vreg25
handleMove 3340B -> 3296B: %vreg25<def> = ADDI %zero, <ga:@a>[TF=3]; GR32Bit:%vreg25
     %vreg25:	[3340r,3348r:0)  0@3340r
        -->	[3296r,3348r:0)  0@3296r
     zero:	EMPTY
        -->	EMPTY
Pick node SU(8)  ILP: 3 / 2 = 1.5 Tree: 1 @5
Scheduling %vreg26<def> = ADD %vreg25, %vreg24; GR32Bit:%vreg26,%vreg25,%vreg24

*** Renumbered SlotIndexes 3296-3672 ***
handleMove 3360B -> 3304B: %vreg26<def> = ADD %vreg25, %vreg24; GR32Bit:%vreg26,%vreg25,%vreg24
     %vreg26:	[3360r,3368r:0)  0@3360r
        -->	[3304r,3368r:0)  0@3304r
     %vreg25:	[3296r,3360r:0)  0@3296r
        -->	[3296r,3304r:0)  0@3296r
     %vreg24:	[3292r,3360r:0)  0@3292r
        -->	[3292r,3304r:0)  0@3292r
Pick node SU(2)  ILP: 1 / 1 = 1 Tree: 1 @5
Scheduling %vreg20<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg20
Pick node SU(3)  ILP: 2 / 2 = 1 Tree: 1 @5
Scheduling %vreg21<def> = LW %vreg20, 0; mem:LD4[%i] GR32Bit:%vreg21,%vreg20
Pick node SU(5)  ILP: 3 / 6 = 0.5 Tree: 1 @5
Scheduling %vreg23<def> = MUL %vreg22, %vreg21; GR32Bit:%vreg23,%vreg22,%vreg21
Pick node SU(9)  ILP: 7 / 7 = 1 Tree: 1 @5
Scheduling %vreg27<def> = ADD %vreg23, %vreg26; GR32Bit:%vreg27,%vreg23,%vreg26
Pick node SU(27)  ILP: 4 / 7 = 0.571429 Tree: 2 @5
Scheduling %vreg45<def> = ADD %vreg23, %vreg44; GR32Bit:%vreg45,%vreg23,%vreg44
handleMove 3512B -> 3372B: %vreg45<def> = ADD %vreg23, %vreg44; GR32Bit:%vreg45,%vreg23,%vreg44
     %vreg45:	[3512r,3520r:0)  0@3512r
        -->	[3372r,3520r:0)  0@3372r
     %vreg23:	[3336r,3512r:0)  0@3336r
        -->	[3336r,3372r:0)  0@3336r
     %vreg44:	[3284r,3512r:0)  0@3284r
        -->	[3284r,3372r:0)  0@3284r
Pick node SU(28)  ILP: 5 / 8 = 0.625 Tree: 2 @5
Scheduling %vreg46<def> = ADD %vreg38, %vreg45; GR32Bit:%vreg46,%vreg38,%vreg45

*** Renumbered SlotIndexes 3372-3684 ***
handleMove 3532B -> 3380B: %vreg46<def> = ADD %vreg38, %vreg45; GR32Bit:%vreg46,%vreg38,%vreg45
     %vreg46:	[3532r,3540r:0)  0@3532r
        -->	[3380r,3540r:0)  0@3380r
     %vreg38:	[3256r,3532r:0)  0@3256r
        -->	[3256r,3380r:0)  0@3256r
     %vreg45:	[3372r,3532r:0)  0@3372r
        -->	[3372r,3380r:0)  0@3372r
Pick node SU(10)  ILP: 1 / 6 = 0.166667 Tree: 1 @5
Scheduling %vreg28<def> = SLLI %vreg19, 2; GR32Bit:%vreg28,%vreg19
Pick node SU(11)  ILP: 9 / 8 = 1.125 Tree: 1 @5
Scheduling %vreg29<def> = ADD %vreg28, %vreg27; GR32Bit:%vreg29,%vreg28,%vreg27
Pick node SU(12)  ILP: 10 / 9 = 1.11111 Tree: 1 @5
Scheduling %vreg30<def> = LW %vreg29, 0; mem:LD4[%arrayidx7] GR32Bit:%vreg30,%vreg29
Pick node SU(23)  ILP: 24 / 13 = 1.84615 Tree: 2 @5
Scheduling %vreg41<def> = ADD %vreg40, %vreg30; GR32Bit:%vreg41,%vreg40,%vreg30
Pick node SU(29)  ILP: 30 / 14 = 2.14286 Tree: 2 @5
Scheduling SW %vreg41, %vreg46, 0; mem:ST4[%arrayidx11] GR32Bit:%vreg41,%vreg46
Pick node SU(30)  ILP: 1 / 2 = 0.5 Tree: 3 @0
Scheduling %vreg47<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg47,%vreg18
Pick node SU(31)  ILP: 2 / 6 = 0.333333 Tree: 3 @0
Scheduling %vreg48<def> = ADDI %vreg47, 1; GR32Bit:%vreg48,%vreg47
Pick node SU(32)  ILP: 3 / 7 = 0.428571 Tree: 3 @0
Scheduling SW %vreg48, %vreg18, 0; mem:ST4[%k] GR32Bit:%vreg48,%vreg18
*** Final schedule for BB#6 ***
SU(16):   %vreg34<def> = LUI <ga:@b>[TF=2]; GR32Bit:%vreg34
SU(13):   %vreg31<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg31
SU(0):   %vreg18<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg18
SU(4):   %vreg22<def> = ADDI %zero, 40; GR32Bit:%vreg22
SU(17):   %vreg35<def> = ADDI %zero, <ga:@b>[TF=3]; GR32Bit:%vreg35
SU(18):   %vreg36<def> = ADD %vreg35, %vreg34; GR32Bit:%vreg36,%vreg35,%vreg34
SU(1):   %vreg19<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg19,%vreg18
SU(14):   %vreg32<def> = LW %vreg31, 0; mem:LD4[%j] GR32Bit:%vreg32,%vreg31
SU(15):   %vreg33<def> = MUL %vreg22, %vreg19; GR32Bit:%vreg33,%vreg22,%vreg19
SU(19):   %vreg37<def> = ADD %vreg33, %vreg36; GR32Bit:%vreg37,%vreg33,%vreg36
SU(20):   %vreg38<def> = SLLI %vreg32, 2; GR32Bit:%vreg38,%vreg32
SU(21):   %vreg39<def> = ADD %vreg38, %vreg37; GR32Bit:%vreg39,%vreg38,%vreg37
SU(22):   %vreg40<def> = LW %vreg39, 0; mem:LD4[%arrayidx9] GR32Bit:%vreg40,%vreg39
SU(24):   %vreg42<def> = LUI <ga:@c>[TF=2]; GR32Bit:%vreg42
SU(25):   %vreg43<def> = ADDI %zero, <ga:@c>[TF=3]; GR32Bit:%vreg43
SU(26):   %vreg44<def> = ADD %vreg43, %vreg42; GR32Bit:%vreg44,%vreg43,%vreg42
SU(6):   %vreg24<def> = LUI <ga:@a>[TF=2]; GR32Bit:%vreg24
SU(7):   %vreg25<def> = ADDI %zero, <ga:@a>[TF=3]; GR32Bit:%vreg25
SU(8):   %vreg26<def> = ADD %vreg25, %vreg24; GR32Bit:%vreg26,%vreg25,%vreg24
SU(2):   %vreg20<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg20
SU(3):   %vreg21<def> = LW %vreg20, 0; mem:LD4[%i] GR32Bit:%vreg21,%vreg20
SU(5):   %vreg23<def> = MUL %vreg22, %vreg21; GR32Bit:%vreg23,%vreg22,%vreg21
SU(9):   %vreg27<def> = ADD %vreg23, %vreg26; GR32Bit:%vreg27,%vreg23,%vreg26
SU(27):   %vreg45<def> = ADD %vreg23, %vreg44; GR32Bit:%vreg45,%vreg23,%vreg44
SU(28):   %vreg46<def> = ADD %vreg38, %vreg45; GR32Bit:%vreg46,%vreg38,%vreg45
SU(10):   %vreg28<def> = SLLI %vreg19, 2; GR32Bit:%vreg28,%vreg19
SU(11):   %vreg29<def> = ADD %vreg28, %vreg27; GR32Bit:%vreg29,%vreg28,%vreg27
SU(12):   %vreg30<def> = LW %vreg29, 0; mem:LD4[%arrayidx7] GR32Bit:%vreg30,%vreg29
SU(23):   %vreg41<def> = ADD %vreg40, %vreg30; GR32Bit:%vreg41,%vreg40,%vreg30
SU(29):   SW %vreg41, %vreg46, 0; mem:ST4[%arrayidx11] GR32Bit:%vreg41,%vreg46
SU(30):   %vreg47<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg47,%vreg18
SU(31):   %vreg48<def> = ADDI %vreg47, 1; GR32Bit:%vreg48,%vreg47
SU(32):   SW %vreg48, %vreg18, 0; mem:ST4[%k] GR32Bit:%vreg48,%vreg18

Partitioning instructions of the region into multiple CEs

*** Renumbered SlotIndexes 3224-3728 ***

*** Renumbered SlotIndexes 3236-3740 ***

*** Renumbered SlotIndexes 3248-3752 ***

*** Renumbered SlotIndexes 3276-3764 ***

*** Renumbered SlotIndexes 3288-3776 ***

*** Renumbered SlotIndexes 3308-3788 ***

*** Renumbered SlotIndexes 3320-3800 ***

*** Renumbered SlotIndexes 3332-3812 ***

*** Renumbered SlotIndexes 3352-3824 ***

*** Renumbered SlotIndexes 3372-3836 ***

*** Renumbered SlotIndexes 3384-3848 ***

*** Renumbered SlotIndexes 3404-3860 ***

*** Renumbered SlotIndexes 3416-3872 ***

*** Renumbered SlotIndexes 3436-3884 ***

*** Renumbered SlotIndexes 3472-3896 ***

*** Renumbered SlotIndexes 3484-3908 ***

*** Renumbered SlotIndexes 3520-3920 ***

*** Renumbered SlotIndexes 3532-3932 ***

*** Renumbered SlotIndexes 3544-3944 ***

*** Renumbered SlotIndexes 3572-3956 ***

*** Renumbered SlotIndexes 3592-3968 ***

*** Renumbered SlotIndexes 3604-3980 ***

*** Renumbered SlotIndexes 3632-3992 ***

*** Renumbered SlotIndexes 3676-4004 ***

*** Renumbered SlotIndexes 3696-4016 ***

*** Renumbered SlotIndexes 3708-4028 ***

*** Renumbered SlotIndexes 3728-4040 ***

*** Renumbered SlotIndexes 3748-4052 ***

*** Renumbered SlotIndexes 3768-4064 ***

*** Renumbered SlotIndexes 3788-4076 ***

*** Renumbered SlotIndexes 3888-4088 ***

*** Renumbered SlotIndexes 3900-4100 ***

*** Renumbered SlotIndexes 3968-4112 ***

*** Renumbered SlotIndexes 3988-4124 ***

*** Renumbered SlotIndexes 4000-4136 ***

*** Renumbered SlotIndexes 4012-4148 ***

*** Renumbered SlotIndexes 4024-4160 ***

*** Renumbered SlotIndexes 4044-4172 ***

*** Renumbered SlotIndexes 4056-4184 ***

*** Renumbered SlotIndexes 4068-4196 ***

*** Renumbered SlotIndexes 4080-4208 ***

*** Renumbered SlotIndexes 4092-4220 ***

*** Renumbered SlotIndexes 4104-4232 ***

*** Renumbered SlotIndexes 4116-4244 ***

*** Renumbered SlotIndexes 4128-4256 ***

*** Renumbered SlotIndexes 4140-4268 ***

*** Renumbered SlotIndexes 4152-4280 ***

*** Renumbered SlotIndexes 4164-4292 ***

*** Renumbered SlotIndexes 4176-4304 ***

*** Renumbered SlotIndexes 4188-4316 ***

*** Renumbered SlotIndexes 4200-4328 ***

*** Renumbered SlotIndexes 4212-4340 ***

*** Renumbered SlotIndexes 4224-4352 ***

*** Renumbered SlotIndexes 4236-4364 ***

*** Renumbered SlotIndexes 4248-4376 ***

*** Renumbered SlotIndexes 4260-4388 ***

*** Renumbered SlotIndexes 4272-4400 ***

*** Renumbered SlotIndexes 4284-4412 ***

*** Renumbered SlotIndexes 4296-4424 ***

*** Renumbered SlotIndexes 4308-4436 ***

*** Renumbered SlotIndexes 4320-4448 ***
Dumping all live-out registers to memory

*** Renumbered SlotIndexes 4340-4460 ***

*** Renumbered SlotIndexes 4352-4472 ***

*** Renumbered SlotIndexes 4364-4484 ***

*** Renumbered SlotIndexes 4376-4496 ***

*** Renumbered SlotIndexes 4388-4508 ***
Shuffling instructions within the region such that successive instructions belong to the same pHyperOp to ease bundle creation
state of basic block BB#6BB#6: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#5
	%vreg34<def> = LUI <ga:@b>[TF=2]; GR32Bit:%vreg34
	%vreg35<def> = ADDI %zero, <ga:@b>[TF=3]; GR32Bit:%vreg35
	%vreg112<def> = LUI 1; GR32Bit:%vreg112
	WRITEPM %vreg112<internal>, %vreg35<internal>, 0; GR32Bit:%vreg112,%vreg35
	WRITEPM %vreg112<internal>, %vreg34<internal>, 4; GR32Bit:%vreg112,%vreg34
	%vreg117<def> = LUI 0; GR32Bit:%vreg117
	READPM %vreg19<kill>, %vreg117<internal>, 0; GR32Bit:%vreg19,%vreg117
	READPM %vreg22<kill>, %vreg117<internal>, 4; GR32Bit:%vreg22,%vreg117
	%vreg33<def> = MUL %vreg22, %vreg19; GR32Bit:%vreg33,%vreg22,%vreg19
	WRITEPM %vreg112<internal>, %vreg33<internal>, 8; GR32Bit:%vreg112,%vreg33
	READPM %vreg39<kill>, %vreg117<internal>, 8; GR32Bit:%vreg39,%vreg117
	%vreg40<def> = LW %vreg39, 0; mem:LD4[%arrayidx9] GR32Bit:%vreg40,%vreg39
	%vreg24<def> = LUI <ga:@a>[TF=2]; GR32Bit:%vreg24
	%vreg123<def> = LUI 2; GR32Bit:%vreg123
	WRITEPM %vreg123<internal>, %vreg24<internal>, 8; GR32Bit:%vreg123,%vreg24
	READPM %vreg20<kill>, %vreg117<internal>, 12; GR32Bit:%vreg20,%vreg117
	%vreg21<def> = LW %vreg20, 0; mem:LD4[%i] GR32Bit:%vreg21,%vreg20
	WRITEPM %vreg112<internal>, %vreg21<internal>, 12; GR32Bit:%vreg112,%vreg21
	READPM %vreg45<kill>, %vreg117<internal>, 16; GR32Bit:%vreg45,%vreg117
	READPM %vreg38<kill>, %vreg117<internal>, 20; GR32Bit:%vreg38,%vreg117
	%vreg46<def> = ADD %vreg38, %vreg45; GR32Bit:%vreg46,%vreg38,%vreg45
	READPM %vreg30<kill>, %vreg117<internal>, 24; GR32Bit:%vreg30,%vreg117
	%vreg41<def> = ADD %vreg40, %vreg30; GR32Bit:%vreg41,%vreg40,%vreg30
	WRITEPM %vreg112<internal>, %vreg41<internal>, 24; GR32Bit:%vreg112,%vreg41
	WRITEPM %vreg112<internal>, %vreg46<internal>, 28; GR32Bit:%vreg112,%vreg46
	READPM %vreg48<kill>, %vreg117<internal>, 28; GR32Bit:%vreg48,%vreg117
	READPM %vreg18<kill>, %vreg117<internal>, 32; GR32Bit:%vreg18,%vreg117
	READPM %vreg127<kill>, %vreg117<internal>, 36; GR32Bit:%vreg127,%vreg117
	READPM %vreg129<kill>, %vreg117<internal>, 40; GR32Bit:%vreg129,%vreg117
	SW %vreg48, %vreg18, 0; mem:ST4[%k] GR32Bit:%vreg48,%vreg18
	%vreg130<def> = LUI 2; GR32Bit:%vreg130
	WRITEPM %vreg130<internal>, %vreg130<internal>, -68; GR32Bit:%vreg130
	%vreg130<def> = LUI 3; GR32Bit:%vreg130
	WRITEPM %vreg130<internal>, %vreg130<internal>, -68; GR32Bit:%vreg130
	%vreg130<def> = LUI 4; GR32Bit:%vreg130
	WRITEPM %vreg130<internal>, %vreg130<internal>, -68; GR32Bit:%vreg130
	%vreg131<def> = LUI 2; GR32Bit:%vreg131
	READPM %vreg131<kill>, %vreg131<internal>, -68; GR32Bit:%vreg131
	%vreg132<def> = LUI 3; GR32Bit:%vreg132
	READPM %vreg132<kill>, %vreg132<internal>, -68; GR32Bit:%vreg132
	%vreg133<def> = LUI 4; GR32Bit:%vreg133
	READPM %vreg133<kill>, %vreg133<internal>, -68; GR32Bit:%vreg133
	JAL <BB#5>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg31<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg31
	%vreg113<def> = LUI 1; GR32Bit:%vreg113
	READPM %vreg35<kill>, %vreg113<internal>, 0; GR32Bit:%vreg35,%vreg113
	READPM %vreg34<kill>, %vreg113<internal>, 4; GR32Bit:%vreg34,%vreg113
	%vreg36<def> = ADD %vreg35, %vreg34; GR32Bit:%vreg36,%vreg35,%vreg34
	%vreg114<def> = LUI 3; GR32Bit:%vreg114
	WRITEPM %vreg114<internal>, %vreg31<internal>, 0; GR32Bit:%vreg114,%vreg31
	READPM %vreg33<kill>, %vreg113<internal>, 8; GR32Bit:%vreg33,%vreg113
	%vreg37<def> = ADD %vreg33, %vreg36; GR32Bit:%vreg37,%vreg33,%vreg36
	WRITEPM %vreg114<internal>, %vreg37<internal>, 4; GR32Bit:%vreg114,%vreg37
	%vreg42<def> = LUI <ga:@c>[TF=2]; GR32Bit:%vreg42
	WRITEPM %vreg114<internal>, %vreg42<internal>, 16; GR32Bit:%vreg114,%vreg42
	%vreg25<def> = ADDI %zero, <ga:@a>[TF=3]; GR32Bit:%vreg25
	%vreg122<def> = LUI 2; GR32Bit:%vreg122
	WRITEPM %vreg122<internal>, %vreg25<internal>, 4; GR32Bit:%vreg122,%vreg25
	READPM %vreg21<kill>, %vreg113<internal>, 12; GR32Bit:%vreg21,%vreg113
	READPM %vreg22<kill>, %vreg113<internal>, 16; GR32Bit:%vreg22,%vreg113
	%vreg23<def> = MUL %vreg22, %vreg21; GR32Bit:%vreg23,%vreg22,%vreg21
	WRITEPM %vreg122<internal>, %vreg23<internal>, 12; GR32Bit:%vreg122,%vreg23
	WRITEPM %vreg114<internal>, %vreg23<internal>, 20; GR32Bit:%vreg114,%vreg23
	READPM %vreg19<kill>, %vreg113<internal>, 20; GR32Bit:%vreg19,%vreg113
	%vreg28<def> = SLLI %vreg19, 2; GR32Bit:%vreg28,%vreg19
	WRITEPM %vreg122<internal>, %vreg28<internal>, 16; GR32Bit:%vreg122,%vreg28
	READPM %vreg41<kill>, %vreg113<internal>, 24; GR32Bit:%vreg41,%vreg113
	READPM %vreg46<kill>, %vreg113<internal>, 28; GR32Bit:%vreg46,%vreg113
	SW %vreg41, %vreg46, 0; mem:ST4[%arrayidx11] GR32Bit:%vreg41,%vreg46
	%vreg130<def> = LUI 1; GR32Bit:%vreg130
	READPM %vreg130<kill>, %vreg130<internal>, -84; GR32Bit:%vreg130
	%vreg131<def> = LUI 1; GR32Bit:%vreg131
	WRITEPM %vreg131<internal>, %vreg131<internal>, -84; GR32Bit:%vreg131
	%vreg131<def> = LUI 3; GR32Bit:%vreg131
	WRITEPM %vreg131<internal>, %vreg131<internal>, -84; GR32Bit:%vreg131
	%vreg131<def> = LUI 4; GR32Bit:%vreg131
	WRITEPM %vreg131<internal>, %vreg131<internal>, -84; GR32Bit:%vreg131
	%vreg132<def> = LUI 3; GR32Bit:%vreg132
	READPM %vreg132<kill>, %vreg132<internal>, -84; GR32Bit:%vreg132
	%vreg133<def> = LUI 4; GR32Bit:%vreg133
	READPM %vreg133<kill>, %vreg133<internal>, -84; GR32Bit:%vreg133
	JAL <BB#5>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg18<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg18
	%vreg19<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg19,%vreg18
	%vreg116<def> = LUI 0; GR32Bit:%vreg116
	WRITEPM %vreg116<internal>, %vreg19<internal>, 0; GR32Bit:%vreg116,%vreg19
	%vreg120<def> = LUI 2; GR32Bit:%vreg120
	READPM %vreg32<kill>, %vreg120<internal>, 0; GR32Bit:%vreg32,%vreg120
	%vreg38<def> = SLLI %vreg32, 2; GR32Bit:%vreg38,%vreg32
	%vreg121<def> = LUI 3; GR32Bit:%vreg121
	WRITEPM %vreg121<internal>, %vreg38<internal>, 8; GR32Bit:%vreg121,%vreg38
	%vreg43<def> = ADDI %zero, <ga:@c>[TF=3]; GR32Bit:%vreg43
	WRITEPM %vreg121<internal>, %vreg43<internal>, 12; GR32Bit:%vreg121,%vreg43
	READPM %vreg25<kill>, %vreg120<internal>, 4; GR32Bit:%vreg25,%vreg120
	READPM %vreg24<kill>, %vreg120<internal>, 8; GR32Bit:%vreg24,%vreg120
	%vreg26<def> = ADD %vreg25, %vreg24; GR32Bit:%vreg26,%vreg25,%vreg24
	READPM %vreg23<kill>, %vreg120<internal>, 12; GR32Bit:%vreg23,%vreg120
	%vreg27<def> = ADD %vreg23, %vreg26; GR32Bit:%vreg27,%vreg23,%vreg26
	WRITEPM %vreg116<internal>, %vreg38<internal>, 20; GR32Bit:%vreg116,%vreg38
	%vreg125<def> = LUI 1; GR32Bit:%vreg125
	WRITEPM %vreg125<internal>, %vreg19<internal>, 20; GR32Bit:%vreg125,%vreg19
	READPM %vreg28<kill>, %vreg120<internal>, 16; GR32Bit:%vreg28,%vreg120
	%vreg29<def> = ADD %vreg28, %vreg27; GR32Bit:%vreg29,%vreg28,%vreg27
	WRITEPM %vreg121<internal>, %vreg29<internal>, 24; GR32Bit:%vreg121,%vreg29
	%vreg47<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg47,%vreg18
	WRITEPM %vreg121<internal>, %vreg47<internal>, 28; GR32Bit:%vreg121,%vreg47
	WRITEPM %vreg116<internal>, %vreg18<internal>, 32; GR32Bit:%vreg116,%vreg18
	WRITEPM %vreg116<internal>, %vreg126<internal>, 36; GR32Bit:%vreg116,%vreg126
	WRITEPM %vreg116<internal>, %vreg128<internal>, 40; GR32Bit:%vreg116,%vreg128
	%vreg130<def> = LUI 1; GR32Bit:%vreg130
	READPM %vreg130<kill>, %vreg130<internal>, -100; GR32Bit:%vreg130
	%vreg131<def> = LUI 2; GR32Bit:%vreg131
	READPM %vreg131<kill>, %vreg131<internal>, -100; GR32Bit:%vreg131
	%vreg132<def> = LUI 1; GR32Bit:%vreg132
	WRITEPM %vreg132<internal>, %vreg132<internal>, -100; GR32Bit:%vreg132
	%vreg132<def> = LUI 2; GR32Bit:%vreg132
	WRITEPM %vreg132<internal>, %vreg132<internal>, -100; GR32Bit:%vreg132
	%vreg132<def> = LUI 4; GR32Bit:%vreg132
	WRITEPM %vreg132<internal>, %vreg132<internal>, -100; GR32Bit:%vreg132
	%vreg133<def> = LUI 4; GR32Bit:%vreg133
	READPM %vreg133<kill>, %vreg133<internal>, -100; GR32Bit:%vreg133
	JAL <BB#5>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg22<def> = ADDI %zero, 40; GR32Bit:%vreg22
	%vreg115<def> = LUI 3; GR32Bit:%vreg115
	READPM %vreg31<kill>, %vreg115<internal>, 0; GR32Bit:%vreg31,%vreg115
	%vreg32<def> = LW %vreg31, 0; mem:LD4[%j] GR32Bit:%vreg32,%vreg31
	%vreg118<def> = LUI 0; GR32Bit:%vreg118
	WRITEPM %vreg118<internal>, %vreg22<internal>, 4; GR32Bit:%vreg118,%vreg22
	%vreg119<def> = LUI 2; GR32Bit:%vreg119
	WRITEPM %vreg119<internal>, %vreg32<internal>, 0; GR32Bit:%vreg119,%vreg32
	READPM %vreg37<kill>, %vreg115<internal>, 4; GR32Bit:%vreg37,%vreg115
	READPM %vreg38<kill>, %vreg115<internal>, 8; GR32Bit:%vreg38,%vreg115
	%vreg39<def> = ADD %vreg38, %vreg37; GR32Bit:%vreg39,%vreg38,%vreg37
	WRITEPM %vreg118<internal>, %vreg39<internal>, 8; GR32Bit:%vreg118,%vreg39
	READPM %vreg43<kill>, %vreg115<internal>, 12; GR32Bit:%vreg43,%vreg115
	READPM %vreg42<kill>, %vreg115<internal>, 16; GR32Bit:%vreg42,%vreg115
	%vreg44<def> = ADD %vreg43, %vreg42; GR32Bit:%vreg44,%vreg43,%vreg42
	%vreg20<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg20
	WRITEPM %vreg118<internal>, %vreg20<internal>, 12; GR32Bit:%vreg118,%vreg20
	%vreg124<def> = LUI 1; GR32Bit:%vreg124
	WRITEPM %vreg124<internal>, %vreg22<internal>, 16; GR32Bit:%vreg124,%vreg22
	READPM %vreg23<kill>, %vreg115<internal>, 20; GR32Bit:%vreg23,%vreg115
	%vreg45<def> = ADD %vreg23, %vreg44; GR32Bit:%vreg45,%vreg23,%vreg44
	WRITEPM %vreg118<internal>, %vreg45<internal>, 16; GR32Bit:%vreg118,%vreg45
	READPM %vreg29<kill>, %vreg115<internal>, 24; GR32Bit:%vreg29,%vreg115
	%vreg30<def> = LW %vreg29, 0; mem:LD4[%arrayidx7] GR32Bit:%vreg30,%vreg29
	WRITEPM %vreg118<internal>, %vreg30<internal>, 24; GR32Bit:%vreg118,%vreg30
	READPM %vreg47<kill>, %vreg115<internal>, 28; GR32Bit:%vreg47,%vreg115
	%vreg48<def> = ADDI %vreg47, 1; GR32Bit:%vreg48,%vreg47
	WRITEPM %vreg118<internal>, %vreg48<internal>, 28; GR32Bit:%vreg118,%vreg48
	%vreg130<def> = LUI 1; GR32Bit:%vreg130
	READPM %vreg130<kill>, %vreg130<internal>, -116; GR32Bit:%vreg130
	%vreg131<def> = LUI 2; GR32Bit:%vreg131
	READPM %vreg131<kill>, %vreg131<internal>, -116; GR32Bit:%vreg131
	%vreg132<def> = LUI 3; GR32Bit:%vreg132
	READPM %vreg132<kill>, %vreg132<internal>, -116; GR32Bit:%vreg132
	%vreg133<def> = LUI 1; GR32Bit:%vreg133
	WRITEPM %vreg133<internal>, %vreg133<internal>, -116; GR32Bit:%vreg133
	%vreg133<def> = LUI 2; GR32Bit:%vreg133
	WRITEPM %vreg133<internal>, %vreg133<internal>, -116; GR32Bit:%vreg133
	%vreg133<def> = LUI 3; GR32Bit:%vreg133
	WRITEPM %vreg133<internal>, %vreg133<internal>, -116; GR32Bit:%vreg133
	JAL <BB#5>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#5
BB before region shuffle:BB#6: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#5
	%vreg34<def> = LUI <ga:@b>[TF=2]; GR32Bit:%vreg34
	%vreg35<def> = ADDI %zero, <ga:@b>[TF=3]; GR32Bit:%vreg35
	%vreg112<def> = LUI 1; GR32Bit:%vreg112
	WRITEPM %vreg112<internal>, %vreg35<internal>, 0; GR32Bit:%vreg112,%vreg35
	WRITEPM %vreg112<internal>, %vreg34<internal>, 4; GR32Bit:%vreg112,%vreg34
	%vreg117<def> = LUI 0; GR32Bit:%vreg117
	READPM %vreg19<kill>, %vreg117<internal>, 0; GR32Bit:%vreg19,%vreg117
	READPM %vreg22<kill>, %vreg117<internal>, 4; GR32Bit:%vreg22,%vreg117
	%vreg33<def> = MUL %vreg22, %vreg19; GR32Bit:%vreg33,%vreg22,%vreg19
	WRITEPM %vreg112<internal>, %vreg33<internal>, 8; GR32Bit:%vreg112,%vreg33
	READPM %vreg39<kill>, %vreg117<internal>, 8; GR32Bit:%vreg39,%vreg117
	%vreg40<def> = LW %vreg39, 0; mem:LD4[%arrayidx9] GR32Bit:%vreg40,%vreg39
	%vreg24<def> = LUI <ga:@a>[TF=2]; GR32Bit:%vreg24
	%vreg123<def> = LUI 2; GR32Bit:%vreg123
	WRITEPM %vreg123<internal>, %vreg24<internal>, 8; GR32Bit:%vreg123,%vreg24
	READPM %vreg20<kill>, %vreg117<internal>, 12; GR32Bit:%vreg20,%vreg117
	%vreg21<def> = LW %vreg20, 0; mem:LD4[%i] GR32Bit:%vreg21,%vreg20
	WRITEPM %vreg112<internal>, %vreg21<internal>, 12; GR32Bit:%vreg112,%vreg21
	READPM %vreg45<kill>, %vreg117<internal>, 16; GR32Bit:%vreg45,%vreg117
	READPM %vreg38<kill>, %vreg117<internal>, 20; GR32Bit:%vreg38,%vreg117
	%vreg46<def> = ADD %vreg38, %vreg45; GR32Bit:%vreg46,%vreg38,%vreg45
	READPM %vreg30<kill>, %vreg117<internal>, 24; GR32Bit:%vreg30,%vreg117
	%vreg41<def> = ADD %vreg40, %vreg30; GR32Bit:%vreg41,%vreg40,%vreg30
	WRITEPM %vreg112<internal>, %vreg41<internal>, 24; GR32Bit:%vreg112,%vreg41
	WRITEPM %vreg112<internal>, %vreg46<internal>, 28; GR32Bit:%vreg112,%vreg46
	READPM %vreg48<kill>, %vreg117<internal>, 28; GR32Bit:%vreg48,%vreg117
	READPM %vreg18<kill>, %vreg117<internal>, 32; GR32Bit:%vreg18,%vreg117
	READPM %vreg127<kill>, %vreg117<internal>, 36; GR32Bit:%vreg127,%vreg117
	READPM %vreg129<kill>, %vreg117<internal>, 40; GR32Bit:%vreg129,%vreg117
	SW %vreg48, %vreg18, 0; mem:ST4[%k] GR32Bit:%vreg48,%vreg18
	%vreg130<def> = LUI 2; GR32Bit:%vreg130
	WRITEPM %vreg130<internal>, %vreg130<internal>, -68; GR32Bit:%vreg130
	%vreg130<def> = LUI 3; GR32Bit:%vreg130
	WRITEPM %vreg130<internal>, %vreg130<internal>, -68; GR32Bit:%vreg130
	%vreg130<def> = LUI 4; GR32Bit:%vreg130
	WRITEPM %vreg130<internal>, %vreg130<internal>, -68; GR32Bit:%vreg130
	%vreg131<def> = LUI 2; GR32Bit:%vreg131
	READPM %vreg131<kill>, %vreg131<internal>, -68; GR32Bit:%vreg131
	%vreg132<def> = LUI 3; GR32Bit:%vreg132
	READPM %vreg132<kill>, %vreg132<internal>, -68; GR32Bit:%vreg132
	%vreg133<def> = LUI 4; GR32Bit:%vreg133
	READPM %vreg133<kill>, %vreg133<internal>, -68; GR32Bit:%vreg133
	JAL <BB#5>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg31<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg31
	%vreg113<def> = LUI 1; GR32Bit:%vreg113
	READPM %vreg35<kill>, %vreg113<internal>, 0; GR32Bit:%vreg35,%vreg113
	READPM %vreg34<kill>, %vreg113<internal>, 4; GR32Bit:%vreg34,%vreg113
	%vreg36<def> = ADD %vreg35, %vreg34; GR32Bit:%vreg36,%vreg35,%vreg34
	%vreg114<def> = LUI 3; GR32Bit:%vreg114
	WRITEPM %vreg114<internal>, %vreg31<internal>, 0; GR32Bit:%vreg114,%vreg31
	READPM %vreg33<kill>, %vreg113<internal>, 8; GR32Bit:%vreg33,%vreg113
	%vreg37<def> = ADD %vreg33, %vreg36; GR32Bit:%vreg37,%vreg33,%vreg36
	WRITEPM %vreg114<internal>, %vreg37<internal>, 4; GR32Bit:%vreg114,%vreg37
	%vreg42<def> = LUI <ga:@c>[TF=2]; GR32Bit:%vreg42
	WRITEPM %vreg114<internal>, %vreg42<internal>, 16; GR32Bit:%vreg114,%vreg42
	%vreg25<def> = ADDI %zero, <ga:@a>[TF=3]; GR32Bit:%vreg25
	%vreg122<def> = LUI 2; GR32Bit:%vreg122
	WRITEPM %vreg122<internal>, %vreg25<internal>, 4; GR32Bit:%vreg122,%vreg25
	READPM %vreg21<kill>, %vreg113<internal>, 12; GR32Bit:%vreg21,%vreg113
	READPM %vreg22<kill>, %vreg113<internal>, 16; GR32Bit:%vreg22,%vreg113
	%vreg23<def> = MUL %vreg22, %vreg21; GR32Bit:%vreg23,%vreg22,%vreg21
	WRITEPM %vreg122<internal>, %vreg23<internal>, 12; GR32Bit:%vreg122,%vreg23
	WRITEPM %vreg114<internal>, %vreg23<internal>, 20; GR32Bit:%vreg114,%vreg23
	READPM %vreg19<kill>, %vreg113<internal>, 20; GR32Bit:%vreg19,%vreg113
	%vreg28<def> = SLLI %vreg19, 2; GR32Bit:%vreg28,%vreg19
	WRITEPM %vreg122<internal>, %vreg28<internal>, 16; GR32Bit:%vreg122,%vreg28
	READPM %vreg41<kill>, %vreg113<internal>, 24; GR32Bit:%vreg41,%vreg113
	READPM %vreg46<kill>, %vreg113<internal>, 28; GR32Bit:%vreg46,%vreg113
	SW %vreg41, %vreg46, 0; mem:ST4[%arrayidx11] GR32Bit:%vreg41,%vreg46
	%vreg130<def> = LUI 1; GR32Bit:%vreg130
	READPM %vreg130<kill>, %vreg130<internal>, -84; GR32Bit:%vreg130
	%vreg131<def> = LUI 1; GR32Bit:%vreg131
	WRITEPM %vreg131<internal>, %vreg131<internal>, -84; GR32Bit:%vreg131
	%vreg131<def> = LUI 3; GR32Bit:%vreg131
	WRITEPM %vreg131<internal>, %vreg131<internal>, -84; GR32Bit:%vreg131
	%vreg131<def> = LUI 4; GR32Bit:%vreg131
	WRITEPM %vreg131<internal>, %vreg131<internal>, -84; GR32Bit:%vreg131
	%vreg132<def> = LUI 3; GR32Bit:%vreg132
	READPM %vreg132<kill>, %vreg132<internal>, -84; GR32Bit:%vreg132
	%vreg133<def> = LUI 4; GR32Bit:%vreg133
	READPM %vreg133<kill>, %vreg133<internal>, -84; GR32Bit:%vreg133
	JAL <BB#5>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg18<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg18
	%vreg19<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg19,%vreg18
	%vreg116<def> = LUI 0; GR32Bit:%vreg116
	WRITEPM %vreg116<internal>, %vreg19<internal>, 0; GR32Bit:%vreg116,%vreg19
	%vreg120<def> = LUI 2; GR32Bit:%vreg120
	READPM %vreg32<kill>, %vreg120<internal>, 0; GR32Bit:%vreg32,%vreg120
	%vreg38<def> = SLLI %vreg32, 2; GR32Bit:%vreg38,%vreg32
	%vreg121<def> = LUI 3; GR32Bit:%vreg121
	WRITEPM %vreg121<internal>, %vreg38<internal>, 8; GR32Bit:%vreg121,%vreg38
	%vreg43<def> = ADDI %zero, <ga:@c>[TF=3]; GR32Bit:%vreg43
	WRITEPM %vreg121<internal>, %vreg43<internal>, 12; GR32Bit:%vreg121,%vreg43
	READPM %vreg25<kill>, %vreg120<internal>, 4; GR32Bit:%vreg25,%vreg120
	READPM %vreg24<kill>, %vreg120<internal>, 8; GR32Bit:%vreg24,%vreg120
	%vreg26<def> = ADD %vreg25, %vreg24; GR32Bit:%vreg26,%vreg25,%vreg24
	READPM %vreg23<kill>, %vreg120<internal>, 12; GR32Bit:%vreg23,%vreg120
	%vreg27<def> = ADD %vreg23, %vreg26; GR32Bit:%vreg27,%vreg23,%vreg26
	WRITEPM %vreg116<internal>, %vreg38<internal>, 20; GR32Bit:%vreg116,%vreg38
	%vreg125<def> = LUI 1; GR32Bit:%vreg125
	WRITEPM %vreg125<internal>, %vreg19<internal>, 20; GR32Bit:%vreg125,%vreg19
	READPM %vreg28<kill>, %vreg120<internal>, 16; GR32Bit:%vreg28,%vreg120
	%vreg29<def> = ADD %vreg28, %vreg27; GR32Bit:%vreg29,%vreg28,%vreg27
	WRITEPM %vreg121<internal>, %vreg29<internal>, 24; GR32Bit:%vreg121,%vreg29
	%vreg47<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg47,%vreg18
	WRITEPM %vreg121<internal>, %vreg47<internal>, 28; GR32Bit:%vreg121,%vreg47
	WRITEPM %vreg116<internal>, %vreg18<internal>, 32; GR32Bit:%vreg116,%vreg18
	WRITEPM %vreg116<internal>, %vreg126<internal>, 36; GR32Bit:%vreg116,%vreg126
	WRITEPM %vreg116<internal>, %vreg128<internal>, 40; GR32Bit:%vreg116,%vreg128
	%vreg130<def> = LUI 1; GR32Bit:%vreg130
	READPM %vreg130<kill>, %vreg130<internal>, -100; GR32Bit:%vreg130
	%vreg131<def> = LUI 2; GR32Bit:%vreg131
	READPM %vreg131<kill>, %vreg131<internal>, -100; GR32Bit:%vreg131
	%vreg132<def> = LUI 1; GR32Bit:%vreg132
	WRITEPM %vreg132<internal>, %vreg132<internal>, -100; GR32Bit:%vreg132
	%vreg132<def> = LUI 2; GR32Bit:%vreg132
	WRITEPM %vreg132<internal>, %vreg132<internal>, -100; GR32Bit:%vreg132
	%vreg132<def> = LUI 4; GR32Bit:%vreg132
	WRITEPM %vreg132<internal>, %vreg132<internal>, -100; GR32Bit:%vreg132
	%vreg133<def> = LUI 4; GR32Bit:%vreg133
	READPM %vreg133<kill>, %vreg133<internal>, -100; GR32Bit:%vreg133
	JAL <BB#5>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg22<def> = ADDI %zero, 40; GR32Bit:%vreg22
	%vreg115<def> = LUI 3; GR32Bit:%vreg115
	READPM %vreg31<kill>, %vreg115<internal>, 0; GR32Bit:%vreg31,%vreg115
	%vreg32<def> = LW %vreg31, 0; mem:LD4[%j] GR32Bit:%vreg32,%vreg31
	%vreg118<def> = LUI 0; GR32Bit:%vreg118
	WRITEPM %vreg118<internal>, %vreg22<internal>, 4; GR32Bit:%vreg118,%vreg22
	%vreg119<def> = LUI 2; GR32Bit:%vreg119
	WRITEPM %vreg119<internal>, %vreg32<internal>, 0; GR32Bit:%vreg119,%vreg32
	READPM %vreg37<kill>, %vreg115<internal>, 4; GR32Bit:%vreg37,%vreg115
	READPM %vreg38<kill>, %vreg115<internal>, 8; GR32Bit:%vreg38,%vreg115
	%vreg39<def> = ADD %vreg38, %vreg37; GR32Bit:%vreg39,%vreg38,%vreg37
	WRITEPM %vreg118<internal>, %vreg39<internal>, 8; GR32Bit:%vreg118,%vreg39
	READPM %vreg43<kill>, %vreg115<internal>, 12; GR32Bit:%vreg43,%vreg115
	READPM %vreg42<kill>, %vreg115<internal>, 16; GR32Bit:%vreg42,%vreg115
	%vreg44<def> = ADD %vreg43, %vreg42; GR32Bit:%vreg44,%vreg43,%vreg42
	%vreg20<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg20
	WRITEPM %vreg118<internal>, %vreg20<internal>, 12; GR32Bit:%vreg118,%vreg20
	%vreg124<def> = LUI 1; GR32Bit:%vreg124
	WRITEPM %vreg124<internal>, %vreg22<internal>, 16; GR32Bit:%vreg124,%vreg22
	READPM %vreg23<kill>, %vreg115<internal>, 20; GR32Bit:%vreg23,%vreg115
	%vreg45<def> = ADD %vreg23, %vreg44; GR32Bit:%vreg45,%vreg23,%vreg44
	WRITEPM %vreg118<internal>, %vreg45<internal>, 16; GR32Bit:%vreg118,%vreg45
	READPM %vreg29<kill>, %vreg115<internal>, 24; GR32Bit:%vreg29,%vreg115
	%vreg30<def> = LW %vreg29, 0; mem:LD4[%arrayidx7] GR32Bit:%vreg30,%vreg29
	WRITEPM %vreg118<internal>, %vreg30<internal>, 24; GR32Bit:%vreg118,%vreg30
	READPM %vreg47<kill>, %vreg115<internal>, 28; GR32Bit:%vreg47,%vreg115
	%vreg48<def> = ADDI %vreg47, 1; GR32Bit:%vreg48,%vreg47
	WRITEPM %vreg118<internal>, %vreg48<internal>, 28; GR32Bit:%vreg118,%vreg48
	%vreg130<def> = LUI 1; GR32Bit:%vreg130
	READPM %vreg130<kill>, %vreg130<internal>, -116; GR32Bit:%vreg130
	%vreg131<def> = LUI 2; GR32Bit:%vreg131
	READPM %vreg131<kill>, %vreg131<internal>, -116; GR32Bit:%vreg131
	%vreg132<def> = LUI 3; GR32Bit:%vreg132
	READPM %vreg132<kill>, %vreg132<internal>, -116; GR32Bit:%vreg132
	%vreg133<def> = LUI 1; GR32Bit:%vreg133
	WRITEPM %vreg133<internal>, %vreg133<internal>, -116; GR32Bit:%vreg133
	%vreg133<def> = LUI 2; GR32Bit:%vreg133
	WRITEPM %vreg133<internal>, %vreg133<internal>, -116; GR32Bit:%vreg133
	%vreg133<def> = LUI 3; GR32Bit:%vreg133
	WRITEPM %vreg133<internal>, %vreg133<internal>, -116; GR32Bit:%vreg133
	JAL <BB#5>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#5
After Shuffling basic block, state of BB#6:
BB#6: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#5
	%vreg34<def> = LUI <ga:@b>[TF=2]; GR32Bit:%vreg34
	%vreg35<def> = ADDI %zero, <ga:@b>[TF=3]; GR32Bit:%vreg35
	%vreg112<def> = LUI 1; GR32Bit:%vreg112
	WRITEPM %vreg112<internal>, %vreg35<internal>, 0; GR32Bit:%vreg112,%vreg35
	WRITEPM %vreg112<internal>, %vreg34<internal>, 4; GR32Bit:%vreg112,%vreg34
	%vreg117<def> = LUI 0; GR32Bit:%vreg117
	READPM %vreg19<kill>, %vreg117<internal>, 0; GR32Bit:%vreg19,%vreg117
	READPM %vreg22<kill>, %vreg117<internal>, 4; GR32Bit:%vreg22,%vreg117
	%vreg33<def> = MUL %vreg22, %vreg19; GR32Bit:%vreg33,%vreg22,%vreg19
	WRITEPM %vreg112<internal>, %vreg33<internal>, 8; GR32Bit:%vreg112,%vreg33
	READPM %vreg39<kill>, %vreg117<internal>, 8; GR32Bit:%vreg39,%vreg117
	%vreg40<def> = LW %vreg39, 0; mem:LD4[%arrayidx9] GR32Bit:%vreg40,%vreg39
	%vreg24<def> = LUI <ga:@a>[TF=2]; GR32Bit:%vreg24
	%vreg123<def> = LUI 2; GR32Bit:%vreg123
	WRITEPM %vreg123<internal>, %vreg24<internal>, 8; GR32Bit:%vreg123,%vreg24
	READPM %vreg20<kill>, %vreg117<internal>, 12; GR32Bit:%vreg20,%vreg117
	%vreg21<def> = LW %vreg20, 0; mem:LD4[%i] GR32Bit:%vreg21,%vreg20
	WRITEPM %vreg112<internal>, %vreg21<internal>, 12; GR32Bit:%vreg112,%vreg21
	READPM %vreg45<kill>, %vreg117<internal>, 16; GR32Bit:%vreg45,%vreg117
	READPM %vreg38<kill>, %vreg117<internal>, 20; GR32Bit:%vreg38,%vreg117
	%vreg46<def> = ADD %vreg38, %vreg45; GR32Bit:%vreg46,%vreg38,%vreg45
	READPM %vreg30<kill>, %vreg117<internal>, 24; GR32Bit:%vreg30,%vreg117
	%vreg41<def> = ADD %vreg40, %vreg30; GR32Bit:%vreg41,%vreg40,%vreg30
	WRITEPM %vreg112<internal>, %vreg41<internal>, 24; GR32Bit:%vreg112,%vreg41
	WRITEPM %vreg112<internal>, %vreg46<internal>, 28; GR32Bit:%vreg112,%vreg46
	READPM %vreg48<kill>, %vreg117<internal>, 28; GR32Bit:%vreg48,%vreg117
	READPM %vreg18<kill>, %vreg117<internal>, 32; GR32Bit:%vreg18,%vreg117
	READPM %vreg127<kill>, %vreg117<internal>, 36; GR32Bit:%vreg127,%vreg117
	READPM %vreg129<kill>, %vreg117<internal>, 40; GR32Bit:%vreg129,%vreg117
	SW %vreg48, %vreg18, 0; mem:ST4[%k] GR32Bit:%vreg48,%vreg18
	%vreg130<def> = LUI 2; GR32Bit:%vreg130
	WRITEPM %vreg130<internal>, %vreg130<internal>, -68; GR32Bit:%vreg130
	%vreg130<def> = LUI 3; GR32Bit:%vreg130
	WRITEPM %vreg130<internal>, %vreg130<internal>, -68; GR32Bit:%vreg130
	%vreg130<def> = LUI 4; GR32Bit:%vreg130
	WRITEPM %vreg130<internal>, %vreg130<internal>, -68; GR32Bit:%vreg130
	%vreg131<def> = LUI 2; GR32Bit:%vreg131
	READPM %vreg131<kill>, %vreg131<internal>, -68; GR32Bit:%vreg131
	%vreg132<def> = LUI 3; GR32Bit:%vreg132
	READPM %vreg132<kill>, %vreg132<internal>, -68; GR32Bit:%vreg132
	%vreg133<def> = LUI 4; GR32Bit:%vreg133
	READPM %vreg133<kill>, %vreg133<internal>, -68; GR32Bit:%vreg133
	JAL <BB#5>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg31<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg31
	%vreg113<def> = LUI 1; GR32Bit:%vreg113
	READPM %vreg35<kill>, %vreg113<internal>, 0; GR32Bit:%vreg35,%vreg113
	READPM %vreg34<kill>, %vreg113<internal>, 4; GR32Bit:%vreg34,%vreg113
	%vreg36<def> = ADD %vreg35, %vreg34; GR32Bit:%vreg36,%vreg35,%vreg34
	%vreg114<def> = LUI 3; GR32Bit:%vreg114
	WRITEPM %vreg114<internal>, %vreg31<internal>, 0; GR32Bit:%vreg114,%vreg31
	READPM %vreg33<kill>, %vreg113<internal>, 8; GR32Bit:%vreg33,%vreg113
	%vreg37<def> = ADD %vreg33, %vreg36; GR32Bit:%vreg37,%vreg33,%vreg36
	WRITEPM %vreg114<internal>, %vreg37<internal>, 4; GR32Bit:%vreg114,%vreg37
	%vreg42<def> = LUI <ga:@c>[TF=2]; GR32Bit:%vreg42
	WRITEPM %vreg114<internal>, %vreg42<internal>, 16; GR32Bit:%vreg114,%vreg42
	%vreg25<def> = ADDI %zero, <ga:@a>[TF=3]; GR32Bit:%vreg25
	%vreg122<def> = LUI 2; GR32Bit:%vreg122
	WRITEPM %vreg122<internal>, %vreg25<internal>, 4; GR32Bit:%vreg122,%vreg25
	READPM %vreg21<kill>, %vreg113<internal>, 12; GR32Bit:%vreg21,%vreg113
	READPM %vreg22<kill>, %vreg113<internal>, 16; GR32Bit:%vreg22,%vreg113
	%vreg23<def> = MUL %vreg22, %vreg21; GR32Bit:%vreg23,%vreg22,%vreg21
	WRITEPM %vreg122<internal>, %vreg23<internal>, 12; GR32Bit:%vreg122,%vreg23
	WRITEPM %vreg114<internal>, %vreg23<internal>, 20; GR32Bit:%vreg114,%vreg23
	READPM %vreg19<kill>, %vreg113<internal>, 20; GR32Bit:%vreg19,%vreg113
	%vreg28<def> = SLLI %vreg19, 2; GR32Bit:%vreg28,%vreg19
	WRITEPM %vreg122<internal>, %vreg28<internal>, 16; GR32Bit:%vreg122,%vreg28
	READPM %vreg41<kill>, %vreg113<internal>, 24; GR32Bit:%vreg41,%vreg113
	READPM %vreg46<kill>, %vreg113<internal>, 28; GR32Bit:%vreg46,%vreg113
	SW %vreg41, %vreg46, 0; mem:ST4[%arrayidx11] GR32Bit:%vreg41,%vreg46
	%vreg130<def> = LUI 1; GR32Bit:%vreg130
	READPM %vreg130<kill>, %vreg130<internal>, -84; GR32Bit:%vreg130
	%vreg131<def> = LUI 1; GR32Bit:%vreg131
	WRITEPM %vreg131<internal>, %vreg131<internal>, -84; GR32Bit:%vreg131
	%vreg131<def> = LUI 3; GR32Bit:%vreg131
	WRITEPM %vreg131<internal>, %vreg131<internal>, -84; GR32Bit:%vreg131
	%vreg131<def> = LUI 4; GR32Bit:%vreg131
	WRITEPM %vreg131<internal>, %vreg131<internal>, -84; GR32Bit:%vreg131
	%vreg132<def> = LUI 3; GR32Bit:%vreg132
	READPM %vreg132<kill>, %vreg132<internal>, -84; GR32Bit:%vreg132
	%vreg133<def> = LUI 4; GR32Bit:%vreg133
	READPM %vreg133<kill>, %vreg133<internal>, -84; GR32Bit:%vreg133
	JAL <BB#5>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg18<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg18
	%vreg19<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg19,%vreg18
	%vreg116<def> = LUI 0; GR32Bit:%vreg116
	WRITEPM %vreg116<internal>, %vreg19<internal>, 0; GR32Bit:%vreg116,%vreg19
	%vreg120<def> = LUI 2; GR32Bit:%vreg120
	READPM %vreg32<kill>, %vreg120<internal>, 0; GR32Bit:%vreg32,%vreg120
	%vreg38<def> = SLLI %vreg32, 2; GR32Bit:%vreg38,%vreg32
	%vreg121<def> = LUI 3; GR32Bit:%vreg121
	WRITEPM %vreg121<internal>, %vreg38<internal>, 8; GR32Bit:%vreg121,%vreg38
	%vreg43<def> = ADDI %zero, <ga:@c>[TF=3]; GR32Bit:%vreg43
	WRITEPM %vreg121<internal>, %vreg43<internal>, 12; GR32Bit:%vreg121,%vreg43
	READPM %vreg25<kill>, %vreg120<internal>, 4; GR32Bit:%vreg25,%vreg120
	READPM %vreg24<kill>, %vreg120<internal>, 8; GR32Bit:%vreg24,%vreg120
	%vreg26<def> = ADD %vreg25, %vreg24; GR32Bit:%vreg26,%vreg25,%vreg24
	READPM %vreg23<kill>, %vreg120<internal>, 12; GR32Bit:%vreg23,%vreg120
	%vreg27<def> = ADD %vreg23, %vreg26; GR32Bit:%vreg27,%vreg23,%vreg26
	WRITEPM %vreg116<internal>, %vreg38<internal>, 20; GR32Bit:%vreg116,%vreg38
	%vreg125<def> = LUI 1; GR32Bit:%vreg125
	WRITEPM %vreg125<internal>, %vreg19<internal>, 20; GR32Bit:%vreg125,%vreg19
	READPM %vreg28<kill>, %vreg120<internal>, 16; GR32Bit:%vreg28,%vreg120
	%vreg29<def> = ADD %vreg28, %vreg27; GR32Bit:%vreg29,%vreg28,%vreg27
	WRITEPM %vreg121<internal>, %vreg29<internal>, 24; GR32Bit:%vreg121,%vreg29
	%vreg47<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg47,%vreg18
	WRITEPM %vreg121<internal>, %vreg47<internal>, 28; GR32Bit:%vreg121,%vreg47
	WRITEPM %vreg116<internal>, %vreg18<internal>, 32; GR32Bit:%vreg116,%vreg18
	WRITEPM %vreg116<internal>, %vreg126<internal>, 36; GR32Bit:%vreg116,%vreg126
	WRITEPM %vreg116<internal>, %vreg128<internal>, 40; GR32Bit:%vreg116,%vreg128
	%vreg130<def> = LUI 1; GR32Bit:%vreg130
	READPM %vreg130<kill>, %vreg130<internal>, -100; GR32Bit:%vreg130
	%vreg131<def> = LUI 2; GR32Bit:%vreg131
	READPM %vreg131<kill>, %vreg131<internal>, -100; GR32Bit:%vreg131
	%vreg132<def> = LUI 1; GR32Bit:%vreg132
	WRITEPM %vreg132<internal>, %vreg132<internal>, -100; GR32Bit:%vreg132
	%vreg132<def> = LUI 2; GR32Bit:%vreg132
	WRITEPM %vreg132<internal>, %vreg132<internal>, -100; GR32Bit:%vreg132
	%vreg132<def> = LUI 4; GR32Bit:%vreg132
	WRITEPM %vreg132<internal>, %vreg132<internal>, -100; GR32Bit:%vreg132
	%vreg133<def> = LUI 4; GR32Bit:%vreg133
	READPM %vreg133<kill>, %vreg133<internal>, -100; GR32Bit:%vreg133
	JAL <BB#5>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg22<def> = ADDI %zero, 40; GR32Bit:%vreg22
	%vreg115<def> = LUI 3; GR32Bit:%vreg115
	READPM %vreg31<kill>, %vreg115<internal>, 0; GR32Bit:%vreg31,%vreg115
	%vreg32<def> = LW %vreg31, 0; mem:LD4[%j] GR32Bit:%vreg32,%vreg31
	%vreg118<def> = LUI 0; GR32Bit:%vreg118
	WRITEPM %vreg118<internal>, %vreg22<internal>, 4; GR32Bit:%vreg118,%vreg22
	%vreg119<def> = LUI 2; GR32Bit:%vreg119
	WRITEPM %vreg119<internal>, %vreg32<internal>, 0; GR32Bit:%vreg119,%vreg32
	READPM %vreg37<kill>, %vreg115<internal>, 4; GR32Bit:%vreg37,%vreg115
	READPM %vreg38<kill>, %vreg115<internal>, 8; GR32Bit:%vreg38,%vreg115
	%vreg39<def> = ADD %vreg38, %vreg37; GR32Bit:%vreg39,%vreg38,%vreg37
	WRITEPM %vreg118<internal>, %vreg39<internal>, 8; GR32Bit:%vreg118,%vreg39
	READPM %vreg43<kill>, %vreg115<internal>, 12; GR32Bit:%vreg43,%vreg115
	READPM %vreg42<kill>, %vreg115<internal>, 16; GR32Bit:%vreg42,%vreg115
	%vreg44<def> = ADD %vreg43, %vreg42; GR32Bit:%vreg44,%vreg43,%vreg42
	%vreg20<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg20
	WRITEPM %vreg118<internal>, %vreg20<internal>, 12; GR32Bit:%vreg118,%vreg20
	%vreg124<def> = LUI 1; GR32Bit:%vreg124
	WRITEPM %vreg124<internal>, %vreg22<internal>, 16; GR32Bit:%vreg124,%vreg22
	READPM %vreg23<kill>, %vreg115<internal>, 20; GR32Bit:%vreg23,%vreg115
	%vreg45<def> = ADD %vreg23, %vreg44; GR32Bit:%vreg45,%vreg23,%vreg44
	WRITEPM %vreg118<internal>, %vreg45<internal>, 16; GR32Bit:%vreg118,%vreg45
	READPM %vreg29<kill>, %vreg115<internal>, 24; GR32Bit:%vreg29,%vreg115
	%vreg30<def> = LW %vreg29, 0; mem:LD4[%arrayidx7] GR32Bit:%vreg30,%vreg29
	WRITEPM %vreg118<internal>, %vreg30<internal>, 24; GR32Bit:%vreg118,%vreg30
	READPM %vreg47<kill>, %vreg115<internal>, 28; GR32Bit:%vreg47,%vreg115
	%vreg48<def> = ADDI %vreg47, 1; GR32Bit:%vreg48,%vreg47
	WRITEPM %vreg118<internal>, %vreg48<internal>, 28; GR32Bit:%vreg118,%vreg48
	%vreg130<def> = LUI 1; GR32Bit:%vreg130
	READPM %vreg130<kill>, %vreg130<internal>, -116; GR32Bit:%vreg130
	%vreg131<def> = LUI 2; GR32Bit:%vreg131
	READPM %vreg131<kill>, %vreg131<internal>, -116; GR32Bit:%vreg131
	%vreg132<def> = LUI 3; GR32Bit:%vreg132
	READPM %vreg132<kill>, %vreg132<internal>, -116; GR32Bit:%vreg132
	%vreg133<def> = LUI 1; GR32Bit:%vreg133
	WRITEPM %vreg133<internal>, %vreg133<internal>, -116; GR32Bit:%vreg133
	%vreg133<def> = LUI 2; GR32Bit:%vreg133
	WRITEPM %vreg133<internal>, %vreg133<internal>, -116; GR32Bit:%vreg133
	%vreg133<def> = LUI 3; GR32Bit:%vreg133
	WRITEPM %vreg133<internal>, %vreg133<internal>, -116; GR32Bit:%vreg133
	JAL <BB#5>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#5
Creating pHyperOp bundles for CEs
Starting new basic block BB#7
********** MI Scheduling **********
main:BB#7 for.inc12
  From: %vreg15<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg15
    To: JAL <BB#3>
 Remaining: 0
Max Pressure: GR32Bit=2
Live In: 
Live Out: 
FP32BitLimit 32 Actual 0
GR32BitLimit 32 Actual 2
Excess PSets: 
1 subtrees:
  SU(0) in tree 0
  SU(1) in tree 0
  SU(2) in tree 0
  SU(3) in tree 0
SU(0):   %vreg15<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg15
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 6
  Successors:
   val SU(3): Latency=1 Reg=%vreg15
   val SU(1): Latency=1 Reg=%vreg15

SU(1):   %vreg16<def> = LW %vreg15, 0; mem:LD4[%j] GR32Bit:%vreg16,%vreg15
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 5
  Predecessors:
   val SU(0): Latency=1 Reg=%vreg15
  Successors:
   val SU(2): Latency=4 Reg=%vreg16
   ch  SU(3): Latency=0

SU(2):   %vreg17<def> = ADDI %vreg16, 1; GR32Bit:%vreg17,%vreg16
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
   val SU(1): Latency=4 Reg=%vreg16
  Successors:
   val SU(3): Latency=1 Reg=%vreg17

SU(3):   SW %vreg17, %vreg15, 0; mem:ST4[%j] GR32Bit:%vreg17,%vreg15
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
   val SU(2): Latency=1 Reg=%vreg17
   val SU(0): Latency=1 Reg=%vreg15
   ch  SU(1): Latency=0
  Successors:
   ch  SU(4294967295) *: Latency=0

SU(0):   %vreg15<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg15
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 6
  Successors:
   val SU(3): Latency=1 Reg=%vreg15
   val SU(1): Latency=1 Reg=%vreg15

SU(1):   %vreg16<def> = LW %vreg15, 0; mem:LD4[%j] GR32Bit:%vreg16,%vreg15
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 5
  Predecessors:
   val SU(0): Latency=1 Reg=%vreg15
  Successors:
   val SU(2): Latency=4 Reg=%vreg16
   ch  SU(3): Latency=0

SU(2):   %vreg17<def> = ADDI %vreg16, 1; GR32Bit:%vreg17,%vreg16
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
   val SU(1): Latency=4 Reg=%vreg16
  Successors:
   val SU(3): Latency=1 Reg=%vreg17

SU(3):   SW %vreg17, %vreg15, 0; mem:ST4[%j] GR32Bit:%vreg17,%vreg15
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
   val SU(2): Latency=1 Reg=%vreg17
   val SU(0): Latency=1 Reg=%vreg15
   ch  SU(1): Latency=0
  Successors:
   ch  SU(4294967295) *: Latency=0

Pick node SU(0)  ILP: 1 / 1 = 1 Tree: 0 @0
Scheduling %vreg15<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg15
Pick node SU(1)  ILP: 2 / 2 = 1 Tree: 0 @0
Scheduling %vreg16<def> = LW %vreg15, 0; mem:LD4[%j] GR32Bit:%vreg16,%vreg15
Pick node SU(2)  ILP: 3 / 6 = 0.5 Tree: 0 @0
Scheduling %vreg17<def> = ADDI %vreg16, 1; GR32Bit:%vreg17,%vreg16
Pick node SU(3)  ILP: 4 / 7 = 0.571429 Tree: 0 @0
Scheduling SW %vreg17, %vreg15, 0; mem:ST4[%j] GR32Bit:%vreg17,%vreg15
*** Final schedule for BB#7 ***
SU(0):   %vreg15<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg15
SU(1):   %vreg16<def> = LW %vreg15, 0; mem:LD4[%j] GR32Bit:%vreg16,%vreg15
SU(2):   %vreg17<def> = ADDI %vreg16, 1; GR32Bit:%vreg17,%vreg16
SU(3):   SW %vreg17, %vreg15, 0; mem:ST4[%j] GR32Bit:%vreg17,%vreg15

Partitioning instructions of the region into multiple CEs

*** Renumbered SlotIndexes 4416-4520 ***

*** Renumbered SlotIndexes 4428-4532 ***

*** Renumbered SlotIndexes 4448-4544 ***

*** Renumbered SlotIndexes 4460-4556 ***

*** Renumbered SlotIndexes 4480-4568 ***

*** Renumbered SlotIndexes 4492-4580 ***

*** Renumbered SlotIndexes 4504-4592 ***

*** Renumbered SlotIndexes 4516-4604 ***

*** Renumbered SlotIndexes 4528-4616 ***

*** Renumbered SlotIndexes 4548-4628 ***

*** Renumbered SlotIndexes 4560-4640 ***

*** Renumbered SlotIndexes 4572-4652 ***

*** Renumbered SlotIndexes 4584-4664 ***

*** Renumbered SlotIndexes 4596-4676 ***

*** Renumbered SlotIndexes 4608-4688 ***

*** Renumbered SlotIndexes 4620-4700 ***

*** Renumbered SlotIndexes 4632-4712 ***

*** Renumbered SlotIndexes 4644-4724 ***

*** Renumbered SlotIndexes 4656-4736 ***

*** Renumbered SlotIndexes 4668-4748 ***

*** Renumbered SlotIndexes 4680-4760 ***

*** Renumbered SlotIndexes 4692-4772 ***

*** Renumbered SlotIndexes 4704-4784 ***

*** Renumbered SlotIndexes 4716-4796 ***

*** Renumbered SlotIndexes 4728-4808 ***

*** Renumbered SlotIndexes 4740-4820 ***

*** Renumbered SlotIndexes 4752-4832 ***

*** Renumbered SlotIndexes 4764-4844 ***

*** Renumbered SlotIndexes 4776-4856 ***

*** Renumbered SlotIndexes 4788-4868 ***

*** Renumbered SlotIndexes 4800-4880 ***

*** Renumbered SlotIndexes 4812-4892 ***

*** Renumbered SlotIndexes 4824-4904 ***
Dumping all live-out registers to memory

*** Renumbered SlotIndexes 4844-4916 ***

*** Renumbered SlotIndexes 4856-4928 ***

*** Renumbered SlotIndexes 4868-4940 ***

*** Renumbered SlotIndexes 4880-4952 ***

*** Renumbered SlotIndexes 4892-4964 ***
Shuffling instructions within the region such that successive instructions belong to the same pHyperOp to ease bundle creation
state of basic block BB#7BB#7: derived from LLVM BB %for.inc12
    Predecessors according to CFG: BB#5
	%vreg15<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg15
	%vreg134<def> = LUI 1; GR32Bit:%vreg134
	WRITEPM %vreg134<internal>, %vreg15<internal>, 0; GR32Bit:%vreg134,%vreg15
	%vreg140<def> = LUI 3; GR32Bit:%vreg140
	WRITEPM %vreg140<internal>, %vreg15<internal>, 4; GR32Bit:%vreg140,%vreg15
	%vreg144<def> = LUI 2; GR32Bit:%vreg144
	WRITEPM %vreg144<internal>, %vreg144<internal>, -68; GR32Bit:%vreg144
	%vreg144<def> = LUI 3; GR32Bit:%vreg144
	WRITEPM %vreg144<internal>, %vreg144<internal>, -68; GR32Bit:%vreg144
	%vreg144<def> = LUI 4; GR32Bit:%vreg144
	WRITEPM %vreg144<internal>, %vreg144<internal>, -68; GR32Bit:%vreg144
	%vreg145<def> = LUI 2; GR32Bit:%vreg145
	READPM %vreg145<kill>, %vreg145<internal>, -68; GR32Bit:%vreg145
	%vreg146<def> = LUI 3; GR32Bit:%vreg146
	READPM %vreg146<kill>, %vreg146<internal>, -68; GR32Bit:%vreg146
	%vreg147<def> = LUI 4; GR32Bit:%vreg147
	READPM %vreg147<kill>, %vreg147<internal>, -68; GR32Bit:%vreg147
	JAL <BB#3>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg135<def> = LUI 1; GR32Bit:%vreg135
	READPM %vreg15<kill>, %vreg135<internal>, 0; GR32Bit:%vreg15,%vreg135
	%vreg16<def> = LW %vreg15, 0; mem:LD4[%j] GR32Bit:%vreg16,%vreg15
	%vreg136<def> = LUI 2; GR32Bit:%vreg136
	WRITEPM %vreg136<internal>, %vreg16<internal>, 0; GR32Bit:%vreg136,%vreg16
	%vreg141<def> = LUI 3; GR32Bit:%vreg141
	WRITEPM %vreg141<internal>, %vreg142<internal>, 8; GR32Bit:%vreg141,%vreg142
	%vreg144<def> = LUI 1; GR32Bit:%vreg144
	READPM %vreg144<kill>, %vreg144<internal>, -84; GR32Bit:%vreg144
	%vreg145<def> = LUI 1; GR32Bit:%vreg145
	WRITEPM %vreg145<internal>, %vreg145<internal>, -84; GR32Bit:%vreg145
	%vreg145<def> = LUI 3; GR32Bit:%vreg145
	WRITEPM %vreg145<internal>, %vreg145<internal>, -84; GR32Bit:%vreg145
	%vreg145<def> = LUI 4; GR32Bit:%vreg145
	WRITEPM %vreg145<internal>, %vreg145<internal>, -84; GR32Bit:%vreg145
	%vreg146<def> = LUI 3; GR32Bit:%vreg146
	READPM %vreg146<kill>, %vreg146<internal>, -84; GR32Bit:%vreg146
	%vreg147<def> = LUI 4; GR32Bit:%vreg147
	READPM %vreg147<kill>, %vreg147<internal>, -84; GR32Bit:%vreg147
	JAL <BB#3>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg137<def> = LUI 2; GR32Bit:%vreg137
	READPM %vreg16<kill>, %vreg137<internal>, 0; GR32Bit:%vreg16,%vreg137
	%vreg17<def> = ADDI %vreg16, 1; GR32Bit:%vreg17,%vreg16
	%vreg138<def> = LUI 3; GR32Bit:%vreg138
	WRITEPM %vreg138<internal>, %vreg17<internal>, 0; GR32Bit:%vreg138,%vreg17
	%vreg144<def> = LUI 1; GR32Bit:%vreg144
	READPM %vreg144<kill>, %vreg144<internal>, -100; GR32Bit:%vreg144
	%vreg145<def> = LUI 2; GR32Bit:%vreg145
	READPM %vreg145<kill>, %vreg145<internal>, -100; GR32Bit:%vreg145
	%vreg146<def> = LUI 1; GR32Bit:%vreg146
	WRITEPM %vreg146<internal>, %vreg146<internal>, -100; GR32Bit:%vreg146
	%vreg146<def> = LUI 2; GR32Bit:%vreg146
	WRITEPM %vreg146<internal>, %vreg146<internal>, -100; GR32Bit:%vreg146
	%vreg146<def> = LUI 4; GR32Bit:%vreg146
	WRITEPM %vreg146<internal>, %vreg146<internal>, -100; GR32Bit:%vreg146
	%vreg147<def> = LUI 4; GR32Bit:%vreg147
	READPM %vreg147<kill>, %vreg147<internal>, -100; GR32Bit:%vreg147
	JAL <BB#3>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg139<def> = LUI 3; GR32Bit:%vreg139
	READPM %vreg17<kill>, %vreg139<internal>, 0; GR32Bit:%vreg17,%vreg139
	READPM %vreg15<kill>, %vreg139<internal>, 4; GR32Bit:%vreg15,%vreg139
	READPM %vreg143<kill>, %vreg139<internal>, 8; GR32Bit:%vreg143,%vreg139
	SW %vreg17, %vreg15, 0; mem:ST4[%j] GR32Bit:%vreg17,%vreg15
	%vreg144<def> = LUI 1; GR32Bit:%vreg144
	READPM %vreg144<kill>, %vreg144<internal>, -116; GR32Bit:%vreg144
	%vreg145<def> = LUI 2; GR32Bit:%vreg145
	READPM %vreg145<kill>, %vreg145<internal>, -116; GR32Bit:%vreg145
	%vreg146<def> = LUI 3; GR32Bit:%vreg146
	READPM %vreg146<kill>, %vreg146<internal>, -116; GR32Bit:%vreg146
	%vreg147<def> = LUI 1; GR32Bit:%vreg147
	WRITEPM %vreg147<internal>, %vreg147<internal>, -116; GR32Bit:%vreg147
	%vreg147<def> = LUI 2; GR32Bit:%vreg147
	WRITEPM %vreg147<internal>, %vreg147<internal>, -116; GR32Bit:%vreg147
	%vreg147<def> = LUI 3; GR32Bit:%vreg147
	WRITEPM %vreg147<internal>, %vreg147<internal>, -116; GR32Bit:%vreg147
	JAL <BB#3>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#3
BB before region shuffle:BB#7: derived from LLVM BB %for.inc12
    Predecessors according to CFG: BB#5
	%vreg15<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg15
	%vreg134<def> = LUI 1; GR32Bit:%vreg134
	WRITEPM %vreg134<internal>, %vreg15<internal>, 0; GR32Bit:%vreg134,%vreg15
	%vreg140<def> = LUI 3; GR32Bit:%vreg140
	WRITEPM %vreg140<internal>, %vreg15<internal>, 4; GR32Bit:%vreg140,%vreg15
	%vreg144<def> = LUI 2; GR32Bit:%vreg144
	WRITEPM %vreg144<internal>, %vreg144<internal>, -68; GR32Bit:%vreg144
	%vreg144<def> = LUI 3; GR32Bit:%vreg144
	WRITEPM %vreg144<internal>, %vreg144<internal>, -68; GR32Bit:%vreg144
	%vreg144<def> = LUI 4; GR32Bit:%vreg144
	WRITEPM %vreg144<internal>, %vreg144<internal>, -68; GR32Bit:%vreg144
	%vreg145<def> = LUI 2; GR32Bit:%vreg145
	READPM %vreg145<kill>, %vreg145<internal>, -68; GR32Bit:%vreg145
	%vreg146<def> = LUI 3; GR32Bit:%vreg146
	READPM %vreg146<kill>, %vreg146<internal>, -68; GR32Bit:%vreg146
	%vreg147<def> = LUI 4; GR32Bit:%vreg147
	READPM %vreg147<kill>, %vreg147<internal>, -68; GR32Bit:%vreg147
	JAL <BB#3>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg135<def> = LUI 1; GR32Bit:%vreg135
	READPM %vreg15<kill>, %vreg135<internal>, 0; GR32Bit:%vreg15,%vreg135
	%vreg16<def> = LW %vreg15, 0; mem:LD4[%j] GR32Bit:%vreg16,%vreg15
	%vreg136<def> = LUI 2; GR32Bit:%vreg136
	WRITEPM %vreg136<internal>, %vreg16<internal>, 0; GR32Bit:%vreg136,%vreg16
	%vreg141<def> = LUI 3; GR32Bit:%vreg141
	WRITEPM %vreg141<internal>, %vreg142<internal>, 8; GR32Bit:%vreg141,%vreg142
	%vreg144<def> = LUI 1; GR32Bit:%vreg144
	READPM %vreg144<kill>, %vreg144<internal>, -84; GR32Bit:%vreg144
	%vreg145<def> = LUI 1; GR32Bit:%vreg145
	WRITEPM %vreg145<internal>, %vreg145<internal>, -84; GR32Bit:%vreg145
	%vreg145<def> = LUI 3; GR32Bit:%vreg145
	WRITEPM %vreg145<internal>, %vreg145<internal>, -84; GR32Bit:%vreg145
	%vreg145<def> = LUI 4; GR32Bit:%vreg145
	WRITEPM %vreg145<internal>, %vreg145<internal>, -84; GR32Bit:%vreg145
	%vreg146<def> = LUI 3; GR32Bit:%vreg146
	READPM %vreg146<kill>, %vreg146<internal>, -84; GR32Bit:%vreg146
	%vreg147<def> = LUI 4; GR32Bit:%vreg147
	READPM %vreg147<kill>, %vreg147<internal>, -84; GR32Bit:%vreg147
	JAL <BB#3>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg137<def> = LUI 2; GR32Bit:%vreg137
	READPM %vreg16<kill>, %vreg137<internal>, 0; GR32Bit:%vreg16,%vreg137
	%vreg17<def> = ADDI %vreg16, 1; GR32Bit:%vreg17,%vreg16
	%vreg138<def> = LUI 3; GR32Bit:%vreg138
	WRITEPM %vreg138<internal>, %vreg17<internal>, 0; GR32Bit:%vreg138,%vreg17
	%vreg144<def> = LUI 1; GR32Bit:%vreg144
	READPM %vreg144<kill>, %vreg144<internal>, -100; GR32Bit:%vreg144
	%vreg145<def> = LUI 2; GR32Bit:%vreg145
	READPM %vreg145<kill>, %vreg145<internal>, -100; GR32Bit:%vreg145
	%vreg146<def> = LUI 1; GR32Bit:%vreg146
	WRITEPM %vreg146<internal>, %vreg146<internal>, -100; GR32Bit:%vreg146
	%vreg146<def> = LUI 2; GR32Bit:%vreg146
	WRITEPM %vreg146<internal>, %vreg146<internal>, -100; GR32Bit:%vreg146
	%vreg146<def> = LUI 4; GR32Bit:%vreg146
	WRITEPM %vreg146<internal>, %vreg146<internal>, -100; GR32Bit:%vreg146
	%vreg147<def> = LUI 4; GR32Bit:%vreg147
	READPM %vreg147<kill>, %vreg147<internal>, -100; GR32Bit:%vreg147
	JAL <BB#3>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg139<def> = LUI 3; GR32Bit:%vreg139
	READPM %vreg17<kill>, %vreg139<internal>, 0; GR32Bit:%vreg17,%vreg139
	READPM %vreg15<kill>, %vreg139<internal>, 4; GR32Bit:%vreg15,%vreg139
	READPM %vreg143<kill>, %vreg139<internal>, 8; GR32Bit:%vreg143,%vreg139
	SW %vreg17, %vreg15, 0; mem:ST4[%j] GR32Bit:%vreg17,%vreg15
	%vreg144<def> = LUI 1; GR32Bit:%vreg144
	READPM %vreg144<kill>, %vreg144<internal>, -116; GR32Bit:%vreg144
	%vreg145<def> = LUI 2; GR32Bit:%vreg145
	READPM %vreg145<kill>, %vreg145<internal>, -116; GR32Bit:%vreg145
	%vreg146<def> = LUI 3; GR32Bit:%vreg146
	READPM %vreg146<kill>, %vreg146<internal>, -116; GR32Bit:%vreg146
	%vreg147<def> = LUI 1; GR32Bit:%vreg147
	WRITEPM %vreg147<internal>, %vreg147<internal>, -116; GR32Bit:%vreg147
	%vreg147<def> = LUI 2; GR32Bit:%vreg147
	WRITEPM %vreg147<internal>, %vreg147<internal>, -116; GR32Bit:%vreg147
	%vreg147<def> = LUI 3; GR32Bit:%vreg147
	WRITEPM %vreg147<internal>, %vreg147<internal>, -116; GR32Bit:%vreg147
	JAL <BB#3>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#3
After Shuffling basic block, state of BB#7:
BB#7: derived from LLVM BB %for.inc12
    Predecessors according to CFG: BB#5
	%vreg15<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg15
	%vreg134<def> = LUI 1; GR32Bit:%vreg134
	WRITEPM %vreg134<internal>, %vreg15<internal>, 0; GR32Bit:%vreg134,%vreg15
	%vreg140<def> = LUI 3; GR32Bit:%vreg140
	WRITEPM %vreg140<internal>, %vreg15<internal>, 4; GR32Bit:%vreg140,%vreg15
	%vreg144<def> = LUI 2; GR32Bit:%vreg144
	WRITEPM %vreg144<internal>, %vreg144<internal>, -68; GR32Bit:%vreg144
	%vreg144<def> = LUI 3; GR32Bit:%vreg144
	WRITEPM %vreg144<internal>, %vreg144<internal>, -68; GR32Bit:%vreg144
	%vreg144<def> = LUI 4; GR32Bit:%vreg144
	WRITEPM %vreg144<internal>, %vreg144<internal>, -68; GR32Bit:%vreg144
	%vreg145<def> = LUI 2; GR32Bit:%vreg145
	READPM %vreg145<kill>, %vreg145<internal>, -68; GR32Bit:%vreg145
	%vreg146<def> = LUI 3; GR32Bit:%vreg146
	READPM %vreg146<kill>, %vreg146<internal>, -68; GR32Bit:%vreg146
	%vreg147<def> = LUI 4; GR32Bit:%vreg147
	READPM %vreg147<kill>, %vreg147<internal>, -68; GR32Bit:%vreg147
	JAL <BB#3>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg135<def> = LUI 1; GR32Bit:%vreg135
	READPM %vreg15<kill>, %vreg135<internal>, 0; GR32Bit:%vreg15,%vreg135
	%vreg16<def> = LW %vreg15, 0; mem:LD4[%j] GR32Bit:%vreg16,%vreg15
	%vreg136<def> = LUI 2; GR32Bit:%vreg136
	WRITEPM %vreg136<internal>, %vreg16<internal>, 0; GR32Bit:%vreg136,%vreg16
	%vreg141<def> = LUI 3; GR32Bit:%vreg141
	WRITEPM %vreg141<internal>, %vreg142<internal>, 8; GR32Bit:%vreg141,%vreg142
	%vreg144<def> = LUI 1; GR32Bit:%vreg144
	READPM %vreg144<kill>, %vreg144<internal>, -84; GR32Bit:%vreg144
	%vreg145<def> = LUI 1; GR32Bit:%vreg145
	WRITEPM %vreg145<internal>, %vreg145<internal>, -84; GR32Bit:%vreg145
	%vreg145<def> = LUI 3; GR32Bit:%vreg145
	WRITEPM %vreg145<internal>, %vreg145<internal>, -84; GR32Bit:%vreg145
	%vreg145<def> = LUI 4; GR32Bit:%vreg145
	WRITEPM %vreg145<internal>, %vreg145<internal>, -84; GR32Bit:%vreg145
	%vreg146<def> = LUI 3; GR32Bit:%vreg146
	READPM %vreg146<kill>, %vreg146<internal>, -84; GR32Bit:%vreg146
	%vreg147<def> = LUI 4; GR32Bit:%vreg147
	READPM %vreg147<kill>, %vreg147<internal>, -84; GR32Bit:%vreg147
	JAL <BB#3>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg137<def> = LUI 2; GR32Bit:%vreg137
	READPM %vreg16<kill>, %vreg137<internal>, 0; GR32Bit:%vreg16,%vreg137
	%vreg17<def> = ADDI %vreg16, 1; GR32Bit:%vreg17,%vreg16
	%vreg138<def> = LUI 3; GR32Bit:%vreg138
	WRITEPM %vreg138<internal>, %vreg17<internal>, 0; GR32Bit:%vreg138,%vreg17
	%vreg144<def> = LUI 1; GR32Bit:%vreg144
	READPM %vreg144<kill>, %vreg144<internal>, -100; GR32Bit:%vreg144
	%vreg145<def> = LUI 2; GR32Bit:%vreg145
	READPM %vreg145<kill>, %vreg145<internal>, -100; GR32Bit:%vreg145
	%vreg146<def> = LUI 1; GR32Bit:%vreg146
	WRITEPM %vreg146<internal>, %vreg146<internal>, -100; GR32Bit:%vreg146
	%vreg146<def> = LUI 2; GR32Bit:%vreg146
	WRITEPM %vreg146<internal>, %vreg146<internal>, -100; GR32Bit:%vreg146
	%vreg146<def> = LUI 4; GR32Bit:%vreg146
	WRITEPM %vreg146<internal>, %vreg146<internal>, -100; GR32Bit:%vreg146
	%vreg147<def> = LUI 4; GR32Bit:%vreg147
	READPM %vreg147<kill>, %vreg147<internal>, -100; GR32Bit:%vreg147
	JAL <BB#3>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg139<def> = LUI 3; GR32Bit:%vreg139
	READPM %vreg17<kill>, %vreg139<internal>, 0; GR32Bit:%vreg17,%vreg139
	READPM %vreg15<kill>, %vreg139<internal>, 4; GR32Bit:%vreg15,%vreg139
	READPM %vreg143<kill>, %vreg139<internal>, 8; GR32Bit:%vreg143,%vreg139
	SW %vreg17, %vreg15, 0; mem:ST4[%j] GR32Bit:%vreg17,%vreg15
	%vreg144<def> = LUI 1; GR32Bit:%vreg144
	READPM %vreg144<kill>, %vreg144<internal>, -116; GR32Bit:%vreg144
	%vreg145<def> = LUI 2; GR32Bit:%vreg145
	READPM %vreg145<kill>, %vreg145<internal>, -116; GR32Bit:%vreg145
	%vreg146<def> = LUI 3; GR32Bit:%vreg146
	READPM %vreg146<kill>, %vreg146<internal>, -116; GR32Bit:%vreg146
	%vreg147<def> = LUI 1; GR32Bit:%vreg147
	WRITEPM %vreg147<internal>, %vreg147<internal>, -116; GR32Bit:%vreg147
	%vreg147<def> = LUI 2; GR32Bit:%vreg147
	WRITEPM %vreg147<internal>, %vreg147<internal>, -116; GR32Bit:%vreg147
	%vreg147<def> = LUI 3; GR32Bit:%vreg147
	WRITEPM %vreg147<internal>, %vreg147<internal>, -116; GR32Bit:%vreg147
	JAL <BB#3>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#3
Creating pHyperOp bundles for CEs
Starting new basic block BB#8
********** MI Scheduling **********
main:BB#8 for.inc15
  From: %vreg8<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg8
    To: JAL <BB#1>
 Remaining: 0
Max Pressure: GR32Bit=2
Live In: 
Live Out: 
FP32BitLimit 32 Actual 0
GR32BitLimit 32 Actual 2
Excess PSets: 
1 subtrees:
  SU(0) in tree 0
  SU(1) in tree 0
  SU(2) in tree 0
  SU(3) in tree 0
SU(0):   %vreg8<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg8
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 6
  Successors:
   val SU(3): Latency=1 Reg=%vreg8
   val SU(1): Latency=1 Reg=%vreg8

SU(1):   %vreg9<def> = LW %vreg8, 0; mem:LD4[%i] GR32Bit:%vreg9,%vreg8
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 5
  Predecessors:
   val SU(0): Latency=1 Reg=%vreg8
  Successors:
   val SU(2): Latency=4 Reg=%vreg9
   ch  SU(3): Latency=0

SU(2):   %vreg10<def> = ADDI %vreg9, 1; GR32Bit:%vreg10,%vreg9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
   val SU(1): Latency=4 Reg=%vreg9
  Successors:
   val SU(3): Latency=1 Reg=%vreg10

SU(3):   SW %vreg10, %vreg8, 0; mem:ST4[%i] GR32Bit:%vreg10,%vreg8
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
   val SU(2): Latency=1 Reg=%vreg10
   val SU(0): Latency=1 Reg=%vreg8
   ch  SU(1): Latency=0
  Successors:
   ch  SU(4294967295) *: Latency=0

SU(0):   %vreg8<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg8
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 6
  Successors:
   val SU(3): Latency=1 Reg=%vreg8
   val SU(1): Latency=1 Reg=%vreg8

SU(1):   %vreg9<def> = LW %vreg8, 0; mem:LD4[%i] GR32Bit:%vreg9,%vreg8
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 5
  Predecessors:
   val SU(0): Latency=1 Reg=%vreg8
  Successors:
   val SU(2): Latency=4 Reg=%vreg9
   ch  SU(3): Latency=0

SU(2):   %vreg10<def> = ADDI %vreg9, 1; GR32Bit:%vreg10,%vreg9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
   val SU(1): Latency=4 Reg=%vreg9
  Successors:
   val SU(3): Latency=1 Reg=%vreg10

SU(3):   SW %vreg10, %vreg8, 0; mem:ST4[%i] GR32Bit:%vreg10,%vreg8
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
   val SU(2): Latency=1 Reg=%vreg10
   val SU(0): Latency=1 Reg=%vreg8
   ch  SU(1): Latency=0
  Successors:
   ch  SU(4294967295) *: Latency=0

Pick node SU(0)  ILP: 1 / 1 = 1 Tree: 0 @0
Scheduling %vreg8<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg8
Pick node SU(1)  ILP: 2 / 2 = 1 Tree: 0 @0
Scheduling %vreg9<def> = LW %vreg8, 0; mem:LD4[%i] GR32Bit:%vreg9,%vreg8
Pick node SU(2)  ILP: 3 / 6 = 0.5 Tree: 0 @0
Scheduling %vreg10<def> = ADDI %vreg9, 1; GR32Bit:%vreg10,%vreg9
Pick node SU(3)  ILP: 4 / 7 = 0.571429 Tree: 0 @0
Scheduling SW %vreg10, %vreg8, 0; mem:ST4[%i] GR32Bit:%vreg10,%vreg8
*** Final schedule for BB#8 ***
SU(0):   %vreg8<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg8
SU(1):   %vreg9<def> = LW %vreg8, 0; mem:LD4[%i] GR32Bit:%vreg9,%vreg8
SU(2):   %vreg10<def> = ADDI %vreg9, 1; GR32Bit:%vreg10,%vreg9
SU(3):   SW %vreg10, %vreg8, 0; mem:ST4[%i] GR32Bit:%vreg10,%vreg8

Partitioning instructions of the region into multiple CEs

*** Renumbered SlotIndexes 4920-4976 ***

*** Renumbered SlotIndexes 4932-4988 ***

*** Renumbered SlotIndexes 4952-5000 ***

*** Renumbered SlotIndexes 4964-5012 ***

*** Renumbered SlotIndexes 4984-5024 ***

*** Renumbered SlotIndexes 4996-5036 ***

*** Renumbered SlotIndexes 5008-5048 ***

*** Renumbered SlotIndexes 5020-5060 ***

*** Renumbered SlotIndexes 5032-5072 ***

*** Renumbered SlotIndexes 5052-5084 ***

*** Renumbered SlotIndexes 5064-5096 ***

*** Renumbered SlotIndexes 5076-5108 ***

*** Renumbered SlotIndexes 5088-5120 ***

*** Renumbered SlotIndexes 5100-5132 ***

*** Renumbered SlotIndexes 5112-5144 ***

*** Renumbered SlotIndexes 5124-5156 ***

*** Renumbered SlotIndexes 5136-5168 ***

*** Renumbered SlotIndexes 5148-5180 ***

*** Renumbered SlotIndexes 5160-5192 ***

*** Renumbered SlotIndexes 5172-5204 ***

*** Renumbered SlotIndexes 5184-5216 ***

*** Renumbered SlotIndexes 5196-5228 ***

*** Renumbered SlotIndexes 5208-5240 ***

*** Renumbered SlotIndexes 5220-5252 ***

*** Renumbered SlotIndexes 5232-5264 ***

*** Renumbered SlotIndexes 5244-5276 ***

*** Renumbered SlotIndexes 5256-5288 ***

*** Renumbered SlotIndexes 5268-5300 ***

*** Renumbered SlotIndexes 5280-5312 ***

*** Renumbered SlotIndexes 5292-5324 ***

*** Renumbered SlotIndexes 5304-5336 ***

*** Renumbered SlotIndexes 5316-5348 ***

*** Renumbered SlotIndexes 5328-5360 ***
Dumping all live-out registers to memory

*** Renumbered SlotIndexes 5348-5372 ***

*** Renumbered SlotIndexes 5360-5384 ***

*** Renumbered SlotIndexes 5372-5396 ***

*** Renumbered SlotIndexes 5384-5408 ***

*** Renumbered SlotIndexes 5396-5420 ***
Shuffling instructions within the region such that successive instructions belong to the same pHyperOp to ease bundle creation
state of basic block BB#8BB#8: derived from LLVM BB %for.inc15
    Predecessors according to CFG: BB#3
	%vreg8<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg8
	%vreg148<def> = LUI 1; GR32Bit:%vreg148
	WRITEPM %vreg148<internal>, %vreg8<internal>, 0; GR32Bit:%vreg148,%vreg8
	%vreg154<def> = LUI 3; GR32Bit:%vreg154
	WRITEPM %vreg154<internal>, %vreg8<internal>, 4; GR32Bit:%vreg154,%vreg8
	%vreg158<def> = LUI 2; GR32Bit:%vreg158
	WRITEPM %vreg158<internal>, %vreg158<internal>, -68; GR32Bit:%vreg158
	%vreg158<def> = LUI 3; GR32Bit:%vreg158
	WRITEPM %vreg158<internal>, %vreg158<internal>, -68; GR32Bit:%vreg158
	%vreg158<def> = LUI 4; GR32Bit:%vreg158
	WRITEPM %vreg158<internal>, %vreg158<internal>, -68; GR32Bit:%vreg158
	%vreg159<def> = LUI 2; GR32Bit:%vreg159
	READPM %vreg159<kill>, %vreg159<internal>, -68; GR32Bit:%vreg159
	%vreg160<def> = LUI 3; GR32Bit:%vreg160
	READPM %vreg160<kill>, %vreg160<internal>, -68; GR32Bit:%vreg160
	%vreg161<def> = LUI 4; GR32Bit:%vreg161
	READPM %vreg161<kill>, %vreg161<internal>, -68; GR32Bit:%vreg161
	JAL <BB#1>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg149<def> = LUI 1; GR32Bit:%vreg149
	READPM %vreg8<kill>, %vreg149<internal>, 0; GR32Bit:%vreg8,%vreg149
	%vreg9<def> = LW %vreg8, 0; mem:LD4[%i] GR32Bit:%vreg9,%vreg8
	%vreg150<def> = LUI 2; GR32Bit:%vreg150
	WRITEPM %vreg150<internal>, %vreg9<internal>, 0; GR32Bit:%vreg150,%vreg9
	%vreg155<def> = LUI 3; GR32Bit:%vreg155
	WRITEPM %vreg155<internal>, %vreg156<internal>, 8; GR32Bit:%vreg155,%vreg156
	%vreg158<def> = LUI 1; GR32Bit:%vreg158
	READPM %vreg158<kill>, %vreg158<internal>, -84; GR32Bit:%vreg158
	%vreg159<def> = LUI 1; GR32Bit:%vreg159
	WRITEPM %vreg159<internal>, %vreg159<internal>, -84; GR32Bit:%vreg159
	%vreg159<def> = LUI 3; GR32Bit:%vreg159
	WRITEPM %vreg159<internal>, %vreg159<internal>, -84; GR32Bit:%vreg159
	%vreg159<def> = LUI 4; GR32Bit:%vreg159
	WRITEPM %vreg159<internal>, %vreg159<internal>, -84; GR32Bit:%vreg159
	%vreg160<def> = LUI 3; GR32Bit:%vreg160
	READPM %vreg160<kill>, %vreg160<internal>, -84; GR32Bit:%vreg160
	%vreg161<def> = LUI 4; GR32Bit:%vreg161
	READPM %vreg161<kill>, %vreg161<internal>, -84; GR32Bit:%vreg161
	JAL <BB#1>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg151<def> = LUI 2; GR32Bit:%vreg151
	READPM %vreg9<kill>, %vreg151<internal>, 0; GR32Bit:%vreg9,%vreg151
	%vreg10<def> = ADDI %vreg9, 1; GR32Bit:%vreg10,%vreg9
	%vreg152<def> = LUI 3; GR32Bit:%vreg152
	WRITEPM %vreg152<internal>, %vreg10<internal>, 0; GR32Bit:%vreg152,%vreg10
	%vreg158<def> = LUI 1; GR32Bit:%vreg158
	READPM %vreg158<kill>, %vreg158<internal>, -100; GR32Bit:%vreg158
	%vreg159<def> = LUI 2; GR32Bit:%vreg159
	READPM %vreg159<kill>, %vreg159<internal>, -100; GR32Bit:%vreg159
	%vreg160<def> = LUI 1; GR32Bit:%vreg160
	WRITEPM %vreg160<internal>, %vreg160<internal>, -100; GR32Bit:%vreg160
	%vreg160<def> = LUI 2; GR32Bit:%vreg160
	WRITEPM %vreg160<internal>, %vreg160<internal>, -100; GR32Bit:%vreg160
	%vreg160<def> = LUI 4; GR32Bit:%vreg160
	WRITEPM %vreg160<internal>, %vreg160<internal>, -100; GR32Bit:%vreg160
	%vreg161<def> = LUI 4; GR32Bit:%vreg161
	READPM %vreg161<kill>, %vreg161<internal>, -100; GR32Bit:%vreg161
	JAL <BB#1>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg153<def> = LUI 3; GR32Bit:%vreg153
	READPM %vreg10<kill>, %vreg153<internal>, 0; GR32Bit:%vreg10,%vreg153
	READPM %vreg8<kill>, %vreg153<internal>, 4; GR32Bit:%vreg8,%vreg153
	READPM %vreg157<kill>, %vreg153<internal>, 8; GR32Bit:%vreg157,%vreg153
	SW %vreg10, %vreg8, 0; mem:ST4[%i] GR32Bit:%vreg10,%vreg8
	%vreg158<def> = LUI 1; GR32Bit:%vreg158
	READPM %vreg158<kill>, %vreg158<internal>, -116; GR32Bit:%vreg158
	%vreg159<def> = LUI 2; GR32Bit:%vreg159
	READPM %vreg159<kill>, %vreg159<internal>, -116; GR32Bit:%vreg159
	%vreg160<def> = LUI 3; GR32Bit:%vreg160
	READPM %vreg160<kill>, %vreg160<internal>, -116; GR32Bit:%vreg160
	%vreg161<def> = LUI 1; GR32Bit:%vreg161
	WRITEPM %vreg161<internal>, %vreg161<internal>, -116; GR32Bit:%vreg161
	%vreg161<def> = LUI 2; GR32Bit:%vreg161
	WRITEPM %vreg161<internal>, %vreg161<internal>, -116; GR32Bit:%vreg161
	%vreg161<def> = LUI 3; GR32Bit:%vreg161
	WRITEPM %vreg161<internal>, %vreg161<internal>, -116; GR32Bit:%vreg161
	JAL <BB#1>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#1
BB before region shuffle:BB#8: derived from LLVM BB %for.inc15
    Predecessors according to CFG: BB#3
	%vreg8<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg8
	%vreg148<def> = LUI 1; GR32Bit:%vreg148
	WRITEPM %vreg148<internal>, %vreg8<internal>, 0; GR32Bit:%vreg148,%vreg8
	%vreg154<def> = LUI 3; GR32Bit:%vreg154
	WRITEPM %vreg154<internal>, %vreg8<internal>, 4; GR32Bit:%vreg154,%vreg8
	%vreg158<def> = LUI 2; GR32Bit:%vreg158
	WRITEPM %vreg158<internal>, %vreg158<internal>, -68; GR32Bit:%vreg158
	%vreg158<def> = LUI 3; GR32Bit:%vreg158
	WRITEPM %vreg158<internal>, %vreg158<internal>, -68; GR32Bit:%vreg158
	%vreg158<def> = LUI 4; GR32Bit:%vreg158
	WRITEPM %vreg158<internal>, %vreg158<internal>, -68; GR32Bit:%vreg158
	%vreg159<def> = LUI 2; GR32Bit:%vreg159
	READPM %vreg159<kill>, %vreg159<internal>, -68; GR32Bit:%vreg159
	%vreg160<def> = LUI 3; GR32Bit:%vreg160
	READPM %vreg160<kill>, %vreg160<internal>, -68; GR32Bit:%vreg160
	%vreg161<def> = LUI 4; GR32Bit:%vreg161
	READPM %vreg161<kill>, %vreg161<internal>, -68; GR32Bit:%vreg161
	JAL <BB#1>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg149<def> = LUI 1; GR32Bit:%vreg149
	READPM %vreg8<kill>, %vreg149<internal>, 0; GR32Bit:%vreg8,%vreg149
	%vreg9<def> = LW %vreg8, 0; mem:LD4[%i] GR32Bit:%vreg9,%vreg8
	%vreg150<def> = LUI 2; GR32Bit:%vreg150
	WRITEPM %vreg150<internal>, %vreg9<internal>, 0; GR32Bit:%vreg150,%vreg9
	%vreg155<def> = LUI 3; GR32Bit:%vreg155
	WRITEPM %vreg155<internal>, %vreg156<internal>, 8; GR32Bit:%vreg155,%vreg156
	%vreg158<def> = LUI 1; GR32Bit:%vreg158
	READPM %vreg158<kill>, %vreg158<internal>, -84; GR32Bit:%vreg158
	%vreg159<def> = LUI 1; GR32Bit:%vreg159
	WRITEPM %vreg159<internal>, %vreg159<internal>, -84; GR32Bit:%vreg159
	%vreg159<def> = LUI 3; GR32Bit:%vreg159
	WRITEPM %vreg159<internal>, %vreg159<internal>, -84; GR32Bit:%vreg159
	%vreg159<def> = LUI 4; GR32Bit:%vreg159
	WRITEPM %vreg159<internal>, %vreg159<internal>, -84; GR32Bit:%vreg159
	%vreg160<def> = LUI 3; GR32Bit:%vreg160
	READPM %vreg160<kill>, %vreg160<internal>, -84; GR32Bit:%vreg160
	%vreg161<def> = LUI 4; GR32Bit:%vreg161
	READPM %vreg161<kill>, %vreg161<internal>, -84; GR32Bit:%vreg161
	JAL <BB#1>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg151<def> = LUI 2; GR32Bit:%vreg151
	READPM %vreg9<kill>, %vreg151<internal>, 0; GR32Bit:%vreg9,%vreg151
	%vreg10<def> = ADDI %vreg9, 1; GR32Bit:%vreg10,%vreg9
	%vreg152<def> = LUI 3; GR32Bit:%vreg152
	WRITEPM %vreg152<internal>, %vreg10<internal>, 0; GR32Bit:%vreg152,%vreg10
	%vreg158<def> = LUI 1; GR32Bit:%vreg158
	READPM %vreg158<kill>, %vreg158<internal>, -100; GR32Bit:%vreg158
	%vreg159<def> = LUI 2; GR32Bit:%vreg159
	READPM %vreg159<kill>, %vreg159<internal>, -100; GR32Bit:%vreg159
	%vreg160<def> = LUI 1; GR32Bit:%vreg160
	WRITEPM %vreg160<internal>, %vreg160<internal>, -100; GR32Bit:%vreg160
	%vreg160<def> = LUI 2; GR32Bit:%vreg160
	WRITEPM %vreg160<internal>, %vreg160<internal>, -100; GR32Bit:%vreg160
	%vreg160<def> = LUI 4; GR32Bit:%vreg160
	WRITEPM %vreg160<internal>, %vreg160<internal>, -100; GR32Bit:%vreg160
	%vreg161<def> = LUI 4; GR32Bit:%vreg161
	READPM %vreg161<kill>, %vreg161<internal>, -100; GR32Bit:%vreg161
	JAL <BB#1>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg153<def> = LUI 3; GR32Bit:%vreg153
	READPM %vreg10<kill>, %vreg153<internal>, 0; GR32Bit:%vreg10,%vreg153
	READPM %vreg8<kill>, %vreg153<internal>, 4; GR32Bit:%vreg8,%vreg153
	READPM %vreg157<kill>, %vreg153<internal>, 8; GR32Bit:%vreg157,%vreg153
	SW %vreg10, %vreg8, 0; mem:ST4[%i] GR32Bit:%vreg10,%vreg8
	%vreg158<def> = LUI 1; GR32Bit:%vreg158
	READPM %vreg158<kill>, %vreg158<internal>, -116; GR32Bit:%vreg158
	%vreg159<def> = LUI 2; GR32Bit:%vreg159
	READPM %vreg159<kill>, %vreg159<internal>, -116; GR32Bit:%vreg159
	%vreg160<def> = LUI 3; GR32Bit:%vreg160
	READPM %vreg160<kill>, %vreg160<internal>, -116; GR32Bit:%vreg160
	%vreg161<def> = LUI 1; GR32Bit:%vreg161
	WRITEPM %vreg161<internal>, %vreg161<internal>, -116; GR32Bit:%vreg161
	%vreg161<def> = LUI 2; GR32Bit:%vreg161
	WRITEPM %vreg161<internal>, %vreg161<internal>, -116; GR32Bit:%vreg161
	%vreg161<def> = LUI 3; GR32Bit:%vreg161
	WRITEPM %vreg161<internal>, %vreg161<internal>, -116; GR32Bit:%vreg161
	JAL <BB#1>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#1
After Shuffling basic block, state of BB#8:
BB#8: derived from LLVM BB %for.inc15
    Predecessors according to CFG: BB#3
	%vreg8<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg8
	%vreg148<def> = LUI 1; GR32Bit:%vreg148
	WRITEPM %vreg148<internal>, %vreg8<internal>, 0; GR32Bit:%vreg148,%vreg8
	%vreg154<def> = LUI 3; GR32Bit:%vreg154
	WRITEPM %vreg154<internal>, %vreg8<internal>, 4; GR32Bit:%vreg154,%vreg8
	%vreg158<def> = LUI 2; GR32Bit:%vreg158
	WRITEPM %vreg158<internal>, %vreg158<internal>, -68; GR32Bit:%vreg158
	%vreg158<def> = LUI 3; GR32Bit:%vreg158
	WRITEPM %vreg158<internal>, %vreg158<internal>, -68; GR32Bit:%vreg158
	%vreg158<def> = LUI 4; GR32Bit:%vreg158
	WRITEPM %vreg158<internal>, %vreg158<internal>, -68; GR32Bit:%vreg158
	%vreg159<def> = LUI 2; GR32Bit:%vreg159
	READPM %vreg159<kill>, %vreg159<internal>, -68; GR32Bit:%vreg159
	%vreg160<def> = LUI 3; GR32Bit:%vreg160
	READPM %vreg160<kill>, %vreg160<internal>, -68; GR32Bit:%vreg160
	%vreg161<def> = LUI 4; GR32Bit:%vreg161
	READPM %vreg161<kill>, %vreg161<internal>, -68; GR32Bit:%vreg161
	JAL <BB#1>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg149<def> = LUI 1; GR32Bit:%vreg149
	READPM %vreg8<kill>, %vreg149<internal>, 0; GR32Bit:%vreg8,%vreg149
	%vreg9<def> = LW %vreg8, 0; mem:LD4[%i] GR32Bit:%vreg9,%vreg8
	%vreg150<def> = LUI 2; GR32Bit:%vreg150
	WRITEPM %vreg150<internal>, %vreg9<internal>, 0; GR32Bit:%vreg150,%vreg9
	%vreg155<def> = LUI 3; GR32Bit:%vreg155
	WRITEPM %vreg155<internal>, %vreg156<internal>, 8; GR32Bit:%vreg155,%vreg156
	%vreg158<def> = LUI 1; GR32Bit:%vreg158
	READPM %vreg158<kill>, %vreg158<internal>, -84; GR32Bit:%vreg158
	%vreg159<def> = LUI 1; GR32Bit:%vreg159
	WRITEPM %vreg159<internal>, %vreg159<internal>, -84; GR32Bit:%vreg159
	%vreg159<def> = LUI 3; GR32Bit:%vreg159
	WRITEPM %vreg159<internal>, %vreg159<internal>, -84; GR32Bit:%vreg159
	%vreg159<def> = LUI 4; GR32Bit:%vreg159
	WRITEPM %vreg159<internal>, %vreg159<internal>, -84; GR32Bit:%vreg159
	%vreg160<def> = LUI 3; GR32Bit:%vreg160
	READPM %vreg160<kill>, %vreg160<internal>, -84; GR32Bit:%vreg160
	%vreg161<def> = LUI 4; GR32Bit:%vreg161
	READPM %vreg161<kill>, %vreg161<internal>, -84; GR32Bit:%vreg161
	JAL <BB#1>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg151<def> = LUI 2; GR32Bit:%vreg151
	READPM %vreg9<kill>, %vreg151<internal>, 0; GR32Bit:%vreg9,%vreg151
	%vreg10<def> = ADDI %vreg9, 1; GR32Bit:%vreg10,%vreg9
	%vreg152<def> = LUI 3; GR32Bit:%vreg152
	WRITEPM %vreg152<internal>, %vreg10<internal>, 0; GR32Bit:%vreg152,%vreg10
	%vreg158<def> = LUI 1; GR32Bit:%vreg158
	READPM %vreg158<kill>, %vreg158<internal>, -100; GR32Bit:%vreg158
	%vreg159<def> = LUI 2; GR32Bit:%vreg159
	READPM %vreg159<kill>, %vreg159<internal>, -100; GR32Bit:%vreg159
	%vreg160<def> = LUI 1; GR32Bit:%vreg160
	WRITEPM %vreg160<internal>, %vreg160<internal>, -100; GR32Bit:%vreg160
	%vreg160<def> = LUI 2; GR32Bit:%vreg160
	WRITEPM %vreg160<internal>, %vreg160<internal>, -100; GR32Bit:%vreg160
	%vreg160<def> = LUI 4; GR32Bit:%vreg160
	WRITEPM %vreg160<internal>, %vreg160<internal>, -100; GR32Bit:%vreg160
	%vreg161<def> = LUI 4; GR32Bit:%vreg161
	READPM %vreg161<kill>, %vreg161<internal>, -100; GR32Bit:%vreg161
	JAL <BB#1>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	%vreg153<def> = LUI 3; GR32Bit:%vreg153
	READPM %vreg10<kill>, %vreg153<internal>, 0; GR32Bit:%vreg10,%vreg153
	READPM %vreg8<kill>, %vreg153<internal>, 4; GR32Bit:%vreg8,%vreg153
	READPM %vreg157<kill>, %vreg153<internal>, 8; GR32Bit:%vreg157,%vreg153
	SW %vreg10, %vreg8, 0; mem:ST4[%i] GR32Bit:%vreg10,%vreg8
	%vreg158<def> = LUI 1; GR32Bit:%vreg158
	READPM %vreg158<kill>, %vreg158<internal>, -116; GR32Bit:%vreg158
	%vreg159<def> = LUI 2; GR32Bit:%vreg159
	READPM %vreg159<kill>, %vreg159<internal>, -116; GR32Bit:%vreg159
	%vreg160<def> = LUI 3; GR32Bit:%vreg160
	READPM %vreg160<kill>, %vreg160<internal>, -116; GR32Bit:%vreg160
	%vreg161<def> = LUI 1; GR32Bit:%vreg161
	WRITEPM %vreg161<internal>, %vreg161<internal>, -116; GR32Bit:%vreg161
	%vreg161<def> = LUI 2; GR32Bit:%vreg161
	WRITEPM %vreg161<internal>, %vreg161<internal>, -116; GR32Bit:%vreg161
	%vreg161<def> = LUI 3; GR32Bit:%vreg161
	WRITEPM %vreg161<internal>, %vreg161<internal>, -116; GR32Bit:%vreg161
	JAL <BB#1>
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#1
Creating pHyperOp bundles for CEs
Starting new basic block BB#9
Adding fbind instructions
Adding writecm instructions

*** Renumbered SlotIndexes 5416-5432 ***
Adding endHyperOp instructions to each pHyperOp

*** Renumbered SlotIndexes 5428-5444 ***

*** Renumbered SlotIndexes 5440-5456 ***

*** Renumbered SlotIndexes 5452-5468 ***

*** Renumbered SlotIndexes 5464-5480 ***

*** Renumbered SlotIndexes 5476-5492 ***

*** Renumbered SlotIndexes 5488-5504 ***
BB before region shuffle:BB#9: derived from LLVM BB %for.end17
    Predecessors according to CFG: BB#1
	SRLI %zero<kill>, %zero<internal>, 6
	FDELETE %zero<internal>, 0
	END 0
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	END 0
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	END 0
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	END 0
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
Merging regions of basic block BB#9
merging regions:0 and 1
merging regions:0 and 1
merging regions:0 and 1
merging regions:0 and 1
After Shuffling basic block, state of BB#9:
BB#9: derived from LLVM BB %for.end17
    Predecessors according to CFG: BB#1
	SRLI %zero<kill>, %zero<internal>, 6
	FDELETE %zero<internal>, 0
	END 0
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	END 0
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	END 0
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
	END 0
	ADDI %zero<internal>, %zero<internal>, 0
	ADDI %zero<internal>, %zero<internal>, 0
Creating pHyperOp bundles for CEs
Patching writecm instructions to shuffle physical registers
Replicating HyperOp inputs
********** INTERVALS **********
zero = EMPTY
%vreg0 = [16r,44r:0)  0@16r
%vreg1 = [64r,92r:0)  0@64r
%vreg2 = [92r,524r:0)  0@92r
%vreg3 = [56r,524r:0)  0@56r
%vreg4 = [1080r,1112r:0)  0@1080r
%vreg5 = [1128r,1160r:0)  0@1128r
%vreg6 = [1160r,1584r:0)  0@1160r
%vreg7 = [1124r,1584r:0)  0@1124r
%vreg8 = [4916r,5048r:0)  0@4916r
%vreg9 = [4948r,4980r:0)  0@4948r
%vreg10 = [4980r,5048r:0)  0@4980r
%vreg11 = [2140r,2172r:0)  0@2140r
%vreg12 = [2188r,2220r:0)  0@2188r
%vreg13 = [2220r,2644r:0)  0@2220r
%vreg14 = [2184r,2644r:0)  0@2184r
%vreg15 = [4412r,4544r:0)  0@4412r
%vreg16 = [4444r,4476r:0)  0@4444r
%vreg17 = [4476r,4544r:0)  0@4476r
%vreg18 = [3212r,4040r:0)  0@3212r
%vreg19 = [3272r,3744r:0)  0@3272r
%vreg20 = [3568r,3588r:0)  0@3568r
%vreg21 = [3588r,3628r:0)  0@3588r
%vreg22 = [3216r,3628r:0)  0@3216r
%vreg23 = [3628r,3692r:0)  0@3628r
%vreg24 = [3508r,3560r:0)  0@3508r
%vreg25 = [3516r,3560r:0)  0@3516r
%vreg26 = [3560r,3672r:0)  0@3560r
%vreg27 = [3672r,3764r:0)  0@3672r
%vreg28 = [3744r,3764r:0)  0@3744r
%vreg29 = [3764r,3784r:0)  0@3764r
%vreg30 = [3784r,3884r:0)  0@3784r
%vreg31 = [3204r,3304r:0)  0@3204r
%vreg32 = [3304r,3400r:0)  0@3304r
%vreg33 = [3348r,3368r:0)  0@3348r
%vreg34 = [3196r,3264r:0)  0@3196r
%vreg35 = [3224r,3264r:0)  0@3224r
%vreg36 = [3264r,3368r:0)  0@3264r
%vreg37 = [3368r,3432r:0)  0@3368r
%vreg38 = [3400r,3724r:0)  0@3400r
%vreg39 = [3432r,3452r:0)  0@3432r
%vreg40 = [3452r,3884r:0)  0@3452r
%vreg41 = [3884r,3956r:0)  0@3884r
%vreg42 = [3460r,3500r:0)  0@3460r
%vreg43 = [3468r,3500r:0)  0@3468r
%vreg44 = [3500r,3692r:0)  0@3500r
%vreg45 = [3692r,3724r:0)  0@3692r
%vreg46 = [3724r,3956r:0)  0@3724r
%vreg47 = [3964r,3984r:0)  0@3964r
%vreg48 = [3984r,4040r:0)  0@3984r
%vreg49 = EMPTY
%vreg50 = EMPTY
%vreg51 = EMPTY
%vreg52 = EMPTY
%vreg53 = EMPTY
%vreg54 = EMPTY
%vreg55 = EMPTY
%vreg56 = EMPTY
%vreg57 = EMPTY
%vreg58 = EMPTY
%vreg59 = EMPTY
%vreg60 = EMPTY
%vreg61 = EMPTY
%vreg62 = EMPTY
%vreg63 = EMPTY
%vreg64 = EMPTY
%vreg65 = EMPTY
%vreg66 = EMPTY
%vreg67 = EMPTY
%vreg68 = EMPTY
%vreg69 = EMPTY
%vreg70 = EMPTY
%vreg71 = EMPTY
%vreg72 = EMPTY
%vreg73 = EMPTY
%vreg74 = EMPTY
%vreg75 = EMPTY
%vreg76 = EMPTY
%vreg77 = EMPTY
%vreg78 = EMPTY
%vreg79 = EMPTY
%vreg80 = EMPTY
%vreg81 = EMPTY
%vreg82 = EMPTY
%vreg83 = EMPTY
%vreg84 = EMPTY
%vreg85 = EMPTY
%vreg86 = EMPTY
%vreg87 = EMPTY
%vreg88 = EMPTY
%vreg89 = EMPTY
%vreg90 = EMPTY
%vreg91 = EMPTY
%vreg92 = EMPTY
%vreg93 = EMPTY
%vreg94 = EMPTY
%vreg95 = EMPTY
%vreg96 = EMPTY
%vreg97 = EMPTY
%vreg98 = EMPTY
%vreg99 = EMPTY
%vreg100 = EMPTY
%vreg101 = EMPTY
%vreg102 = EMPTY
%vreg103 = EMPTY
%vreg104 = EMPTY
%vreg105 = EMPTY
%vreg106 = EMPTY
%vreg107 = EMPTY
%vreg108 = EMPTY
%vreg109 = EMPTY
%vreg110 = EMPTY
%vreg111 = EMPTY
%vreg112 = EMPTY
%vreg113 = EMPTY
%vreg114 = EMPTY
%vreg115 = EMPTY
%vreg116 = EMPTY
%vreg117 = EMPTY
%vreg118 = EMPTY
%vreg119 = EMPTY
%vreg120 = EMPTY
%vreg121 = EMPTY
%vreg122 = EMPTY
%vreg123 = EMPTY
%vreg124 = EMPTY
%vreg125 = EMPTY
%vreg126 = EMPTY
%vreg127 = EMPTY
%vreg128 = EMPTY
%vreg129 = EMPTY
%vreg130 = EMPTY
%vreg131 = EMPTY
%vreg132 = EMPTY
%vreg133 = EMPTY
%vreg134 = EMPTY
%vreg135 = EMPTY
%vreg136 = EMPTY
%vreg137 = EMPTY
%vreg138 = EMPTY
%vreg139 = EMPTY
%vreg140 = EMPTY
%vreg141 = EMPTY
%vreg142 = EMPTY
%vreg143 = EMPTY
%vreg144 = EMPTY
%vreg145 = EMPTY
%vreg146 = EMPTY
%vreg147 = EMPTY
%vreg148 = EMPTY
%vreg149 = EMPTY
%vreg150 = EMPTY
%vreg151 = EMPTY
%vreg152 = EMPTY
%vreg153 = EMPTY
%vreg154 = EMPTY
%vreg155 = EMPTY
%vreg156 = EMPTY
%vreg157 = EMPTY
%vreg158 = EMPTY
%vreg159 = EMPTY
%vreg160 = EMPTY
%vreg161 = EMPTY
RegMasks:
********** MACHINEINSTRS **********
# Machine code for function main: Post SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]

0B	BB#0: derived from LLVM BB %entry
16B		%vreg0<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg0
16B		  * %vreg49<def> = LUI 1; GR32Bit:%vreg49
16B		  * WRITEPM %vreg49<internal>, %vreg0<internal>, 0; GR32Bit:%vreg49,%vreg0
28B		%vreg50<def> = LUI 1; GR32Bit:%vreg50
28B		  * READPM %vreg0<kill>, %vreg50<internal>, 0; GR32Bit:%vreg0,%vreg50
28B		  * SW %zero, %vreg0, 0; mem:ST4[%i] GR32Bit:%vreg0
	    Successors according to CFG: BB#1

48B	BB#1: derived from LLVM BB %for.cond
	    Predecessors according to CFG: BB#0 BB#8
56B		%vreg3<def> = ADDI %zero, 9; GR32Bit:%vreg3
56B		  * %vreg57<def> = LUI 2; GR32Bit:%vreg57
56B		  * WRITEPM %vreg57<internal>, %vreg57<internal>, -68; GR32Bit:%vreg57
56B		  * %vreg57<def> = LUI 3; GR32Bit:%vreg57
56B		  * WRITEPM %vreg57<internal>, %vreg57<internal>, -68; GR32Bit:%vreg57
56B		  * %vreg57<def> = LUI 4; GR32Bit:%vreg57
56B		  * WRITEPM %vreg57<internal>, %vreg57<internal>, -68; GR32Bit:%vreg57
56B		  * %vreg58<def> = LUI 2; GR32Bit:%vreg58
56B		  * READPM %vreg58<kill>, %vreg58<internal>, -68; GR32Bit:%vreg58
56B		  * %vreg59<def> = LUI 3; GR32Bit:%vreg59
56B		  * READPM %vreg59<kill>, %vreg59<internal>, -68; GR32Bit:%vreg59
56B		  * %vreg60<def> = LUI 4; GR32Bit:%vreg60
56B		  * READPM %vreg60<kill>, %vreg60<internal>, -68; GR32Bit:%vreg60
56B		  * %vreg62<def> = LUI 0; GR32Bit:%vreg62
56B		  * READPM %vreg2<kill>, %vreg62<internal>, 0; GR32Bit:%vreg2,%vreg62
56B		  * %vreg67<def> = LUI 1; GR32Bit:%vreg67
56B		  * WRITEPM %vreg67<internal>, %vreg3<internal>, 4; GR32Bit:%vreg67,%vreg3
56B		  * %vreg68<def> = LUI 2; GR32Bit:%vreg68
56B		  * WRITEPM %vreg68<internal>, %vreg3<internal>, 0; GR32Bit:%vreg68,%vreg3
56B		  * %vreg69<def> = LUI 3; GR32Bit:%vreg69
56B		  * WRITEPM %vreg69<internal>, %vreg3<internal>, 4; GR32Bit:%vreg69,%vreg3
56B		  * BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
56B		  * ADDI %zero<internal>, %zero<internal>, 0
56B		  * ADDI %zero<internal>, %zero<internal>, 0
56B		  * JAL <BB#2>
56B		  * ADDI %zero<internal>, %zero<internal>, 0
56B		  * ADDI %zero<internal>, %zero<internal>, 0
64B		%vreg1<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg1
64B		  * %vreg55<def> = LUI 2; GR32Bit:%vreg55
64B		  * WRITEPM %vreg55<internal>, %vreg1<internal>, 0; GR32Bit:%vreg55,%vreg1
64B		  * %vreg57<def> = LUI 1; GR32Bit:%vreg57
64B		  * READPM %vreg57<kill>, %vreg57<internal>, -84; GR32Bit:%vreg57
64B		  * %vreg58<def> = LUI 1; GR32Bit:%vreg58
64B		  * WRITEPM %vreg58<internal>, %vreg58<internal>, -84; GR32Bit:%vreg58
64B		  * %vreg58<def> = LUI 3; GR32Bit:%vreg58
64B		  * WRITEPM %vreg58<internal>, %vreg58<internal>, -84; GR32Bit:%vreg58
64B		  * %vreg58<def> = LUI 4; GR32Bit:%vreg58
64B		  * WRITEPM %vreg58<internal>, %vreg58<internal>, -84; GR32Bit:%vreg58
64B		  * %vreg59<def> = LUI 3; GR32Bit:%vreg59
64B		  * READPM %vreg59<kill>, %vreg59<internal>, -84; GR32Bit:%vreg59
64B		  * %vreg60<def> = LUI 4; GR32Bit:%vreg60
64B		  * READPM %vreg60<kill>, %vreg60<internal>, -84; GR32Bit:%vreg60
64B		  * %vreg64<def> = LUI 1; GR32Bit:%vreg64
64B		  * READPM %vreg2<kill>, %vreg64<internal>, 0; GR32Bit:%vreg2,%vreg64
64B		  * READPM %vreg3<kill>, %vreg64<internal>, 4; GR32Bit:%vreg3,%vreg64
64B		  * BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
64B		  * ADDI %zero<internal>, %zero<internal>, 0
64B		  * ADDI %zero<internal>, %zero<internal>, 0
64B		  * JAL <BB#2>
64B		  * ADDI %zero<internal>, %zero<internal>, 0
64B		  * ADDI %zero<internal>, %zero<internal>, 0
76B		%vreg56<def> = LUI 2; GR32Bit:%vreg56
76B		  * READPM %vreg1<kill>, %vreg56<internal>, 0; GR32Bit:%vreg1,%vreg56
76B		  * %vreg2<def> = LW %vreg1, 0; mem:LD4[%i] GR32Bit:%vreg2,%vreg1
76B		  * %vreg57<def> = LUI 1; GR32Bit:%vreg57
76B		  * READPM %vreg57<kill>, %vreg57<internal>, -100; GR32Bit:%vreg57
76B		  * %vreg57<def> = LUI 1; GR32Bit:%vreg57
76B		  * READPM %vreg57<kill>, %vreg57<internal>, -116; GR32Bit:%vreg57
76B		  * %vreg58<def> = LUI 2; GR32Bit:%vreg58
76B		  * READPM %vreg58<kill>, %vreg58<internal>, -100; GR32Bit:%vreg58
76B		  * %vreg58<def> = LUI 2; GR32Bit:%vreg58
76B		  * READPM %vreg58<kill>, %vreg58<internal>, -116; GR32Bit:%vreg58
76B		  * %vreg59<def> = LUI 1; GR32Bit:%vreg59
76B		  * WRITEPM %vreg59<internal>, %vreg59<internal>, -100; GR32Bit:%vreg59
76B		  * %vreg59<def> = LUI 2; GR32Bit:%vreg59
76B		  * WRITEPM %vreg59<internal>, %vreg59<internal>, -100; GR32Bit:%vreg59
76B		  * %vreg59<def> = LUI 4; GR32Bit:%vreg59
76B		  * WRITEPM %vreg59<internal>, %vreg59<internal>, -100; GR32Bit:%vreg59
76B		  * %vreg59<def> = LUI 3; GR32Bit:%vreg59
76B		  * READPM %vreg59<kill>, %vreg59<internal>, -116; GR32Bit:%vreg59
76B		  * %vreg60<def> = LUI 1; GR32Bit:%vreg60
76B		  * WRITEPM %vreg60<internal>, %vreg60<internal>, -116; GR32Bit:%vreg60
76B		  * %vreg60<def> = LUI 2; GR32Bit:%vreg60
76B		  * WRITEPM %vreg60<internal>, %vreg60<internal>, -116; GR32Bit:%vreg60
76B		  * %vreg60<def> = LUI 3; GR32Bit:%vreg60
76B		  * WRITEPM %vreg60<internal>, %vreg60<internal>, -116; GR32Bit:%vreg60
76B		  * %vreg60<def> = LUI 4; GR32Bit:%vreg60
76B		  * READPM %vreg60<kill>, %vreg60<internal>, -100; GR32Bit:%vreg60
76B		  * %vreg61<def> = LUI 0; GR32Bit:%vreg61
76B		  * WRITEPM %vreg61<internal>, %vreg2<internal>, 0; GR32Bit:%vreg61,%vreg2
76B		  * %vreg63<def> = LUI 1; GR32Bit:%vreg63
76B		  * WRITEPM %vreg63<internal>, %vreg2<internal>, 0; GR32Bit:%vreg63,%vreg2
76B		  * %vreg65<def> = LUI 3; GR32Bit:%vreg65
76B		  * WRITEPM %vreg65<internal>, %vreg2<internal>, 0; GR32Bit:%vreg65,%vreg2
76B		  * READPM %vreg3<kill>, %vreg56<internal>, 0; GR32Bit:%vreg3,%vreg56
76B		  * BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
76B		  * ADDI %zero<internal>, %zero<internal>, 0
76B		  * ADDI %zero<internal>, %zero<internal>, 0
76B		  * JAL <BB#2>
76B		  * ADDI %zero<internal>, %zero<internal>, 0
76B		  * ADDI %zero<internal>, %zero<internal>, 0
440B		%vreg66<def> = LUI 3; GR32Bit:%vreg66
440B		  * READPM %vreg2<kill>, %vreg66<internal>, 0; GR32Bit:%vreg2,%vreg66
440B		  * READPM %vreg3<kill>, %vreg66<internal>, 4; GR32Bit:%vreg3,%vreg66
440B		  * BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
440B		  * ADDI %zero<internal>, %zero<internal>, 0
440B		  * ADDI %zero<internal>, %zero<internal>, 0
440B		  * %vreg51<def> = LUI 2; GR32Bit:%vreg51
440B		  * WRITEPM %vreg51<internal>, %vreg51<internal>, -68; GR32Bit:%vreg51
440B		  * %vreg51<def> = LUI 3; GR32Bit:%vreg51
440B		  * WRITEPM %vreg51<internal>, %vreg51<internal>, -68; GR32Bit:%vreg51
440B		  * %vreg51<def> = LUI 4; GR32Bit:%vreg51
440B		  * WRITEPM %vreg51<internal>, %vreg51<internal>, -68; GR32Bit:%vreg51
440B		  * %vreg51<def> = LUI 1; GR32Bit:%vreg51
440B		  * READPM %vreg51<kill>, %vreg51<internal>, -84; GR32Bit:%vreg51
440B		  * %vreg51<def> = LUI 1; GR32Bit:%vreg51
440B		  * READPM %vreg51<kill>, %vreg51<internal>, -100; GR32Bit:%vreg51
440B		  * %vreg51<def> = LUI 1; GR32Bit:%vreg51
440B		  * READPM %vreg51<kill>, %vreg51<internal>, -116; GR32Bit:%vreg51
440B		  * %vreg52<def> = LUI 1; GR32Bit:%vreg52
440B		  * WRITEPM %vreg52<internal>, %vreg52<internal>, -84; GR32Bit:%vreg52
440B		  * %vreg52<def> = LUI 3; GR32Bit:%vreg52
440B		  * WRITEPM %vreg52<internal>, %vreg52<internal>, -84; GR32Bit:%vreg52
440B		  * %vreg52<def> = LUI 4; GR32Bit:%vreg52
440B		  * WRITEPM %vreg52<internal>, %vreg52<internal>, -84; GR32Bit:%vreg52
440B		  * %vreg52<def> = LUI 2; GR32Bit:%vreg52
440B		  * READPM %vreg52<kill>, %vreg52<internal>, -68; GR32Bit:%vreg52
440B		  * %vreg52<def> = LUI 2; GR32Bit:%vreg52
440B		  * READPM %vreg52<kill>, %vreg52<internal>, -100; GR32Bit:%vreg52
440B		  * %vreg52<def> = LUI 2; GR32Bit:%vreg52
440B		  * READPM %vreg52<kill>, %vreg52<internal>, -116; GR32Bit:%vreg52
440B		  * %vreg53<def> = LUI 1; GR32Bit:%vreg53
440B		  * WRITEPM %vreg53<internal>, %vreg53<internal>, -100; GR32Bit:%vreg53
440B		  * %vreg53<def> = LUI 2; GR32Bit:%vreg53
440B		  * WRITEPM %vreg53<internal>, %vreg53<internal>, -100; GR32Bit:%vreg53
440B		  * %vreg53<def> = LUI 4; GR32Bit:%vreg53
440B		  * WRITEPM %vreg53<internal>, %vreg53<internal>, -100; GR32Bit:%vreg53
440B		  * %vreg53<def> = LUI 3; GR32Bit:%vreg53
440B		  * READPM %vreg53<kill>, %vreg53<internal>, -68; GR32Bit:%vreg53
440B		  * %vreg53<def> = LUI 3; GR32Bit:%vreg53
440B		  * READPM %vreg53<kill>, %vreg53<internal>, -84; GR32Bit:%vreg53
440B		  * %vreg53<def> = LUI 3; GR32Bit:%vreg53
440B		  * READPM %vreg53<kill>, %vreg53<internal>, -116; GR32Bit:%vreg53
440B		  * %vreg54<def> = LUI 1; GR32Bit:%vreg54
440B		  * WRITEPM %vreg54<internal>, %vreg54<internal>, -116; GR32Bit:%vreg54
440B		  * %vreg54<def> = LUI 2; GR32Bit:%vreg54
440B		  * WRITEPM %vreg54<internal>, %vreg54<internal>, -116; GR32Bit:%vreg54
440B		  * %vreg54<def> = LUI 3; GR32Bit:%vreg54
440B		  * WRITEPM %vreg54<internal>, %vreg54<internal>, -116; GR32Bit:%vreg54
440B		  * %vreg54<def> = LUI 4; GR32Bit:%vreg54
440B		  * READPM %vreg54<kill>, %vreg54<internal>, -68; GR32Bit:%vreg54
440B		  * %vreg54<def> = LUI 4; GR32Bit:%vreg54
440B		  * READPM %vreg54<kill>, %vreg54<internal>, -84; GR32Bit:%vreg54
440B		  * %vreg54<def> = LUI 4; GR32Bit:%vreg54
440B		  * READPM %vreg54<kill>, %vreg54<internal>, -100; GR32Bit:%vreg54
440B		  * JAL <BB#2>
440B		  * ADDI %zero<internal>, %zero<internal>, 0
440B		  * ADDI %zero<internal>, %zero<internal>, 0
	    Successors according to CFG: BB#2(124) BB#9(4)

1072B	BB#2: derived from LLVM BB %for.body
	    Predecessors according to CFG: BB#1
1080B		%vreg4<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg4
1080B		  * %vreg70<def> = LUI 1; GR32Bit:%vreg70
1080B		  * WRITEPM %vreg70<internal>, %vreg4<internal>, 0; GR32Bit:%vreg70,%vreg4
1092B		%vreg71<def> = LUI 1; GR32Bit:%vreg71
1092B		  * READPM %vreg4<kill>, %vreg71<internal>, 0; GR32Bit:%vreg4,%vreg71
1092B		  * SW %zero, %vreg4, 0; mem:ST4[%j] GR32Bit:%vreg4
	    Successors according to CFG: BB#3

1120B	BB#3: derived from LLVM BB %for.cond1
	    Predecessors according to CFG: BB#2 BB#7
1124B		%vreg7<def> = ADDI %zero, 9; GR32Bit:%vreg7
1124B		  * %vreg78<def> = LUI 2; GR32Bit:%vreg78
1124B		  * WRITEPM %vreg78<internal>, %vreg78<internal>, -68; GR32Bit:%vreg78
1124B		  * %vreg78<def> = LUI 3; GR32Bit:%vreg78
1124B		  * WRITEPM %vreg78<internal>, %vreg78<internal>, -68; GR32Bit:%vreg78
1124B		  * %vreg78<def> = LUI 4; GR32Bit:%vreg78
1124B		  * WRITEPM %vreg78<internal>, %vreg78<internal>, -68; GR32Bit:%vreg78
1124B		  * %vreg79<def> = LUI 2; GR32Bit:%vreg79
1124B		  * READPM %vreg79<kill>, %vreg79<internal>, -68; GR32Bit:%vreg79
1124B		  * %vreg80<def> = LUI 3; GR32Bit:%vreg80
1124B		  * READPM %vreg80<kill>, %vreg80<internal>, -68; GR32Bit:%vreg80
1124B		  * %vreg81<def> = LUI 4; GR32Bit:%vreg81
1124B		  * READPM %vreg81<kill>, %vreg81<internal>, -68; GR32Bit:%vreg81
1124B		  * %vreg83<def> = LUI 0; GR32Bit:%vreg83
1124B		  * READPM %vreg6<kill>, %vreg83<internal>, 0; GR32Bit:%vreg6,%vreg83
1124B		  * %vreg88<def> = LUI 1; GR32Bit:%vreg88
1124B		  * WRITEPM %vreg88<internal>, %vreg7<internal>, 4; GR32Bit:%vreg88,%vreg7
1124B		  * %vreg89<def> = LUI 2; GR32Bit:%vreg89
1124B		  * WRITEPM %vreg89<internal>, %vreg7<internal>, 0; GR32Bit:%vreg89,%vreg7
1124B		  * %vreg90<def> = LUI 3; GR32Bit:%vreg90
1124B		  * WRITEPM %vreg90<internal>, %vreg7<internal>, 4; GR32Bit:%vreg90,%vreg7
1124B		  * BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
1124B		  * ADDI %zero<internal>, %zero<internal>, 0
1124B		  * ADDI %zero<internal>, %zero<internal>, 0
1124B		  * JAL <BB#4>
1124B		  * ADDI %zero<internal>, %zero<internal>, 0
1124B		  * ADDI %zero<internal>, %zero<internal>, 0
1128B		%vreg5<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg5
1128B		  * %vreg76<def> = LUI 2; GR32Bit:%vreg76
1128B		  * WRITEPM %vreg76<internal>, %vreg5<internal>, 0; GR32Bit:%vreg76,%vreg5
1128B		  * %vreg78<def> = LUI 1; GR32Bit:%vreg78
1128B		  * READPM %vreg78<kill>, %vreg78<internal>, -84; GR32Bit:%vreg78
1128B		  * %vreg79<def> = LUI 1; GR32Bit:%vreg79
1128B		  * WRITEPM %vreg79<internal>, %vreg79<internal>, -84; GR32Bit:%vreg79
1128B		  * %vreg79<def> = LUI 3; GR32Bit:%vreg79
1128B		  * WRITEPM %vreg79<internal>, %vreg79<internal>, -84; GR32Bit:%vreg79
1128B		  * %vreg79<def> = LUI 4; GR32Bit:%vreg79
1128B		  * WRITEPM %vreg79<internal>, %vreg79<internal>, -84; GR32Bit:%vreg79
1128B		  * %vreg80<def> = LUI 3; GR32Bit:%vreg80
1128B		  * READPM %vreg80<kill>, %vreg80<internal>, -84; GR32Bit:%vreg80
1128B		  * %vreg81<def> = LUI 4; GR32Bit:%vreg81
1128B		  * READPM %vreg81<kill>, %vreg81<internal>, -84; GR32Bit:%vreg81
1128B		  * %vreg85<def> = LUI 1; GR32Bit:%vreg85
1128B		  * READPM %vreg6<kill>, %vreg85<internal>, 0; GR32Bit:%vreg6,%vreg85
1128B		  * READPM %vreg7<kill>, %vreg85<internal>, 4; GR32Bit:%vreg7,%vreg85
1128B		  * BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
1128B		  * ADDI %zero<internal>, %zero<internal>, 0
1128B		  * ADDI %zero<internal>, %zero<internal>, 0
1128B		  * JAL <BB#4>
1128B		  * ADDI %zero<internal>, %zero<internal>, 0
1128B		  * ADDI %zero<internal>, %zero<internal>, 0
1140B		%vreg77<def> = LUI 2; GR32Bit:%vreg77
1140B		  * READPM %vreg5<kill>, %vreg77<internal>, 0; GR32Bit:%vreg5,%vreg77
1140B		  * %vreg6<def> = LW %vreg5, 0; mem:LD4[%j] GR32Bit:%vreg6,%vreg5
1140B		  * %vreg78<def> = LUI 1; GR32Bit:%vreg78
1140B		  * READPM %vreg78<kill>, %vreg78<internal>, -100; GR32Bit:%vreg78
1140B		  * %vreg78<def> = LUI 1; GR32Bit:%vreg78
1140B		  * READPM %vreg78<kill>, %vreg78<internal>, -116; GR32Bit:%vreg78
1140B		  * %vreg79<def> = LUI 2; GR32Bit:%vreg79
1140B		  * READPM %vreg79<kill>, %vreg79<internal>, -100; GR32Bit:%vreg79
1140B		  * %vreg79<def> = LUI 2; GR32Bit:%vreg79
1140B		  * READPM %vreg79<kill>, %vreg79<internal>, -116; GR32Bit:%vreg79
1140B		  * %vreg80<def> = LUI 1; GR32Bit:%vreg80
1140B		  * WRITEPM %vreg80<internal>, %vreg80<internal>, -100; GR32Bit:%vreg80
1140B		  * %vreg80<def> = LUI 2; GR32Bit:%vreg80
1140B		  * WRITEPM %vreg80<internal>, %vreg80<internal>, -100; GR32Bit:%vreg80
1140B		  * %vreg80<def> = LUI 4; GR32Bit:%vreg80
1140B		  * WRITEPM %vreg80<internal>, %vreg80<internal>, -100; GR32Bit:%vreg80
1140B		  * %vreg80<def> = LUI 3; GR32Bit:%vreg80
1140B		  * READPM %vreg80<kill>, %vreg80<internal>, -116; GR32Bit:%vreg80
1140B		  * %vreg81<def> = LUI 1; GR32Bit:%vreg81
1140B		  * WRITEPM %vreg81<internal>, %vreg81<internal>, -116; GR32Bit:%vreg81
1140B		  * %vreg81<def> = LUI 2; GR32Bit:%vreg81
1140B		  * WRITEPM %vreg81<internal>, %vreg81<internal>, -116; GR32Bit:%vreg81
1140B		  * %vreg81<def> = LUI 3; GR32Bit:%vreg81
1140B		  * WRITEPM %vreg81<internal>, %vreg81<internal>, -116; GR32Bit:%vreg81
1140B		  * %vreg81<def> = LUI 4; GR32Bit:%vreg81
1140B		  * READPM %vreg81<kill>, %vreg81<internal>, -100; GR32Bit:%vreg81
1140B		  * %vreg82<def> = LUI 0; GR32Bit:%vreg82
1140B		  * WRITEPM %vreg82<internal>, %vreg6<internal>, 0; GR32Bit:%vreg82,%vreg6
1140B		  * %vreg84<def> = LUI 1; GR32Bit:%vreg84
1140B		  * WRITEPM %vreg84<internal>, %vreg6<internal>, 0; GR32Bit:%vreg84,%vreg6
1140B		  * %vreg86<def> = LUI 3; GR32Bit:%vreg86
1140B		  * WRITEPM %vreg86<internal>, %vreg6<internal>, 0; GR32Bit:%vreg86,%vreg6
1140B		  * READPM %vreg7<kill>, %vreg77<internal>, 0; GR32Bit:%vreg7,%vreg77
1140B		  * BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
1140B		  * ADDI %zero<internal>, %zero<internal>, 0
1140B		  * ADDI %zero<internal>, %zero<internal>, 0
1140B		  * JAL <BB#4>
1140B		  * ADDI %zero<internal>, %zero<internal>, 0
1140B		  * ADDI %zero<internal>, %zero<internal>, 0
1508B		%vreg87<def> = LUI 3; GR32Bit:%vreg87
1508B		  * READPM %vreg6<kill>, %vreg87<internal>, 0; GR32Bit:%vreg6,%vreg87
1508B		  * READPM %vreg7<kill>, %vreg87<internal>, 4; GR32Bit:%vreg7,%vreg87
1508B		  * BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
1508B		  * ADDI %zero<internal>, %zero<internal>, 0
1508B		  * ADDI %zero<internal>, %zero<internal>, 0
1508B		  * %vreg72<def> = LUI 2; GR32Bit:%vreg72
1508B		  * WRITEPM %vreg72<internal>, %vreg72<internal>, -68; GR32Bit:%vreg72
1508B		  * %vreg72<def> = LUI 3; GR32Bit:%vreg72
1508B		  * WRITEPM %vreg72<internal>, %vreg72<internal>, -68; GR32Bit:%vreg72
1508B		  * %vreg72<def> = LUI 4; GR32Bit:%vreg72
1508B		  * WRITEPM %vreg72<internal>, %vreg72<internal>, -68; GR32Bit:%vreg72
1508B		  * %vreg72<def> = LUI 1; GR32Bit:%vreg72
1508B		  * READPM %vreg72<kill>, %vreg72<internal>, -84; GR32Bit:%vreg72
1508B		  * %vreg72<def> = LUI 1; GR32Bit:%vreg72
1508B		  * READPM %vreg72<kill>, %vreg72<internal>, -100; GR32Bit:%vreg72
1508B		  * %vreg72<def> = LUI 1; GR32Bit:%vreg72
1508B		  * READPM %vreg72<kill>, %vreg72<internal>, -116; GR32Bit:%vreg72
1508B		  * %vreg73<def> = LUI 1; GR32Bit:%vreg73
1508B		  * WRITEPM %vreg73<internal>, %vreg73<internal>, -84; GR32Bit:%vreg73
1508B		  * %vreg73<def> = LUI 3; GR32Bit:%vreg73
1508B		  * WRITEPM %vreg73<internal>, %vreg73<internal>, -84; GR32Bit:%vreg73
1508B		  * %vreg73<def> = LUI 4; GR32Bit:%vreg73
1508B		  * WRITEPM %vreg73<internal>, %vreg73<internal>, -84; GR32Bit:%vreg73
1508B		  * %vreg73<def> = LUI 2; GR32Bit:%vreg73
1508B		  * READPM %vreg73<kill>, %vreg73<internal>, -68; GR32Bit:%vreg73
1508B		  * %vreg73<def> = LUI 2; GR32Bit:%vreg73
1508B		  * READPM %vreg73<kill>, %vreg73<internal>, -100; GR32Bit:%vreg73
1508B		  * %vreg73<def> = LUI 2; GR32Bit:%vreg73
1508B		  * READPM %vreg73<kill>, %vreg73<internal>, -116; GR32Bit:%vreg73
1508B		  * %vreg74<def> = LUI 1; GR32Bit:%vreg74
1508B		  * WRITEPM %vreg74<internal>, %vreg74<internal>, -100; GR32Bit:%vreg74
1508B		  * %vreg74<def> = LUI 2; GR32Bit:%vreg74
1508B		  * WRITEPM %vreg74<internal>, %vreg74<internal>, -100; GR32Bit:%vreg74
1508B		  * %vreg74<def> = LUI 4; GR32Bit:%vreg74
1508B		  * WRITEPM %vreg74<internal>, %vreg74<internal>, -100; GR32Bit:%vreg74
1508B		  * %vreg74<def> = LUI 3; GR32Bit:%vreg74
1508B		  * READPM %vreg74<kill>, %vreg74<internal>, -68; GR32Bit:%vreg74
1508B		  * %vreg74<def> = LUI 3; GR32Bit:%vreg74
1508B		  * READPM %vreg74<kill>, %vreg74<internal>, -84; GR32Bit:%vreg74
1508B		  * %vreg74<def> = LUI 3; GR32Bit:%vreg74
1508B		  * READPM %vreg74<kill>, %vreg74<internal>, -116; GR32Bit:%vreg74
1508B		  * %vreg75<def> = LUI 1; GR32Bit:%vreg75
1508B		  * WRITEPM %vreg75<internal>, %vreg75<internal>, -116; GR32Bit:%vreg75
1508B		  * %vreg75<def> = LUI 2; GR32Bit:%vreg75
1508B		  * WRITEPM %vreg75<internal>, %vreg75<internal>, -116; GR32Bit:%vreg75
1508B		  * %vreg75<def> = LUI 3; GR32Bit:%vreg75
1508B		  * WRITEPM %vreg75<internal>, %vreg75<internal>, -116; GR32Bit:%vreg75
1508B		  * %vreg75<def> = LUI 4; GR32Bit:%vreg75
1508B		  * READPM %vreg75<kill>, %vreg75<internal>, -68; GR32Bit:%vreg75
1508B		  * %vreg75<def> = LUI 4; GR32Bit:%vreg75
1508B		  * READPM %vreg75<kill>, %vreg75<internal>, -84; GR32Bit:%vreg75
1508B		  * %vreg75<def> = LUI 4; GR32Bit:%vreg75
1508B		  * READPM %vreg75<kill>, %vreg75<internal>, -100; GR32Bit:%vreg75
1508B		  * JAL <BB#4>
1508B		  * ADDI %zero<internal>, %zero<internal>, 0
1508B		  * ADDI %zero<internal>, %zero<internal>, 0
	    Successors according to CFG: BB#4(124) BB#8(4)

2132B	BB#4: derived from LLVM BB %for.body3
	    Predecessors according to CFG: BB#3
2140B		%vreg11<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg11
2140B		  * %vreg91<def> = LUI 1; GR32Bit:%vreg91
2140B		  * WRITEPM %vreg91<internal>, %vreg11<internal>, 0; GR32Bit:%vreg91,%vreg11
2152B		%vreg92<def> = LUI 1; GR32Bit:%vreg92
2152B		  * READPM %vreg11<kill>, %vreg92<internal>, 0; GR32Bit:%vreg11,%vreg92
2152B		  * SW %zero, %vreg11, 0; mem:ST4[%k] GR32Bit:%vreg11
	    Successors according to CFG: BB#5

2180B	BB#5: derived from LLVM BB %for.cond4
	    Predecessors according to CFG: BB#4 BB#6
2184B		%vreg14<def> = ADDI %zero, 9; GR32Bit:%vreg14
2184B		  * %vreg99<def> = LUI 2; GR32Bit:%vreg99
2184B		  * WRITEPM %vreg99<internal>, %vreg99<internal>, -68; GR32Bit:%vreg99
2184B		  * %vreg99<def> = LUI 3; GR32Bit:%vreg99
2184B		  * WRITEPM %vreg99<internal>, %vreg99<internal>, -68; GR32Bit:%vreg99
2184B		  * %vreg99<def> = LUI 4; GR32Bit:%vreg99
2184B		  * WRITEPM %vreg99<internal>, %vreg99<internal>, -68; GR32Bit:%vreg99
2184B		  * %vreg100<def> = LUI 2; GR32Bit:%vreg100
2184B		  * READPM %vreg100<kill>, %vreg100<internal>, -68; GR32Bit:%vreg100
2184B		  * %vreg101<def> = LUI 3; GR32Bit:%vreg101
2184B		  * READPM %vreg101<kill>, %vreg101<internal>, -68; GR32Bit:%vreg101
2184B		  * %vreg102<def> = LUI 4; GR32Bit:%vreg102
2184B		  * READPM %vreg102<kill>, %vreg102<internal>, -68; GR32Bit:%vreg102
2184B		  * %vreg104<def> = LUI 0; GR32Bit:%vreg104
2184B		  * READPM %vreg13<kill>, %vreg104<internal>, 0; GR32Bit:%vreg13,%vreg104
2184B		  * %vreg109<def> = LUI 1; GR32Bit:%vreg109
2184B		  * WRITEPM %vreg109<internal>, %vreg14<internal>, 4; GR32Bit:%vreg109,%vreg14
2184B		  * %vreg110<def> = LUI 2; GR32Bit:%vreg110
2184B		  * WRITEPM %vreg110<internal>, %vreg14<internal>, 0; GR32Bit:%vreg110,%vreg14
2184B		  * %vreg111<def> = LUI 3; GR32Bit:%vreg111
2184B		  * WRITEPM %vreg111<internal>, %vreg14<internal>, 4; GR32Bit:%vreg111,%vreg14
2184B		  * BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
2184B		  * ADDI %zero<internal>, %zero<internal>, 0
2184B		  * ADDI %zero<internal>, %zero<internal>, 0
2184B		  * JAL <BB#6>
2184B		  * ADDI %zero<internal>, %zero<internal>, 0
2184B		  * ADDI %zero<internal>, %zero<internal>, 0
2188B		%vreg12<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg12
2188B		  * %vreg97<def> = LUI 2; GR32Bit:%vreg97
2188B		  * WRITEPM %vreg97<internal>, %vreg12<internal>, 0; GR32Bit:%vreg97,%vreg12
2188B		  * %vreg99<def> = LUI 1; GR32Bit:%vreg99
2188B		  * READPM %vreg99<kill>, %vreg99<internal>, -84; GR32Bit:%vreg99
2188B		  * %vreg100<def> = LUI 1; GR32Bit:%vreg100
2188B		  * WRITEPM %vreg100<internal>, %vreg100<internal>, -84; GR32Bit:%vreg100
2188B		  * %vreg100<def> = LUI 3; GR32Bit:%vreg100
2188B		  * WRITEPM %vreg100<internal>, %vreg100<internal>, -84; GR32Bit:%vreg100
2188B		  * %vreg100<def> = LUI 4; GR32Bit:%vreg100
2188B		  * WRITEPM %vreg100<internal>, %vreg100<internal>, -84; GR32Bit:%vreg100
2188B		  * %vreg101<def> = LUI 3; GR32Bit:%vreg101
2188B		  * READPM %vreg101<kill>, %vreg101<internal>, -84; GR32Bit:%vreg101
2188B		  * %vreg102<def> = LUI 4; GR32Bit:%vreg102
2188B		  * READPM %vreg102<kill>, %vreg102<internal>, -84; GR32Bit:%vreg102
2188B		  * %vreg106<def> = LUI 1; GR32Bit:%vreg106
2188B		  * READPM %vreg13<kill>, %vreg106<internal>, 0; GR32Bit:%vreg13,%vreg106
2188B		  * READPM %vreg14<kill>, %vreg106<internal>, 4; GR32Bit:%vreg14,%vreg106
2188B		  * BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
2188B		  * ADDI %zero<internal>, %zero<internal>, 0
2188B		  * ADDI %zero<internal>, %zero<internal>, 0
2188B		  * JAL <BB#6>
2188B		  * ADDI %zero<internal>, %zero<internal>, 0
2188B		  * ADDI %zero<internal>, %zero<internal>, 0
2200B		%vreg98<def> = LUI 2; GR32Bit:%vreg98
2200B		  * READPM %vreg12<kill>, %vreg98<internal>, 0; GR32Bit:%vreg12,%vreg98
2200B		  * %vreg13<def> = LW %vreg12, 0; mem:LD4[%k] GR32Bit:%vreg13,%vreg12
2200B		  * %vreg99<def> = LUI 1; GR32Bit:%vreg99
2200B		  * READPM %vreg99<kill>, %vreg99<internal>, -100; GR32Bit:%vreg99
2200B		  * %vreg99<def> = LUI 1; GR32Bit:%vreg99
2200B		  * READPM %vreg99<kill>, %vreg99<internal>, -116; GR32Bit:%vreg99
2200B		  * %vreg100<def> = LUI 2; GR32Bit:%vreg100
2200B		  * READPM %vreg100<kill>, %vreg100<internal>, -100; GR32Bit:%vreg100
2200B		  * %vreg100<def> = LUI 2; GR32Bit:%vreg100
2200B		  * READPM %vreg100<kill>, %vreg100<internal>, -116; GR32Bit:%vreg100
2200B		  * %vreg101<def> = LUI 1; GR32Bit:%vreg101
2200B		  * WRITEPM %vreg101<internal>, %vreg101<internal>, -100; GR32Bit:%vreg101
2200B		  * %vreg101<def> = LUI 2; GR32Bit:%vreg101
2200B		  * WRITEPM %vreg101<internal>, %vreg101<internal>, -100; GR32Bit:%vreg101
2200B		  * %vreg101<def> = LUI 4; GR32Bit:%vreg101
2200B		  * WRITEPM %vreg101<internal>, %vreg101<internal>, -100; GR32Bit:%vreg101
2200B		  * %vreg101<def> = LUI 3; GR32Bit:%vreg101
2200B		  * READPM %vreg101<kill>, %vreg101<internal>, -116; GR32Bit:%vreg101
2200B		  * %vreg102<def> = LUI 1; GR32Bit:%vreg102
2200B		  * WRITEPM %vreg102<internal>, %vreg102<internal>, -116; GR32Bit:%vreg102
2200B		  * %vreg102<def> = LUI 2; GR32Bit:%vreg102
2200B		  * WRITEPM %vreg102<internal>, %vreg102<internal>, -116; GR32Bit:%vreg102
2200B		  * %vreg102<def> = LUI 3; GR32Bit:%vreg102
2200B		  * WRITEPM %vreg102<internal>, %vreg102<internal>, -116; GR32Bit:%vreg102
2200B		  * %vreg102<def> = LUI 4; GR32Bit:%vreg102
2200B		  * READPM %vreg102<kill>, %vreg102<internal>, -100; GR32Bit:%vreg102
2200B		  * %vreg103<def> = LUI 0; GR32Bit:%vreg103
2200B		  * WRITEPM %vreg103<internal>, %vreg13<internal>, 0; GR32Bit:%vreg103,%vreg13
2200B		  * %vreg105<def> = LUI 1; GR32Bit:%vreg105
2200B		  * WRITEPM %vreg105<internal>, %vreg13<internal>, 0; GR32Bit:%vreg105,%vreg13
2200B		  * %vreg107<def> = LUI 3; GR32Bit:%vreg107
2200B		  * WRITEPM %vreg107<internal>, %vreg13<internal>, 0; GR32Bit:%vreg107,%vreg13
2200B		  * READPM %vreg14<kill>, %vreg98<internal>, 0; GR32Bit:%vreg14,%vreg98
2200B		  * BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
2200B		  * ADDI %zero<internal>, %zero<internal>, 0
2200B		  * ADDI %zero<internal>, %zero<internal>, 0
2200B		  * JAL <BB#6>
2200B		  * ADDI %zero<internal>, %zero<internal>, 0
2200B		  * ADDI %zero<internal>, %zero<internal>, 0
2568B		%vreg108<def> = LUI 3; GR32Bit:%vreg108
2568B		  * READPM %vreg13<kill>, %vreg108<internal>, 0; GR32Bit:%vreg13,%vreg108
2568B		  * READPM %vreg14<kill>, %vreg108<internal>, 4; GR32Bit:%vreg14,%vreg108
2568B		  * BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
2568B		  * ADDI %zero<internal>, %zero<internal>, 0
2568B		  * ADDI %zero<internal>, %zero<internal>, 0
2568B		  * %vreg93<def> = LUI 2; GR32Bit:%vreg93
2568B		  * WRITEPM %vreg93<internal>, %vreg93<internal>, -68; GR32Bit:%vreg93
2568B		  * %vreg93<def> = LUI 3; GR32Bit:%vreg93
2568B		  * WRITEPM %vreg93<internal>, %vreg93<internal>, -68; GR32Bit:%vreg93
2568B		  * %vreg93<def> = LUI 4; GR32Bit:%vreg93
2568B		  * WRITEPM %vreg93<internal>, %vreg93<internal>, -68; GR32Bit:%vreg93
2568B		  * %vreg93<def> = LUI 1; GR32Bit:%vreg93
2568B		  * READPM %vreg93<kill>, %vreg93<internal>, -84; GR32Bit:%vreg93
2568B		  * %vreg93<def> = LUI 1; GR32Bit:%vreg93
2568B		  * READPM %vreg93<kill>, %vreg93<internal>, -100; GR32Bit:%vreg93
2568B		  * %vreg93<def> = LUI 1; GR32Bit:%vreg93
2568B		  * READPM %vreg93<kill>, %vreg93<internal>, -116; GR32Bit:%vreg93
2568B		  * %vreg94<def> = LUI 1; GR32Bit:%vreg94
2568B		  * WRITEPM %vreg94<internal>, %vreg94<internal>, -84; GR32Bit:%vreg94
2568B		  * %vreg94<def> = LUI 3; GR32Bit:%vreg94
2568B		  * WRITEPM %vreg94<internal>, %vreg94<internal>, -84; GR32Bit:%vreg94
2568B		  * %vreg94<def> = LUI 4; GR32Bit:%vreg94
2568B		  * WRITEPM %vreg94<internal>, %vreg94<internal>, -84; GR32Bit:%vreg94
2568B		  * %vreg94<def> = LUI 2; GR32Bit:%vreg94
2568B		  * READPM %vreg94<kill>, %vreg94<internal>, -68; GR32Bit:%vreg94
2568B		  * %vreg94<def> = LUI 2; GR32Bit:%vreg94
2568B		  * READPM %vreg94<kill>, %vreg94<internal>, -100; GR32Bit:%vreg94
2568B		  * %vreg94<def> = LUI 2; GR32Bit:%vreg94
2568B		  * READPM %vreg94<kill>, %vreg94<internal>, -116; GR32Bit:%vreg94
2568B		  * %vreg95<def> = LUI 1; GR32Bit:%vreg95
2568B		  * WRITEPM %vreg95<internal>, %vreg95<internal>, -100; GR32Bit:%vreg95
2568B		  * %vreg95<def> = LUI 2; GR32Bit:%vreg95
2568B		  * WRITEPM %vreg95<internal>, %vreg95<internal>, -100; GR32Bit:%vreg95
2568B		  * %vreg95<def> = LUI 4; GR32Bit:%vreg95
2568B		  * WRITEPM %vreg95<internal>, %vreg95<internal>, -100; GR32Bit:%vreg95
2568B		  * %vreg95<def> = LUI 3; GR32Bit:%vreg95
2568B		  * READPM %vreg95<kill>, %vreg95<internal>, -68; GR32Bit:%vreg95
2568B		  * %vreg95<def> = LUI 3; GR32Bit:%vreg95
2568B		  * READPM %vreg95<kill>, %vreg95<internal>, -84; GR32Bit:%vreg95
2568B		  * %vreg95<def> = LUI 3; GR32Bit:%vreg95
2568B		  * READPM %vreg95<kill>, %vreg95<internal>, -116; GR32Bit:%vreg95
2568B		  * %vreg96<def> = LUI 1; GR32Bit:%vreg96
2568B		  * WRITEPM %vreg96<internal>, %vreg96<internal>, -116; GR32Bit:%vreg96
2568B		  * %vreg96<def> = LUI 2; GR32Bit:%vreg96
2568B		  * WRITEPM %vreg96<internal>, %vreg96<internal>, -116; GR32Bit:%vreg96
2568B		  * %vreg96<def> = LUI 3; GR32Bit:%vreg96
2568B		  * WRITEPM %vreg96<internal>, %vreg96<internal>, -116; GR32Bit:%vreg96
2568B		  * %vreg96<def> = LUI 4; GR32Bit:%vreg96
2568B		  * READPM %vreg96<kill>, %vreg96<internal>, -68; GR32Bit:%vreg96
2568B		  * %vreg96<def> = LUI 4; GR32Bit:%vreg96
2568B		  * READPM %vreg96<kill>, %vreg96<internal>, -84; GR32Bit:%vreg96
2568B		  * %vreg96<def> = LUI 4; GR32Bit:%vreg96
2568B		  * READPM %vreg96<kill>, %vreg96<internal>, -100; GR32Bit:%vreg96
2568B		  * JAL <BB#6>
2568B		  * ADDI %zero<internal>, %zero<internal>, 0
2568B		  * ADDI %zero<internal>, %zero<internal>, 0
	    Successors according to CFG: BB#6(124) BB#7(4)

3192B	BB#6: derived from LLVM BB %for.inc
	    Predecessors according to CFG: BB#5
3196B		%vreg34<def> = LUI <ga:@b>[TF=2]; GR32Bit:%vreg34
3196B		  * %vreg35<def> = ADDI %zero, <ga:@b>[TF=3]; GR32Bit:%vreg35
3196B		  * %vreg112<def> = LUI 1; GR32Bit:%vreg112
3196B		  * WRITEPM %vreg112<internal>, %vreg35<internal>, 0; GR32Bit:%vreg112,%vreg35
3196B		  * WRITEPM %vreg112<internal>, %vreg34<internal>, 4; GR32Bit:%vreg112,%vreg34
3196B		  * %vreg117<def> = LUI 0; GR32Bit:%vreg117
3196B		  * READPM %vreg19<kill>, %vreg117<internal>, 0; GR32Bit:%vreg19,%vreg117
3196B		  * READPM %vreg22<kill>, %vreg117<internal>, 4; GR32Bit:%vreg22,%vreg117
3196B		  * %vreg33<def> = MUL %vreg22, %vreg19; GR32Bit:%vreg33,%vreg22,%vreg19
3196B		  * WRITEPM %vreg112<internal>, %vreg33<internal>, 8; GR32Bit:%vreg112,%vreg33
3196B		  * READPM %vreg39<kill>, %vreg117<internal>, 8; GR32Bit:%vreg39,%vreg117
3196B		  * %vreg40<def> = LW %vreg39, 0; mem:LD4[%arrayidx9] GR32Bit:%vreg40,%vreg39
3196B		  * %vreg24<def> = LUI <ga:@a>[TF=2]; GR32Bit:%vreg24
3196B		  * %vreg123<def> = LUI 2; GR32Bit:%vreg123
3196B		  * WRITEPM %vreg123<internal>, %vreg24<internal>, 8; GR32Bit:%vreg123,%vreg24
3196B		  * READPM %vreg20<kill>, %vreg117<internal>, 12; GR32Bit:%vreg20,%vreg117
3196B		  * %vreg21<def> = LW %vreg20, 0; mem:LD4[%i] GR32Bit:%vreg21,%vreg20
3196B		  * WRITEPM %vreg112<internal>, %vreg21<internal>, 12; GR32Bit:%vreg112,%vreg21
3196B		  * READPM %vreg45<kill>, %vreg117<internal>, 16; GR32Bit:%vreg45,%vreg117
3196B		  * READPM %vreg38<kill>, %vreg117<internal>, 20; GR32Bit:%vreg38,%vreg117
3196B		  * %vreg46<def> = ADD %vreg38, %vreg45; GR32Bit:%vreg46,%vreg38,%vreg45
3196B		  * READPM %vreg30<kill>, %vreg117<internal>, 24; GR32Bit:%vreg30,%vreg117
3196B		  * %vreg41<def> = ADD %vreg40, %vreg30; GR32Bit:%vreg41,%vreg40,%vreg30
3196B		  * WRITEPM %vreg112<internal>, %vreg41<internal>, 24; GR32Bit:%vreg112,%vreg41
3196B		  * WRITEPM %vreg112<internal>, %vreg46<internal>, 28; GR32Bit:%vreg112,%vreg46
3196B		  * READPM %vreg48<kill>, %vreg117<internal>, 28; GR32Bit:%vreg48,%vreg117
3196B		  * READPM %vreg18<kill>, %vreg117<internal>, 32; GR32Bit:%vreg18,%vreg117
3196B		  * READPM %vreg127<kill>, %vreg117<internal>, 36; GR32Bit:%vreg127,%vreg117
3196B		  * READPM %vreg129<kill>, %vreg117<internal>, 40; GR32Bit:%vreg129,%vreg117
3196B		  * SW %vreg48, %vreg18, 0; mem:ST4[%k] GR32Bit:%vreg48,%vreg18
3196B		  * %vreg130<def> = LUI 2; GR32Bit:%vreg130
3196B		  * WRITEPM %vreg130<internal>, %vreg130<internal>, -68; GR32Bit:%vreg130
3196B		  * %vreg130<def> = LUI 3; GR32Bit:%vreg130
3196B		  * WRITEPM %vreg130<internal>, %vreg130<internal>, -68; GR32Bit:%vreg130
3196B		  * %vreg130<def> = LUI 4; GR32Bit:%vreg130
3196B		  * WRITEPM %vreg130<internal>, %vreg130<internal>, -68; GR32Bit:%vreg130
3196B		  * %vreg131<def> = LUI 2; GR32Bit:%vreg131
3196B		  * READPM %vreg131<kill>, %vreg131<internal>, -68; GR32Bit:%vreg131
3196B		  * %vreg132<def> = LUI 3; GR32Bit:%vreg132
3196B		  * READPM %vreg132<kill>, %vreg132<internal>, -68; GR32Bit:%vreg132
3196B		  * %vreg133<def> = LUI 4; GR32Bit:%vreg133
3196B		  * READPM %vreg133<kill>, %vreg133<internal>, -68; GR32Bit:%vreg133
3196B		  * JAL <BB#5>
3196B		  * ADDI %zero<internal>, %zero<internal>, 0
3196B		  * ADDI %zero<internal>, %zero<internal>, 0
3204B		%vreg31<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg31
3204B		  * %vreg113<def> = LUI 1; GR32Bit:%vreg113
3204B		  * READPM %vreg35<kill>, %vreg113<internal>, 0; GR32Bit:%vreg35,%vreg113
3204B		  * READPM %vreg34<kill>, %vreg113<internal>, 4; GR32Bit:%vreg34,%vreg113
3204B		  * %vreg36<def> = ADD %vreg35, %vreg34; GR32Bit:%vreg36,%vreg35,%vreg34
3204B		  * %vreg114<def> = LUI 3; GR32Bit:%vreg114
3204B		  * WRITEPM %vreg114<internal>, %vreg31<internal>, 0; GR32Bit:%vreg114,%vreg31
3204B		  * READPM %vreg33<kill>, %vreg113<internal>, 8; GR32Bit:%vreg33,%vreg113
3204B		  * %vreg37<def> = ADD %vreg33, %vreg36; GR32Bit:%vreg37,%vreg33,%vreg36
3204B		  * WRITEPM %vreg114<internal>, %vreg37<internal>, 4; GR32Bit:%vreg114,%vreg37
3204B		  * %vreg42<def> = LUI <ga:@c>[TF=2]; GR32Bit:%vreg42
3204B		  * WRITEPM %vreg114<internal>, %vreg42<internal>, 16; GR32Bit:%vreg114,%vreg42
3204B		  * %vreg25<def> = ADDI %zero, <ga:@a>[TF=3]; GR32Bit:%vreg25
3204B		  * %vreg122<def> = LUI 2; GR32Bit:%vreg122
3204B		  * WRITEPM %vreg122<internal>, %vreg25<internal>, 4; GR32Bit:%vreg122,%vreg25
3204B		  * READPM %vreg21<kill>, %vreg113<internal>, 12; GR32Bit:%vreg21,%vreg113
3204B		  * READPM %vreg22<kill>, %vreg113<internal>, 16; GR32Bit:%vreg22,%vreg113
3204B		  * %vreg23<def> = MUL %vreg22, %vreg21; GR32Bit:%vreg23,%vreg22,%vreg21
3204B		  * WRITEPM %vreg122<internal>, %vreg23<internal>, 12; GR32Bit:%vreg122,%vreg23
3204B		  * WRITEPM %vreg114<internal>, %vreg23<internal>, 20; GR32Bit:%vreg114,%vreg23
3204B		  * READPM %vreg19<kill>, %vreg113<internal>, 20; GR32Bit:%vreg19,%vreg113
3204B		  * %vreg28<def> = SLLI %vreg19, 2; GR32Bit:%vreg28,%vreg19
3204B		  * WRITEPM %vreg122<internal>, %vreg28<internal>, 16; GR32Bit:%vreg122,%vreg28
3204B		  * READPM %vreg41<kill>, %vreg113<internal>, 24; GR32Bit:%vreg41,%vreg113
3204B		  * READPM %vreg46<kill>, %vreg113<internal>, 28; GR32Bit:%vreg46,%vreg113
3204B		  * SW %vreg41, %vreg46, 0; mem:ST4[%arrayidx11] GR32Bit:%vreg41,%vreg46
3204B		  * %vreg130<def> = LUI 1; GR32Bit:%vreg130
3204B		  * READPM %vreg130<kill>, %vreg130<internal>, -84; GR32Bit:%vreg130
3204B		  * %vreg131<def> = LUI 1; GR32Bit:%vreg131
3204B		  * WRITEPM %vreg131<internal>, %vreg131<internal>, -84; GR32Bit:%vreg131
3204B		  * %vreg131<def> = LUI 3; GR32Bit:%vreg131
3204B		  * WRITEPM %vreg131<internal>, %vreg131<internal>, -84; GR32Bit:%vreg131
3204B		  * %vreg131<def> = LUI 4; GR32Bit:%vreg131
3204B		  * WRITEPM %vreg131<internal>, %vreg131<internal>, -84; GR32Bit:%vreg131
3204B		  * %vreg132<def> = LUI 3; GR32Bit:%vreg132
3204B		  * READPM %vreg132<kill>, %vreg132<internal>, -84; GR32Bit:%vreg132
3204B		  * %vreg133<def> = LUI 4; GR32Bit:%vreg133
3204B		  * READPM %vreg133<kill>, %vreg133<internal>, -84; GR32Bit:%vreg133
3204B		  * JAL <BB#5>
3204B		  * ADDI %zero<internal>, %zero<internal>, 0
3204B		  * ADDI %zero<internal>, %zero<internal>, 0
3212B		%vreg18<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg18
3212B		  * %vreg19<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg19,%vreg18
3212B		  * %vreg116<def> = LUI 0; GR32Bit:%vreg116
3212B		  * WRITEPM %vreg116<internal>, %vreg19<internal>, 0; GR32Bit:%vreg116,%vreg19
3212B		  * %vreg120<def> = LUI 2; GR32Bit:%vreg120
3212B		  * READPM %vreg32<kill>, %vreg120<internal>, 0; GR32Bit:%vreg32,%vreg120
3212B		  * %vreg38<def> = SLLI %vreg32, 2; GR32Bit:%vreg38,%vreg32
3212B		  * %vreg121<def> = LUI 3; GR32Bit:%vreg121
3212B		  * WRITEPM %vreg121<internal>, %vreg38<internal>, 8; GR32Bit:%vreg121,%vreg38
3212B		  * %vreg43<def> = ADDI %zero, <ga:@c>[TF=3]; GR32Bit:%vreg43
3212B		  * WRITEPM %vreg121<internal>, %vreg43<internal>, 12; GR32Bit:%vreg121,%vreg43
3212B		  * READPM %vreg25<kill>, %vreg120<internal>, 4; GR32Bit:%vreg25,%vreg120
3212B		  * READPM %vreg24<kill>, %vreg120<internal>, 8; GR32Bit:%vreg24,%vreg120
3212B		  * %vreg26<def> = ADD %vreg25, %vreg24; GR32Bit:%vreg26,%vreg25,%vreg24
3212B		  * READPM %vreg23<kill>, %vreg120<internal>, 12; GR32Bit:%vreg23,%vreg120
3212B		  * %vreg27<def> = ADD %vreg23, %vreg26; GR32Bit:%vreg27,%vreg23,%vreg26
3212B		  * WRITEPM %vreg116<internal>, %vreg38<internal>, 20; GR32Bit:%vreg116,%vreg38
3212B		  * %vreg125<def> = LUI 1; GR32Bit:%vreg125
3212B		  * WRITEPM %vreg125<internal>, %vreg19<internal>, 20; GR32Bit:%vreg125,%vreg19
3212B		  * READPM %vreg28<kill>, %vreg120<internal>, 16; GR32Bit:%vreg28,%vreg120
3212B		  * %vreg29<def> = ADD %vreg28, %vreg27; GR32Bit:%vreg29,%vreg28,%vreg27
3212B		  * WRITEPM %vreg121<internal>, %vreg29<internal>, 24; GR32Bit:%vreg121,%vreg29
3212B		  * %vreg47<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg47,%vreg18
3212B		  * WRITEPM %vreg121<internal>, %vreg47<internal>, 28; GR32Bit:%vreg121,%vreg47
3212B		  * WRITEPM %vreg116<internal>, %vreg18<internal>, 32; GR32Bit:%vreg116,%vreg18
3212B		  * WRITEPM %vreg116<internal>, %vreg126<internal>, 36; GR32Bit:%vreg116,%vreg126
3212B		  * WRITEPM %vreg116<internal>, %vreg128<internal>, 40; GR32Bit:%vreg116,%vreg128
3212B		  * %vreg130<def> = LUI 1; GR32Bit:%vreg130
3212B		  * READPM %vreg130<kill>, %vreg130<internal>, -100; GR32Bit:%vreg130
3212B		  * %vreg131<def> = LUI 2; GR32Bit:%vreg131
3212B		  * READPM %vreg131<kill>, %vreg131<internal>, -100; GR32Bit:%vreg131
3212B		  * %vreg132<def> = LUI 1; GR32Bit:%vreg132
3212B		  * WRITEPM %vreg132<internal>, %vreg132<internal>, -100; GR32Bit:%vreg132
3212B		  * %vreg132<def> = LUI 2; GR32Bit:%vreg132
3212B		  * WRITEPM %vreg132<internal>, %vreg132<internal>, -100; GR32Bit:%vreg132
3212B		  * %vreg132<def> = LUI 4; GR32Bit:%vreg132
3212B		  * WRITEPM %vreg132<internal>, %vreg132<internal>, -100; GR32Bit:%vreg132
3212B		  * %vreg133<def> = LUI 4; GR32Bit:%vreg133
3212B		  * READPM %vreg133<kill>, %vreg133<internal>, -100; GR32Bit:%vreg133
3212B		  * JAL <BB#5>
3212B		  * ADDI %zero<internal>, %zero<internal>, 0
3212B		  * ADDI %zero<internal>, %zero<internal>, 0
3216B		%vreg22<def> = ADDI %zero, 40; GR32Bit:%vreg22
3216B		  * %vreg115<def> = LUI 3; GR32Bit:%vreg115
3216B		  * READPM %vreg31<kill>, %vreg115<internal>, 0; GR32Bit:%vreg31,%vreg115
3216B		  * %vreg32<def> = LW %vreg31, 0; mem:LD4[%j] GR32Bit:%vreg32,%vreg31
3216B		  * %vreg118<def> = LUI 0; GR32Bit:%vreg118
3216B		  * WRITEPM %vreg118<internal>, %vreg22<internal>, 4; GR32Bit:%vreg118,%vreg22
3216B		  * %vreg119<def> = LUI 2; GR32Bit:%vreg119
3216B		  * WRITEPM %vreg119<internal>, %vreg32<internal>, 0; GR32Bit:%vreg119,%vreg32
3216B		  * READPM %vreg37<kill>, %vreg115<internal>, 4; GR32Bit:%vreg37,%vreg115
3216B		  * READPM %vreg38<kill>, %vreg115<internal>, 8; GR32Bit:%vreg38,%vreg115
3216B		  * %vreg39<def> = ADD %vreg38, %vreg37; GR32Bit:%vreg39,%vreg38,%vreg37
3216B		  * WRITEPM %vreg118<internal>, %vreg39<internal>, 8; GR32Bit:%vreg118,%vreg39
3216B		  * READPM %vreg43<kill>, %vreg115<internal>, 12; GR32Bit:%vreg43,%vreg115
3216B		  * READPM %vreg42<kill>, %vreg115<internal>, 16; GR32Bit:%vreg42,%vreg115
3216B		  * %vreg44<def> = ADD %vreg43, %vreg42; GR32Bit:%vreg44,%vreg43,%vreg42
3216B		  * %vreg20<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg20
3216B		  * WRITEPM %vreg118<internal>, %vreg20<internal>, 12; GR32Bit:%vreg118,%vreg20
3216B		  * %vreg124<def> = LUI 1; GR32Bit:%vreg124
3216B		  * WRITEPM %vreg124<internal>, %vreg22<internal>, 16; GR32Bit:%vreg124,%vreg22
3216B		  * READPM %vreg23<kill>, %vreg115<internal>, 20; GR32Bit:%vreg23,%vreg115
3216B		  * %vreg45<def> = ADD %vreg23, %vreg44; GR32Bit:%vreg45,%vreg23,%vreg44
3216B		  * WRITEPM %vreg118<internal>, %vreg45<internal>, 16; GR32Bit:%vreg118,%vreg45
3216B		  * READPM %vreg29<kill>, %vreg115<internal>, 24; GR32Bit:%vreg29,%vreg115
3216B		  * %vreg30<def> = LW %vreg29, 0; mem:LD4[%arrayidx7] GR32Bit:%vreg30,%vreg29
3216B		  * WRITEPM %vreg118<internal>, %vreg30<internal>, 24; GR32Bit:%vreg118,%vreg30
3216B		  * READPM %vreg47<kill>, %vreg115<internal>, 28; GR32Bit:%vreg47,%vreg115
3216B		  * %vreg48<def> = ADDI %vreg47, 1; GR32Bit:%vreg48,%vreg47
3216B		  * WRITEPM %vreg118<internal>, %vreg48<internal>, 28; GR32Bit:%vreg118,%vreg48
3216B		  * %vreg130<def> = LUI 1; GR32Bit:%vreg130
3216B		  * READPM %vreg130<kill>, %vreg130<internal>, -116; GR32Bit:%vreg130
3216B		  * %vreg131<def> = LUI 2; GR32Bit:%vreg131
3216B		  * READPM %vreg131<kill>, %vreg131<internal>, -116; GR32Bit:%vreg131
3216B		  * %vreg132<def> = LUI 3; GR32Bit:%vreg132
3216B		  * READPM %vreg132<kill>, %vreg132<internal>, -116; GR32Bit:%vreg132
3216B		  * %vreg133<def> = LUI 1; GR32Bit:%vreg133
3216B		  * WRITEPM %vreg133<internal>, %vreg133<internal>, -116; GR32Bit:%vreg133
3216B		  * %vreg133<def> = LUI 2; GR32Bit:%vreg133
3216B		  * WRITEPM %vreg133<internal>, %vreg133<internal>, -116; GR32Bit:%vreg133
3216B		  * %vreg133<def> = LUI 3; GR32Bit:%vreg133
3216B		  * WRITEPM %vreg133<internal>, %vreg133<internal>, -116; GR32Bit:%vreg133
3216B		  * JAL <BB#5>
3216B		  * ADDI %zero<internal>, %zero<internal>, 0
3216B		  * ADDI %zero<internal>, %zero<internal>, 0
	    Successors according to CFG: BB#5

4404B	BB#7: derived from LLVM BB %for.inc12
	    Predecessors according to CFG: BB#5
4412B		%vreg15<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg15
4412B		  * %vreg134<def> = LUI 1; GR32Bit:%vreg134
4412B		  * WRITEPM %vreg134<internal>, %vreg15<internal>, 0; GR32Bit:%vreg134,%vreg15
4412B		  * %vreg140<def> = LUI 3; GR32Bit:%vreg140
4412B		  * WRITEPM %vreg140<internal>, %vreg15<internal>, 4; GR32Bit:%vreg140,%vreg15
4412B		  * %vreg144<def> = LUI 2; GR32Bit:%vreg144
4412B		  * WRITEPM %vreg144<internal>, %vreg144<internal>, -68; GR32Bit:%vreg144
4412B		  * %vreg144<def> = LUI 3; GR32Bit:%vreg144
4412B		  * WRITEPM %vreg144<internal>, %vreg144<internal>, -68; GR32Bit:%vreg144
4412B		  * %vreg144<def> = LUI 4; GR32Bit:%vreg144
4412B		  * WRITEPM %vreg144<internal>, %vreg144<internal>, -68; GR32Bit:%vreg144
4412B		  * %vreg145<def> = LUI 2; GR32Bit:%vreg145
4412B		  * READPM %vreg145<kill>, %vreg145<internal>, -68; GR32Bit:%vreg145
4412B		  * %vreg146<def> = LUI 3; GR32Bit:%vreg146
4412B		  * READPM %vreg146<kill>, %vreg146<internal>, -68; GR32Bit:%vreg146
4412B		  * %vreg147<def> = LUI 4; GR32Bit:%vreg147
4412B		  * READPM %vreg147<kill>, %vreg147<internal>, -68; GR32Bit:%vreg147
4412B		  * JAL <BB#3>
4412B		  * ADDI %zero<internal>, %zero<internal>, 0
4412B		  * ADDI %zero<internal>, %zero<internal>, 0
4424B		%vreg135<def> = LUI 1; GR32Bit:%vreg135
4424B		  * READPM %vreg15<kill>, %vreg135<internal>, 0; GR32Bit:%vreg15,%vreg135
4424B		  * %vreg16<def> = LW %vreg15, 0; mem:LD4[%j] GR32Bit:%vreg16,%vreg15
4424B		  * %vreg136<def> = LUI 2; GR32Bit:%vreg136
4424B		  * WRITEPM %vreg136<internal>, %vreg16<internal>, 0; GR32Bit:%vreg136,%vreg16
4424B		  * %vreg141<def> = LUI 3; GR32Bit:%vreg141
4424B		  * WRITEPM %vreg141<internal>, %vreg142<internal>, 8; GR32Bit:%vreg141,%vreg142
4424B		  * %vreg144<def> = LUI 1; GR32Bit:%vreg144
4424B		  * READPM %vreg144<kill>, %vreg144<internal>, -84; GR32Bit:%vreg144
4424B		  * %vreg145<def> = LUI 1; GR32Bit:%vreg145
4424B		  * WRITEPM %vreg145<internal>, %vreg145<internal>, -84; GR32Bit:%vreg145
4424B		  * %vreg145<def> = LUI 3; GR32Bit:%vreg145
4424B		  * WRITEPM %vreg145<internal>, %vreg145<internal>, -84; GR32Bit:%vreg145
4424B		  * %vreg145<def> = LUI 4; GR32Bit:%vreg145
4424B		  * WRITEPM %vreg145<internal>, %vreg145<internal>, -84; GR32Bit:%vreg145
4424B		  * %vreg146<def> = LUI 3; GR32Bit:%vreg146
4424B		  * READPM %vreg146<kill>, %vreg146<internal>, -84; GR32Bit:%vreg146
4424B		  * %vreg147<def> = LUI 4; GR32Bit:%vreg147
4424B		  * READPM %vreg147<kill>, %vreg147<internal>, -84; GR32Bit:%vreg147
4424B		  * JAL <BB#3>
4424B		  * ADDI %zero<internal>, %zero<internal>, 0
4424B		  * ADDI %zero<internal>, %zero<internal>, 0
4456B		%vreg137<def> = LUI 2; GR32Bit:%vreg137
4456B		  * READPM %vreg16<kill>, %vreg137<internal>, 0; GR32Bit:%vreg16,%vreg137
4456B		  * %vreg17<def> = ADDI %vreg16, 1; GR32Bit:%vreg17,%vreg16
4456B		  * %vreg138<def> = LUI 3; GR32Bit:%vreg138
4456B		  * WRITEPM %vreg138<internal>, %vreg17<internal>, 0; GR32Bit:%vreg138,%vreg17
4456B		  * %vreg144<def> = LUI 1; GR32Bit:%vreg144
4456B		  * READPM %vreg144<kill>, %vreg144<internal>, -100; GR32Bit:%vreg144
4456B		  * %vreg145<def> = LUI 2; GR32Bit:%vreg145
4456B		  * READPM %vreg145<kill>, %vreg145<internal>, -100; GR32Bit:%vreg145
4456B		  * %vreg146<def> = LUI 1; GR32Bit:%vreg146
4456B		  * WRITEPM %vreg146<internal>, %vreg146<internal>, -100; GR32Bit:%vreg146
4456B		  * %vreg146<def> = LUI 2; GR32Bit:%vreg146
4456B		  * WRITEPM %vreg146<internal>, %vreg146<internal>, -100; GR32Bit:%vreg146
4456B		  * %vreg146<def> = LUI 4; GR32Bit:%vreg146
4456B		  * WRITEPM %vreg146<internal>, %vreg146<internal>, -100; GR32Bit:%vreg146
4456B		  * %vreg147<def> = LUI 4; GR32Bit:%vreg147
4456B		  * READPM %vreg147<kill>, %vreg147<internal>, -100; GR32Bit:%vreg147
4456B		  * JAL <BB#3>
4456B		  * ADDI %zero<internal>, %zero<internal>, 0
4456B		  * ADDI %zero<internal>, %zero<internal>, 0
4488B		%vreg139<def> = LUI 3; GR32Bit:%vreg139
4488B		  * READPM %vreg17<kill>, %vreg139<internal>, 0; GR32Bit:%vreg17,%vreg139
4488B		  * READPM %vreg15<kill>, %vreg139<internal>, 4; GR32Bit:%vreg15,%vreg139
4488B		  * READPM %vreg143<kill>, %vreg139<internal>, 8; GR32Bit:%vreg143,%vreg139
4488B		  * SW %vreg17, %vreg15, 0; mem:ST4[%j] GR32Bit:%vreg17,%vreg15
4488B		  * %vreg144<def> = LUI 1; GR32Bit:%vreg144
4488B		  * READPM %vreg144<kill>, %vreg144<internal>, -116; GR32Bit:%vreg144
4488B		  * %vreg145<def> = LUI 2; GR32Bit:%vreg145
4488B		  * READPM %vreg145<kill>, %vreg145<internal>, -116; GR32Bit:%vreg145
4488B		  * %vreg146<def> = LUI 3; GR32Bit:%vreg146
4488B		  * READPM %vreg146<kill>, %vreg146<internal>, -116; GR32Bit:%vreg146
4488B		  * %vreg147<def> = LUI 1; GR32Bit:%vreg147
4488B		  * WRITEPM %vreg147<internal>, %vreg147<internal>, -116; GR32Bit:%vreg147
4488B		  * %vreg147<def> = LUI 2; GR32Bit:%vreg147
4488B		  * WRITEPM %vreg147<internal>, %vreg147<internal>, -116; GR32Bit:%vreg147
4488B		  * %vreg147<def> = LUI 3; GR32Bit:%vreg147
4488B		  * WRITEPM %vreg147<internal>, %vreg147<internal>, -116; GR32Bit:%vreg147
4488B		  * JAL <BB#3>
4488B		  * ADDI %zero<internal>, %zero<internal>, 0
4488B		  * ADDI %zero<internal>, %zero<internal>, 0
	    Successors according to CFG: BB#3

4908B	BB#8: derived from LLVM BB %for.inc15
	    Predecessors according to CFG: BB#3
4916B		%vreg8<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg8
4916B		  * %vreg148<def> = LUI 1; GR32Bit:%vreg148
4916B		  * WRITEPM %vreg148<internal>, %vreg8<internal>, 0; GR32Bit:%vreg148,%vreg8
4916B		  * %vreg154<def> = LUI 3; GR32Bit:%vreg154
4916B		  * WRITEPM %vreg154<internal>, %vreg8<internal>, 4; GR32Bit:%vreg154,%vreg8
4916B		  * %vreg158<def> = LUI 2; GR32Bit:%vreg158
4916B		  * WRITEPM %vreg158<internal>, %vreg158<internal>, -68; GR32Bit:%vreg158
4916B		  * %vreg158<def> = LUI 3; GR32Bit:%vreg158
4916B		  * WRITEPM %vreg158<internal>, %vreg158<internal>, -68; GR32Bit:%vreg158
4916B		  * %vreg158<def> = LUI 4; GR32Bit:%vreg158
4916B		  * WRITEPM %vreg158<internal>, %vreg158<internal>, -68; GR32Bit:%vreg158
4916B		  * %vreg159<def> = LUI 2; GR32Bit:%vreg159
4916B		  * READPM %vreg159<kill>, %vreg159<internal>, -68; GR32Bit:%vreg159
4916B		  * %vreg160<def> = LUI 3; GR32Bit:%vreg160
4916B		  * READPM %vreg160<kill>, %vreg160<internal>, -68; GR32Bit:%vreg160
4916B		  * %vreg161<def> = LUI 4; GR32Bit:%vreg161
4916B		  * READPM %vreg161<kill>, %vreg161<internal>, -68; GR32Bit:%vreg161
4916B		  * JAL <BB#1>
4916B		  * ADDI %zero<internal>, %zero<internal>, 0
4916B		  * ADDI %zero<internal>, %zero<internal>, 0
4928B		%vreg149<def> = LUI 1; GR32Bit:%vreg149
4928B		  * READPM %vreg8<kill>, %vreg149<internal>, 0; GR32Bit:%vreg8,%vreg149
4928B		  * %vreg9<def> = LW %vreg8, 0; mem:LD4[%i] GR32Bit:%vreg9,%vreg8
4928B		  * %vreg150<def> = LUI 2; GR32Bit:%vreg150
4928B		  * WRITEPM %vreg150<internal>, %vreg9<internal>, 0; GR32Bit:%vreg150,%vreg9
4928B		  * %vreg155<def> = LUI 3; GR32Bit:%vreg155
4928B		  * WRITEPM %vreg155<internal>, %vreg156<internal>, 8; GR32Bit:%vreg155,%vreg156
4928B		  * %vreg158<def> = LUI 1; GR32Bit:%vreg158
4928B		  * READPM %vreg158<kill>, %vreg158<internal>, -84; GR32Bit:%vreg158
4928B		  * %vreg159<def> = LUI 1; GR32Bit:%vreg159
4928B		  * WRITEPM %vreg159<internal>, %vreg159<internal>, -84; GR32Bit:%vreg159
4928B		  * %vreg159<def> = LUI 3; GR32Bit:%vreg159
4928B		  * WRITEPM %vreg159<internal>, %vreg159<internal>, -84; GR32Bit:%vreg159
4928B		  * %vreg159<def> = LUI 4; GR32Bit:%vreg159
4928B		  * WRITEPM %vreg159<internal>, %vreg159<internal>, -84; GR32Bit:%vreg159
4928B		  * %vreg160<def> = LUI 3; GR32Bit:%vreg160
4928B		  * READPM %vreg160<kill>, %vreg160<internal>, -84; GR32Bit:%vreg160
4928B		  * %vreg161<def> = LUI 4; GR32Bit:%vreg161
4928B		  * READPM %vreg161<kill>, %vreg161<internal>, -84; GR32Bit:%vreg161
4928B		  * JAL <BB#1>
4928B		  * ADDI %zero<internal>, %zero<internal>, 0
4928B		  * ADDI %zero<internal>, %zero<internal>, 0
4960B		%vreg151<def> = LUI 2; GR32Bit:%vreg151
4960B		  * READPM %vreg9<kill>, %vreg151<internal>, 0; GR32Bit:%vreg9,%vreg151
4960B		  * %vreg10<def> = ADDI %vreg9, 1; GR32Bit:%vreg10,%vreg9
4960B		  * %vreg152<def> = LUI 3; GR32Bit:%vreg152
4960B		  * WRITEPM %vreg152<internal>, %vreg10<internal>, 0; GR32Bit:%vreg152,%vreg10
4960B		  * %vreg158<def> = LUI 1; GR32Bit:%vreg158
4960B		  * READPM %vreg158<kill>, %vreg158<internal>, -100; GR32Bit:%vreg158
4960B		  * %vreg159<def> = LUI 2; GR32Bit:%vreg159
4960B		  * READPM %vreg159<kill>, %vreg159<internal>, -100; GR32Bit:%vreg159
4960B		  * %vreg160<def> = LUI 1; GR32Bit:%vreg160
4960B		  * WRITEPM %vreg160<internal>, %vreg160<internal>, -100; GR32Bit:%vreg160
4960B		  * %vreg160<def> = LUI 2; GR32Bit:%vreg160
4960B		  * WRITEPM %vreg160<internal>, %vreg160<internal>, -100; GR32Bit:%vreg160
4960B		  * %vreg160<def> = LUI 4; GR32Bit:%vreg160
4960B		  * WRITEPM %vreg160<internal>, %vreg160<internal>, -100; GR32Bit:%vreg160
4960B		  * %vreg161<def> = LUI 4; GR32Bit:%vreg161
4960B		  * READPM %vreg161<kill>, %vreg161<internal>, -100; GR32Bit:%vreg161
4960B		  * JAL <BB#1>
4960B		  * ADDI %zero<internal>, %zero<internal>, 0
4960B		  * ADDI %zero<internal>, %zero<internal>, 0
4992B		%vreg153<def> = LUI 3; GR32Bit:%vreg153
4992B		  * READPM %vreg10<kill>, %vreg153<internal>, 0; GR32Bit:%vreg10,%vreg153
4992B		  * READPM %vreg8<kill>, %vreg153<internal>, 4; GR32Bit:%vreg8,%vreg153
4992B		  * READPM %vreg157<kill>, %vreg153<internal>, 8; GR32Bit:%vreg157,%vreg153
4992B		  * SW %vreg10, %vreg8, 0; mem:ST4[%i] GR32Bit:%vreg10,%vreg8
4992B		  * %vreg158<def> = LUI 1; GR32Bit:%vreg158
4992B		  * READPM %vreg158<kill>, %vreg158<internal>, -116; GR32Bit:%vreg158
4992B		  * %vreg159<def> = LUI 2; GR32Bit:%vreg159
4992B		  * READPM %vreg159<kill>, %vreg159<internal>, -116; GR32Bit:%vreg159
4992B		  * %vreg160<def> = LUI 3; GR32Bit:%vreg160
4992B		  * READPM %vreg160<kill>, %vreg160<internal>, -116; GR32Bit:%vreg160
4992B		  * %vreg161<def> = LUI 1; GR32Bit:%vreg161
4992B		  * WRITEPM %vreg161<internal>, %vreg161<internal>, -116; GR32Bit:%vreg161
4992B		  * %vreg161<def> = LUI 2; GR32Bit:%vreg161
4992B		  * WRITEPM %vreg161<internal>, %vreg161<internal>, -116; GR32Bit:%vreg161
4992B		  * %vreg161<def> = LUI 3; GR32Bit:%vreg161
4992B		  * WRITEPM %vreg161<internal>, %vreg161<internal>, -116; GR32Bit:%vreg161
4992B		  * JAL <BB#1>
4992B		  * ADDI %zero<internal>, %zero<internal>, 0
4992B		  * ADDI %zero<internal>, %zero<internal>, 0
	    Successors according to CFG: BB#1

5412B	BB#9: derived from LLVM BB %for.end17
	    Predecessors according to CFG: BB#1
5416B		SRLI %zero<kill>, %zero<internal>, 6
5416B		  * FDELETE %zero<internal>, 0
5416B		  * END 0
5416B		  * ADDI %zero<internal>, %zero<internal>, 0
5416B		  * ADDI %zero<internal>, %zero<internal>, 0
5416B		  * END 0
5416B		  * ADDI %zero<internal>, %zero<internal>, 0
5416B		  * ADDI %zero<internal>, %zero<internal>, 0
5416B		  * END 0
5416B		  * ADDI %zero<internal>, %zero<internal>, 0
5416B		  * ADDI %zero<internal>, %zero<internal>, 0
5416B		  * END 0
5416B		  * ADDI %zero<internal>, %zero<internal>, 0
5416B		  * ADDI %zero<internal>, %zero<internal>, 0

# End machine code for function main.

********** COMPUTING LIVE DEBUG VARIABLES: main **********
********** DEBUG VARIABLES **********
********** Compute Spill Weights **********
********** Function: main
********** GREEDY REGISTER ALLOCATION **********
********** Function: main

selectOrSplit GR32Bit:%vreg18 [3212r,4040r:0)  0@3212r
AllocationOrder(GR32Bit) = [ %t0 %t1 %t2 %fp %a0 %a1 %a2 %a3 %a4 %a5 %a6 %a7 %t3 %t4 %t5 %ra %sp %gp %tp %s0 %s1 %s2 %s3 %s4 %s5 %s6 %s7 %s8 %s9 %s10 %s11 ]
assigning %vreg18 to %t0: t0

selectOrSplit GR32Bit:%vreg19 [3272r,3744r:0)  0@3272r
assigning %vreg19 to %t1: t1

selectOrSplit GR32Bit:%vreg3 [56r,524r:0)  0@56r
assigning %vreg3 to %t0: t0

selectOrSplit GR32Bit:%vreg7 [1124r,1584r:0)  0@1124r
assigning %vreg7 to %t0: t0

selectOrSplit GR32Bit:%vreg14 [2184r,2644r:0)  0@2184r
assigning %vreg14 to %t0: t0

selectOrSplit GR32Bit:%vreg2 [92r,524r:0)  0@92r
assigning %vreg2 to %t1: t1

selectOrSplit GR32Bit:%vreg40 [3452r,3884r:0)  0@3452r
assigning %vreg40 to %t2: t2

selectOrSplit GR32Bit:%vreg6 [1160r,1584r:0)  0@1160r
assigning %vreg6 to %t1: t1

selectOrSplit GR32Bit:%vreg13 [2220r,2644r:0)  0@2220r
assigning %vreg13 to %t1: t1

selectOrSplit GR32Bit:%vreg22 [3216r,3628r:0)  0@3216r
assigning %vreg22 to %fp: fp

selectOrSplit GR32Bit:%vreg38 [3400r,3724r:0)  0@3400r
assigning %vreg38 to %a0: a0

selectOrSplit GR32Bit:%vreg46 [3724r,3956r:0)  0@3724r
assigning %vreg46 to %fp: fp

selectOrSplit GR32Bit:%vreg44 [3500r,3692r:0)  0@3500r
assigning %vreg44 to %a1: a1

selectOrSplit GR32Bit:%vreg8 [4916r,5048r:0)  0@4916r
assigning %vreg8 to %t0: t0

selectOrSplit GR32Bit:%vreg15 [4412r,4544r:0)  0@4412r
assigning %vreg15 to %t0: t0

selectOrSplit GR32Bit:%vreg26 [3560r,3672r:0)  0@3560r
assigning %vreg26 to %a2: a2

selectOrSplit GR32Bit:%vreg36 [3264r,3368r:0)  0@3264r
assigning %vreg36 to %t2: t2

selectOrSplit GR32Bit:%vreg30 [3784r,3884r:0)  0@3784r
assigning %vreg30 to %t1: t1

selectOrSplit GR32Bit:%vreg31 [3204r,3304r:0)  0@3204r
assigning %vreg31 to %a0: a0

selectOrSplit GR32Bit:%vreg32 [3304r,3400r:0)  0@3304r
assigning %vreg32 to %a0: a0

selectOrSplit GR32Bit:%vreg27 [3672r,3764r:0)  0@3672r
assigning %vreg27 to %a2: a2

selectOrSplit GR32Bit:%vreg41 [3884r,3956r:0)  0@3884r
assigning %vreg41 to %t1: t1

selectOrSplit GR32Bit:%vreg10 [4980r,5048r:0)  0@4980r
assigning %vreg10 to %t1: t1

selectOrSplit GR32Bit:%vreg17 [4476r,4544r:0)  0@4476r
assigning %vreg17 to %t1: t1

selectOrSplit GR32Bit:%vreg34 [3196r,3264r:0)  0@3196r
assigning %vreg34 to %t1: t1

selectOrSplit GR32Bit:%vreg23 [3628r,3692r:0)  0@3628r
assigning %vreg23 to %fp: fp

selectOrSplit GR32Bit:%vreg37 [3368r,3432r:0)  0@3368r
assigning %vreg37 to %t2: t2

selectOrSplit GR32Bit:%vreg48 [3984r,4040r:0)  0@3984r
assigning %vreg48 to %t1: t1

selectOrSplit GR32Bit:%vreg24 [3508r,3560r:0)  0@3508r
assigning %vreg24 to %a2: a2

selectOrSplit GR32Bit:%vreg25 [3516r,3560r:0)  0@3516r
assigning %vreg25 to %a3: a3

selectOrSplit GR32Bit:%vreg21 [3588r,3628r:0)  0@3588r
assigning %vreg21 to %a3: a3

selectOrSplit GR32Bit:%vreg35 [3224r,3264r:0)  0@3224r
assigning %vreg35 to %t2: t2

selectOrSplit GR32Bit:%vreg42 [3460r,3500r:0)  0@3460r
assigning %vreg42 to %a1: a1

selectOrSplit GR32Bit:%vreg4 [1080r,1112r:0)  0@1080r
assigning %vreg4 to %t0: t0

selectOrSplit GR32Bit:%vreg5 [1128r,1160r:0)  0@1128r
assigning %vreg5 to %t1: t1

selectOrSplit GR32Bit:%vreg9 [4948r,4980r:0)  0@4948r
assigning %vreg9 to %t1: t1

selectOrSplit GR32Bit:%vreg11 [2140r,2172r:0)  0@2140r
assigning %vreg11 to %t0: t0

selectOrSplit GR32Bit:%vreg12 [2188r,2220r:0)  0@2188r
assigning %vreg12 to %t1: t1

selectOrSplit GR32Bit:%vreg16 [4444r,4476r:0)  0@4444r
assigning %vreg16 to %t1: t1

selectOrSplit GR32Bit:%vreg43 [3468r,3500r:0)  0@3468r
assigning %vreg43 to %a2: a2

selectOrSplit GR32Bit:%vreg45 [3692r,3724r:0)  0@3692r
assigning %vreg45 to %fp: fp

selectOrSplit GR32Bit:%vreg0 [16r,44r:0)  0@16r
assigning %vreg0 to %t0: t0

selectOrSplit GR32Bit:%vreg1 [64r,92r:0)  0@64r
assigning %vreg1 to %t1: t1

selectOrSplit GR32Bit:%vreg20 [3568r,3588r:0)  0@3568r
assigning %vreg20 to %a3: a3

selectOrSplit GR32Bit:%vreg28 [3744r,3764r:0)  0@3744r
assigning %vreg28 to %t1: t1

selectOrSplit GR32Bit:%vreg29 [3764r,3784r:0)  0@3764r
assigning %vreg29 to %t1: t1

selectOrSplit GR32Bit:%vreg33 [3348r,3368r:0)  0@3348r
assigning %vreg33 to %a1: a1

selectOrSplit GR32Bit:%vreg39 [3432r,3452r:0)  0@3432r
assigning %vreg39 to %t2: t2

selectOrSplit GR32Bit:%vreg47 [3964r,3984r:0)  0@3964r
assigning %vreg47 to %t1: t1

selectOrSplit GR32Bit:%vreg49 EMPTY
assigning %vreg49 to %t0: t0

selectOrSplit GR32Bit:%vreg50 EMPTY
assigning %vreg50 to %t0: t0

selectOrSplit GR32Bit:%vreg51 EMPTY
assigning %vreg51 to %t0: t0

selectOrSplit GR32Bit:%vreg52 EMPTY
assigning %vreg52 to %t0: t0

selectOrSplit GR32Bit:%vreg53 EMPTY
assigning %vreg53 to %t0: t0

selectOrSplit GR32Bit:%vreg54 EMPTY
assigning %vreg54 to %t0: t0

selectOrSplit GR32Bit:%vreg55 EMPTY
assigning %vreg55 to %t0: t0

selectOrSplit GR32Bit:%vreg56 EMPTY
assigning %vreg56 to %t0: t0

selectOrSplit GR32Bit:%vreg57 EMPTY
assigning %vreg57 to %t0: t0

selectOrSplit GR32Bit:%vreg58 EMPTY
assigning %vreg58 to %t0: t0

selectOrSplit GR32Bit:%vreg59 EMPTY
assigning %vreg59 to %t0: t0

selectOrSplit GR32Bit:%vreg60 EMPTY
assigning %vreg60 to %t0: t0

selectOrSplit GR32Bit:%vreg61 EMPTY
assigning %vreg61 to %t0: t0

selectOrSplit GR32Bit:%vreg62 EMPTY
assigning %vreg62 to %t0: t0

selectOrSplit GR32Bit:%vreg63 EMPTY
assigning %vreg63 to %t0: t0

selectOrSplit GR32Bit:%vreg64 EMPTY
assigning %vreg64 to %t0: t0

selectOrSplit GR32Bit:%vreg65 EMPTY
assigning %vreg65 to %t0: t0

selectOrSplit GR32Bit:%vreg66 EMPTY
assigning %vreg66 to %t0: t0

selectOrSplit GR32Bit:%vreg67 EMPTY
assigning %vreg67 to %t0: t0

selectOrSplit GR32Bit:%vreg68 EMPTY
assigning %vreg68 to %t0: t0

selectOrSplit GR32Bit:%vreg69 EMPTY
assigning %vreg69 to %t0: t0

selectOrSplit GR32Bit:%vreg70 EMPTY
assigning %vreg70 to %t0: t0

selectOrSplit GR32Bit:%vreg71 EMPTY
assigning %vreg71 to %t0: t0

selectOrSplit GR32Bit:%vreg72 EMPTY
assigning %vreg72 to %t0: t0

selectOrSplit GR32Bit:%vreg73 EMPTY
assigning %vreg73 to %t0: t0

selectOrSplit GR32Bit:%vreg74 EMPTY
assigning %vreg74 to %t0: t0

selectOrSplit GR32Bit:%vreg75 EMPTY
assigning %vreg75 to %t0: t0

selectOrSplit GR32Bit:%vreg76 EMPTY
assigning %vreg76 to %t0: t0

selectOrSplit GR32Bit:%vreg77 EMPTY
assigning %vreg77 to %t0: t0

selectOrSplit GR32Bit:%vreg78 EMPTY
assigning %vreg78 to %t0: t0

selectOrSplit GR32Bit:%vreg79 EMPTY
assigning %vreg79 to %t0: t0

selectOrSplit GR32Bit:%vreg80 EMPTY
assigning %vreg80 to %t0: t0

selectOrSplit GR32Bit:%vreg81 EMPTY
assigning %vreg81 to %t0: t0

selectOrSplit GR32Bit:%vreg82 EMPTY
assigning %vreg82 to %t0: t0

selectOrSplit GR32Bit:%vreg83 EMPTY
assigning %vreg83 to %t0: t0

selectOrSplit GR32Bit:%vreg84 EMPTY
assigning %vreg84 to %t0: t0

selectOrSplit GR32Bit:%vreg85 EMPTY
assigning %vreg85 to %t0: t0

selectOrSplit GR32Bit:%vreg86 EMPTY
assigning %vreg86 to %t0: t0

selectOrSplit GR32Bit:%vreg87 EMPTY
assigning %vreg87 to %t0: t0

selectOrSplit GR32Bit:%vreg88 EMPTY
assigning %vreg88 to %t0: t0

selectOrSplit GR32Bit:%vreg89 EMPTY
assigning %vreg89 to %t0: t0

selectOrSplit GR32Bit:%vreg90 EMPTY
assigning %vreg90 to %t0: t0

selectOrSplit GR32Bit:%vreg91 EMPTY
assigning %vreg91 to %t0: t0

selectOrSplit GR32Bit:%vreg92 EMPTY
assigning %vreg92 to %t0: t0

selectOrSplit GR32Bit:%vreg93 EMPTY
assigning %vreg93 to %t0: t0

selectOrSplit GR32Bit:%vreg94 EMPTY
assigning %vreg94 to %t0: t0

selectOrSplit GR32Bit:%vreg95 EMPTY
assigning %vreg95 to %t0: t0

selectOrSplit GR32Bit:%vreg96 EMPTY
assigning %vreg96 to %t0: t0

selectOrSplit GR32Bit:%vreg97 EMPTY
assigning %vreg97 to %t0: t0

selectOrSplit GR32Bit:%vreg98 EMPTY
assigning %vreg98 to %t0: t0

selectOrSplit GR32Bit:%vreg99 EMPTY
assigning %vreg99 to %t0: t0

selectOrSplit GR32Bit:%vreg100 EMPTY
assigning %vreg100 to %t0: t0

selectOrSplit GR32Bit:%vreg101 EMPTY
assigning %vreg101 to %t0: t0

selectOrSplit GR32Bit:%vreg102 EMPTY
assigning %vreg102 to %t0: t0

selectOrSplit GR32Bit:%vreg103 EMPTY
assigning %vreg103 to %t0: t0

selectOrSplit GR32Bit:%vreg104 EMPTY
assigning %vreg104 to %t0: t0

selectOrSplit GR32Bit:%vreg105 EMPTY
assigning %vreg105 to %t0: t0

selectOrSplit GR32Bit:%vreg106 EMPTY
assigning %vreg106 to %t0: t0

selectOrSplit GR32Bit:%vreg107 EMPTY
assigning %vreg107 to %t0: t0

selectOrSplit GR32Bit:%vreg108 EMPTY
assigning %vreg108 to %t0: t0

selectOrSplit GR32Bit:%vreg109 EMPTY
assigning %vreg109 to %t0: t0

selectOrSplit GR32Bit:%vreg110 EMPTY
assigning %vreg110 to %t0: t0

selectOrSplit GR32Bit:%vreg111 EMPTY
assigning %vreg111 to %t0: t0

selectOrSplit GR32Bit:%vreg112 EMPTY
assigning %vreg112 to %t0: t0

selectOrSplit GR32Bit:%vreg113 EMPTY
assigning %vreg113 to %t0: t0

selectOrSplit GR32Bit:%vreg114 EMPTY
assigning %vreg114 to %t0: t0

selectOrSplit GR32Bit:%vreg115 EMPTY
assigning %vreg115 to %t0: t0

selectOrSplit GR32Bit:%vreg116 EMPTY
assigning %vreg116 to %t0: t0

selectOrSplit GR32Bit:%vreg117 EMPTY
assigning %vreg117 to %t0: t0

selectOrSplit GR32Bit:%vreg118 EMPTY
assigning %vreg118 to %t0: t0

selectOrSplit GR32Bit:%vreg119 EMPTY
assigning %vreg119 to %t0: t0

selectOrSplit GR32Bit:%vreg120 EMPTY
assigning %vreg120 to %t0: t0

selectOrSplit GR32Bit:%vreg121 EMPTY
assigning %vreg121 to %t0: t0

selectOrSplit GR32Bit:%vreg122 EMPTY
assigning %vreg122 to %t0: t0

selectOrSplit GR32Bit:%vreg123 EMPTY
assigning %vreg123 to %t0: t0

selectOrSplit GR32Bit:%vreg124 EMPTY
assigning %vreg124 to %t0: t0

selectOrSplit GR32Bit:%vreg125 EMPTY
assigning %vreg125 to %t0: t0

selectOrSplit GR32Bit:%vreg126 EMPTY
assigning %vreg126 to %t0: t0

selectOrSplit GR32Bit:%vreg127 EMPTY
assigning %vreg127 to %t0: t0

selectOrSplit GR32Bit:%vreg128 EMPTY
assigning %vreg128 to %t0: t0

selectOrSplit GR32Bit:%vreg129 EMPTY
assigning %vreg129 to %t0: t0

selectOrSplit GR32Bit:%vreg130 EMPTY
assigning %vreg130 to %t0: t0

selectOrSplit GR32Bit:%vreg131 EMPTY
assigning %vreg131 to %t0: t0

selectOrSplit GR32Bit:%vreg132 EMPTY
assigning %vreg132 to %t0: t0

selectOrSplit GR32Bit:%vreg133 EMPTY
assigning %vreg133 to %t0: t0

selectOrSplit GR32Bit:%vreg134 EMPTY
assigning %vreg134 to %t0: t0

selectOrSplit GR32Bit:%vreg135 EMPTY
assigning %vreg135 to %t0: t0

selectOrSplit GR32Bit:%vreg136 EMPTY
assigning %vreg136 to %t0: t0

selectOrSplit GR32Bit:%vreg137 EMPTY
assigning %vreg137 to %t0: t0

selectOrSplit GR32Bit:%vreg138 EMPTY
assigning %vreg138 to %t0: t0

selectOrSplit GR32Bit:%vreg139 EMPTY
assigning %vreg139 to %t0: t0

selectOrSplit GR32Bit:%vreg140 EMPTY
assigning %vreg140 to %t0: t0

selectOrSplit GR32Bit:%vreg141 EMPTY
assigning %vreg141 to %t0: t0

selectOrSplit GR32Bit:%vreg142 EMPTY
assigning %vreg142 to %t0: t0

selectOrSplit GR32Bit:%vreg143 EMPTY
assigning %vreg143 to %t0: t0

selectOrSplit GR32Bit:%vreg144 EMPTY
assigning %vreg144 to %t0: t0

selectOrSplit GR32Bit:%vreg145 EMPTY
assigning %vreg145 to %t0: t0

selectOrSplit GR32Bit:%vreg146 EMPTY
assigning %vreg146 to %t0: t0

selectOrSplit GR32Bit:%vreg147 EMPTY
assigning %vreg147 to %t0: t0

selectOrSplit GR32Bit:%vreg148 EMPTY
assigning %vreg148 to %t0: t0

selectOrSplit GR32Bit:%vreg149 EMPTY
assigning %vreg149 to %t0: t0

selectOrSplit GR32Bit:%vreg150 EMPTY
assigning %vreg150 to %t0: t0

selectOrSplit GR32Bit:%vreg151 EMPTY
assigning %vreg151 to %t0: t0

selectOrSplit GR32Bit:%vreg152 EMPTY
assigning %vreg152 to %t0: t0

selectOrSplit GR32Bit:%vreg153 EMPTY
assigning %vreg153 to %t0: t0

selectOrSplit GR32Bit:%vreg154 EMPTY
assigning %vreg154 to %t0: t0

selectOrSplit GR32Bit:%vreg155 EMPTY
assigning %vreg155 to %t0: t0

selectOrSplit GR32Bit:%vreg156 EMPTY
assigning %vreg156 to %t0: t0

selectOrSplit GR32Bit:%vreg157 EMPTY
assigning %vreg157 to %t0: t0

selectOrSplit GR32Bit:%vreg158 EMPTY
assigning %vreg158 to %t0: t0

selectOrSplit GR32Bit:%vreg159 EMPTY
assigning %vreg159 to %t0: t0

selectOrSplit GR32Bit:%vreg160 EMPTY
assigning %vreg160 to %t0: t0

selectOrSplit GR32Bit:%vreg161 EMPTY
assigning %vreg161 to %t0: t0
# Machine code for function main: Post SSA
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]

BB#0: derived from LLVM BB %entry
	%vreg0<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg0
	  * %vreg49<def> = LUI 1; GR32Bit:%vreg49
	  * WRITEPM %vreg49<internal>, %vreg0<internal>, 0; GR32Bit:%vreg49,%vreg0
	%vreg50<def> = LUI 1; GR32Bit:%vreg50
	  * READPM %vreg0<kill>, %vreg50<internal>, 0; GR32Bit:%vreg0,%vreg50
	  * SW %zero, %vreg0, 0; mem:ST4[%i] GR32Bit:%vreg0
    Successors according to CFG: BB#1

BB#1: derived from LLVM BB %for.cond
    Predecessors according to CFG: BB#0 BB#8
	%vreg3<def> = ADDI %zero, 9; GR32Bit:%vreg3
	  * %vreg57<def> = LUI 2; GR32Bit:%vreg57
	  * WRITEPM %vreg57<internal>, %vreg57<internal>, -68; GR32Bit:%vreg57
	  * %vreg57<def> = LUI 3; GR32Bit:%vreg57
	  * WRITEPM %vreg57<internal>, %vreg57<internal>, -68; GR32Bit:%vreg57
	  * %vreg57<def> = LUI 4; GR32Bit:%vreg57
	  * WRITEPM %vreg57<internal>, %vreg57<internal>, -68; GR32Bit:%vreg57
	  * %vreg58<def> = LUI 2; GR32Bit:%vreg58
	  * READPM %vreg58<kill>, %vreg58<internal>, -68; GR32Bit:%vreg58
	  * %vreg59<def> = LUI 3; GR32Bit:%vreg59
	  * READPM %vreg59<kill>, %vreg59<internal>, -68; GR32Bit:%vreg59
	  * %vreg60<def> = LUI 4; GR32Bit:%vreg60
	  * READPM %vreg60<kill>, %vreg60<internal>, -68; GR32Bit:%vreg60
	  * %vreg62<def> = LUI 0; GR32Bit:%vreg62
	  * READPM %vreg2<kill>, %vreg62<internal>, 0; GR32Bit:%vreg2,%vreg62
	  * %vreg67<def> = LUI 1; GR32Bit:%vreg67
	  * WRITEPM %vreg67<internal>, %vreg3<internal>, 4; GR32Bit:%vreg67,%vreg3
	  * %vreg68<def> = LUI 2; GR32Bit:%vreg68
	  * WRITEPM %vreg68<internal>, %vreg3<internal>, 0; GR32Bit:%vreg68,%vreg3
	  * %vreg69<def> = LUI 3; GR32Bit:%vreg69
	  * WRITEPM %vreg69<internal>, %vreg3<internal>, 4; GR32Bit:%vreg69,%vreg3
	  * BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * JAL <BB#2>
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	%vreg1<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg1
	  * %vreg55<def> = LUI 2; GR32Bit:%vreg55
	  * WRITEPM %vreg55<internal>, %vreg1<internal>, 0; GR32Bit:%vreg55,%vreg1
	  * %vreg57<def> = LUI 1; GR32Bit:%vreg57
	  * READPM %vreg57<kill>, %vreg57<internal>, -84; GR32Bit:%vreg57
	  * %vreg58<def> = LUI 1; GR32Bit:%vreg58
	  * WRITEPM %vreg58<internal>, %vreg58<internal>, -84; GR32Bit:%vreg58
	  * %vreg58<def> = LUI 3; GR32Bit:%vreg58
	  * WRITEPM %vreg58<internal>, %vreg58<internal>, -84; GR32Bit:%vreg58
	  * %vreg58<def> = LUI 4; GR32Bit:%vreg58
	  * WRITEPM %vreg58<internal>, %vreg58<internal>, -84; GR32Bit:%vreg58
	  * %vreg59<def> = LUI 3; GR32Bit:%vreg59
	  * READPM %vreg59<kill>, %vreg59<internal>, -84; GR32Bit:%vreg59
	  * %vreg60<def> = LUI 4; GR32Bit:%vreg60
	  * READPM %vreg60<kill>, %vreg60<internal>, -84; GR32Bit:%vreg60
	  * %vreg64<def> = LUI 1; GR32Bit:%vreg64
	  * READPM %vreg2<kill>, %vreg64<internal>, 0; GR32Bit:%vreg2,%vreg64
	  * READPM %vreg3<kill>, %vreg64<internal>, 4; GR32Bit:%vreg3,%vreg64
	  * BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * JAL <BB#2>
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	%vreg56<def> = LUI 2; GR32Bit:%vreg56
	  * READPM %vreg1<kill>, %vreg56<internal>, 0; GR32Bit:%vreg1,%vreg56
	  * %vreg2<def> = LW %vreg1, 0; mem:LD4[%i] GR32Bit:%vreg2,%vreg1
	  * %vreg57<def> = LUI 1; GR32Bit:%vreg57
	  * READPM %vreg57<kill>, %vreg57<internal>, -100; GR32Bit:%vreg57
	  * %vreg57<def> = LUI 1; GR32Bit:%vreg57
	  * READPM %vreg57<kill>, %vreg57<internal>, -116; GR32Bit:%vreg57
	  * %vreg58<def> = LUI 2; GR32Bit:%vreg58
	  * READPM %vreg58<kill>, %vreg58<internal>, -100; GR32Bit:%vreg58
	  * %vreg58<def> = LUI 2; GR32Bit:%vreg58
	  * READPM %vreg58<kill>, %vreg58<internal>, -116; GR32Bit:%vreg58
	  * %vreg59<def> = LUI 1; GR32Bit:%vreg59
	  * WRITEPM %vreg59<internal>, %vreg59<internal>, -100; GR32Bit:%vreg59
	  * %vreg59<def> = LUI 2; GR32Bit:%vreg59
	  * WRITEPM %vreg59<internal>, %vreg59<internal>, -100; GR32Bit:%vreg59
	  * %vreg59<def> = LUI 4; GR32Bit:%vreg59
	  * WRITEPM %vreg59<internal>, %vreg59<internal>, -100; GR32Bit:%vreg59
	  * %vreg59<def> = LUI 3; GR32Bit:%vreg59
	  * READPM %vreg59<kill>, %vreg59<internal>, -116; GR32Bit:%vreg59
	  * %vreg60<def> = LUI 1; GR32Bit:%vreg60
	  * WRITEPM %vreg60<internal>, %vreg60<internal>, -116; GR32Bit:%vreg60
	  * %vreg60<def> = LUI 2; GR32Bit:%vreg60
	  * WRITEPM %vreg60<internal>, %vreg60<internal>, -116; GR32Bit:%vreg60
	  * %vreg60<def> = LUI 3; GR32Bit:%vreg60
	  * WRITEPM %vreg60<internal>, %vreg60<internal>, -116; GR32Bit:%vreg60
	  * %vreg60<def> = LUI 4; GR32Bit:%vreg60
	  * READPM %vreg60<kill>, %vreg60<internal>, -100; GR32Bit:%vreg60
	  * %vreg61<def> = LUI 0; GR32Bit:%vreg61
	  * WRITEPM %vreg61<internal>, %vreg2<internal>, 0; GR32Bit:%vreg61,%vreg2
	  * %vreg63<def> = LUI 1; GR32Bit:%vreg63
	  * WRITEPM %vreg63<internal>, %vreg2<internal>, 0; GR32Bit:%vreg63,%vreg2
	  * %vreg65<def> = LUI 3; GR32Bit:%vreg65
	  * WRITEPM %vreg65<internal>, %vreg2<internal>, 0; GR32Bit:%vreg65,%vreg2
	  * READPM %vreg3<kill>, %vreg56<internal>, 0; GR32Bit:%vreg3,%vreg56
	  * BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * JAL <BB#2>
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	%vreg66<def> = LUI 3; GR32Bit:%vreg66
	  * READPM %vreg2<kill>, %vreg66<internal>, 0; GR32Bit:%vreg2,%vreg66
	  * READPM %vreg3<kill>, %vreg66<internal>, 4; GR32Bit:%vreg3,%vreg66
	  * BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * %vreg51<def> = LUI 2; GR32Bit:%vreg51
	  * WRITEPM %vreg51<internal>, %vreg51<internal>, -68; GR32Bit:%vreg51
	  * %vreg51<def> = LUI 3; GR32Bit:%vreg51
	  * WRITEPM %vreg51<internal>, %vreg51<internal>, -68; GR32Bit:%vreg51
	  * %vreg51<def> = LUI 4; GR32Bit:%vreg51
	  * WRITEPM %vreg51<internal>, %vreg51<internal>, -68; GR32Bit:%vreg51
	  * %vreg51<def> = LUI 1; GR32Bit:%vreg51
	  * READPM %vreg51<kill>, %vreg51<internal>, -84; GR32Bit:%vreg51
	  * %vreg51<def> = LUI 1; GR32Bit:%vreg51
	  * READPM %vreg51<kill>, %vreg51<internal>, -100; GR32Bit:%vreg51
	  * %vreg51<def> = LUI 1; GR32Bit:%vreg51
	  * READPM %vreg51<kill>, %vreg51<internal>, -116; GR32Bit:%vreg51
	  * %vreg52<def> = LUI 1; GR32Bit:%vreg52
	  * WRITEPM %vreg52<internal>, %vreg52<internal>, -84; GR32Bit:%vreg52
	  * %vreg52<def> = LUI 3; GR32Bit:%vreg52
	  * WRITEPM %vreg52<internal>, %vreg52<internal>, -84; GR32Bit:%vreg52
	  * %vreg52<def> = LUI 4; GR32Bit:%vreg52
	  * WRITEPM %vreg52<internal>, %vreg52<internal>, -84; GR32Bit:%vreg52
	  * %vreg52<def> = LUI 2; GR32Bit:%vreg52
	  * READPM %vreg52<kill>, %vreg52<internal>, -68; GR32Bit:%vreg52
	  * %vreg52<def> = LUI 2; GR32Bit:%vreg52
	  * READPM %vreg52<kill>, %vreg52<internal>, -100; GR32Bit:%vreg52
	  * %vreg52<def> = LUI 2; GR32Bit:%vreg52
	  * READPM %vreg52<kill>, %vreg52<internal>, -116; GR32Bit:%vreg52
	  * %vreg53<def> = LUI 1; GR32Bit:%vreg53
	  * WRITEPM %vreg53<internal>, %vreg53<internal>, -100; GR32Bit:%vreg53
	  * %vreg53<def> = LUI 2; GR32Bit:%vreg53
	  * WRITEPM %vreg53<internal>, %vreg53<internal>, -100; GR32Bit:%vreg53
	  * %vreg53<def> = LUI 4; GR32Bit:%vreg53
	  * WRITEPM %vreg53<internal>, %vreg53<internal>, -100; GR32Bit:%vreg53
	  * %vreg53<def> = LUI 3; GR32Bit:%vreg53
	  * READPM %vreg53<kill>, %vreg53<internal>, -68; GR32Bit:%vreg53
	  * %vreg53<def> = LUI 3; GR32Bit:%vreg53
	  * READPM %vreg53<kill>, %vreg53<internal>, -84; GR32Bit:%vreg53
	  * %vreg53<def> = LUI 3; GR32Bit:%vreg53
	  * READPM %vreg53<kill>, %vreg53<internal>, -116; GR32Bit:%vreg53
	  * %vreg54<def> = LUI 1; GR32Bit:%vreg54
	  * WRITEPM %vreg54<internal>, %vreg54<internal>, -116; GR32Bit:%vreg54
	  * %vreg54<def> = LUI 2; GR32Bit:%vreg54
	  * WRITEPM %vreg54<internal>, %vreg54<internal>, -116; GR32Bit:%vreg54
	  * %vreg54<def> = LUI 3; GR32Bit:%vreg54
	  * WRITEPM %vreg54<internal>, %vreg54<internal>, -116; GR32Bit:%vreg54
	  * %vreg54<def> = LUI 4; GR32Bit:%vreg54
	  * READPM %vreg54<kill>, %vreg54<internal>, -68; GR32Bit:%vreg54
	  * %vreg54<def> = LUI 4; GR32Bit:%vreg54
	  * READPM %vreg54<kill>, %vreg54<internal>, -84; GR32Bit:%vreg54
	  * %vreg54<def> = LUI 4; GR32Bit:%vreg54
	  * READPM %vreg54<kill>, %vreg54<internal>, -100; GR32Bit:%vreg54
	  * JAL <BB#2>
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#2(124) BB#9(4)

BB#2: derived from LLVM BB %for.body
    Predecessors according to CFG: BB#1
	%vreg4<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg4
	  * %vreg70<def> = LUI 1; GR32Bit:%vreg70
	  * WRITEPM %vreg70<internal>, %vreg4<internal>, 0; GR32Bit:%vreg70,%vreg4
	%vreg71<def> = LUI 1; GR32Bit:%vreg71
	  * READPM %vreg4<kill>, %vreg71<internal>, 0; GR32Bit:%vreg4,%vreg71
	  * SW %zero, %vreg4, 0; mem:ST4[%j] GR32Bit:%vreg4
    Successors according to CFG: BB#3

BB#3: derived from LLVM BB %for.cond1
    Predecessors according to CFG: BB#2 BB#7
	%vreg7<def> = ADDI %zero, 9; GR32Bit:%vreg7
	  * %vreg78<def> = LUI 2; GR32Bit:%vreg78
	  * WRITEPM %vreg78<internal>, %vreg78<internal>, -68; GR32Bit:%vreg78
	  * %vreg78<def> = LUI 3; GR32Bit:%vreg78
	  * WRITEPM %vreg78<internal>, %vreg78<internal>, -68; GR32Bit:%vreg78
	  * %vreg78<def> = LUI 4; GR32Bit:%vreg78
	  * WRITEPM %vreg78<internal>, %vreg78<internal>, -68; GR32Bit:%vreg78
	  * %vreg79<def> = LUI 2; GR32Bit:%vreg79
	  * READPM %vreg79<kill>, %vreg79<internal>, -68; GR32Bit:%vreg79
	  * %vreg80<def> = LUI 3; GR32Bit:%vreg80
	  * READPM %vreg80<kill>, %vreg80<internal>, -68; GR32Bit:%vreg80
	  * %vreg81<def> = LUI 4; GR32Bit:%vreg81
	  * READPM %vreg81<kill>, %vreg81<internal>, -68; GR32Bit:%vreg81
	  * %vreg83<def> = LUI 0; GR32Bit:%vreg83
	  * READPM %vreg6<kill>, %vreg83<internal>, 0; GR32Bit:%vreg6,%vreg83
	  * %vreg88<def> = LUI 1; GR32Bit:%vreg88
	  * WRITEPM %vreg88<internal>, %vreg7<internal>, 4; GR32Bit:%vreg88,%vreg7
	  * %vreg89<def> = LUI 2; GR32Bit:%vreg89
	  * WRITEPM %vreg89<internal>, %vreg7<internal>, 0; GR32Bit:%vreg89,%vreg7
	  * %vreg90<def> = LUI 3; GR32Bit:%vreg90
	  * WRITEPM %vreg90<internal>, %vreg7<internal>, 4; GR32Bit:%vreg90,%vreg7
	  * BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * JAL <BB#4>
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	%vreg5<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg5
	  * %vreg76<def> = LUI 2; GR32Bit:%vreg76
	  * WRITEPM %vreg76<internal>, %vreg5<internal>, 0; GR32Bit:%vreg76,%vreg5
	  * %vreg78<def> = LUI 1; GR32Bit:%vreg78
	  * READPM %vreg78<kill>, %vreg78<internal>, -84; GR32Bit:%vreg78
	  * %vreg79<def> = LUI 1; GR32Bit:%vreg79
	  * WRITEPM %vreg79<internal>, %vreg79<internal>, -84; GR32Bit:%vreg79
	  * %vreg79<def> = LUI 3; GR32Bit:%vreg79
	  * WRITEPM %vreg79<internal>, %vreg79<internal>, -84; GR32Bit:%vreg79
	  * %vreg79<def> = LUI 4; GR32Bit:%vreg79
	  * WRITEPM %vreg79<internal>, %vreg79<internal>, -84; GR32Bit:%vreg79
	  * %vreg80<def> = LUI 3; GR32Bit:%vreg80
	  * READPM %vreg80<kill>, %vreg80<internal>, -84; GR32Bit:%vreg80
	  * %vreg81<def> = LUI 4; GR32Bit:%vreg81
	  * READPM %vreg81<kill>, %vreg81<internal>, -84; GR32Bit:%vreg81
	  * %vreg85<def> = LUI 1; GR32Bit:%vreg85
	  * READPM %vreg6<kill>, %vreg85<internal>, 0; GR32Bit:%vreg6,%vreg85
	  * READPM %vreg7<kill>, %vreg85<internal>, 4; GR32Bit:%vreg7,%vreg85
	  * BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * JAL <BB#4>
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	%vreg77<def> = LUI 2; GR32Bit:%vreg77
	  * READPM %vreg5<kill>, %vreg77<internal>, 0; GR32Bit:%vreg5,%vreg77
	  * %vreg6<def> = LW %vreg5, 0; mem:LD4[%j] GR32Bit:%vreg6,%vreg5
	  * %vreg78<def> = LUI 1; GR32Bit:%vreg78
	  * READPM %vreg78<kill>, %vreg78<internal>, -100; GR32Bit:%vreg78
	  * %vreg78<def> = LUI 1; GR32Bit:%vreg78
	  * READPM %vreg78<kill>, %vreg78<internal>, -116; GR32Bit:%vreg78
	  * %vreg79<def> = LUI 2; GR32Bit:%vreg79
	  * READPM %vreg79<kill>, %vreg79<internal>, -100; GR32Bit:%vreg79
	  * %vreg79<def> = LUI 2; GR32Bit:%vreg79
	  * READPM %vreg79<kill>, %vreg79<internal>, -116; GR32Bit:%vreg79
	  * %vreg80<def> = LUI 1; GR32Bit:%vreg80
	  * WRITEPM %vreg80<internal>, %vreg80<internal>, -100; GR32Bit:%vreg80
	  * %vreg80<def> = LUI 2; GR32Bit:%vreg80
	  * WRITEPM %vreg80<internal>, %vreg80<internal>, -100; GR32Bit:%vreg80
	  * %vreg80<def> = LUI 4; GR32Bit:%vreg80
	  * WRITEPM %vreg80<internal>, %vreg80<internal>, -100; GR32Bit:%vreg80
	  * %vreg80<def> = LUI 3; GR32Bit:%vreg80
	  * READPM %vreg80<kill>, %vreg80<internal>, -116; GR32Bit:%vreg80
	  * %vreg81<def> = LUI 1; GR32Bit:%vreg81
	  * WRITEPM %vreg81<internal>, %vreg81<internal>, -116; GR32Bit:%vreg81
	  * %vreg81<def> = LUI 2; GR32Bit:%vreg81
	  * WRITEPM %vreg81<internal>, %vreg81<internal>, -116; GR32Bit:%vreg81
	  * %vreg81<def> = LUI 3; GR32Bit:%vreg81
	  * WRITEPM %vreg81<internal>, %vreg81<internal>, -116; GR32Bit:%vreg81
	  * %vreg81<def> = LUI 4; GR32Bit:%vreg81
	  * READPM %vreg81<kill>, %vreg81<internal>, -100; GR32Bit:%vreg81
	  * %vreg82<def> = LUI 0; GR32Bit:%vreg82
	  * WRITEPM %vreg82<internal>, %vreg6<internal>, 0; GR32Bit:%vreg82,%vreg6
	  * %vreg84<def> = LUI 1; GR32Bit:%vreg84
	  * WRITEPM %vreg84<internal>, %vreg6<internal>, 0; GR32Bit:%vreg84,%vreg6
	  * %vreg86<def> = LUI 3; GR32Bit:%vreg86
	  * WRITEPM %vreg86<internal>, %vreg6<internal>, 0; GR32Bit:%vreg86,%vreg6
	  * READPM %vreg7<kill>, %vreg77<internal>, 0; GR32Bit:%vreg7,%vreg77
	  * BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * JAL <BB#4>
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	%vreg87<def> = LUI 3; GR32Bit:%vreg87
	  * READPM %vreg6<kill>, %vreg87<internal>, 0; GR32Bit:%vreg6,%vreg87
	  * READPM %vreg7<kill>, %vreg87<internal>, 4; GR32Bit:%vreg7,%vreg87
	  * BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * %vreg72<def> = LUI 2; GR32Bit:%vreg72
	  * WRITEPM %vreg72<internal>, %vreg72<internal>, -68; GR32Bit:%vreg72
	  * %vreg72<def> = LUI 3; GR32Bit:%vreg72
	  * WRITEPM %vreg72<internal>, %vreg72<internal>, -68; GR32Bit:%vreg72
	  * %vreg72<def> = LUI 4; GR32Bit:%vreg72
	  * WRITEPM %vreg72<internal>, %vreg72<internal>, -68; GR32Bit:%vreg72
	  * %vreg72<def> = LUI 1; GR32Bit:%vreg72
	  * READPM %vreg72<kill>, %vreg72<internal>, -84; GR32Bit:%vreg72
	  * %vreg72<def> = LUI 1; GR32Bit:%vreg72
	  * READPM %vreg72<kill>, %vreg72<internal>, -100; GR32Bit:%vreg72
	  * %vreg72<def> = LUI 1; GR32Bit:%vreg72
	  * READPM %vreg72<kill>, %vreg72<internal>, -116; GR32Bit:%vreg72
	  * %vreg73<def> = LUI 1; GR32Bit:%vreg73
	  * WRITEPM %vreg73<internal>, %vreg73<internal>, -84; GR32Bit:%vreg73
	  * %vreg73<def> = LUI 3; GR32Bit:%vreg73
	  * WRITEPM %vreg73<internal>, %vreg73<internal>, -84; GR32Bit:%vreg73
	  * %vreg73<def> = LUI 4; GR32Bit:%vreg73
	  * WRITEPM %vreg73<internal>, %vreg73<internal>, -84; GR32Bit:%vreg73
	  * %vreg73<def> = LUI 2; GR32Bit:%vreg73
	  * READPM %vreg73<kill>, %vreg73<internal>, -68; GR32Bit:%vreg73
	  * %vreg73<def> = LUI 2; GR32Bit:%vreg73
	  * READPM %vreg73<kill>, %vreg73<internal>, -100; GR32Bit:%vreg73
	  * %vreg73<def> = LUI 2; GR32Bit:%vreg73
	  * READPM %vreg73<kill>, %vreg73<internal>, -116; GR32Bit:%vreg73
	  * %vreg74<def> = LUI 1; GR32Bit:%vreg74
	  * WRITEPM %vreg74<internal>, %vreg74<internal>, -100; GR32Bit:%vreg74
	  * %vreg74<def> = LUI 2; GR32Bit:%vreg74
	  * WRITEPM %vreg74<internal>, %vreg74<internal>, -100; GR32Bit:%vreg74
	  * %vreg74<def> = LUI 4; GR32Bit:%vreg74
	  * WRITEPM %vreg74<internal>, %vreg74<internal>, -100; GR32Bit:%vreg74
	  * %vreg74<def> = LUI 3; GR32Bit:%vreg74
	  * READPM %vreg74<kill>, %vreg74<internal>, -68; GR32Bit:%vreg74
	  * %vreg74<def> = LUI 3; GR32Bit:%vreg74
	  * READPM %vreg74<kill>, %vreg74<internal>, -84; GR32Bit:%vreg74
	  * %vreg74<def> = LUI 3; GR32Bit:%vreg74
	  * READPM %vreg74<kill>, %vreg74<internal>, -116; GR32Bit:%vreg74
	  * %vreg75<def> = LUI 1; GR32Bit:%vreg75
	  * WRITEPM %vreg75<internal>, %vreg75<internal>, -116; GR32Bit:%vreg75
	  * %vreg75<def> = LUI 2; GR32Bit:%vreg75
	  * WRITEPM %vreg75<internal>, %vreg75<internal>, -116; GR32Bit:%vreg75
	  * %vreg75<def> = LUI 3; GR32Bit:%vreg75
	  * WRITEPM %vreg75<internal>, %vreg75<internal>, -116; GR32Bit:%vreg75
	  * %vreg75<def> = LUI 4; GR32Bit:%vreg75
	  * READPM %vreg75<kill>, %vreg75<internal>, -68; GR32Bit:%vreg75
	  * %vreg75<def> = LUI 4; GR32Bit:%vreg75
	  * READPM %vreg75<kill>, %vreg75<internal>, -84; GR32Bit:%vreg75
	  * %vreg75<def> = LUI 4; GR32Bit:%vreg75
	  * READPM %vreg75<kill>, %vreg75<internal>, -100; GR32Bit:%vreg75
	  * JAL <BB#4>
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#4(124) BB#8(4)

BB#4: derived from LLVM BB %for.body3
    Predecessors according to CFG: BB#3
	%vreg11<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg11
	  * %vreg91<def> = LUI 1; GR32Bit:%vreg91
	  * WRITEPM %vreg91<internal>, %vreg11<internal>, 0; GR32Bit:%vreg91,%vreg11
	%vreg92<def> = LUI 1; GR32Bit:%vreg92
	  * READPM %vreg11<kill>, %vreg92<internal>, 0; GR32Bit:%vreg11,%vreg92
	  * SW %zero, %vreg11, 0; mem:ST4[%k] GR32Bit:%vreg11
    Successors according to CFG: BB#5

BB#5: derived from LLVM BB %for.cond4
    Predecessors according to CFG: BB#4 BB#6
	%vreg14<def> = ADDI %zero, 9; GR32Bit:%vreg14
	  * %vreg99<def> = LUI 2; GR32Bit:%vreg99
	  * WRITEPM %vreg99<internal>, %vreg99<internal>, -68; GR32Bit:%vreg99
	  * %vreg99<def> = LUI 3; GR32Bit:%vreg99
	  * WRITEPM %vreg99<internal>, %vreg99<internal>, -68; GR32Bit:%vreg99
	  * %vreg99<def> = LUI 4; GR32Bit:%vreg99
	  * WRITEPM %vreg99<internal>, %vreg99<internal>, -68; GR32Bit:%vreg99
	  * %vreg100<def> = LUI 2; GR32Bit:%vreg100
	  * READPM %vreg100<kill>, %vreg100<internal>, -68; GR32Bit:%vreg100
	  * %vreg101<def> = LUI 3; GR32Bit:%vreg101
	  * READPM %vreg101<kill>, %vreg101<internal>, -68; GR32Bit:%vreg101
	  * %vreg102<def> = LUI 4; GR32Bit:%vreg102
	  * READPM %vreg102<kill>, %vreg102<internal>, -68; GR32Bit:%vreg102
	  * %vreg104<def> = LUI 0; GR32Bit:%vreg104
	  * READPM %vreg13<kill>, %vreg104<internal>, 0; GR32Bit:%vreg13,%vreg104
	  * %vreg109<def> = LUI 1; GR32Bit:%vreg109
	  * WRITEPM %vreg109<internal>, %vreg14<internal>, 4; GR32Bit:%vreg109,%vreg14
	  * %vreg110<def> = LUI 2; GR32Bit:%vreg110
	  * WRITEPM %vreg110<internal>, %vreg14<internal>, 0; GR32Bit:%vreg110,%vreg14
	  * %vreg111<def> = LUI 3; GR32Bit:%vreg111
	  * WRITEPM %vreg111<internal>, %vreg14<internal>, 4; GR32Bit:%vreg111,%vreg14
	  * BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * JAL <BB#6>
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	%vreg12<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg12
	  * %vreg97<def> = LUI 2; GR32Bit:%vreg97
	  * WRITEPM %vreg97<internal>, %vreg12<internal>, 0; GR32Bit:%vreg97,%vreg12
	  * %vreg99<def> = LUI 1; GR32Bit:%vreg99
	  * READPM %vreg99<kill>, %vreg99<internal>, -84; GR32Bit:%vreg99
	  * %vreg100<def> = LUI 1; GR32Bit:%vreg100
	  * WRITEPM %vreg100<internal>, %vreg100<internal>, -84; GR32Bit:%vreg100
	  * %vreg100<def> = LUI 3; GR32Bit:%vreg100
	  * WRITEPM %vreg100<internal>, %vreg100<internal>, -84; GR32Bit:%vreg100
	  * %vreg100<def> = LUI 4; GR32Bit:%vreg100
	  * WRITEPM %vreg100<internal>, %vreg100<internal>, -84; GR32Bit:%vreg100
	  * %vreg101<def> = LUI 3; GR32Bit:%vreg101
	  * READPM %vreg101<kill>, %vreg101<internal>, -84; GR32Bit:%vreg101
	  * %vreg102<def> = LUI 4; GR32Bit:%vreg102
	  * READPM %vreg102<kill>, %vreg102<internal>, -84; GR32Bit:%vreg102
	  * %vreg106<def> = LUI 1; GR32Bit:%vreg106
	  * READPM %vreg13<kill>, %vreg106<internal>, 0; GR32Bit:%vreg13,%vreg106
	  * READPM %vreg14<kill>, %vreg106<internal>, 4; GR32Bit:%vreg14,%vreg106
	  * BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * JAL <BB#6>
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	%vreg98<def> = LUI 2; GR32Bit:%vreg98
	  * READPM %vreg12<kill>, %vreg98<internal>, 0; GR32Bit:%vreg12,%vreg98
	  * %vreg13<def> = LW %vreg12, 0; mem:LD4[%k] GR32Bit:%vreg13,%vreg12
	  * %vreg99<def> = LUI 1; GR32Bit:%vreg99
	  * READPM %vreg99<kill>, %vreg99<internal>, -100; GR32Bit:%vreg99
	  * %vreg99<def> = LUI 1; GR32Bit:%vreg99
	  * READPM %vreg99<kill>, %vreg99<internal>, -116; GR32Bit:%vreg99
	  * %vreg100<def> = LUI 2; GR32Bit:%vreg100
	  * READPM %vreg100<kill>, %vreg100<internal>, -100; GR32Bit:%vreg100
	  * %vreg100<def> = LUI 2; GR32Bit:%vreg100
	  * READPM %vreg100<kill>, %vreg100<internal>, -116; GR32Bit:%vreg100
	  * %vreg101<def> = LUI 1; GR32Bit:%vreg101
	  * WRITEPM %vreg101<internal>, %vreg101<internal>, -100; GR32Bit:%vreg101
	  * %vreg101<def> = LUI 2; GR32Bit:%vreg101
	  * WRITEPM %vreg101<internal>, %vreg101<internal>, -100; GR32Bit:%vreg101
	  * %vreg101<def> = LUI 4; GR32Bit:%vreg101
	  * WRITEPM %vreg101<internal>, %vreg101<internal>, -100; GR32Bit:%vreg101
	  * %vreg101<def> = LUI 3; GR32Bit:%vreg101
	  * READPM %vreg101<kill>, %vreg101<internal>, -116; GR32Bit:%vreg101
	  * %vreg102<def> = LUI 1; GR32Bit:%vreg102
	  * WRITEPM %vreg102<internal>, %vreg102<internal>, -116; GR32Bit:%vreg102
	  * %vreg102<def> = LUI 2; GR32Bit:%vreg102
	  * WRITEPM %vreg102<internal>, %vreg102<internal>, -116; GR32Bit:%vreg102
	  * %vreg102<def> = LUI 3; GR32Bit:%vreg102
	  * WRITEPM %vreg102<internal>, %vreg102<internal>, -116; GR32Bit:%vreg102
	  * %vreg102<def> = LUI 4; GR32Bit:%vreg102
	  * READPM %vreg102<kill>, %vreg102<internal>, -100; GR32Bit:%vreg102
	  * %vreg103<def> = LUI 0; GR32Bit:%vreg103
	  * WRITEPM %vreg103<internal>, %vreg13<internal>, 0; GR32Bit:%vreg103,%vreg13
	  * %vreg105<def> = LUI 1; GR32Bit:%vreg105
	  * WRITEPM %vreg105<internal>, %vreg13<internal>, 0; GR32Bit:%vreg105,%vreg13
	  * %vreg107<def> = LUI 3; GR32Bit:%vreg107
	  * WRITEPM %vreg107<internal>, %vreg13<internal>, 0; GR32Bit:%vreg107,%vreg13
	  * READPM %vreg14<kill>, %vreg98<internal>, 0; GR32Bit:%vreg14,%vreg98
	  * BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * JAL <BB#6>
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	%vreg108<def> = LUI 3; GR32Bit:%vreg108
	  * READPM %vreg13<kill>, %vreg108<internal>, 0; GR32Bit:%vreg13,%vreg108
	  * READPM %vreg14<kill>, %vreg108<internal>, 4; GR32Bit:%vreg14,%vreg108
	  * BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * %vreg93<def> = LUI 2; GR32Bit:%vreg93
	  * WRITEPM %vreg93<internal>, %vreg93<internal>, -68; GR32Bit:%vreg93
	  * %vreg93<def> = LUI 3; GR32Bit:%vreg93
	  * WRITEPM %vreg93<internal>, %vreg93<internal>, -68; GR32Bit:%vreg93
	  * %vreg93<def> = LUI 4; GR32Bit:%vreg93
	  * WRITEPM %vreg93<internal>, %vreg93<internal>, -68; GR32Bit:%vreg93
	  * %vreg93<def> = LUI 1; GR32Bit:%vreg93
	  * READPM %vreg93<kill>, %vreg93<internal>, -84; GR32Bit:%vreg93
	  * %vreg93<def> = LUI 1; GR32Bit:%vreg93
	  * READPM %vreg93<kill>, %vreg93<internal>, -100; GR32Bit:%vreg93
	  * %vreg93<def> = LUI 1; GR32Bit:%vreg93
	  * READPM %vreg93<kill>, %vreg93<internal>, -116; GR32Bit:%vreg93
	  * %vreg94<def> = LUI 1; GR32Bit:%vreg94
	  * WRITEPM %vreg94<internal>, %vreg94<internal>, -84; GR32Bit:%vreg94
	  * %vreg94<def> = LUI 3; GR32Bit:%vreg94
	  * WRITEPM %vreg94<internal>, %vreg94<internal>, -84; GR32Bit:%vreg94
	  * %vreg94<def> = LUI 4; GR32Bit:%vreg94
	  * WRITEPM %vreg94<internal>, %vreg94<internal>, -84; GR32Bit:%vreg94
	  * %vreg94<def> = LUI 2; GR32Bit:%vreg94
	  * READPM %vreg94<kill>, %vreg94<internal>, -68; GR32Bit:%vreg94
	  * %vreg94<def> = LUI 2; GR32Bit:%vreg94
	  * READPM %vreg94<kill>, %vreg94<internal>, -100; GR32Bit:%vreg94
	  * %vreg94<def> = LUI 2; GR32Bit:%vreg94
	  * READPM %vreg94<kill>, %vreg94<internal>, -116; GR32Bit:%vreg94
	  * %vreg95<def> = LUI 1; GR32Bit:%vreg95
	  * WRITEPM %vreg95<internal>, %vreg95<internal>, -100; GR32Bit:%vreg95
	  * %vreg95<def> = LUI 2; GR32Bit:%vreg95
	  * WRITEPM %vreg95<internal>, %vreg95<internal>, -100; GR32Bit:%vreg95
	  * %vreg95<def> = LUI 4; GR32Bit:%vreg95
	  * WRITEPM %vreg95<internal>, %vreg95<internal>, -100; GR32Bit:%vreg95
	  * %vreg95<def> = LUI 3; GR32Bit:%vreg95
	  * READPM %vreg95<kill>, %vreg95<internal>, -68; GR32Bit:%vreg95
	  * %vreg95<def> = LUI 3; GR32Bit:%vreg95
	  * READPM %vreg95<kill>, %vreg95<internal>, -84; GR32Bit:%vreg95
	  * %vreg95<def> = LUI 3; GR32Bit:%vreg95
	  * READPM %vreg95<kill>, %vreg95<internal>, -116; GR32Bit:%vreg95
	  * %vreg96<def> = LUI 1; GR32Bit:%vreg96
	  * WRITEPM %vreg96<internal>, %vreg96<internal>, -116; GR32Bit:%vreg96
	  * %vreg96<def> = LUI 2; GR32Bit:%vreg96
	  * WRITEPM %vreg96<internal>, %vreg96<internal>, -116; GR32Bit:%vreg96
	  * %vreg96<def> = LUI 3; GR32Bit:%vreg96
	  * WRITEPM %vreg96<internal>, %vreg96<internal>, -116; GR32Bit:%vreg96
	  * %vreg96<def> = LUI 4; GR32Bit:%vreg96
	  * READPM %vreg96<kill>, %vreg96<internal>, -68; GR32Bit:%vreg96
	  * %vreg96<def> = LUI 4; GR32Bit:%vreg96
	  * READPM %vreg96<kill>, %vreg96<internal>, -84; GR32Bit:%vreg96
	  * %vreg96<def> = LUI 4; GR32Bit:%vreg96
	  * READPM %vreg96<kill>, %vreg96<internal>, -100; GR32Bit:%vreg96
	  * JAL <BB#6>
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#6(124) BB#7(4)

BB#6: derived from LLVM BB %for.inc
    Predecessors according to CFG: BB#5
	%vreg34<def> = LUI <ga:@b>[TF=2]; GR32Bit:%vreg34
	  * %vreg35<def> = ADDI %zero, <ga:@b>[TF=3]; GR32Bit:%vreg35
	  * %vreg112<def> = LUI 1; GR32Bit:%vreg112
	  * WRITEPM %vreg112<internal>, %vreg35<internal>, 0; GR32Bit:%vreg112,%vreg35
	  * WRITEPM %vreg112<internal>, %vreg34<internal>, 4; GR32Bit:%vreg112,%vreg34
	  * %vreg117<def> = LUI 0; GR32Bit:%vreg117
	  * READPM %vreg19<kill>, %vreg117<internal>, 0; GR32Bit:%vreg19,%vreg117
	  * READPM %vreg22<kill>, %vreg117<internal>, 4; GR32Bit:%vreg22,%vreg117
	  * %vreg33<def> = MUL %vreg22, %vreg19; GR32Bit:%vreg33,%vreg22,%vreg19
	  * WRITEPM %vreg112<internal>, %vreg33<internal>, 8; GR32Bit:%vreg112,%vreg33
	  * READPM %vreg39<kill>, %vreg117<internal>, 8; GR32Bit:%vreg39,%vreg117
	  * %vreg40<def> = LW %vreg39, 0; mem:LD4[%arrayidx9] GR32Bit:%vreg40,%vreg39
	  * %vreg24<def> = LUI <ga:@a>[TF=2]; GR32Bit:%vreg24
	  * %vreg123<def> = LUI 2; GR32Bit:%vreg123
	  * WRITEPM %vreg123<internal>, %vreg24<internal>, 8; GR32Bit:%vreg123,%vreg24
	  * READPM %vreg20<kill>, %vreg117<internal>, 12; GR32Bit:%vreg20,%vreg117
	  * %vreg21<def> = LW %vreg20, 0; mem:LD4[%i] GR32Bit:%vreg21,%vreg20
	  * WRITEPM %vreg112<internal>, %vreg21<internal>, 12; GR32Bit:%vreg112,%vreg21
	  * READPM %vreg45<kill>, %vreg117<internal>, 16; GR32Bit:%vreg45,%vreg117
	  * READPM %vreg38<kill>, %vreg117<internal>, 20; GR32Bit:%vreg38,%vreg117
	  * %vreg46<def> = ADD %vreg38, %vreg45; GR32Bit:%vreg46,%vreg38,%vreg45
	  * READPM %vreg30<kill>, %vreg117<internal>, 24; GR32Bit:%vreg30,%vreg117
	  * %vreg41<def> = ADD %vreg40, %vreg30; GR32Bit:%vreg41,%vreg40,%vreg30
	  * WRITEPM %vreg112<internal>, %vreg41<internal>, 24; GR32Bit:%vreg112,%vreg41
	  * WRITEPM %vreg112<internal>, %vreg46<internal>, 28; GR32Bit:%vreg112,%vreg46
	  * READPM %vreg48<kill>, %vreg117<internal>, 28; GR32Bit:%vreg48,%vreg117
	  * READPM %vreg18<kill>, %vreg117<internal>, 32; GR32Bit:%vreg18,%vreg117
	  * READPM %vreg127<kill>, %vreg117<internal>, 36; GR32Bit:%vreg127,%vreg117
	  * READPM %vreg129<kill>, %vreg117<internal>, 40; GR32Bit:%vreg129,%vreg117
	  * SW %vreg48, %vreg18, 0; mem:ST4[%k] GR32Bit:%vreg48,%vreg18
	  * %vreg130<def> = LUI 2; GR32Bit:%vreg130
	  * WRITEPM %vreg130<internal>, %vreg130<internal>, -68; GR32Bit:%vreg130
	  * %vreg130<def> = LUI 3; GR32Bit:%vreg130
	  * WRITEPM %vreg130<internal>, %vreg130<internal>, -68; GR32Bit:%vreg130
	  * %vreg130<def> = LUI 4; GR32Bit:%vreg130
	  * WRITEPM %vreg130<internal>, %vreg130<internal>, -68; GR32Bit:%vreg130
	  * %vreg131<def> = LUI 2; GR32Bit:%vreg131
	  * READPM %vreg131<kill>, %vreg131<internal>, -68; GR32Bit:%vreg131
	  * %vreg132<def> = LUI 3; GR32Bit:%vreg132
	  * READPM %vreg132<kill>, %vreg132<internal>, -68; GR32Bit:%vreg132
	  * %vreg133<def> = LUI 4; GR32Bit:%vreg133
	  * READPM %vreg133<kill>, %vreg133<internal>, -68; GR32Bit:%vreg133
	  * JAL <BB#5>
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	%vreg31<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg31
	  * %vreg113<def> = LUI 1; GR32Bit:%vreg113
	  * READPM %vreg35<kill>, %vreg113<internal>, 0; GR32Bit:%vreg35,%vreg113
	  * READPM %vreg34<kill>, %vreg113<internal>, 4; GR32Bit:%vreg34,%vreg113
	  * %vreg36<def> = ADD %vreg35, %vreg34; GR32Bit:%vreg36,%vreg35,%vreg34
	  * %vreg114<def> = LUI 3; GR32Bit:%vreg114
	  * WRITEPM %vreg114<internal>, %vreg31<internal>, 0; GR32Bit:%vreg114,%vreg31
	  * READPM %vreg33<kill>, %vreg113<internal>, 8; GR32Bit:%vreg33,%vreg113
	  * %vreg37<def> = ADD %vreg33, %vreg36; GR32Bit:%vreg37,%vreg33,%vreg36
	  * WRITEPM %vreg114<internal>, %vreg37<internal>, 4; GR32Bit:%vreg114,%vreg37
	  * %vreg42<def> = LUI <ga:@c>[TF=2]; GR32Bit:%vreg42
	  * WRITEPM %vreg114<internal>, %vreg42<internal>, 16; GR32Bit:%vreg114,%vreg42
	  * %vreg25<def> = ADDI %zero, <ga:@a>[TF=3]; GR32Bit:%vreg25
	  * %vreg122<def> = LUI 2; GR32Bit:%vreg122
	  * WRITEPM %vreg122<internal>, %vreg25<internal>, 4; GR32Bit:%vreg122,%vreg25
	  * READPM %vreg21<kill>, %vreg113<internal>, 12; GR32Bit:%vreg21,%vreg113
	  * READPM %vreg22<kill>, %vreg113<internal>, 16; GR32Bit:%vreg22,%vreg113
	  * %vreg23<def> = MUL %vreg22, %vreg21; GR32Bit:%vreg23,%vreg22,%vreg21
	  * WRITEPM %vreg122<internal>, %vreg23<internal>, 12; GR32Bit:%vreg122,%vreg23
	  * WRITEPM %vreg114<internal>, %vreg23<internal>, 20; GR32Bit:%vreg114,%vreg23
	  * READPM %vreg19<kill>, %vreg113<internal>, 20; GR32Bit:%vreg19,%vreg113
	  * %vreg28<def> = SLLI %vreg19, 2; GR32Bit:%vreg28,%vreg19
	  * WRITEPM %vreg122<internal>, %vreg28<internal>, 16; GR32Bit:%vreg122,%vreg28
	  * READPM %vreg41<kill>, %vreg113<internal>, 24; GR32Bit:%vreg41,%vreg113
	  * READPM %vreg46<kill>, %vreg113<internal>, 28; GR32Bit:%vreg46,%vreg113
	  * SW %vreg41, %vreg46, 0; mem:ST4[%arrayidx11] GR32Bit:%vreg41,%vreg46
	  * %vreg130<def> = LUI 1; GR32Bit:%vreg130
	  * READPM %vreg130<kill>, %vreg130<internal>, -84; GR32Bit:%vreg130
	  * %vreg131<def> = LUI 1; GR32Bit:%vreg131
	  * WRITEPM %vreg131<internal>, %vreg131<internal>, -84; GR32Bit:%vreg131
	  * %vreg131<def> = LUI 3; GR32Bit:%vreg131
	  * WRITEPM %vreg131<internal>, %vreg131<internal>, -84; GR32Bit:%vreg131
	  * %vreg131<def> = LUI 4; GR32Bit:%vreg131
	  * WRITEPM %vreg131<internal>, %vreg131<internal>, -84; GR32Bit:%vreg131
	  * %vreg132<def> = LUI 3; GR32Bit:%vreg132
	  * READPM %vreg132<kill>, %vreg132<internal>, -84; GR32Bit:%vreg132
	  * %vreg133<def> = LUI 4; GR32Bit:%vreg133
	  * READPM %vreg133<kill>, %vreg133<internal>, -84; GR32Bit:%vreg133
	  * JAL <BB#5>
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	%vreg18<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg18
	  * %vreg19<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg19,%vreg18
	  * %vreg116<def> = LUI 0; GR32Bit:%vreg116
	  * WRITEPM %vreg116<internal>, %vreg19<internal>, 0; GR32Bit:%vreg116,%vreg19
	  * %vreg120<def> = LUI 2; GR32Bit:%vreg120
	  * READPM %vreg32<kill>, %vreg120<internal>, 0; GR32Bit:%vreg32,%vreg120
	  * %vreg38<def> = SLLI %vreg32, 2; GR32Bit:%vreg38,%vreg32
	  * %vreg121<def> = LUI 3; GR32Bit:%vreg121
	  * WRITEPM %vreg121<internal>, %vreg38<internal>, 8; GR32Bit:%vreg121,%vreg38
	  * %vreg43<def> = ADDI %zero, <ga:@c>[TF=3]; GR32Bit:%vreg43
	  * WRITEPM %vreg121<internal>, %vreg43<internal>, 12; GR32Bit:%vreg121,%vreg43
	  * READPM %vreg25<kill>, %vreg120<internal>, 4; GR32Bit:%vreg25,%vreg120
	  * READPM %vreg24<kill>, %vreg120<internal>, 8; GR32Bit:%vreg24,%vreg120
	  * %vreg26<def> = ADD %vreg25, %vreg24; GR32Bit:%vreg26,%vreg25,%vreg24
	  * READPM %vreg23<kill>, %vreg120<internal>, 12; GR32Bit:%vreg23,%vreg120
	  * %vreg27<def> = ADD %vreg23, %vreg26; GR32Bit:%vreg27,%vreg23,%vreg26
	  * WRITEPM %vreg116<internal>, %vreg38<internal>, 20; GR32Bit:%vreg116,%vreg38
	  * %vreg125<def> = LUI 1; GR32Bit:%vreg125
	  * WRITEPM %vreg125<internal>, %vreg19<internal>, 20; GR32Bit:%vreg125,%vreg19
	  * READPM %vreg28<kill>, %vreg120<internal>, 16; GR32Bit:%vreg28,%vreg120
	  * %vreg29<def> = ADD %vreg28, %vreg27; GR32Bit:%vreg29,%vreg28,%vreg27
	  * WRITEPM %vreg121<internal>, %vreg29<internal>, 24; GR32Bit:%vreg121,%vreg29
	  * %vreg47<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg47,%vreg18
	  * WRITEPM %vreg121<internal>, %vreg47<internal>, 28; GR32Bit:%vreg121,%vreg47
	  * WRITEPM %vreg116<internal>, %vreg18<internal>, 32; GR32Bit:%vreg116,%vreg18
	  * WRITEPM %vreg116<internal>, %vreg126<internal>, 36; GR32Bit:%vreg116,%vreg126
	  * WRITEPM %vreg116<internal>, %vreg128<internal>, 40; GR32Bit:%vreg116,%vreg128
	  * %vreg130<def> = LUI 1; GR32Bit:%vreg130
	  * READPM %vreg130<kill>, %vreg130<internal>, -100; GR32Bit:%vreg130
	  * %vreg131<def> = LUI 2; GR32Bit:%vreg131
	  * READPM %vreg131<kill>, %vreg131<internal>, -100; GR32Bit:%vreg131
	  * %vreg132<def> = LUI 1; GR32Bit:%vreg132
	  * WRITEPM %vreg132<internal>, %vreg132<internal>, -100; GR32Bit:%vreg132
	  * %vreg132<def> = LUI 2; GR32Bit:%vreg132
	  * WRITEPM %vreg132<internal>, %vreg132<internal>, -100; GR32Bit:%vreg132
	  * %vreg132<def> = LUI 4; GR32Bit:%vreg132
	  * WRITEPM %vreg132<internal>, %vreg132<internal>, -100; GR32Bit:%vreg132
	  * %vreg133<def> = LUI 4; GR32Bit:%vreg133
	  * READPM %vreg133<kill>, %vreg133<internal>, -100; GR32Bit:%vreg133
	  * JAL <BB#5>
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	%vreg22<def> = ADDI %zero, 40; GR32Bit:%vreg22
	  * %vreg115<def> = LUI 3; GR32Bit:%vreg115
	  * READPM %vreg31<kill>, %vreg115<internal>, 0; GR32Bit:%vreg31,%vreg115
	  * %vreg32<def> = LW %vreg31, 0; mem:LD4[%j] GR32Bit:%vreg32,%vreg31
	  * %vreg118<def> = LUI 0; GR32Bit:%vreg118
	  * WRITEPM %vreg118<internal>, %vreg22<internal>, 4; GR32Bit:%vreg118,%vreg22
	  * %vreg119<def> = LUI 2; GR32Bit:%vreg119
	  * WRITEPM %vreg119<internal>, %vreg32<internal>, 0; GR32Bit:%vreg119,%vreg32
	  * READPM %vreg37<kill>, %vreg115<internal>, 4; GR32Bit:%vreg37,%vreg115
	  * READPM %vreg38<kill>, %vreg115<internal>, 8; GR32Bit:%vreg38,%vreg115
	  * %vreg39<def> = ADD %vreg38, %vreg37; GR32Bit:%vreg39,%vreg38,%vreg37
	  * WRITEPM %vreg118<internal>, %vreg39<internal>, 8; GR32Bit:%vreg118,%vreg39
	  * READPM %vreg43<kill>, %vreg115<internal>, 12; GR32Bit:%vreg43,%vreg115
	  * READPM %vreg42<kill>, %vreg115<internal>, 16; GR32Bit:%vreg42,%vreg115
	  * %vreg44<def> = ADD %vreg43, %vreg42; GR32Bit:%vreg44,%vreg43,%vreg42
	  * %vreg20<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg20
	  * WRITEPM %vreg118<internal>, %vreg20<internal>, 12; GR32Bit:%vreg118,%vreg20
	  * %vreg124<def> = LUI 1; GR32Bit:%vreg124
	  * WRITEPM %vreg124<internal>, %vreg22<internal>, 16; GR32Bit:%vreg124,%vreg22
	  * READPM %vreg23<kill>, %vreg115<internal>, 20; GR32Bit:%vreg23,%vreg115
	  * %vreg45<def> = ADD %vreg23, %vreg44; GR32Bit:%vreg45,%vreg23,%vreg44
	  * WRITEPM %vreg118<internal>, %vreg45<internal>, 16; GR32Bit:%vreg118,%vreg45
	  * READPM %vreg29<kill>, %vreg115<internal>, 24; GR32Bit:%vreg29,%vreg115
	  * %vreg30<def> = LW %vreg29, 0; mem:LD4[%arrayidx7] GR32Bit:%vreg30,%vreg29
	  * WRITEPM %vreg118<internal>, %vreg30<internal>, 24; GR32Bit:%vreg118,%vreg30
	  * READPM %vreg47<kill>, %vreg115<internal>, 28; GR32Bit:%vreg47,%vreg115
	  * %vreg48<def> = ADDI %vreg47, 1; GR32Bit:%vreg48,%vreg47
	  * WRITEPM %vreg118<internal>, %vreg48<internal>, 28; GR32Bit:%vreg118,%vreg48
	  * %vreg130<def> = LUI 1; GR32Bit:%vreg130
	  * READPM %vreg130<kill>, %vreg130<internal>, -116; GR32Bit:%vreg130
	  * %vreg131<def> = LUI 2; GR32Bit:%vreg131
	  * READPM %vreg131<kill>, %vreg131<internal>, -116; GR32Bit:%vreg131
	  * %vreg132<def> = LUI 3; GR32Bit:%vreg132
	  * READPM %vreg132<kill>, %vreg132<internal>, -116; GR32Bit:%vreg132
	  * %vreg133<def> = LUI 1; GR32Bit:%vreg133
	  * WRITEPM %vreg133<internal>, %vreg133<internal>, -116; GR32Bit:%vreg133
	  * %vreg133<def> = LUI 2; GR32Bit:%vreg133
	  * WRITEPM %vreg133<internal>, %vreg133<internal>, -116; GR32Bit:%vreg133
	  * %vreg133<def> = LUI 3; GR32Bit:%vreg133
	  * WRITEPM %vreg133<internal>, %vreg133<internal>, -116; GR32Bit:%vreg133
	  * JAL <BB#5>
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#5

BB#7: derived from LLVM BB %for.inc12
    Predecessors according to CFG: BB#5
	%vreg15<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg15
	  * %vreg134<def> = LUI 1; GR32Bit:%vreg134
	  * WRITEPM %vreg134<internal>, %vreg15<internal>, 0; GR32Bit:%vreg134,%vreg15
	  * %vreg140<def> = LUI 3; GR32Bit:%vreg140
	  * WRITEPM %vreg140<internal>, %vreg15<internal>, 4; GR32Bit:%vreg140,%vreg15
	  * %vreg144<def> = LUI 2; GR32Bit:%vreg144
	  * WRITEPM %vreg144<internal>, %vreg144<internal>, -68; GR32Bit:%vreg144
	  * %vreg144<def> = LUI 3; GR32Bit:%vreg144
	  * WRITEPM %vreg144<internal>, %vreg144<internal>, -68; GR32Bit:%vreg144
	  * %vreg144<def> = LUI 4; GR32Bit:%vreg144
	  * WRITEPM %vreg144<internal>, %vreg144<internal>, -68; GR32Bit:%vreg144
	  * %vreg145<def> = LUI 2; GR32Bit:%vreg145
	  * READPM %vreg145<kill>, %vreg145<internal>, -68; GR32Bit:%vreg145
	  * %vreg146<def> = LUI 3; GR32Bit:%vreg146
	  * READPM %vreg146<kill>, %vreg146<internal>, -68; GR32Bit:%vreg146
	  * %vreg147<def> = LUI 4; GR32Bit:%vreg147
	  * READPM %vreg147<kill>, %vreg147<internal>, -68; GR32Bit:%vreg147
	  * JAL <BB#3>
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	%vreg135<def> = LUI 1; GR32Bit:%vreg135
	  * READPM %vreg15<kill>, %vreg135<internal>, 0; GR32Bit:%vreg15,%vreg135
	  * %vreg16<def> = LW %vreg15, 0; mem:LD4[%j] GR32Bit:%vreg16,%vreg15
	  * %vreg136<def> = LUI 2; GR32Bit:%vreg136
	  * WRITEPM %vreg136<internal>, %vreg16<internal>, 0; GR32Bit:%vreg136,%vreg16
	  * %vreg141<def> = LUI 3; GR32Bit:%vreg141
	  * WRITEPM %vreg141<internal>, %vreg142<internal>, 8; GR32Bit:%vreg141,%vreg142
	  * %vreg144<def> = LUI 1; GR32Bit:%vreg144
	  * READPM %vreg144<kill>, %vreg144<internal>, -84; GR32Bit:%vreg144
	  * %vreg145<def> = LUI 1; GR32Bit:%vreg145
	  * WRITEPM %vreg145<internal>, %vreg145<internal>, -84; GR32Bit:%vreg145
	  * %vreg145<def> = LUI 3; GR32Bit:%vreg145
	  * WRITEPM %vreg145<internal>, %vreg145<internal>, -84; GR32Bit:%vreg145
	  * %vreg145<def> = LUI 4; GR32Bit:%vreg145
	  * WRITEPM %vreg145<internal>, %vreg145<internal>, -84; GR32Bit:%vreg145
	  * %vreg146<def> = LUI 3; GR32Bit:%vreg146
	  * READPM %vreg146<kill>, %vreg146<internal>, -84; GR32Bit:%vreg146
	  * %vreg147<def> = LUI 4; GR32Bit:%vreg147
	  * READPM %vreg147<kill>, %vreg147<internal>, -84; GR32Bit:%vreg147
	  * JAL <BB#3>
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	%vreg137<def> = LUI 2; GR32Bit:%vreg137
	  * READPM %vreg16<kill>, %vreg137<internal>, 0; GR32Bit:%vreg16,%vreg137
	  * %vreg17<def> = ADDI %vreg16, 1; GR32Bit:%vreg17,%vreg16
	  * %vreg138<def> = LUI 3; GR32Bit:%vreg138
	  * WRITEPM %vreg138<internal>, %vreg17<internal>, 0; GR32Bit:%vreg138,%vreg17
	  * %vreg144<def> = LUI 1; GR32Bit:%vreg144
	  * READPM %vreg144<kill>, %vreg144<internal>, -100; GR32Bit:%vreg144
	  * %vreg145<def> = LUI 2; GR32Bit:%vreg145
	  * READPM %vreg145<kill>, %vreg145<internal>, -100; GR32Bit:%vreg145
	  * %vreg146<def> = LUI 1; GR32Bit:%vreg146
	  * WRITEPM %vreg146<internal>, %vreg146<internal>, -100; GR32Bit:%vreg146
	  * %vreg146<def> = LUI 2; GR32Bit:%vreg146
	  * WRITEPM %vreg146<internal>, %vreg146<internal>, -100; GR32Bit:%vreg146
	  * %vreg146<def> = LUI 4; GR32Bit:%vreg146
	  * WRITEPM %vreg146<internal>, %vreg146<internal>, -100; GR32Bit:%vreg146
	  * %vreg147<def> = LUI 4; GR32Bit:%vreg147
	  * READPM %vreg147<kill>, %vreg147<internal>, -100; GR32Bit:%vreg147
	  * JAL <BB#3>
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	%vreg139<def> = LUI 3; GR32Bit:%vreg139
	  * READPM %vreg17<kill>, %vreg139<internal>, 0; GR32Bit:%vreg17,%vreg139
	  * READPM %vreg15<kill>, %vreg139<internal>, 4; GR32Bit:%vreg15,%vreg139
	  * READPM %vreg143<kill>, %vreg139<internal>, 8; GR32Bit:%vreg143,%vreg139
	  * SW %vreg17, %vreg15, 0; mem:ST4[%j] GR32Bit:%vreg17,%vreg15
	  * %vreg144<def> = LUI 1; GR32Bit:%vreg144
	  * READPM %vreg144<kill>, %vreg144<internal>, -116; GR32Bit:%vreg144
	  * %vreg145<def> = LUI 2; GR32Bit:%vreg145
	  * READPM %vreg145<kill>, %vreg145<internal>, -116; GR32Bit:%vreg145
	  * %vreg146<def> = LUI 3; GR32Bit:%vreg146
	  * READPM %vreg146<kill>, %vreg146<internal>, -116; GR32Bit:%vreg146
	  * %vreg147<def> = LUI 1; GR32Bit:%vreg147
	  * WRITEPM %vreg147<internal>, %vreg147<internal>, -116; GR32Bit:%vreg147
	  * %vreg147<def> = LUI 2; GR32Bit:%vreg147
	  * WRITEPM %vreg147<internal>, %vreg147<internal>, -116; GR32Bit:%vreg147
	  * %vreg147<def> = LUI 3; GR32Bit:%vreg147
	  * WRITEPM %vreg147<internal>, %vreg147<internal>, -116; GR32Bit:%vreg147
	  * JAL <BB#3>
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#3

BB#8: derived from LLVM BB %for.inc15
    Predecessors according to CFG: BB#3
	%vreg8<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg8
	  * %vreg148<def> = LUI 1; GR32Bit:%vreg148
	  * WRITEPM %vreg148<internal>, %vreg8<internal>, 0; GR32Bit:%vreg148,%vreg8
	  * %vreg154<def> = LUI 3; GR32Bit:%vreg154
	  * WRITEPM %vreg154<internal>, %vreg8<internal>, 4; GR32Bit:%vreg154,%vreg8
	  * %vreg158<def> = LUI 2; GR32Bit:%vreg158
	  * WRITEPM %vreg158<internal>, %vreg158<internal>, -68; GR32Bit:%vreg158
	  * %vreg158<def> = LUI 3; GR32Bit:%vreg158
	  * WRITEPM %vreg158<internal>, %vreg158<internal>, -68; GR32Bit:%vreg158
	  * %vreg158<def> = LUI 4; GR32Bit:%vreg158
	  * WRITEPM %vreg158<internal>, %vreg158<internal>, -68; GR32Bit:%vreg158
	  * %vreg159<def> = LUI 2; GR32Bit:%vreg159
	  * READPM %vreg159<kill>, %vreg159<internal>, -68; GR32Bit:%vreg159
	  * %vreg160<def> = LUI 3; GR32Bit:%vreg160
	  * READPM %vreg160<kill>, %vreg160<internal>, -68; GR32Bit:%vreg160
	  * %vreg161<def> = LUI 4; GR32Bit:%vreg161
	  * READPM %vreg161<kill>, %vreg161<internal>, -68; GR32Bit:%vreg161
	  * JAL <BB#1>
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	%vreg149<def> = LUI 1; GR32Bit:%vreg149
	  * READPM %vreg8<kill>, %vreg149<internal>, 0; GR32Bit:%vreg8,%vreg149
	  * %vreg9<def> = LW %vreg8, 0; mem:LD4[%i] GR32Bit:%vreg9,%vreg8
	  * %vreg150<def> = LUI 2; GR32Bit:%vreg150
	  * WRITEPM %vreg150<internal>, %vreg9<internal>, 0; GR32Bit:%vreg150,%vreg9
	  * %vreg155<def> = LUI 3; GR32Bit:%vreg155
	  * WRITEPM %vreg155<internal>, %vreg156<internal>, 8; GR32Bit:%vreg155,%vreg156
	  * %vreg158<def> = LUI 1; GR32Bit:%vreg158
	  * READPM %vreg158<kill>, %vreg158<internal>, -84; GR32Bit:%vreg158
	  * %vreg159<def> = LUI 1; GR32Bit:%vreg159
	  * WRITEPM %vreg159<internal>, %vreg159<internal>, -84; GR32Bit:%vreg159
	  * %vreg159<def> = LUI 3; GR32Bit:%vreg159
	  * WRITEPM %vreg159<internal>, %vreg159<internal>, -84; GR32Bit:%vreg159
	  * %vreg159<def> = LUI 4; GR32Bit:%vreg159
	  * WRITEPM %vreg159<internal>, %vreg159<internal>, -84; GR32Bit:%vreg159
	  * %vreg160<def> = LUI 3; GR32Bit:%vreg160
	  * READPM %vreg160<kill>, %vreg160<internal>, -84; GR32Bit:%vreg160
	  * %vreg161<def> = LUI 4; GR32Bit:%vreg161
	  * READPM %vreg161<kill>, %vreg161<internal>, -84; GR32Bit:%vreg161
	  * JAL <BB#1>
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	%vreg151<def> = LUI 2; GR32Bit:%vreg151
	  * READPM %vreg9<kill>, %vreg151<internal>, 0; GR32Bit:%vreg9,%vreg151
	  * %vreg10<def> = ADDI %vreg9, 1; GR32Bit:%vreg10,%vreg9
	  * %vreg152<def> = LUI 3; GR32Bit:%vreg152
	  * WRITEPM %vreg152<internal>, %vreg10<internal>, 0; GR32Bit:%vreg152,%vreg10
	  * %vreg158<def> = LUI 1; GR32Bit:%vreg158
	  * READPM %vreg158<kill>, %vreg158<internal>, -100; GR32Bit:%vreg158
	  * %vreg159<def> = LUI 2; GR32Bit:%vreg159
	  * READPM %vreg159<kill>, %vreg159<internal>, -100; GR32Bit:%vreg159
	  * %vreg160<def> = LUI 1; GR32Bit:%vreg160
	  * WRITEPM %vreg160<internal>, %vreg160<internal>, -100; GR32Bit:%vreg160
	  * %vreg160<def> = LUI 2; GR32Bit:%vreg160
	  * WRITEPM %vreg160<internal>, %vreg160<internal>, -100; GR32Bit:%vreg160
	  * %vreg160<def> = LUI 4; GR32Bit:%vreg160
	  * WRITEPM %vreg160<internal>, %vreg160<internal>, -100; GR32Bit:%vreg160
	  * %vreg161<def> = LUI 4; GR32Bit:%vreg161
	  * READPM %vreg161<kill>, %vreg161<internal>, -100; GR32Bit:%vreg161
	  * JAL <BB#1>
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	%vreg153<def> = LUI 3; GR32Bit:%vreg153
	  * READPM %vreg10<kill>, %vreg153<internal>, 0; GR32Bit:%vreg10,%vreg153
	  * READPM %vreg8<kill>, %vreg153<internal>, 4; GR32Bit:%vreg8,%vreg153
	  * READPM %vreg157<kill>, %vreg153<internal>, 8; GR32Bit:%vreg157,%vreg153
	  * SW %vreg10, %vreg8, 0; mem:ST4[%i] GR32Bit:%vreg10,%vreg8
	  * %vreg158<def> = LUI 1; GR32Bit:%vreg158
	  * READPM %vreg158<kill>, %vreg158<internal>, -116; GR32Bit:%vreg158
	  * %vreg159<def> = LUI 2; GR32Bit:%vreg159
	  * READPM %vreg159<kill>, %vreg159<internal>, -116; GR32Bit:%vreg159
	  * %vreg160<def> = LUI 3; GR32Bit:%vreg160
	  * READPM %vreg160<kill>, %vreg160<internal>, -116; GR32Bit:%vreg160
	  * %vreg161<def> = LUI 1; GR32Bit:%vreg161
	  * WRITEPM %vreg161<internal>, %vreg161<internal>, -116; GR32Bit:%vreg161
	  * %vreg161<def> = LUI 2; GR32Bit:%vreg161
	  * WRITEPM %vreg161<internal>, %vreg161<internal>, -116; GR32Bit:%vreg161
	  * %vreg161<def> = LUI 3; GR32Bit:%vreg161
	  * WRITEPM %vreg161<internal>, %vreg161<internal>, -116; GR32Bit:%vreg161
	  * JAL <BB#1>
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
    Successors according to CFG: BB#1

BB#9: derived from LLVM BB %for.end17
    Predecessors according to CFG: BB#1
	SRLI %zero<kill>, %zero<internal>, 6
	  * FDELETE %zero<internal>, 0
	  * END 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * END 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * END 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * END 0
	  * ADDI %zero<internal>, %zero<internal>, 0
	  * ADDI %zero<internal>, %zero<internal>, 0

# End machine code for function main.

********** REWRITE VIRTUAL REGISTERS **********
********** Function: main
********** REGISTER MAP **********
[%vreg0 -> %t0] GR32Bit
[%vreg1 -> %t1] GR32Bit
[%vreg2 -> %t1] GR32Bit
[%vreg3 -> %t0] GR32Bit
[%vreg4 -> %t0] GR32Bit
[%vreg5 -> %t1] GR32Bit
[%vreg6 -> %t1] GR32Bit
[%vreg7 -> %t0] GR32Bit
[%vreg8 -> %t0] GR32Bit
[%vreg9 -> %t1] GR32Bit
[%vreg10 -> %t1] GR32Bit
[%vreg11 -> %t0] GR32Bit
[%vreg12 -> %t1] GR32Bit
[%vreg13 -> %t1] GR32Bit
[%vreg14 -> %t0] GR32Bit
[%vreg15 -> %t0] GR32Bit
[%vreg16 -> %t1] GR32Bit
[%vreg17 -> %t1] GR32Bit
[%vreg18 -> %t0] GR32Bit
[%vreg19 -> %t1] GR32Bit
[%vreg20 -> %a3] GR32Bit
[%vreg21 -> %a3] GR32Bit
[%vreg22 -> %fp] GR32Bit
[%vreg23 -> %fp] GR32Bit
[%vreg24 -> %a2] GR32Bit
[%vreg25 -> %a3] GR32Bit
[%vreg26 -> %a2] GR32Bit
[%vreg27 -> %a2] GR32Bit
[%vreg28 -> %t1] GR32Bit
[%vreg29 -> %t1] GR32Bit
[%vreg30 -> %t1] GR32Bit
[%vreg31 -> %a0] GR32Bit
[%vreg32 -> %a0] GR32Bit
[%vreg33 -> %a1] GR32Bit
[%vreg34 -> %t1] GR32Bit
[%vreg35 -> %t2] GR32Bit
[%vreg36 -> %t2] GR32Bit
[%vreg37 -> %t2] GR32Bit
[%vreg38 -> %a0] GR32Bit
[%vreg39 -> %t2] GR32Bit
[%vreg40 -> %t2] GR32Bit
[%vreg41 -> %t1] GR32Bit
[%vreg42 -> %a1] GR32Bit
[%vreg43 -> %a2] GR32Bit
[%vreg44 -> %a1] GR32Bit
[%vreg45 -> %fp] GR32Bit
[%vreg46 -> %fp] GR32Bit
[%vreg47 -> %t1] GR32Bit
[%vreg48 -> %t1] GR32Bit
[%vreg49 -> %t0] GR32Bit
[%vreg50 -> %t0] GR32Bit
[%vreg51 -> %t0] GR32Bit
[%vreg52 -> %t0] GR32Bit
[%vreg53 -> %t0] GR32Bit
[%vreg54 -> %t0] GR32Bit
[%vreg55 -> %t0] GR32Bit
[%vreg56 -> %t0] GR32Bit
[%vreg57 -> %t0] GR32Bit
[%vreg58 -> %t0] GR32Bit
[%vreg59 -> %t0] GR32Bit
[%vreg60 -> %t0] GR32Bit
[%vreg61 -> %t0] GR32Bit
[%vreg62 -> %t0] GR32Bit
[%vreg63 -> %t0] GR32Bit
[%vreg64 -> %t0] GR32Bit
[%vreg65 -> %t0] GR32Bit
[%vreg66 -> %t0] GR32Bit
[%vreg67 -> %t0] GR32Bit
[%vreg68 -> %t0] GR32Bit
[%vreg69 -> %t0] GR32Bit
[%vreg70 -> %t0] GR32Bit
[%vreg71 -> %t0] GR32Bit
[%vreg72 -> %t0] GR32Bit
[%vreg73 -> %t0] GR32Bit
[%vreg74 -> %t0] GR32Bit
[%vreg75 -> %t0] GR32Bit
[%vreg76 -> %t0] GR32Bit
[%vreg77 -> %t0] GR32Bit
[%vreg78 -> %t0] GR32Bit
[%vreg79 -> %t0] GR32Bit
[%vreg80 -> %t0] GR32Bit
[%vreg81 -> %t0] GR32Bit
[%vreg82 -> %t0] GR32Bit
[%vreg83 -> %t0] GR32Bit
[%vreg84 -> %t0] GR32Bit
[%vreg85 -> %t0] GR32Bit
[%vreg86 -> %t0] GR32Bit
[%vreg87 -> %t0] GR32Bit
[%vreg88 -> %t0] GR32Bit
[%vreg89 -> %t0] GR32Bit
[%vreg90 -> %t0] GR32Bit
[%vreg91 -> %t0] GR32Bit
[%vreg92 -> %t0] GR32Bit
[%vreg93 -> %t0] GR32Bit
[%vreg94 -> %t0] GR32Bit
[%vreg95 -> %t0] GR32Bit
[%vreg96 -> %t0] GR32Bit
[%vreg97 -> %t0] GR32Bit
[%vreg98 -> %t0] GR32Bit
[%vreg99 -> %t0] GR32Bit
[%vreg100 -> %t0] GR32Bit
[%vreg101 -> %t0] GR32Bit
[%vreg102 -> %t0] GR32Bit
[%vreg103 -> %t0] GR32Bit
[%vreg104 -> %t0] GR32Bit
[%vreg105 -> %t0] GR32Bit
[%vreg106 -> %t0] GR32Bit
[%vreg107 -> %t0] GR32Bit
[%vreg108 -> %t0] GR32Bit
[%vreg109 -> %t0] GR32Bit
[%vreg110 -> %t0] GR32Bit
[%vreg111 -> %t0] GR32Bit
[%vreg112 -> %t0] GR32Bit
[%vreg113 -> %t0] GR32Bit
[%vreg114 -> %t0] GR32Bit
[%vreg115 -> %t0] GR32Bit
[%vreg116 -> %t0] GR32Bit
[%vreg117 -> %t0] GR32Bit
[%vreg118 -> %t0] GR32Bit
[%vreg119 -> %t0] GR32Bit
[%vreg120 -> %t0] GR32Bit
[%vreg121 -> %t0] GR32Bit
[%vreg122 -> %t0] GR32Bit
[%vreg123 -> %t0] GR32Bit
[%vreg124 -> %t0] GR32Bit
[%vreg125 -> %t0] GR32Bit
[%vreg126 -> %t0] GR32Bit
[%vreg127 -> %t0] GR32Bit
[%vreg128 -> %t0] GR32Bit
[%vreg129 -> %t0] GR32Bit
[%vreg130 -> %t0] GR32Bit
[%vreg131 -> %t0] GR32Bit
[%vreg132 -> %t0] GR32Bit
[%vreg133 -> %t0] GR32Bit
[%vreg134 -> %t0] GR32Bit
[%vreg135 -> %t0] GR32Bit
[%vreg136 -> %t0] GR32Bit
[%vreg137 -> %t0] GR32Bit
[%vreg138 -> %t0] GR32Bit
[%vreg139 -> %t0] GR32Bit
[%vreg140 -> %t0] GR32Bit
[%vreg141 -> %t0] GR32Bit
[%vreg142 -> %t0] GR32Bit
[%vreg143 -> %t0] GR32Bit
[%vreg144 -> %t0] GR32Bit
[%vreg145 -> %t0] GR32Bit
[%vreg146 -> %t0] GR32Bit
[%vreg147 -> %t0] GR32Bit
[%vreg148 -> %t0] GR32Bit
[%vreg149 -> %t0] GR32Bit
[%vreg150 -> %t0] GR32Bit
[%vreg151 -> %t0] GR32Bit
[%vreg152 -> %t0] GR32Bit
[%vreg153 -> %t0] GR32Bit
[%vreg154 -> %t0] GR32Bit
[%vreg155 -> %t0] GR32Bit
[%vreg156 -> %t0] GR32Bit
[%vreg157 -> %t0] GR32Bit
[%vreg158 -> %t0] GR32Bit
[%vreg159 -> %t0] GR32Bit
[%vreg160 -> %t0] GR32Bit
[%vreg161 -> %t0] GR32Bit

0B	BB#0: derived from LLVM BB %entry
16B		%vreg0<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg0
16B		  * %vreg49<def> = LUI 1; GR32Bit:%vreg49
16B		  * WRITEPM %vreg49<internal>, %vreg0<internal>, 0; GR32Bit:%vreg49,%vreg0
28B		%vreg50<def> = LUI 1; GR32Bit:%vreg50
28B		  * READPM %vreg0<kill>, %vreg50<internal>, 0; GR32Bit:%vreg0,%vreg50
28B		  * SW %zero, %vreg0<kill>, 0; mem:ST4[%i] GR32Bit:%vreg0
	    Successors according to CFG: BB#1
> %t0<def> = ADDI %zero, <fi#0>
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, 0
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, 0
> SW %zero, %t0<kill>, 0; mem:ST4[%i]
48B	BB#1: derived from LLVM BB %for.cond
	    Predecessors according to CFG: BB#0 BB#8
56B		%vreg3<def> = ADDI %zero, 9; GR32Bit:%vreg3
56B		  * %vreg57<def> = LUI 2; GR32Bit:%vreg57
56B		  * WRITEPM %vreg57<internal>, %vreg57<internal>, -68; GR32Bit:%vreg57
56B		  * %vreg57<def> = LUI 3; GR32Bit:%vreg57
56B		  * WRITEPM %vreg57<internal>, %vreg57<internal>, -68; GR32Bit:%vreg57
56B		  * %vreg57<def> = LUI 4; GR32Bit:%vreg57
56B		  * WRITEPM %vreg57<internal>, %vreg57<internal>, -68; GR32Bit:%vreg57
56B		  * %vreg58<def> = LUI 2; GR32Bit:%vreg58
56B		  * READPM %vreg58<kill>, %vreg58<internal>, -68; GR32Bit:%vreg58
56B		  * %vreg59<def> = LUI 3; GR32Bit:%vreg59
56B		  * READPM %vreg59<kill>, %vreg59<internal>, -68; GR32Bit:%vreg59
56B		  * %vreg60<def> = LUI 4; GR32Bit:%vreg60
56B		  * READPM %vreg60<kill>, %vreg60<internal>, -68; GR32Bit:%vreg60
56B		  * %vreg62<def> = LUI 0; GR32Bit:%vreg62
56B		  * READPM %vreg2<kill>, %vreg62<internal>, 0; GR32Bit:%vreg2,%vreg62
56B		  * %vreg67<def> = LUI 1; GR32Bit:%vreg67
56B		  * WRITEPM %vreg67<internal>, %vreg3<internal>, 4; GR32Bit:%vreg67,%vreg3
56B		  * %vreg68<def> = LUI 2; GR32Bit:%vreg68
56B		  * WRITEPM %vreg68<internal>, %vreg3<internal>, 0; GR32Bit:%vreg68,%vreg3
56B		  * %vreg69<def> = LUI 3; GR32Bit:%vreg69
56B		  * WRITEPM %vreg69<internal>, %vreg3<internal>, 4; GR32Bit:%vreg69,%vreg3
56B		  * BGT <BB#9>, %vreg2<kill>, %vreg3<kill>; GR32Bit:%vreg2,%vreg3
56B		  * ADDI %zero<internal>, %zero<internal>, 0
56B		  * ADDI %zero<internal>, %zero<internal>, 0
56B		  * JAL <BB#2>
56B		  * ADDI %zero<internal>, %zero<internal>, 0
56B		  * ADDI %zero<internal>, %zero<internal>, 0
64B		%vreg1<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg1
64B		  * %vreg55<def> = LUI 2; GR32Bit:%vreg55
64B		  * WRITEPM %vreg55<internal>, %vreg1<internal>, 0; GR32Bit:%vreg55,%vreg1
64B		  * %vreg57<def> = LUI 1; GR32Bit:%vreg57
64B		  * READPM %vreg57<kill>, %vreg57<internal>, -84; GR32Bit:%vreg57
64B		  * %vreg58<def> = LUI 1; GR32Bit:%vreg58
64B		  * WRITEPM %vreg58<internal>, %vreg58<internal>, -84; GR32Bit:%vreg58
64B		  * %vreg58<def> = LUI 3; GR32Bit:%vreg58
64B		  * WRITEPM %vreg58<internal>, %vreg58<internal>, -84; GR32Bit:%vreg58
64B		  * %vreg58<def> = LUI 4; GR32Bit:%vreg58
64B		  * WRITEPM %vreg58<internal>, %vreg58<internal>, -84; GR32Bit:%vreg58
64B		  * %vreg59<def> = LUI 3; GR32Bit:%vreg59
64B		  * READPM %vreg59<kill>, %vreg59<internal>, -84; GR32Bit:%vreg59
64B		  * %vreg60<def> = LUI 4; GR32Bit:%vreg60
64B		  * READPM %vreg60<kill>, %vreg60<internal>, -84; GR32Bit:%vreg60
64B		  * %vreg64<def> = LUI 1; GR32Bit:%vreg64
64B		  * READPM %vreg2<kill>, %vreg64<internal>, 0; GR32Bit:%vreg2,%vreg64
64B		  * READPM %vreg3<kill>, %vreg64<internal>, 4; GR32Bit:%vreg3,%vreg64
64B		  * BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
64B		  * ADDI %zero<internal>, %zero<internal>, 0
64B		  * ADDI %zero<internal>, %zero<internal>, 0
64B		  * JAL <BB#2>
64B		  * ADDI %zero<internal>, %zero<internal>, 0
64B		  * ADDI %zero<internal>, %zero<internal>, 0
76B		%vreg56<def> = LUI 2; GR32Bit:%vreg56
76B		  * READPM %vreg1<kill>, %vreg56<internal>, 0; GR32Bit:%vreg1,%vreg56
76B		  * %vreg2<def> = LW %vreg1<kill>, 0; mem:LD4[%i] GR32Bit:%vreg2,%vreg1
76B		  * %vreg57<def> = LUI 1; GR32Bit:%vreg57
76B		  * READPM %vreg57<kill>, %vreg57<internal>, -100; GR32Bit:%vreg57
76B		  * %vreg57<def> = LUI 1; GR32Bit:%vreg57
76B		  * READPM %vreg57<kill>, %vreg57<internal>, -116; GR32Bit:%vreg57
76B		  * %vreg58<def> = LUI 2; GR32Bit:%vreg58
76B		  * READPM %vreg58<kill>, %vreg58<internal>, -100; GR32Bit:%vreg58
76B		  * %vreg58<def> = LUI 2; GR32Bit:%vreg58
76B		  * READPM %vreg58<kill>, %vreg58<internal>, -116; GR32Bit:%vreg58
76B		  * %vreg59<def> = LUI 1; GR32Bit:%vreg59
76B		  * WRITEPM %vreg59<internal>, %vreg59<internal>, -100; GR32Bit:%vreg59
76B		  * %vreg59<def> = LUI 2; GR32Bit:%vreg59
76B		  * WRITEPM %vreg59<internal>, %vreg59<internal>, -100; GR32Bit:%vreg59
76B		  * %vreg59<def> = LUI 4; GR32Bit:%vreg59
76B		  * WRITEPM %vreg59<internal>, %vreg59<internal>, -100; GR32Bit:%vreg59
76B		  * %vreg59<def> = LUI 3; GR32Bit:%vreg59
76B		  * READPM %vreg59<kill>, %vreg59<internal>, -116; GR32Bit:%vreg59
76B		  * %vreg60<def> = LUI 1; GR32Bit:%vreg60
76B		  * WRITEPM %vreg60<internal>, %vreg60<internal>, -116; GR32Bit:%vreg60
76B		  * %vreg60<def> = LUI 2; GR32Bit:%vreg60
76B		  * WRITEPM %vreg60<internal>, %vreg60<internal>, -116; GR32Bit:%vreg60
76B		  * %vreg60<def> = LUI 3; GR32Bit:%vreg60
76B		  * WRITEPM %vreg60<internal>, %vreg60<internal>, -116; GR32Bit:%vreg60
76B		  * %vreg60<def> = LUI 4; GR32Bit:%vreg60
76B		  * READPM %vreg60<kill>, %vreg60<internal>, -100; GR32Bit:%vreg60
76B		  * %vreg61<def> = LUI 0; GR32Bit:%vreg61
76B		  * WRITEPM %vreg61<internal>, %vreg2<internal>, 0; GR32Bit:%vreg61,%vreg2
76B		  * %vreg63<def> = LUI 1; GR32Bit:%vreg63
76B		  * WRITEPM %vreg63<internal>, %vreg2<internal>, 0; GR32Bit:%vreg63,%vreg2
76B		  * %vreg65<def> = LUI 3; GR32Bit:%vreg65
76B		  * WRITEPM %vreg65<internal>, %vreg2<internal>, 0; GR32Bit:%vreg65,%vreg2
76B		  * READPM %vreg3<kill>, %vreg56<internal>, 0; GR32Bit:%vreg3,%vreg56
76B		  * BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
76B		  * ADDI %zero<internal>, %zero<internal>, 0
76B		  * ADDI %zero<internal>, %zero<internal>, 0
76B		  * JAL <BB#2>
76B		  * ADDI %zero<internal>, %zero<internal>, 0
76B		  * ADDI %zero<internal>, %zero<internal>, 0
440B		%vreg66<def> = LUI 3; GR32Bit:%vreg66
440B		  * READPM %vreg2<kill>, %vreg66<internal>, 0; GR32Bit:%vreg2,%vreg66
440B		  * READPM %vreg3<kill>, %vreg66<internal>, 4; GR32Bit:%vreg3,%vreg66
440B		  * BGT <BB#9>, %vreg2, %vreg3; GR32Bit:%vreg2,%vreg3
440B		  * ADDI %zero<internal>, %zero<internal>, 0
440B		  * ADDI %zero<internal>, %zero<internal>, 0
440B		  * %vreg51<def> = LUI 2; GR32Bit:%vreg51
440B		  * WRITEPM %vreg51<internal>, %vreg51<internal>, -68; GR32Bit:%vreg51
440B		  * %vreg51<def> = LUI 3; GR32Bit:%vreg51
440B		  * WRITEPM %vreg51<internal>, %vreg51<internal>, -68; GR32Bit:%vreg51
440B		  * %vreg51<def> = LUI 4; GR32Bit:%vreg51
440B		  * WRITEPM %vreg51<internal>, %vreg51<internal>, -68; GR32Bit:%vreg51
440B		  * %vreg51<def> = LUI 1; GR32Bit:%vreg51
440B		  * READPM %vreg51<kill>, %vreg51<internal>, -84; GR32Bit:%vreg51
440B		  * %vreg51<def> = LUI 1; GR32Bit:%vreg51
440B		  * READPM %vreg51<kill>, %vreg51<internal>, -100; GR32Bit:%vreg51
440B		  * %vreg51<def> = LUI 1; GR32Bit:%vreg51
440B		  * READPM %vreg51<kill>, %vreg51<internal>, -116; GR32Bit:%vreg51
440B		  * %vreg52<def> = LUI 1; GR32Bit:%vreg52
440B		  * WRITEPM %vreg52<internal>, %vreg52<internal>, -84; GR32Bit:%vreg52
440B		  * %vreg52<def> = LUI 3; GR32Bit:%vreg52
440B		  * WRITEPM %vreg52<internal>, %vreg52<internal>, -84; GR32Bit:%vreg52
440B		  * %vreg52<def> = LUI 4; GR32Bit:%vreg52
440B		  * WRITEPM %vreg52<internal>, %vreg52<internal>, -84; GR32Bit:%vreg52
440B		  * %vreg52<def> = LUI 2; GR32Bit:%vreg52
440B		  * READPM %vreg52<kill>, %vreg52<internal>, -68; GR32Bit:%vreg52
440B		  * %vreg52<def> = LUI 2; GR32Bit:%vreg52
440B		  * READPM %vreg52<kill>, %vreg52<internal>, -100; GR32Bit:%vreg52
440B		  * %vreg52<def> = LUI 2; GR32Bit:%vreg52
440B		  * READPM %vreg52<kill>, %vreg52<internal>, -116; GR32Bit:%vreg52
440B		  * %vreg53<def> = LUI 1; GR32Bit:%vreg53
440B		  * WRITEPM %vreg53<internal>, %vreg53<internal>, -100; GR32Bit:%vreg53
440B		  * %vreg53<def> = LUI 2; GR32Bit:%vreg53
440B		  * WRITEPM %vreg53<internal>, %vreg53<internal>, -100; GR32Bit:%vreg53
440B		  * %vreg53<def> = LUI 4; GR32Bit:%vreg53
440B		  * WRITEPM %vreg53<internal>, %vreg53<internal>, -100; GR32Bit:%vreg53
440B		  * %vreg53<def> = LUI 3; GR32Bit:%vreg53
440B		  * READPM %vreg53<kill>, %vreg53<internal>, -68; GR32Bit:%vreg53
440B		  * %vreg53<def> = LUI 3; GR32Bit:%vreg53
440B		  * READPM %vreg53<kill>, %vreg53<internal>, -84; GR32Bit:%vreg53
440B		  * %vreg53<def> = LUI 3; GR32Bit:%vreg53
440B		  * READPM %vreg53<kill>, %vreg53<internal>, -116; GR32Bit:%vreg53
440B		  * %vreg54<def> = LUI 1; GR32Bit:%vreg54
440B		  * WRITEPM %vreg54<internal>, %vreg54<internal>, -116; GR32Bit:%vreg54
440B		  * %vreg54<def> = LUI 2; GR32Bit:%vreg54
440B		  * WRITEPM %vreg54<internal>, %vreg54<internal>, -116; GR32Bit:%vreg54
440B		  * %vreg54<def> = LUI 3; GR32Bit:%vreg54
440B		  * WRITEPM %vreg54<internal>, %vreg54<internal>, -116; GR32Bit:%vreg54
440B		  * %vreg54<def> = LUI 4; GR32Bit:%vreg54
440B		  * READPM %vreg54<kill>, %vreg54<internal>, -68; GR32Bit:%vreg54
440B		  * %vreg54<def> = LUI 4; GR32Bit:%vreg54
440B		  * READPM %vreg54<kill>, %vreg54<internal>, -84; GR32Bit:%vreg54
440B		  * %vreg54<def> = LUI 4; GR32Bit:%vreg54
440B		  * READPM %vreg54<kill>, %vreg54<internal>, -100; GR32Bit:%vreg54
440B		  * JAL <BB#2>
440B		  * ADDI %zero<internal>, %zero<internal>, 0
440B		  * ADDI %zero<internal>, %zero<internal>, 0
	    Successors according to CFG: BB#2(124) BB#9(4)
> %t0<def> = ADDI %zero, 9
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -68
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -68
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -68
> %t0<def> = LUI 0
> READPM %t1<kill>, %t0<internal>, 0
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, 4
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, 0
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, 4
> BGT <BB#9>, %t1<kill>, %t0<kill>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> JAL <BB#2>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> %t1<def> = ADDI %zero, <fi#0>
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t1<internal>, 0
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -84
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -84
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -84
> %t0<def> = LUI 1
> READPM %t1<kill>, %t0<internal>, 0
> READPM %t0<kill>, %t0<internal>, 4
> BGT <BB#9>, %t1, %t0
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> JAL <BB#2>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> %t0<def> = LUI 2
> READPM %t1<kill>, %t0<internal>, 0
> %t1<def> = LW %t1<kill>, 0; mem:LD4[%i]
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -100
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -100
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -116
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -116
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -116
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -100
> %t0<def> = LUI 0
> WRITEPM %t0<internal>, %t1<internal>, 0
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t1<internal>, 0
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t1<internal>, 0
> READPM %t0<kill>, %t0<internal>, 0
> BGT <BB#9>, %t1, %t0
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> JAL <BB#2>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> %t0<def> = LUI 3
> READPM %t1<kill>, %t0<internal>, 0
> READPM %t0<kill>, %t0<internal>, 4
> BGT <BB#9>, %t1, %t0
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -84
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -100
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -68
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -100
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -68
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -84
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -116
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -116
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -116
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -68
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -84
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -100
> JAL <BB#2>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
1072B	BB#2: derived from LLVM BB %for.body
	    Predecessors according to CFG: BB#1
1080B		%vreg4<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg4
1080B		  * %vreg70<def> = LUI 1; GR32Bit:%vreg70
1080B		  * WRITEPM %vreg70<internal>, %vreg4<internal>, 0; GR32Bit:%vreg70,%vreg4
1092B		%vreg71<def> = LUI 1; GR32Bit:%vreg71
1092B		  * READPM %vreg4<kill>, %vreg71<internal>, 0; GR32Bit:%vreg4,%vreg71
1092B		  * SW %zero, %vreg4<kill>, 0; mem:ST4[%j] GR32Bit:%vreg4
	    Successors according to CFG: BB#3
> %t0<def> = ADDI %zero, <fi#1>
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, 0
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, 0
> SW %zero, %t0<kill>, 0; mem:ST4[%j]
1120B	BB#3: derived from LLVM BB %for.cond1
	    Predecessors according to CFG: BB#2 BB#7
1124B		%vreg7<def> = ADDI %zero, 9; GR32Bit:%vreg7
1124B		  * %vreg78<def> = LUI 2; GR32Bit:%vreg78
1124B		  * WRITEPM %vreg78<internal>, %vreg78<internal>, -68; GR32Bit:%vreg78
1124B		  * %vreg78<def> = LUI 3; GR32Bit:%vreg78
1124B		  * WRITEPM %vreg78<internal>, %vreg78<internal>, -68; GR32Bit:%vreg78
1124B		  * %vreg78<def> = LUI 4; GR32Bit:%vreg78
1124B		  * WRITEPM %vreg78<internal>, %vreg78<internal>, -68; GR32Bit:%vreg78
1124B		  * %vreg79<def> = LUI 2; GR32Bit:%vreg79
1124B		  * READPM %vreg79<kill>, %vreg79<internal>, -68; GR32Bit:%vreg79
1124B		  * %vreg80<def> = LUI 3; GR32Bit:%vreg80
1124B		  * READPM %vreg80<kill>, %vreg80<internal>, -68; GR32Bit:%vreg80
1124B		  * %vreg81<def> = LUI 4; GR32Bit:%vreg81
1124B		  * READPM %vreg81<kill>, %vreg81<internal>, -68; GR32Bit:%vreg81
1124B		  * %vreg83<def> = LUI 0; GR32Bit:%vreg83
1124B		  * READPM %vreg6<kill>, %vreg83<internal>, 0; GR32Bit:%vreg6,%vreg83
1124B		  * %vreg88<def> = LUI 1; GR32Bit:%vreg88
1124B		  * WRITEPM %vreg88<internal>, %vreg7<internal>, 4; GR32Bit:%vreg88,%vreg7
1124B		  * %vreg89<def> = LUI 2; GR32Bit:%vreg89
1124B		  * WRITEPM %vreg89<internal>, %vreg7<internal>, 0; GR32Bit:%vreg89,%vreg7
1124B		  * %vreg90<def> = LUI 3; GR32Bit:%vreg90
1124B		  * WRITEPM %vreg90<internal>, %vreg7<internal>, 4; GR32Bit:%vreg90,%vreg7
1124B		  * BGT <BB#8>, %vreg6<kill>, %vreg7<kill>; GR32Bit:%vreg6,%vreg7
1124B		  * ADDI %zero<internal>, %zero<internal>, 0
1124B		  * ADDI %zero<internal>, %zero<internal>, 0
1124B		  * JAL <BB#4>
1124B		  * ADDI %zero<internal>, %zero<internal>, 0
1124B		  * ADDI %zero<internal>, %zero<internal>, 0
1128B		%vreg5<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg5
1128B		  * %vreg76<def> = LUI 2; GR32Bit:%vreg76
1128B		  * WRITEPM %vreg76<internal>, %vreg5<internal>, 0; GR32Bit:%vreg76,%vreg5
1128B		  * %vreg78<def> = LUI 1; GR32Bit:%vreg78
1128B		  * READPM %vreg78<kill>, %vreg78<internal>, -84; GR32Bit:%vreg78
1128B		  * %vreg79<def> = LUI 1; GR32Bit:%vreg79
1128B		  * WRITEPM %vreg79<internal>, %vreg79<internal>, -84; GR32Bit:%vreg79
1128B		  * %vreg79<def> = LUI 3; GR32Bit:%vreg79
1128B		  * WRITEPM %vreg79<internal>, %vreg79<internal>, -84; GR32Bit:%vreg79
1128B		  * %vreg79<def> = LUI 4; GR32Bit:%vreg79
1128B		  * WRITEPM %vreg79<internal>, %vreg79<internal>, -84; GR32Bit:%vreg79
1128B		  * %vreg80<def> = LUI 3; GR32Bit:%vreg80
1128B		  * READPM %vreg80<kill>, %vreg80<internal>, -84; GR32Bit:%vreg80
1128B		  * %vreg81<def> = LUI 4; GR32Bit:%vreg81
1128B		  * READPM %vreg81<kill>, %vreg81<internal>, -84; GR32Bit:%vreg81
1128B		  * %vreg85<def> = LUI 1; GR32Bit:%vreg85
1128B		  * READPM %vreg6<kill>, %vreg85<internal>, 0; GR32Bit:%vreg6,%vreg85
1128B		  * READPM %vreg7<kill>, %vreg85<internal>, 4; GR32Bit:%vreg7,%vreg85
1128B		  * BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
1128B		  * ADDI %zero<internal>, %zero<internal>, 0
1128B		  * ADDI %zero<internal>, %zero<internal>, 0
1128B		  * JAL <BB#4>
1128B		  * ADDI %zero<internal>, %zero<internal>, 0
1128B		  * ADDI %zero<internal>, %zero<internal>, 0
1140B		%vreg77<def> = LUI 2; GR32Bit:%vreg77
1140B		  * READPM %vreg5<kill>, %vreg77<internal>, 0; GR32Bit:%vreg5,%vreg77
1140B		  * %vreg6<def> = LW %vreg5<kill>, 0; mem:LD4[%j] GR32Bit:%vreg6,%vreg5
1140B		  * %vreg78<def> = LUI 1; GR32Bit:%vreg78
1140B		  * READPM %vreg78<kill>, %vreg78<internal>, -100; GR32Bit:%vreg78
1140B		  * %vreg78<def> = LUI 1; GR32Bit:%vreg78
1140B		  * READPM %vreg78<kill>, %vreg78<internal>, -116; GR32Bit:%vreg78
1140B		  * %vreg79<def> = LUI 2; GR32Bit:%vreg79
1140B		  * READPM %vreg79<kill>, %vreg79<internal>, -100; GR32Bit:%vreg79
1140B		  * %vreg79<def> = LUI 2; GR32Bit:%vreg79
1140B		  * READPM %vreg79<kill>, %vreg79<internal>, -116; GR32Bit:%vreg79
1140B		  * %vreg80<def> = LUI 1; GR32Bit:%vreg80
1140B		  * WRITEPM %vreg80<internal>, %vreg80<internal>, -100; GR32Bit:%vreg80
1140B		  * %vreg80<def> = LUI 2; GR32Bit:%vreg80
1140B		  * WRITEPM %vreg80<internal>, %vreg80<internal>, -100; GR32Bit:%vreg80
1140B		  * %vreg80<def> = LUI 4; GR32Bit:%vreg80
1140B		  * WRITEPM %vreg80<internal>, %vreg80<internal>, -100; GR32Bit:%vreg80
1140B		  * %vreg80<def> = LUI 3; GR32Bit:%vreg80
1140B		  * READPM %vreg80<kill>, %vreg80<internal>, -116; GR32Bit:%vreg80
1140B		  * %vreg81<def> = LUI 1; GR32Bit:%vreg81
1140B		  * WRITEPM %vreg81<internal>, %vreg81<internal>, -116; GR32Bit:%vreg81
1140B		  * %vreg81<def> = LUI 2; GR32Bit:%vreg81
1140B		  * WRITEPM %vreg81<internal>, %vreg81<internal>, -116; GR32Bit:%vreg81
1140B		  * %vreg81<def> = LUI 3; GR32Bit:%vreg81
1140B		  * WRITEPM %vreg81<internal>, %vreg81<internal>, -116; GR32Bit:%vreg81
1140B		  * %vreg81<def> = LUI 4; GR32Bit:%vreg81
1140B		  * READPM %vreg81<kill>, %vreg81<internal>, -100; GR32Bit:%vreg81
1140B		  * %vreg82<def> = LUI 0; GR32Bit:%vreg82
1140B		  * WRITEPM %vreg82<internal>, %vreg6<internal>, 0; GR32Bit:%vreg82,%vreg6
1140B		  * %vreg84<def> = LUI 1; GR32Bit:%vreg84
1140B		  * WRITEPM %vreg84<internal>, %vreg6<internal>, 0; GR32Bit:%vreg84,%vreg6
1140B		  * %vreg86<def> = LUI 3; GR32Bit:%vreg86
1140B		  * WRITEPM %vreg86<internal>, %vreg6<internal>, 0; GR32Bit:%vreg86,%vreg6
1140B		  * READPM %vreg7<kill>, %vreg77<internal>, 0; GR32Bit:%vreg7,%vreg77
1140B		  * BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
1140B		  * ADDI %zero<internal>, %zero<internal>, 0
1140B		  * ADDI %zero<internal>, %zero<internal>, 0
1140B		  * JAL <BB#4>
1140B		  * ADDI %zero<internal>, %zero<internal>, 0
1140B		  * ADDI %zero<internal>, %zero<internal>, 0
1508B		%vreg87<def> = LUI 3; GR32Bit:%vreg87
1508B		  * READPM %vreg6<kill>, %vreg87<internal>, 0; GR32Bit:%vreg6,%vreg87
1508B		  * READPM %vreg7<kill>, %vreg87<internal>, 4; GR32Bit:%vreg7,%vreg87
1508B		  * BGT <BB#8>, %vreg6, %vreg7; GR32Bit:%vreg6,%vreg7
1508B		  * ADDI %zero<internal>, %zero<internal>, 0
1508B		  * ADDI %zero<internal>, %zero<internal>, 0
1508B		  * %vreg72<def> = LUI 2; GR32Bit:%vreg72
1508B		  * WRITEPM %vreg72<internal>, %vreg72<internal>, -68; GR32Bit:%vreg72
1508B		  * %vreg72<def> = LUI 3; GR32Bit:%vreg72
1508B		  * WRITEPM %vreg72<internal>, %vreg72<internal>, -68; GR32Bit:%vreg72
1508B		  * %vreg72<def> = LUI 4; GR32Bit:%vreg72
1508B		  * WRITEPM %vreg72<internal>, %vreg72<internal>, -68; GR32Bit:%vreg72
1508B		  * %vreg72<def> = LUI 1; GR32Bit:%vreg72
1508B		  * READPM %vreg72<kill>, %vreg72<internal>, -84; GR32Bit:%vreg72
1508B		  * %vreg72<def> = LUI 1; GR32Bit:%vreg72
1508B		  * READPM %vreg72<kill>, %vreg72<internal>, -100; GR32Bit:%vreg72
1508B		  * %vreg72<def> = LUI 1; GR32Bit:%vreg72
1508B		  * READPM %vreg72<kill>, %vreg72<internal>, -116; GR32Bit:%vreg72
1508B		  * %vreg73<def> = LUI 1; GR32Bit:%vreg73
1508B		  * WRITEPM %vreg73<internal>, %vreg73<internal>, -84; GR32Bit:%vreg73
1508B		  * %vreg73<def> = LUI 3; GR32Bit:%vreg73
1508B		  * WRITEPM %vreg73<internal>, %vreg73<internal>, -84; GR32Bit:%vreg73
1508B		  * %vreg73<def> = LUI 4; GR32Bit:%vreg73
1508B		  * WRITEPM %vreg73<internal>, %vreg73<internal>, -84; GR32Bit:%vreg73
1508B		  * %vreg73<def> = LUI 2; GR32Bit:%vreg73
1508B		  * READPM %vreg73<kill>, %vreg73<internal>, -68; GR32Bit:%vreg73
1508B		  * %vreg73<def> = LUI 2; GR32Bit:%vreg73
1508B		  * READPM %vreg73<kill>, %vreg73<internal>, -100; GR32Bit:%vreg73
1508B		  * %vreg73<def> = LUI 2; GR32Bit:%vreg73
1508B		  * READPM %vreg73<kill>, %vreg73<internal>, -116; GR32Bit:%vreg73
1508B		  * %vreg74<def> = LUI 1; GR32Bit:%vreg74
1508B		  * WRITEPM %vreg74<internal>, %vreg74<internal>, -100; GR32Bit:%vreg74
1508B		  * %vreg74<def> = LUI 2; GR32Bit:%vreg74
1508B		  * WRITEPM %vreg74<internal>, %vreg74<internal>, -100; GR32Bit:%vreg74
1508B		  * %vreg74<def> = LUI 4; GR32Bit:%vreg74
1508B		  * WRITEPM %vreg74<internal>, %vreg74<internal>, -100; GR32Bit:%vreg74
1508B		  * %vreg74<def> = LUI 3; GR32Bit:%vreg74
1508B		  * READPM %vreg74<kill>, %vreg74<internal>, -68; GR32Bit:%vreg74
1508B		  * %vreg74<def> = LUI 3; GR32Bit:%vreg74
1508B		  * READPM %vreg74<kill>, %vreg74<internal>, -84; GR32Bit:%vreg74
1508B		  * %vreg74<def> = LUI 3; GR32Bit:%vreg74
1508B		  * READPM %vreg74<kill>, %vreg74<internal>, -116; GR32Bit:%vreg74
1508B		  * %vreg75<def> = LUI 1; GR32Bit:%vreg75
1508B		  * WRITEPM %vreg75<internal>, %vreg75<internal>, -116; GR32Bit:%vreg75
1508B		  * %vreg75<def> = LUI 2; GR32Bit:%vreg75
1508B		  * WRITEPM %vreg75<internal>, %vreg75<internal>, -116; GR32Bit:%vreg75
1508B		  * %vreg75<def> = LUI 3; GR32Bit:%vreg75
1508B		  * WRITEPM %vreg75<internal>, %vreg75<internal>, -116; GR32Bit:%vreg75
1508B		  * %vreg75<def> = LUI 4; GR32Bit:%vreg75
1508B		  * READPM %vreg75<kill>, %vreg75<internal>, -68; GR32Bit:%vreg75
1508B		  * %vreg75<def> = LUI 4; GR32Bit:%vreg75
1508B		  * READPM %vreg75<kill>, %vreg75<internal>, -84; GR32Bit:%vreg75
1508B		  * %vreg75<def> = LUI 4; GR32Bit:%vreg75
1508B		  * READPM %vreg75<kill>, %vreg75<internal>, -100; GR32Bit:%vreg75
1508B		  * JAL <BB#4>
1508B		  * ADDI %zero<internal>, %zero<internal>, 0
1508B		  * ADDI %zero<internal>, %zero<internal>, 0
	    Successors according to CFG: BB#4(124) BB#8(4)
> %t0<def> = ADDI %zero, 9
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -68
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -68
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -68
> %t0<def> = LUI 0
> READPM %t1<kill>, %t0<internal>, 0
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, 4
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, 0
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, 4
> BGT <BB#8>, %t1<kill>, %t0<kill>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> JAL <BB#4>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> %t1<def> = ADDI %zero, <fi#1>
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t1<internal>, 0
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -84
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -84
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -84
> %t0<def> = LUI 1
> READPM %t1<kill>, %t0<internal>, 0
> READPM %t0<kill>, %t0<internal>, 4
> BGT <BB#8>, %t1, %t0
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> JAL <BB#4>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> %t0<def> = LUI 2
> READPM %t1<kill>, %t0<internal>, 0
> %t1<def> = LW %t1<kill>, 0; mem:LD4[%j]
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -100
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -100
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -116
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -116
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -116
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -100
> %t0<def> = LUI 0
> WRITEPM %t0<internal>, %t1<internal>, 0
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t1<internal>, 0
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t1<internal>, 0
> READPM %t0<kill>, %t0<internal>, 0
> BGT <BB#8>, %t1, %t0
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> JAL <BB#4>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> %t0<def> = LUI 3
> READPM %t1<kill>, %t0<internal>, 0
> READPM %t0<kill>, %t0<internal>, 4
> BGT <BB#8>, %t1, %t0
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -84
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -100
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -68
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -100
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -68
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -84
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -116
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -116
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -116
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -68
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -84
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -100
> JAL <BB#4>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
2132B	BB#4: derived from LLVM BB %for.body3
	    Predecessors according to CFG: BB#3
2140B		%vreg11<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg11
2140B		  * %vreg91<def> = LUI 1; GR32Bit:%vreg91
2140B		  * WRITEPM %vreg91<internal>, %vreg11<internal>, 0; GR32Bit:%vreg91,%vreg11
2152B		%vreg92<def> = LUI 1; GR32Bit:%vreg92
2152B		  * READPM %vreg11<kill>, %vreg92<internal>, 0; GR32Bit:%vreg11,%vreg92
2152B		  * SW %zero, %vreg11<kill>, 0; mem:ST4[%k] GR32Bit:%vreg11
	    Successors according to CFG: BB#5
> %t0<def> = ADDI %zero, <fi#2>
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, 0
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, 0
> SW %zero, %t0<kill>, 0; mem:ST4[%k]
2180B	BB#5: derived from LLVM BB %for.cond4
	    Predecessors according to CFG: BB#4 BB#6
2184B		%vreg14<def> = ADDI %zero, 9; GR32Bit:%vreg14
2184B		  * %vreg99<def> = LUI 2; GR32Bit:%vreg99
2184B		  * WRITEPM %vreg99<internal>, %vreg99<internal>, -68; GR32Bit:%vreg99
2184B		  * %vreg99<def> = LUI 3; GR32Bit:%vreg99
2184B		  * WRITEPM %vreg99<internal>, %vreg99<internal>, -68; GR32Bit:%vreg99
2184B		  * %vreg99<def> = LUI 4; GR32Bit:%vreg99
2184B		  * WRITEPM %vreg99<internal>, %vreg99<internal>, -68; GR32Bit:%vreg99
2184B		  * %vreg100<def> = LUI 2; GR32Bit:%vreg100
2184B		  * READPM %vreg100<kill>, %vreg100<internal>, -68; GR32Bit:%vreg100
2184B		  * %vreg101<def> = LUI 3; GR32Bit:%vreg101
2184B		  * READPM %vreg101<kill>, %vreg101<internal>, -68; GR32Bit:%vreg101
2184B		  * %vreg102<def> = LUI 4; GR32Bit:%vreg102
2184B		  * READPM %vreg102<kill>, %vreg102<internal>, -68; GR32Bit:%vreg102
2184B		  * %vreg104<def> = LUI 0; GR32Bit:%vreg104
2184B		  * READPM %vreg13<kill>, %vreg104<internal>, 0; GR32Bit:%vreg13,%vreg104
2184B		  * %vreg109<def> = LUI 1; GR32Bit:%vreg109
2184B		  * WRITEPM %vreg109<internal>, %vreg14<internal>, 4; GR32Bit:%vreg109,%vreg14
2184B		  * %vreg110<def> = LUI 2; GR32Bit:%vreg110
2184B		  * WRITEPM %vreg110<internal>, %vreg14<internal>, 0; GR32Bit:%vreg110,%vreg14
2184B		  * %vreg111<def> = LUI 3; GR32Bit:%vreg111
2184B		  * WRITEPM %vreg111<internal>, %vreg14<internal>, 4; GR32Bit:%vreg111,%vreg14
2184B		  * BGT <BB#7>, %vreg13<kill>, %vreg14<kill>; GR32Bit:%vreg13,%vreg14
2184B		  * ADDI %zero<internal>, %zero<internal>, 0
2184B		  * ADDI %zero<internal>, %zero<internal>, 0
2184B		  * JAL <BB#6>
2184B		  * ADDI %zero<internal>, %zero<internal>, 0
2184B		  * ADDI %zero<internal>, %zero<internal>, 0
2188B		%vreg12<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg12
2188B		  * %vreg97<def> = LUI 2; GR32Bit:%vreg97
2188B		  * WRITEPM %vreg97<internal>, %vreg12<internal>, 0; GR32Bit:%vreg97,%vreg12
2188B		  * %vreg99<def> = LUI 1; GR32Bit:%vreg99
2188B		  * READPM %vreg99<kill>, %vreg99<internal>, -84; GR32Bit:%vreg99
2188B		  * %vreg100<def> = LUI 1; GR32Bit:%vreg100
2188B		  * WRITEPM %vreg100<internal>, %vreg100<internal>, -84; GR32Bit:%vreg100
2188B		  * %vreg100<def> = LUI 3; GR32Bit:%vreg100
2188B		  * WRITEPM %vreg100<internal>, %vreg100<internal>, -84; GR32Bit:%vreg100
2188B		  * %vreg100<def> = LUI 4; GR32Bit:%vreg100
2188B		  * WRITEPM %vreg100<internal>, %vreg100<internal>, -84; GR32Bit:%vreg100
2188B		  * %vreg101<def> = LUI 3; GR32Bit:%vreg101
2188B		  * READPM %vreg101<kill>, %vreg101<internal>, -84; GR32Bit:%vreg101
2188B		  * %vreg102<def> = LUI 4; GR32Bit:%vreg102
2188B		  * READPM %vreg102<kill>, %vreg102<internal>, -84; GR32Bit:%vreg102
2188B		  * %vreg106<def> = LUI 1; GR32Bit:%vreg106
2188B		  * READPM %vreg13<kill>, %vreg106<internal>, 0; GR32Bit:%vreg13,%vreg106
2188B		  * READPM %vreg14<kill>, %vreg106<internal>, 4; GR32Bit:%vreg14,%vreg106
2188B		  * BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
2188B		  * ADDI %zero<internal>, %zero<internal>, 0
2188B		  * ADDI %zero<internal>, %zero<internal>, 0
2188B		  * JAL <BB#6>
2188B		  * ADDI %zero<internal>, %zero<internal>, 0
2188B		  * ADDI %zero<internal>, %zero<internal>, 0
2200B		%vreg98<def> = LUI 2; GR32Bit:%vreg98
2200B		  * READPM %vreg12<kill>, %vreg98<internal>, 0; GR32Bit:%vreg12,%vreg98
2200B		  * %vreg13<def> = LW %vreg12<kill>, 0; mem:LD4[%k] GR32Bit:%vreg13,%vreg12
2200B		  * %vreg99<def> = LUI 1; GR32Bit:%vreg99
2200B		  * READPM %vreg99<kill>, %vreg99<internal>, -100; GR32Bit:%vreg99
2200B		  * %vreg99<def> = LUI 1; GR32Bit:%vreg99
2200B		  * READPM %vreg99<kill>, %vreg99<internal>, -116; GR32Bit:%vreg99
2200B		  * %vreg100<def> = LUI 2; GR32Bit:%vreg100
2200B		  * READPM %vreg100<kill>, %vreg100<internal>, -100; GR32Bit:%vreg100
2200B		  * %vreg100<def> = LUI 2; GR32Bit:%vreg100
2200B		  * READPM %vreg100<kill>, %vreg100<internal>, -116; GR32Bit:%vreg100
2200B		  * %vreg101<def> = LUI 1; GR32Bit:%vreg101
2200B		  * WRITEPM %vreg101<internal>, %vreg101<internal>, -100; GR32Bit:%vreg101
2200B		  * %vreg101<def> = LUI 2; GR32Bit:%vreg101
2200B		  * WRITEPM %vreg101<internal>, %vreg101<internal>, -100; GR32Bit:%vreg101
2200B		  * %vreg101<def> = LUI 4; GR32Bit:%vreg101
2200B		  * WRITEPM %vreg101<internal>, %vreg101<internal>, -100; GR32Bit:%vreg101
2200B		  * %vreg101<def> = LUI 3; GR32Bit:%vreg101
2200B		  * READPM %vreg101<kill>, %vreg101<internal>, -116; GR32Bit:%vreg101
2200B		  * %vreg102<def> = LUI 1; GR32Bit:%vreg102
2200B		  * WRITEPM %vreg102<internal>, %vreg102<internal>, -116; GR32Bit:%vreg102
2200B		  * %vreg102<def> = LUI 2; GR32Bit:%vreg102
2200B		  * WRITEPM %vreg102<internal>, %vreg102<internal>, -116; GR32Bit:%vreg102
2200B		  * %vreg102<def> = LUI 3; GR32Bit:%vreg102
2200B		  * WRITEPM %vreg102<internal>, %vreg102<internal>, -116; GR32Bit:%vreg102
2200B		  * %vreg102<def> = LUI 4; GR32Bit:%vreg102
2200B		  * READPM %vreg102<kill>, %vreg102<internal>, -100; GR32Bit:%vreg102
2200B		  * %vreg103<def> = LUI 0; GR32Bit:%vreg103
2200B		  * WRITEPM %vreg103<internal>, %vreg13<internal>, 0; GR32Bit:%vreg103,%vreg13
2200B		  * %vreg105<def> = LUI 1; GR32Bit:%vreg105
2200B		  * WRITEPM %vreg105<internal>, %vreg13<internal>, 0; GR32Bit:%vreg105,%vreg13
2200B		  * %vreg107<def> = LUI 3; GR32Bit:%vreg107
2200B		  * WRITEPM %vreg107<internal>, %vreg13<internal>, 0; GR32Bit:%vreg107,%vreg13
2200B		  * READPM %vreg14<kill>, %vreg98<internal>, 0; GR32Bit:%vreg14,%vreg98
2200B		  * BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
2200B		  * ADDI %zero<internal>, %zero<internal>, 0
2200B		  * ADDI %zero<internal>, %zero<internal>, 0
2200B		  * JAL <BB#6>
2200B		  * ADDI %zero<internal>, %zero<internal>, 0
2200B		  * ADDI %zero<internal>, %zero<internal>, 0
2568B		%vreg108<def> = LUI 3; GR32Bit:%vreg108
2568B		  * READPM %vreg13<kill>, %vreg108<internal>, 0; GR32Bit:%vreg13,%vreg108
2568B		  * READPM %vreg14<kill>, %vreg108<internal>, 4; GR32Bit:%vreg14,%vreg108
2568B		  * BGT <BB#7>, %vreg13, %vreg14; GR32Bit:%vreg13,%vreg14
2568B		  * ADDI %zero<internal>, %zero<internal>, 0
2568B		  * ADDI %zero<internal>, %zero<internal>, 0
2568B		  * %vreg93<def> = LUI 2; GR32Bit:%vreg93
2568B		  * WRITEPM %vreg93<internal>, %vreg93<internal>, -68; GR32Bit:%vreg93
2568B		  * %vreg93<def> = LUI 3; GR32Bit:%vreg93
2568B		  * WRITEPM %vreg93<internal>, %vreg93<internal>, -68; GR32Bit:%vreg93
2568B		  * %vreg93<def> = LUI 4; GR32Bit:%vreg93
2568B		  * WRITEPM %vreg93<internal>, %vreg93<internal>, -68; GR32Bit:%vreg93
2568B		  * %vreg93<def> = LUI 1; GR32Bit:%vreg93
2568B		  * READPM %vreg93<kill>, %vreg93<internal>, -84; GR32Bit:%vreg93
2568B		  * %vreg93<def> = LUI 1; GR32Bit:%vreg93
2568B		  * READPM %vreg93<kill>, %vreg93<internal>, -100; GR32Bit:%vreg93
2568B		  * %vreg93<def> = LUI 1; GR32Bit:%vreg93
2568B		  * READPM %vreg93<kill>, %vreg93<internal>, -116; GR32Bit:%vreg93
2568B		  * %vreg94<def> = LUI 1; GR32Bit:%vreg94
2568B		  * WRITEPM %vreg94<internal>, %vreg94<internal>, -84; GR32Bit:%vreg94
2568B		  * %vreg94<def> = LUI 3; GR32Bit:%vreg94
2568B		  * WRITEPM %vreg94<internal>, %vreg94<internal>, -84; GR32Bit:%vreg94
2568B		  * %vreg94<def> = LUI 4; GR32Bit:%vreg94
2568B		  * WRITEPM %vreg94<internal>, %vreg94<internal>, -84; GR32Bit:%vreg94
2568B		  * %vreg94<def> = LUI 2; GR32Bit:%vreg94
2568B		  * READPM %vreg94<kill>, %vreg94<internal>, -68; GR32Bit:%vreg94
2568B		  * %vreg94<def> = LUI 2; GR32Bit:%vreg94
2568B		  * READPM %vreg94<kill>, %vreg94<internal>, -100; GR32Bit:%vreg94
2568B		  * %vreg94<def> = LUI 2; GR32Bit:%vreg94
2568B		  * READPM %vreg94<kill>, %vreg94<internal>, -116; GR32Bit:%vreg94
2568B		  * %vreg95<def> = LUI 1; GR32Bit:%vreg95
2568B		  * WRITEPM %vreg95<internal>, %vreg95<internal>, -100; GR32Bit:%vreg95
2568B		  * %vreg95<def> = LUI 2; GR32Bit:%vreg95
2568B		  * WRITEPM %vreg95<internal>, %vreg95<internal>, -100; GR32Bit:%vreg95
2568B		  * %vreg95<def> = LUI 4; GR32Bit:%vreg95
2568B		  * WRITEPM %vreg95<internal>, %vreg95<internal>, -100; GR32Bit:%vreg95
2568B		  * %vreg95<def> = LUI 3; GR32Bit:%vreg95
2568B		  * READPM %vreg95<kill>, %vreg95<internal>, -68; GR32Bit:%vreg95
2568B		  * %vreg95<def> = LUI 3; GR32Bit:%vreg95
2568B		  * READPM %vreg95<kill>, %vreg95<internal>, -84; GR32Bit:%vreg95
2568B		  * %vreg95<def> = LUI 3; GR32Bit:%vreg95
2568B		  * READPM %vreg95<kill>, %vreg95<internal>, -116; GR32Bit:%vreg95
2568B		  * %vreg96<def> = LUI 1; GR32Bit:%vreg96
2568B		  * WRITEPM %vreg96<internal>, %vreg96<internal>, -116; GR32Bit:%vreg96
2568B		  * %vreg96<def> = LUI 2; GR32Bit:%vreg96
2568B		  * WRITEPM %vreg96<internal>, %vreg96<internal>, -116; GR32Bit:%vreg96
2568B		  * %vreg96<def> = LUI 3; GR32Bit:%vreg96
2568B		  * WRITEPM %vreg96<internal>, %vreg96<internal>, -116; GR32Bit:%vreg96
2568B		  * %vreg96<def> = LUI 4; GR32Bit:%vreg96
2568B		  * READPM %vreg96<kill>, %vreg96<internal>, -68; GR32Bit:%vreg96
2568B		  * %vreg96<def> = LUI 4; GR32Bit:%vreg96
2568B		  * READPM %vreg96<kill>, %vreg96<internal>, -84; GR32Bit:%vreg96
2568B		  * %vreg96<def> = LUI 4; GR32Bit:%vreg96
2568B		  * READPM %vreg96<kill>, %vreg96<internal>, -100; GR32Bit:%vreg96
2568B		  * JAL <BB#6>
2568B		  * ADDI %zero<internal>, %zero<internal>, 0
2568B		  * ADDI %zero<internal>, %zero<internal>, 0
	    Successors according to CFG: BB#6(124) BB#7(4)
> %t0<def> = ADDI %zero, 9
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -68
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -68
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -68
> %t0<def> = LUI 0
> READPM %t1<kill>, %t0<internal>, 0
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, 4
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, 0
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, 4
> BGT <BB#7>, %t1<kill>, %t0<kill>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> JAL <BB#6>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> %t1<def> = ADDI %zero, <fi#2>
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t1<internal>, 0
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -84
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -84
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -84
> %t0<def> = LUI 1
> READPM %t1<kill>, %t0<internal>, 0
> READPM %t0<kill>, %t0<internal>, 4
> BGT <BB#7>, %t1, %t0
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> JAL <BB#6>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> %t0<def> = LUI 2
> READPM %t1<kill>, %t0<internal>, 0
> %t1<def> = LW %t1<kill>, 0; mem:LD4[%k]
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -100
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -100
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -116
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -116
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -116
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -100
> %t0<def> = LUI 0
> WRITEPM %t0<internal>, %t1<internal>, 0
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t1<internal>, 0
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t1<internal>, 0
> READPM %t0<kill>, %t0<internal>, 0
> BGT <BB#7>, %t1, %t0
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> JAL <BB#6>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> %t0<def> = LUI 3
> READPM %t1<kill>, %t0<internal>, 0
> READPM %t0<kill>, %t0<internal>, 4
> BGT <BB#7>, %t1, %t0
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -84
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -100
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -68
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -100
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -68
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -84
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -116
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -116
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -116
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -68
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -84
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -100
> JAL <BB#6>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
3192B	BB#6: derived from LLVM BB %for.inc
	    Predecessors according to CFG: BB#5
3196B		%vreg34<def> = LUI <ga:@b>[TF=2]; GR32Bit:%vreg34
3196B		  * %vreg35<def> = ADDI %zero, <ga:@b>[TF=3]; GR32Bit:%vreg35
3196B		  * %vreg112<def> = LUI 1; GR32Bit:%vreg112
3196B		  * WRITEPM %vreg112<internal>, %vreg35<internal>, 0; GR32Bit:%vreg112,%vreg35
3196B		  * WRITEPM %vreg112<internal>, %vreg34<internal>, 4; GR32Bit:%vreg112,%vreg34
3196B		  * %vreg117<def> = LUI 0; GR32Bit:%vreg117
3196B		  * READPM %vreg19<kill>, %vreg117<internal>, 0; GR32Bit:%vreg19,%vreg117
3196B		  * READPM %vreg22<kill>, %vreg117<internal>, 4; GR32Bit:%vreg22,%vreg117
3196B		  * %vreg33<def> = MUL %vreg22, %vreg19; GR32Bit:%vreg33,%vreg22,%vreg19
3196B		  * WRITEPM %vreg112<internal>, %vreg33<internal>, 8; GR32Bit:%vreg112,%vreg33
3196B		  * READPM %vreg39<kill>, %vreg117<internal>, 8; GR32Bit:%vreg39,%vreg117
3196B		  * %vreg40<def> = LW %vreg39<kill>, 0; mem:LD4[%arrayidx9] GR32Bit:%vreg40,%vreg39
3196B		  * %vreg24<def> = LUI <ga:@a>[TF=2]; GR32Bit:%vreg24
3196B		  * %vreg123<def> = LUI 2; GR32Bit:%vreg123
3196B		  * WRITEPM %vreg123<internal>, %vreg24<internal>, 8; GR32Bit:%vreg123,%vreg24
3196B		  * READPM %vreg20<kill>, %vreg117<internal>, 12; GR32Bit:%vreg20,%vreg117
3196B		  * %vreg21<def> = LW %vreg20<kill>, 0; mem:LD4[%i] GR32Bit:%vreg21,%vreg20
3196B		  * WRITEPM %vreg112<internal>, %vreg21<internal>, 12; GR32Bit:%vreg112,%vreg21
3196B		  * READPM %vreg45<kill>, %vreg117<internal>, 16; GR32Bit:%vreg45,%vreg117
3196B		  * READPM %vreg38<kill>, %vreg117<internal>, 20; GR32Bit:%vreg38,%vreg117
3196B		  * %vreg46<def> = ADD %vreg38<kill>, %vreg45<kill>; GR32Bit:%vreg46,%vreg38,%vreg45
3196B		  * READPM %vreg30<kill>, %vreg117<internal>, 24; GR32Bit:%vreg30,%vreg117
3196B		  * %vreg41<def> = ADD %vreg40<kill>, %vreg30<kill>; GR32Bit:%vreg41,%vreg40,%vreg30
3196B		  * WRITEPM %vreg112<internal>, %vreg41<internal>, 24; GR32Bit:%vreg112,%vreg41
3196B		  * WRITEPM %vreg112<internal>, %vreg46<internal>, 28; GR32Bit:%vreg112,%vreg46
3196B		  * READPM %vreg48<kill>, %vreg117<internal>, 28; GR32Bit:%vreg48,%vreg117
3196B		  * READPM %vreg18<kill>, %vreg117<internal>, 32; GR32Bit:%vreg18,%vreg117
3196B		  * READPM %vreg127<kill>, %vreg117<internal>, 36; GR32Bit:%vreg127,%vreg117
3196B		  * READPM %vreg129<kill>, %vreg117<internal>, 40; GR32Bit:%vreg129,%vreg117
3196B		  * SW %vreg48<kill>, %vreg18<kill>, 0; mem:ST4[%k] GR32Bit:%vreg48,%vreg18
3196B		  * %vreg130<def> = LUI 2; GR32Bit:%vreg130
3196B		  * WRITEPM %vreg130<internal>, %vreg130<internal>, -68; GR32Bit:%vreg130
3196B		  * %vreg130<def> = LUI 3; GR32Bit:%vreg130
3196B		  * WRITEPM %vreg130<internal>, %vreg130<internal>, -68; GR32Bit:%vreg130
3196B		  * %vreg130<def> = LUI 4; GR32Bit:%vreg130
3196B		  * WRITEPM %vreg130<internal>, %vreg130<internal>, -68; GR32Bit:%vreg130
3196B		  * %vreg131<def> = LUI 2; GR32Bit:%vreg131
3196B		  * READPM %vreg131<kill>, %vreg131<internal>, -68; GR32Bit:%vreg131
3196B		  * %vreg132<def> = LUI 3; GR32Bit:%vreg132
3196B		  * READPM %vreg132<kill>, %vreg132<internal>, -68; GR32Bit:%vreg132
3196B		  * %vreg133<def> = LUI 4; GR32Bit:%vreg133
3196B		  * READPM %vreg133<kill>, %vreg133<internal>, -68; GR32Bit:%vreg133
3196B		  * JAL <BB#5>
3196B		  * ADDI %zero<internal>, %zero<internal>, 0
3196B		  * ADDI %zero<internal>, %zero<internal>, 0
3204B		%vreg31<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg31
3204B		  * %vreg113<def> = LUI 1; GR32Bit:%vreg113
3204B		  * READPM %vreg35<kill>, %vreg113<internal>, 0; GR32Bit:%vreg35,%vreg113
3204B		  * READPM %vreg34<kill>, %vreg113<internal>, 4; GR32Bit:%vreg34,%vreg113
3204B		  * %vreg36<def> = ADD %vreg35<kill>, %vreg34<kill>; GR32Bit:%vreg36,%vreg35,%vreg34
3204B		  * %vreg114<def> = LUI 3; GR32Bit:%vreg114
3204B		  * WRITEPM %vreg114<internal>, %vreg31<internal>, 0; GR32Bit:%vreg114,%vreg31
3204B		  * READPM %vreg33<kill>, %vreg113<internal>, 8; GR32Bit:%vreg33,%vreg113
3204B		  * %vreg37<def> = ADD %vreg33<kill>, %vreg36<kill>; GR32Bit:%vreg37,%vreg33,%vreg36
3204B		  * WRITEPM %vreg114<internal>, %vreg37<internal>, 4; GR32Bit:%vreg114,%vreg37
3204B		  * %vreg42<def> = LUI <ga:@c>[TF=2]; GR32Bit:%vreg42
3204B		  * WRITEPM %vreg114<internal>, %vreg42<internal>, 16; GR32Bit:%vreg114,%vreg42
3204B		  * %vreg25<def> = ADDI %zero, <ga:@a>[TF=3]; GR32Bit:%vreg25
3204B		  * %vreg122<def> = LUI 2; GR32Bit:%vreg122
3204B		  * WRITEPM %vreg122<internal>, %vreg25<internal>, 4; GR32Bit:%vreg122,%vreg25
3204B		  * READPM %vreg21<kill>, %vreg113<internal>, 12; GR32Bit:%vreg21,%vreg113
3204B		  * READPM %vreg22<kill>, %vreg113<internal>, 16; GR32Bit:%vreg22,%vreg113
3204B		  * %vreg23<def> = MUL %vreg22<kill>, %vreg21<kill>; GR32Bit:%vreg23,%vreg22,%vreg21
3204B		  * WRITEPM %vreg122<internal>, %vreg23<internal>, 12; GR32Bit:%vreg122,%vreg23
3204B		  * WRITEPM %vreg114<internal>, %vreg23<internal>, 20; GR32Bit:%vreg114,%vreg23
3204B		  * READPM %vreg19<kill>, %vreg113<internal>, 20; GR32Bit:%vreg19,%vreg113
3204B		  * %vreg28<def> = SLLI %vreg19<kill>, 2; GR32Bit:%vreg28,%vreg19
3204B		  * WRITEPM %vreg122<internal>, %vreg28<internal>, 16; GR32Bit:%vreg122,%vreg28
3204B		  * READPM %vreg41<kill>, %vreg113<internal>, 24; GR32Bit:%vreg41,%vreg113
3204B		  * READPM %vreg46<kill>, %vreg113<internal>, 28; GR32Bit:%vreg46,%vreg113
3204B		  * SW %vreg41<kill>, %vreg46<kill>, 0; mem:ST4[%arrayidx11] GR32Bit:%vreg41,%vreg46
3204B		  * %vreg130<def> = LUI 1; GR32Bit:%vreg130
3204B		  * READPM %vreg130<kill>, %vreg130<internal>, -84; GR32Bit:%vreg130
3204B		  * %vreg131<def> = LUI 1; GR32Bit:%vreg131
3204B		  * WRITEPM %vreg131<internal>, %vreg131<internal>, -84; GR32Bit:%vreg131
3204B		  * %vreg131<def> = LUI 3; GR32Bit:%vreg131
3204B		  * WRITEPM %vreg131<internal>, %vreg131<internal>, -84; GR32Bit:%vreg131
3204B		  * %vreg131<def> = LUI 4; GR32Bit:%vreg131
3204B		  * WRITEPM %vreg131<internal>, %vreg131<internal>, -84; GR32Bit:%vreg131
3204B		  * %vreg132<def> = LUI 3; GR32Bit:%vreg132
3204B		  * READPM %vreg132<kill>, %vreg132<internal>, -84; GR32Bit:%vreg132
3204B		  * %vreg133<def> = LUI 4; GR32Bit:%vreg133
3204B		  * READPM %vreg133<kill>, %vreg133<internal>, -84; GR32Bit:%vreg133
3204B		  * JAL <BB#5>
3204B		  * ADDI %zero<internal>, %zero<internal>, 0
3204B		  * ADDI %zero<internal>, %zero<internal>, 0
3212B		%vreg18<def> = ADDI %zero, <fi#2>; GR32Bit:%vreg18
3212B		  * %vreg19<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg19,%vreg18
3212B		  * %vreg116<def> = LUI 0; GR32Bit:%vreg116
3212B		  * WRITEPM %vreg116<internal>, %vreg19<internal>, 0; GR32Bit:%vreg116,%vreg19
3212B		  * %vreg120<def> = LUI 2; GR32Bit:%vreg120
3212B		  * READPM %vreg32<kill>, %vreg120<internal>, 0; GR32Bit:%vreg32,%vreg120
3212B		  * %vreg38<def> = SLLI %vreg32<kill>, 2; GR32Bit:%vreg38,%vreg32
3212B		  * %vreg121<def> = LUI 3; GR32Bit:%vreg121
3212B		  * WRITEPM %vreg121<internal>, %vreg38<internal>, 8; GR32Bit:%vreg121,%vreg38
3212B		  * %vreg43<def> = ADDI %zero, <ga:@c>[TF=3]; GR32Bit:%vreg43
3212B		  * WRITEPM %vreg121<internal>, %vreg43<internal>, 12; GR32Bit:%vreg121,%vreg43
3212B		  * READPM %vreg25<kill>, %vreg120<internal>, 4; GR32Bit:%vreg25,%vreg120
3212B		  * READPM %vreg24<kill>, %vreg120<internal>, 8; GR32Bit:%vreg24,%vreg120
3212B		  * %vreg26<def> = ADD %vreg25<kill>, %vreg24<kill>; GR32Bit:%vreg26,%vreg25,%vreg24
3212B		  * READPM %vreg23<kill>, %vreg120<internal>, 12; GR32Bit:%vreg23,%vreg120
3212B		  * %vreg27<def> = ADD %vreg23, %vreg26<kill>; GR32Bit:%vreg27,%vreg23,%vreg26
3212B		  * WRITEPM %vreg116<internal>, %vreg38<internal>, 20; GR32Bit:%vreg116,%vreg38
3212B		  * %vreg125<def> = LUI 1; GR32Bit:%vreg125
3212B		  * WRITEPM %vreg125<internal>, %vreg19<internal>, 20; GR32Bit:%vreg125,%vreg19
3212B		  * READPM %vreg28<kill>, %vreg120<internal>, 16; GR32Bit:%vreg28,%vreg120
3212B		  * %vreg29<def> = ADD %vreg28<kill>, %vreg27<kill>; GR32Bit:%vreg29,%vreg28,%vreg27
3212B		  * WRITEPM %vreg121<internal>, %vreg29<internal>, 24; GR32Bit:%vreg121,%vreg29
3212B		  * %vreg47<def> = LW %vreg18, 0; mem:LD4[%k] GR32Bit:%vreg47,%vreg18
3212B		  * WRITEPM %vreg121<internal>, %vreg47<internal>, 28; GR32Bit:%vreg121,%vreg47
3212B		  * WRITEPM %vreg116<internal>, %vreg18<internal>, 32; GR32Bit:%vreg116,%vreg18
3212B		  * WRITEPM %vreg116<internal>, %vreg126<internal>, 36; GR32Bit:%vreg116,%vreg126
3212B		  * WRITEPM %vreg116<internal>, %vreg128<internal>, 40; GR32Bit:%vreg116,%vreg128
3212B		  * %vreg130<def> = LUI 1; GR32Bit:%vreg130
3212B		  * READPM %vreg130<kill>, %vreg130<internal>, -100; GR32Bit:%vreg130
3212B		  * %vreg131<def> = LUI 2; GR32Bit:%vreg131
3212B		  * READPM %vreg131<kill>, %vreg131<internal>, -100; GR32Bit:%vreg131
3212B		  * %vreg132<def> = LUI 1; GR32Bit:%vreg132
3212B		  * WRITEPM %vreg132<internal>, %vreg132<internal>, -100; GR32Bit:%vreg132
3212B		  * %vreg132<def> = LUI 2; GR32Bit:%vreg132
3212B		  * WRITEPM %vreg132<internal>, %vreg132<internal>, -100; GR32Bit:%vreg132
3212B		  * %vreg132<def> = LUI 4; GR32Bit:%vreg132
3212B		  * WRITEPM %vreg132<internal>, %vreg132<internal>, -100; GR32Bit:%vreg132
3212B		  * %vreg133<def> = LUI 4; GR32Bit:%vreg133
3212B		  * READPM %vreg133<kill>, %vreg133<internal>, -100; GR32Bit:%vreg133
3212B		  * JAL <BB#5>
3212B		  * ADDI %zero<internal>, %zero<internal>, 0
3212B		  * ADDI %zero<internal>, %zero<internal>, 0
3216B		%vreg22<def> = ADDI %zero, 40; GR32Bit:%vreg22
3216B		  * %vreg115<def> = LUI 3; GR32Bit:%vreg115
3216B		  * READPM %vreg31<kill>, %vreg115<internal>, 0; GR32Bit:%vreg31,%vreg115
3216B		  * %vreg32<def> = LW %vreg31<kill>, 0; mem:LD4[%j] GR32Bit:%vreg32,%vreg31
3216B		  * %vreg118<def> = LUI 0; GR32Bit:%vreg118
3216B		  * WRITEPM %vreg118<internal>, %vreg22<internal>, 4; GR32Bit:%vreg118,%vreg22
3216B		  * %vreg119<def> = LUI 2; GR32Bit:%vreg119
3216B		  * WRITEPM %vreg119<internal>, %vreg32<internal>, 0; GR32Bit:%vreg119,%vreg32
3216B		  * READPM %vreg37<kill>, %vreg115<internal>, 4; GR32Bit:%vreg37,%vreg115
3216B		  * READPM %vreg38<kill>, %vreg115<internal>, 8; GR32Bit:%vreg38,%vreg115
3216B		  * %vreg39<def> = ADD %vreg38, %vreg37<kill>; GR32Bit:%vreg39,%vreg38,%vreg37
3216B		  * WRITEPM %vreg118<internal>, %vreg39<internal>, 8; GR32Bit:%vreg118,%vreg39
3216B		  * READPM %vreg43<kill>, %vreg115<internal>, 12; GR32Bit:%vreg43,%vreg115
3216B		  * READPM %vreg42<kill>, %vreg115<internal>, 16; GR32Bit:%vreg42,%vreg115
3216B		  * %vreg44<def> = ADD %vreg43<kill>, %vreg42<kill>; GR32Bit:%vreg44,%vreg43,%vreg42
3216B		  * %vreg20<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg20
3216B		  * WRITEPM %vreg118<internal>, %vreg20<internal>, 12; GR32Bit:%vreg118,%vreg20
3216B		  * %vreg124<def> = LUI 1; GR32Bit:%vreg124
3216B		  * WRITEPM %vreg124<internal>, %vreg22<internal>, 16; GR32Bit:%vreg124,%vreg22
3216B		  * READPM %vreg23<kill>, %vreg115<internal>, 20; GR32Bit:%vreg23,%vreg115
3216B		  * %vreg45<def> = ADD %vreg23<kill>, %vreg44<kill>; GR32Bit:%vreg45,%vreg23,%vreg44
3216B		  * WRITEPM %vreg118<internal>, %vreg45<internal>, 16; GR32Bit:%vreg118,%vreg45
3216B		  * READPM %vreg29<kill>, %vreg115<internal>, 24; GR32Bit:%vreg29,%vreg115
3216B		  * %vreg30<def> = LW %vreg29<kill>, 0; mem:LD4[%arrayidx7] GR32Bit:%vreg30,%vreg29
3216B		  * WRITEPM %vreg118<internal>, %vreg30<internal>, 24; GR32Bit:%vreg118,%vreg30
3216B		  * READPM %vreg47<kill>, %vreg115<internal>, 28; GR32Bit:%vreg47,%vreg115
3216B		  * %vreg48<def> = ADDI %vreg47<kill>, 1; GR32Bit:%vreg48,%vreg47
3216B		  * WRITEPM %vreg118<internal>, %vreg48<internal>, 28; GR32Bit:%vreg118,%vreg48
3216B		  * %vreg130<def> = LUI 1; GR32Bit:%vreg130
3216B		  * READPM %vreg130<kill>, %vreg130<internal>, -116; GR32Bit:%vreg130
3216B		  * %vreg131<def> = LUI 2; GR32Bit:%vreg131
3216B		  * READPM %vreg131<kill>, %vreg131<internal>, -116; GR32Bit:%vreg131
3216B		  * %vreg132<def> = LUI 3; GR32Bit:%vreg132
3216B		  * READPM %vreg132<kill>, %vreg132<internal>, -116; GR32Bit:%vreg132
3216B		  * %vreg133<def> = LUI 1; GR32Bit:%vreg133
3216B		  * WRITEPM %vreg133<internal>, %vreg133<internal>, -116; GR32Bit:%vreg133
3216B		  * %vreg133<def> = LUI 2; GR32Bit:%vreg133
3216B		  * WRITEPM %vreg133<internal>, %vreg133<internal>, -116; GR32Bit:%vreg133
3216B		  * %vreg133<def> = LUI 3; GR32Bit:%vreg133
3216B		  * WRITEPM %vreg133<internal>, %vreg133<internal>, -116; GR32Bit:%vreg133
3216B		  * JAL <BB#5>
3216B		  * ADDI %zero<internal>, %zero<internal>, 0
3216B		  * ADDI %zero<internal>, %zero<internal>, 0
	    Successors according to CFG: BB#5
> %t1<def> = LUI <ga:@b>[TF=2]
> %t2<def> = ADDI %zero, <ga:@b>[TF=3]
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t2<internal>, 0
> WRITEPM %t0<internal>, %t1<internal>, 4
> %t0<def> = LUI 0
> READPM %t1<kill>, %t0<internal>, 0
> READPM %fp<kill>, %t0<internal>, 4
> %a1<def> = MUL %fp, %t1
> WRITEPM %t0<internal>, %a1<internal>, 8
> READPM %t2<kill>, %t0<internal>, 8
> %t2<def> = LW %t2<kill>, 0; mem:LD4[%arrayidx9]
> %a2<def> = LUI <ga:@a>[TF=2]
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %a2<internal>, 8
> READPM %a3<kill>, %t0<internal>, 12
> %a3<def> = LW %a3<kill>, 0; mem:LD4[%i]
> WRITEPM %t0<internal>, %a3<internal>, 12
> READPM %fp<kill>, %t0<internal>, 16
> READPM %a0<kill>, %t0<internal>, 20
> %fp<def> = ADD %a0<kill>, %fp<kill>
> READPM %t1<kill>, %t0<internal>, 24
> %t1<def> = ADD %t2<kill>, %t1<kill>
> WRITEPM %t0<internal>, %t1<internal>, 24
> WRITEPM %t0<internal>, %fp<internal>, 28
> READPM %t1<kill>, %t0<internal>, 28
> READPM %t0<kill>, %t0<internal>, 32
> READPM %t0<kill>, %t0<internal>, 36
> READPM %t0<kill>, %t0<internal>, 40
> SW %t1<kill>, %t0<kill>, 0; mem:ST4[%k]
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -68
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -68
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -68
> JAL <BB#5>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> %a0<def> = ADDI %zero, <fi#1>
> %t0<def> = LUI 1
> READPM %t2<kill>, %t0<internal>, 0
> READPM %t1<kill>, %t0<internal>, 4
> %t2<def> = ADD %t2<kill>, %t1<kill>
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %a0<internal>, 0
> READPM %a1<kill>, %t0<internal>, 8
> %t2<def> = ADD %a1<kill>, %t2<kill>
> WRITEPM %t0<internal>, %t2<internal>, 4
> %a1<def> = LUI <ga:@c>[TF=2]
> WRITEPM %t0<internal>, %a1<internal>, 16
> %a3<def> = ADDI %zero, <ga:@a>[TF=3]
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %a3<internal>, 4
> READPM %a3<kill>, %t0<internal>, 12
> READPM %fp<kill>, %t0<internal>, 16
> %fp<def> = MUL %fp<kill>, %a3<kill>
> WRITEPM %t0<internal>, %fp<internal>, 12
> WRITEPM %t0<internal>, %fp<internal>, 20
> READPM %t1<kill>, %t0<internal>, 20
> %t1<def> = SLLI %t1<kill>, 2
> WRITEPM %t0<internal>, %t1<internal>, 16
> READPM %t1<kill>, %t0<internal>, 24
> READPM %fp<kill>, %t0<internal>, 28
> SW %t1<kill>, %fp<kill>, 0; mem:ST4[%arrayidx11]
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -84
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -84
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -84
> JAL <BB#5>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> %t0<def> = ADDI %zero, <fi#2>
> %t1<def> = LW %t0, 0; mem:LD4[%k]
> %t0<def> = LUI 0
> WRITEPM %t0<internal>, %t1<internal>, 0
> %t0<def> = LUI 2
> READPM %a0<kill>, %t0<internal>, 0
> %a0<def> = SLLI %a0<kill>, 2
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %a0<internal>, 8
> %a2<def> = ADDI %zero, <ga:@c>[TF=3]
> WRITEPM %t0<internal>, %a2<internal>, 12
> READPM %a3<kill>, %t0<internal>, 4
> READPM %a2<kill>, %t0<internal>, 8
> %a2<def> = ADD %a3<kill>, %a2<kill>
> READPM %fp<kill>, %t0<internal>, 12
> %a2<def> = ADD %fp, %a2<kill>
> WRITEPM %t0<internal>, %a0<internal>, 20
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t1<internal>, 20
> READPM %t1<kill>, %t0<internal>, 16
> %t1<def> = ADD %t1<kill>, %a2<kill>
> WRITEPM %t0<internal>, %t1<internal>, 24
> %t1<def> = LW %t0, 0; mem:LD4[%k]
> WRITEPM %t0<internal>, %t1<internal>, 28
> WRITEPM %t0<internal>, %t0<internal>, 32
> WRITEPM %t0<internal>, %t0<internal>, 36
> WRITEPM %t0<internal>, %t0<internal>, 40
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -100
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -100
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -100
> JAL <BB#5>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> %fp<def> = ADDI %zero, 40
> %t0<def> = LUI 3
> READPM %a0<kill>, %t0<internal>, 0
> %a0<def> = LW %a0<kill>, 0; mem:LD4[%j]
> %t0<def> = LUI 0
> WRITEPM %t0<internal>, %fp<internal>, 4
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %a0<internal>, 0
> READPM %t2<kill>, %t0<internal>, 4
> READPM %a0<kill>, %t0<internal>, 8
> %t2<def> = ADD %a0, %t2<kill>
> WRITEPM %t0<internal>, %t2<internal>, 8
> READPM %a2<kill>, %t0<internal>, 12
> READPM %a1<kill>, %t0<internal>, 16
> %a1<def> = ADD %a2<kill>, %a1<kill>
> %a3<def> = ADDI %zero, <fi#0>
> WRITEPM %t0<internal>, %a3<internal>, 12
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %fp<internal>, 16
> READPM %fp<kill>, %t0<internal>, 20
> %fp<def> = ADD %fp<kill>, %a1<kill>
> WRITEPM %t0<internal>, %fp<internal>, 16
> READPM %t1<kill>, %t0<internal>, 24
> %t1<def> = LW %t1<kill>, 0; mem:LD4[%arrayidx7]
> WRITEPM %t0<internal>, %t1<internal>, 24
> READPM %t1<kill>, %t0<internal>, 28
> %t1<def> = ADDI %t1<kill>, 1
> WRITEPM %t0<internal>, %t1<internal>, 28
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -116
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -116
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -116
> JAL <BB#5>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
4404B	BB#7: derived from LLVM BB %for.inc12
	    Predecessors according to CFG: BB#5
4412B		%vreg15<def> = ADDI %zero, <fi#1>; GR32Bit:%vreg15
4412B		  * %vreg134<def> = LUI 1; GR32Bit:%vreg134
4412B		  * WRITEPM %vreg134<internal>, %vreg15<internal>, 0; GR32Bit:%vreg134,%vreg15
4412B		  * %vreg140<def> = LUI 3; GR32Bit:%vreg140
4412B		  * WRITEPM %vreg140<internal>, %vreg15<internal>, 4; GR32Bit:%vreg140,%vreg15
4412B		  * %vreg144<def> = LUI 2; GR32Bit:%vreg144
4412B		  * WRITEPM %vreg144<internal>, %vreg144<internal>, -68; GR32Bit:%vreg144
4412B		  * %vreg144<def> = LUI 3; GR32Bit:%vreg144
4412B		  * WRITEPM %vreg144<internal>, %vreg144<internal>, -68; GR32Bit:%vreg144
4412B		  * %vreg144<def> = LUI 4; GR32Bit:%vreg144
4412B		  * WRITEPM %vreg144<internal>, %vreg144<internal>, -68; GR32Bit:%vreg144
4412B		  * %vreg145<def> = LUI 2; GR32Bit:%vreg145
4412B		  * READPM %vreg145<kill>, %vreg145<internal>, -68; GR32Bit:%vreg145
4412B		  * %vreg146<def> = LUI 3; GR32Bit:%vreg146
4412B		  * READPM %vreg146<kill>, %vreg146<internal>, -68; GR32Bit:%vreg146
4412B		  * %vreg147<def> = LUI 4; GR32Bit:%vreg147
4412B		  * READPM %vreg147<kill>, %vreg147<internal>, -68; GR32Bit:%vreg147
4412B		  * JAL <BB#3>
4412B		  * ADDI %zero<internal>, %zero<internal>, 0
4412B		  * ADDI %zero<internal>, %zero<internal>, 0
4424B		%vreg135<def> = LUI 1; GR32Bit:%vreg135
4424B		  * READPM %vreg15<kill>, %vreg135<internal>, 0; GR32Bit:%vreg15,%vreg135
4424B		  * %vreg16<def> = LW %vreg15, 0; mem:LD4[%j] GR32Bit:%vreg16,%vreg15
4424B		  * %vreg136<def> = LUI 2; GR32Bit:%vreg136
4424B		  * WRITEPM %vreg136<internal>, %vreg16<internal>, 0; GR32Bit:%vreg136,%vreg16
4424B		  * %vreg141<def> = LUI 3; GR32Bit:%vreg141
4424B		  * WRITEPM %vreg141<internal>, %vreg142<internal>, 8; GR32Bit:%vreg141,%vreg142
4424B		  * %vreg144<def> = LUI 1; GR32Bit:%vreg144
4424B		  * READPM %vreg144<kill>, %vreg144<internal>, -84; GR32Bit:%vreg144
4424B		  * %vreg145<def> = LUI 1; GR32Bit:%vreg145
4424B		  * WRITEPM %vreg145<internal>, %vreg145<internal>, -84; GR32Bit:%vreg145
4424B		  * %vreg145<def> = LUI 3; GR32Bit:%vreg145
4424B		  * WRITEPM %vreg145<internal>, %vreg145<internal>, -84; GR32Bit:%vreg145
4424B		  * %vreg145<def> = LUI 4; GR32Bit:%vreg145
4424B		  * WRITEPM %vreg145<internal>, %vreg145<internal>, -84; GR32Bit:%vreg145
4424B		  * %vreg146<def> = LUI 3; GR32Bit:%vreg146
4424B		  * READPM %vreg146<kill>, %vreg146<internal>, -84; GR32Bit:%vreg146
4424B		  * %vreg147<def> = LUI 4; GR32Bit:%vreg147
4424B		  * READPM %vreg147<kill>, %vreg147<internal>, -84; GR32Bit:%vreg147
4424B		  * JAL <BB#3>
4424B		  * ADDI %zero<internal>, %zero<internal>, 0
4424B		  * ADDI %zero<internal>, %zero<internal>, 0
4456B		%vreg137<def> = LUI 2; GR32Bit:%vreg137
4456B		  * READPM %vreg16<kill>, %vreg137<internal>, 0; GR32Bit:%vreg16,%vreg137
4456B		  * %vreg17<def> = ADDI %vreg16<kill>, 1; GR32Bit:%vreg17,%vreg16
4456B		  * %vreg138<def> = LUI 3; GR32Bit:%vreg138
4456B		  * WRITEPM %vreg138<internal>, %vreg17<internal>, 0; GR32Bit:%vreg138,%vreg17
4456B		  * %vreg144<def> = LUI 1; GR32Bit:%vreg144
4456B		  * READPM %vreg144<kill>, %vreg144<internal>, -100; GR32Bit:%vreg144
4456B		  * %vreg145<def> = LUI 2; GR32Bit:%vreg145
4456B		  * READPM %vreg145<kill>, %vreg145<internal>, -100; GR32Bit:%vreg145
4456B		  * %vreg146<def> = LUI 1; GR32Bit:%vreg146
4456B		  * WRITEPM %vreg146<internal>, %vreg146<internal>, -100; GR32Bit:%vreg146
4456B		  * %vreg146<def> = LUI 2; GR32Bit:%vreg146
4456B		  * WRITEPM %vreg146<internal>, %vreg146<internal>, -100; GR32Bit:%vreg146
4456B		  * %vreg146<def> = LUI 4; GR32Bit:%vreg146
4456B		  * WRITEPM %vreg146<internal>, %vreg146<internal>, -100; GR32Bit:%vreg146
4456B		  * %vreg147<def> = LUI 4; GR32Bit:%vreg147
4456B		  * READPM %vreg147<kill>, %vreg147<internal>, -100; GR32Bit:%vreg147
4456B		  * JAL <BB#3>
4456B		  * ADDI %zero<internal>, %zero<internal>, 0
4456B		  * ADDI %zero<internal>, %zero<internal>, 0
4488B		%vreg139<def> = LUI 3; GR32Bit:%vreg139
4488B		  * READPM %vreg17<kill>, %vreg139<internal>, 0; GR32Bit:%vreg17,%vreg139
4488B		  * READPM %vreg15<kill>, %vreg139<internal>, 4; GR32Bit:%vreg15,%vreg139
4488B		  * READPM %vreg143<kill>, %vreg139<internal>, 8; GR32Bit:%vreg143,%vreg139
4488B		  * SW %vreg17<kill>, %vreg15<kill>, 0; mem:ST4[%j] GR32Bit:%vreg17,%vreg15
4488B		  * %vreg144<def> = LUI 1; GR32Bit:%vreg144
4488B		  * READPM %vreg144<kill>, %vreg144<internal>, -116; GR32Bit:%vreg144
4488B		  * %vreg145<def> = LUI 2; GR32Bit:%vreg145
4488B		  * READPM %vreg145<kill>, %vreg145<internal>, -116; GR32Bit:%vreg145
4488B		  * %vreg146<def> = LUI 3; GR32Bit:%vreg146
4488B		  * READPM %vreg146<kill>, %vreg146<internal>, -116; GR32Bit:%vreg146
4488B		  * %vreg147<def> = LUI 1; GR32Bit:%vreg147
4488B		  * WRITEPM %vreg147<internal>, %vreg147<internal>, -116; GR32Bit:%vreg147
4488B		  * %vreg147<def> = LUI 2; GR32Bit:%vreg147
4488B		  * WRITEPM %vreg147<internal>, %vreg147<internal>, -116; GR32Bit:%vreg147
4488B		  * %vreg147<def> = LUI 3; GR32Bit:%vreg147
4488B		  * WRITEPM %vreg147<internal>, %vreg147<internal>, -116; GR32Bit:%vreg147
4488B		  * JAL <BB#3>
4488B		  * ADDI %zero<internal>, %zero<internal>, 0
4488B		  * ADDI %zero<internal>, %zero<internal>, 0
	    Successors according to CFG: BB#3
> %t0<def> = ADDI %zero, <fi#1>
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, 0
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, 4
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -68
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -68
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -68
> JAL <BB#3>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, 0
> %t1<def> = LW %t0, 0; mem:LD4[%j]
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t1<internal>, 0
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, 8
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -84
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -84
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -84
> JAL <BB#3>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> %t0<def> = LUI 2
> READPM %t1<kill>, %t0<internal>, 0
> %t1<def> = ADDI %t1<kill>, 1
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t1<internal>, 0
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -100
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -100
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -100
> JAL <BB#3>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> %t0<def> = LUI 3
> READPM %t1<kill>, %t0<internal>, 0
> READPM %t0<kill>, %t0<internal>, 4
> READPM %t0<kill>, %t0<internal>, 8
> SW %t1<kill>, %t0<kill>, 0; mem:ST4[%j]
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -116
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -116
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -116
> JAL <BB#3>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
4908B	BB#8: derived from LLVM BB %for.inc15
	    Predecessors according to CFG: BB#3
4916B		%vreg8<def> = ADDI %zero, <fi#0>; GR32Bit:%vreg8
4916B		  * %vreg148<def> = LUI 1; GR32Bit:%vreg148
4916B		  * WRITEPM %vreg148<internal>, %vreg8<internal>, 0; GR32Bit:%vreg148,%vreg8
4916B		  * %vreg154<def> = LUI 3; GR32Bit:%vreg154
4916B		  * WRITEPM %vreg154<internal>, %vreg8<internal>, 4; GR32Bit:%vreg154,%vreg8
4916B		  * %vreg158<def> = LUI 2; GR32Bit:%vreg158
4916B		  * WRITEPM %vreg158<internal>, %vreg158<internal>, -68; GR32Bit:%vreg158
4916B		  * %vreg158<def> = LUI 3; GR32Bit:%vreg158
4916B		  * WRITEPM %vreg158<internal>, %vreg158<internal>, -68; GR32Bit:%vreg158
4916B		  * %vreg158<def> = LUI 4; GR32Bit:%vreg158
4916B		  * WRITEPM %vreg158<internal>, %vreg158<internal>, -68; GR32Bit:%vreg158
4916B		  * %vreg159<def> = LUI 2; GR32Bit:%vreg159
4916B		  * READPM %vreg159<kill>, %vreg159<internal>, -68; GR32Bit:%vreg159
4916B		  * %vreg160<def> = LUI 3; GR32Bit:%vreg160
4916B		  * READPM %vreg160<kill>, %vreg160<internal>, -68; GR32Bit:%vreg160
4916B		  * %vreg161<def> = LUI 4; GR32Bit:%vreg161
4916B		  * READPM %vreg161<kill>, %vreg161<internal>, -68; GR32Bit:%vreg161
4916B		  * JAL <BB#1>
4916B		  * ADDI %zero<internal>, %zero<internal>, 0
4916B		  * ADDI %zero<internal>, %zero<internal>, 0
4928B		%vreg149<def> = LUI 1; GR32Bit:%vreg149
4928B		  * READPM %vreg8<kill>, %vreg149<internal>, 0; GR32Bit:%vreg8,%vreg149
4928B		  * %vreg9<def> = LW %vreg8, 0; mem:LD4[%i] GR32Bit:%vreg9,%vreg8
4928B		  * %vreg150<def> = LUI 2; GR32Bit:%vreg150
4928B		  * WRITEPM %vreg150<internal>, %vreg9<internal>, 0; GR32Bit:%vreg150,%vreg9
4928B		  * %vreg155<def> = LUI 3; GR32Bit:%vreg155
4928B		  * WRITEPM %vreg155<internal>, %vreg156<internal>, 8; GR32Bit:%vreg155,%vreg156
4928B		  * %vreg158<def> = LUI 1; GR32Bit:%vreg158
4928B		  * READPM %vreg158<kill>, %vreg158<internal>, -84; GR32Bit:%vreg158
4928B		  * %vreg159<def> = LUI 1; GR32Bit:%vreg159
4928B		  * WRITEPM %vreg159<internal>, %vreg159<internal>, -84; GR32Bit:%vreg159
4928B		  * %vreg159<def> = LUI 3; GR32Bit:%vreg159
4928B		  * WRITEPM %vreg159<internal>, %vreg159<internal>, -84; GR32Bit:%vreg159
4928B		  * %vreg159<def> = LUI 4; GR32Bit:%vreg159
4928B		  * WRITEPM %vreg159<internal>, %vreg159<internal>, -84; GR32Bit:%vreg159
4928B		  * %vreg160<def> = LUI 3; GR32Bit:%vreg160
4928B		  * READPM %vreg160<kill>, %vreg160<internal>, -84; GR32Bit:%vreg160
4928B		  * %vreg161<def> = LUI 4; GR32Bit:%vreg161
4928B		  * READPM %vreg161<kill>, %vreg161<internal>, -84; GR32Bit:%vreg161
4928B		  * JAL <BB#1>
4928B		  * ADDI %zero<internal>, %zero<internal>, 0
4928B		  * ADDI %zero<internal>, %zero<internal>, 0
4960B		%vreg151<def> = LUI 2; GR32Bit:%vreg151
4960B		  * READPM %vreg9<kill>, %vreg151<internal>, 0; GR32Bit:%vreg9,%vreg151
4960B		  * %vreg10<def> = ADDI %vreg9<kill>, 1; GR32Bit:%vreg10,%vreg9
4960B		  * %vreg152<def> = LUI 3; GR32Bit:%vreg152
4960B		  * WRITEPM %vreg152<internal>, %vreg10<internal>, 0; GR32Bit:%vreg152,%vreg10
4960B		  * %vreg158<def> = LUI 1; GR32Bit:%vreg158
4960B		  * READPM %vreg158<kill>, %vreg158<internal>, -100; GR32Bit:%vreg158
4960B		  * %vreg159<def> = LUI 2; GR32Bit:%vreg159
4960B		  * READPM %vreg159<kill>, %vreg159<internal>, -100; GR32Bit:%vreg159
4960B		  * %vreg160<def> = LUI 1; GR32Bit:%vreg160
4960B		  * WRITEPM %vreg160<internal>, %vreg160<internal>, -100; GR32Bit:%vreg160
4960B		  * %vreg160<def> = LUI 2; GR32Bit:%vreg160
4960B		  * WRITEPM %vreg160<internal>, %vreg160<internal>, -100; GR32Bit:%vreg160
4960B		  * %vreg160<def> = LUI 4; GR32Bit:%vreg160
4960B		  * WRITEPM %vreg160<internal>, %vreg160<internal>, -100; GR32Bit:%vreg160
4960B		  * %vreg161<def> = LUI 4; GR32Bit:%vreg161
4960B		  * READPM %vreg161<kill>, %vreg161<internal>, -100; GR32Bit:%vreg161
4960B		  * JAL <BB#1>
4960B		  * ADDI %zero<internal>, %zero<internal>, 0
4960B		  * ADDI %zero<internal>, %zero<internal>, 0
4992B		%vreg153<def> = LUI 3; GR32Bit:%vreg153
4992B		  * READPM %vreg10<kill>, %vreg153<internal>, 0; GR32Bit:%vreg10,%vreg153
4992B		  * READPM %vreg8<kill>, %vreg153<internal>, 4; GR32Bit:%vreg8,%vreg153
4992B		  * READPM %vreg157<kill>, %vreg153<internal>, 8; GR32Bit:%vreg157,%vreg153
4992B		  * SW %vreg10<kill>, %vreg8<kill>, 0; mem:ST4[%i] GR32Bit:%vreg10,%vreg8
4992B		  * %vreg158<def> = LUI 1; GR32Bit:%vreg158
4992B		  * READPM %vreg158<kill>, %vreg158<internal>, -116; GR32Bit:%vreg158
4992B		  * %vreg159<def> = LUI 2; GR32Bit:%vreg159
4992B		  * READPM %vreg159<kill>, %vreg159<internal>, -116; GR32Bit:%vreg159
4992B		  * %vreg160<def> = LUI 3; GR32Bit:%vreg160
4992B		  * READPM %vreg160<kill>, %vreg160<internal>, -116; GR32Bit:%vreg160
4992B		  * %vreg161<def> = LUI 1; GR32Bit:%vreg161
4992B		  * WRITEPM %vreg161<internal>, %vreg161<internal>, -116; GR32Bit:%vreg161
4992B		  * %vreg161<def> = LUI 2; GR32Bit:%vreg161
4992B		  * WRITEPM %vreg161<internal>, %vreg161<internal>, -116; GR32Bit:%vreg161
4992B		  * %vreg161<def> = LUI 3; GR32Bit:%vreg161
4992B		  * WRITEPM %vreg161<internal>, %vreg161<internal>, -116; GR32Bit:%vreg161
4992B		  * JAL <BB#1>
4992B		  * ADDI %zero<internal>, %zero<internal>, 0
4992B		  * ADDI %zero<internal>, %zero<internal>, 0
	    Successors according to CFG: BB#1
> %t0<def> = ADDI %zero, <fi#0>
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, 0
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, 4
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -68
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -68
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -68
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -68
> JAL <BB#1>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, 0
> %t1<def> = LW %t0, 0; mem:LD4[%i]
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t1<internal>, 0
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, 8
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -84
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -84
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -84
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -84
> JAL <BB#1>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> %t0<def> = LUI 2
> READPM %t1<kill>, %t0<internal>, 0
> %t1<def> = ADDI %t1<kill>, 1
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t1<internal>, 0
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -100
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -100
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 4
> WRITEPM %t0<internal>, %t0<internal>, -100
> %t0<def> = LUI 4
> READPM %t0<kill>, %t0<internal>, -100
> JAL <BB#1>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> %t0<def> = LUI 3
> READPM %t1<kill>, %t0<internal>, 0
> READPM %t0<kill>, %t0<internal>, 4
> READPM %t0<kill>, %t0<internal>, 8
> SW %t1<kill>, %t0<kill>, 0; mem:ST4[%i]
> %t0<def> = LUI 1
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 2
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 3
> READPM %t0<kill>, %t0<internal>, -116
> %t0<def> = LUI 1
> WRITEPM %t0<internal>, %t0<internal>, -116
> %t0<def> = LUI 2
> WRITEPM %t0<internal>, %t0<internal>, -116
> %t0<def> = LUI 3
> WRITEPM %t0<internal>, %t0<internal>, -116
> JAL <BB#1>
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
5412B	BB#9: derived from LLVM BB %for.end17
	    Predecessors according to CFG: BB#1
5416B		SRLI %zero<kill>, %zero<internal>, 6
5416B		  * FDELETE %zero<internal>, 0
5416B		  * END 0
5416B		  * ADDI %zero<internal>, %zero<internal>, 0
5416B		  * ADDI %zero<internal>, %zero<internal>, 0
5416B		  * END 0
5416B		  * ADDI %zero<internal>, %zero<internal>, 0
5416B		  * ADDI %zero<internal>, %zero<internal>, 0
5416B		  * END 0
5416B		  * ADDI %zero<internal>, %zero<internal>, 0
5416B		  * ADDI %zero<internal>, %zero<internal>, 0
5416B		  * END 0
5416B		  * ADDI %zero<internal>, %zero<internal>, 0
5416B		  * ADDI %zero<internal>, %zero<internal>, 0
> SRLI %zero<kill>, %zero<internal>, 6
> FDELETE %zero<internal>, 0
> END 0
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> END 0
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> END 0
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
> END 0
> ADDI %zero<internal>, %zero<internal>, 0
> ADDI %zero<internal>, %zero<internal>, 0
********** EMITTING LIVE DEBUG VARIABLES **********
Machine Function
********** EXPANDING POST-RA PSEUDO INSTRS **********
********** Function: main
HyperOp:main
printing instruction:  %t0<def> = ADDI %zero, <fi#0>
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, 0
printing instruction:  %t0<def> = ADDI %zero, 9
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 0
printing instruction:  READPM %t1<kill>, %t0<internal>, 0
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, 4
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, 0
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, 4
printing instruction:  BGT <BB#9>, %t1<kill>, %t0<kill>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  JAL <BB#2>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %t0<def> = ADDI %zero, <fi#1>
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, 0
printing instruction:  %t0<def> = ADDI %zero, 9
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 0
printing instruction:  READPM %t1<kill>, %t0<internal>, 0
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, 4
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, 0
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, 4
printing instruction:  BGT <BB#8>, %t1<kill>, %t0<kill>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  JAL <BB#4>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %t0<def> = ADDI %zero, <fi#2>
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, 0
printing instruction:  %t0<def> = ADDI %zero, 9
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 0
printing instruction:  READPM %t1<kill>, %t0<internal>, 0
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, 4
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, 0
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, 4
printing instruction:  BGT <BB#7>, %t1<kill>, %t0<kill>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  JAL <BB#6>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %t1<def> = LUI <ga:@b>[TF=2]
printing instruction:  %t2<def> = ADDI %zero, <ga:@b>[TF=3]
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t2<internal>, 0
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 4
printing instruction:  %t0<def> = LUI 0
printing instruction:  READPM %t1<kill>, %t0<internal>, 0
printing instruction:  READPM %fp<kill>, %t0<internal>, 4
printing instruction:  %a1<def> = MUL %fp, %t1
printing instruction:  WRITEPM %t0<internal>, %a1<internal>, 8
printing instruction:  READPM %t2<kill>, %t0<internal>, 8
printing instruction:  %t2<def> = LW %t2<kill>, 0; mem:LD4[%arrayidx9]
printing instruction:  %a2<def> = LUI <ga:@a>[TF=2]
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %a2<internal>, 8
printing instruction:  READPM %a3<kill>, %t0<internal>, 12
printing instruction:  %a3<def> = LW %a3<kill>, 0; mem:LD4[%i]
printing instruction:  WRITEPM %t0<internal>, %a3<internal>, 12
printing instruction:  READPM %fp<kill>, %t0<internal>, 16
printing instruction:  READPM %a0<kill>, %t0<internal>, 20
printing instruction:  %fp<def> = ADD %a0<kill>, %fp<kill>
printing instruction:  READPM %t1<kill>, %t0<internal>, 24
printing instruction:  %t1<def> = ADD %t2<kill>, %t1<kill>
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 24
printing instruction:  WRITEPM %t0<internal>, %fp<internal>, 28
printing instruction:  READPM %t1<kill>, %t0<internal>, 28
printing instruction:  READPM %t0<kill>, %t0<internal>, 32
printing instruction:  READPM %t0<kill>, %t0<internal>, 36
printing instruction:  READPM %t0<kill>, %t0<internal>, 40
printing instruction:  SW %t1<kill>, %t0<kill>, 0; mem:ST4[%k]
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  JAL <BB#5>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %t0<def> = ADDI %zero, <fi#1>
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, 0
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, 4
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  JAL <BB#3>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %t0<def> = ADDI %zero, <fi#0>
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, 0
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, 4
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  JAL <BB#1>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  SRLI %zero<kill>, %zero<internal>, 6
printing instruction:  FDELETE %zero<internal>, 0
printing instruction:  END 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  END 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  END 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  END 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, 0
printing instruction:  SW %zero, %t0<kill>, 0; mem:ST4[%i]
printing instruction:  %t1<def> = ADDI %zero, <fi#0>
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 0
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t1<kill>, %t0<internal>, 0
printing instruction:  READPM %t0<kill>, %t0<internal>, 4
printing instruction:  BGT <BB#9>, %t1, %t0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  JAL <BB#2>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, 0
printing instruction:  SW %zero, %t0<kill>, 0; mem:ST4[%j]
printing instruction:  %t1<def> = ADDI %zero, <fi#1>
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 0
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t1<kill>, %t0<internal>, 0
printing instruction:  READPM %t0<kill>, %t0<internal>, 4
printing instruction:  BGT <BB#8>, %t1, %t0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  JAL <BB#4>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, 0
printing instruction:  SW %zero, %t0<kill>, 0; mem:ST4[%k]
printing instruction:  %t1<def> = ADDI %zero, <fi#2>
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 0
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t1<kill>, %t0<internal>, 0
printing instruction:  READPM %t0<kill>, %t0<internal>, 4
printing instruction:  BGT <BB#7>, %t1, %t0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  JAL <BB#6>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %a0<def> = ADDI %zero, <fi#1>
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t2<kill>, %t0<internal>, 0
printing instruction:  READPM %t1<kill>, %t0<internal>, 4
printing instruction:  %t2<def> = ADD %t2<kill>, %t1<kill>
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %a0<internal>, 0
printing instruction:  READPM %a1<kill>, %t0<internal>, 8
printing instruction:  %t2<def> = ADD %a1<kill>, %t2<kill>
printing instruction:  WRITEPM %t0<internal>, %t2<internal>, 4
printing instruction:  %a1<def> = LUI <ga:@c>[TF=2]
printing instruction:  WRITEPM %t0<internal>, %a1<internal>, 16
printing instruction:  %a3<def> = ADDI %zero, <ga:@a>[TF=3]
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %a3<internal>, 4
printing instruction:  READPM %a3<kill>, %t0<internal>, 12
printing instruction:  READPM %fp<kill>, %t0<internal>, 16
printing instruction:  %fp<def> = MUL %fp<kill>, %a3<kill>
printing instruction:  WRITEPM %t0<internal>, %fp<internal>, 12
printing instruction:  WRITEPM %t0<internal>, %fp<internal>, 20
printing instruction:  READPM %t1<kill>, %t0<internal>, 20
printing instruction:  %t1<def> = SLLI %t1<kill>, 2
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 16
printing instruction:  READPM %t1<kill>, %t0<internal>, 24
printing instruction:  READPM %fp<kill>, %t0<internal>, 28
printing instruction:  SW %t1<kill>, %fp<kill>, 0; mem:ST4[%arrayidx11]
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  JAL <BB#5>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, 0
printing instruction:  %t1<def> = LW %t0, 0; mem:LD4[%j]
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 0
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, 8
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  JAL <BB#3>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, 0
printing instruction:  %t1<def> = LW %t0, 0; mem:LD4[%i]
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 0
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, 8
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  JAL <BB#1>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t1<kill>, %t0<internal>, 0
printing instruction:  %t1<def> = LW %t1<kill>, 0; mem:LD4[%i]
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 0
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 0
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 0
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 0
printing instruction:  READPM %t0<kill>, %t0<internal>, 0
printing instruction:  BGT <BB#9>, %t1, %t0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  JAL <BB#2>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t1<kill>, %t0<internal>, 0
printing instruction:  %t1<def> = LW %t1<kill>, 0; mem:LD4[%j]
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 0
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 0
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 0
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 0
printing instruction:  READPM %t0<kill>, %t0<internal>, 0
printing instruction:  BGT <BB#8>, %t1, %t0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  JAL <BB#4>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t1<kill>, %t0<internal>, 0
printing instruction:  %t1<def> = LW %t1<kill>, 0; mem:LD4[%k]
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 0
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 0
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 0
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 0
printing instruction:  READPM %t0<kill>, %t0<internal>, 0
printing instruction:  BGT <BB#7>, %t1, %t0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  JAL <BB#6>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %t0<def> = ADDI %zero, <fi#2>
printing instruction:  %t1<def> = LW %t0, 0; mem:LD4[%k]
printing instruction:  %t0<def> = LUI 0
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 0
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %a0<kill>, %t0<internal>, 0
printing instruction:  %a0<def> = SLLI %a0<kill>, 2
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %a0<internal>, 8
printing instruction:  %a2<def> = ADDI %zero, <ga:@c>[TF=3]
printing instruction:  WRITEPM %t0<internal>, %a2<internal>, 12
printing instruction:  READPM %a3<kill>, %t0<internal>, 4
printing instruction:  READPM %a2<kill>, %t0<internal>, 8
printing instruction:  %a2<def> = ADD %a3<kill>, %a2<kill>
printing instruction:  READPM %fp<kill>, %t0<internal>, 12
printing instruction:  %a2<def> = ADD %fp, %a2<kill>
printing instruction:  WRITEPM %t0<internal>, %a0<internal>, 20
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 20
printing instruction:  READPM %t1<kill>, %t0<internal>, 16
printing instruction:  %t1<def> = ADD %t1<kill>, %a2<kill>
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 24
printing instruction:  %t1<def> = LW %t0, 0; mem:LD4[%k]
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 28
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, 32
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, 36
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, 40
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  JAL <BB#5>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t1<kill>, %t0<internal>, 0
printing instruction:  %t1<def> = ADDI %t1<kill>, 1
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 0
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  JAL <BB#3>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t1<kill>, %t0<internal>, 0
printing instruction:  %t1<def> = ADDI %t1<kill>, 1
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 0
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  JAL <BB#1>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t1<kill>, %t0<internal>, 0
printing instruction:  READPM %t0<kill>, %t0<internal>, 4
printing instruction:  BGT <BB#9>, %t1, %t0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  JAL <BB#2>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t1<kill>, %t0<internal>, 0
printing instruction:  READPM %t0<kill>, %t0<internal>, 4
printing instruction:  BGT <BB#8>, %t1, %t0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  JAL <BB#4>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t1<kill>, %t0<internal>, 0
printing instruction:  READPM %t0<kill>, %t0<internal>, 4
printing instruction:  BGT <BB#7>, %t1, %t0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 4
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -100
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -68
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -84
printing instruction:  %t0<def> = LUI 4
printing instruction:  READPM %t0<kill>, %t0<internal>, -100
printing instruction:  JAL <BB#6>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %fp<def> = ADDI %zero, 40
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %a0<kill>, %t0<internal>, 0
printing instruction:  %a0<def> = LW %a0<kill>, 0; mem:LD4[%j]
printing instruction:  %t0<def> = LUI 0
printing instruction:  WRITEPM %t0<internal>, %fp<internal>, 4
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %a0<internal>, 0
printing instruction:  READPM %t2<kill>, %t0<internal>, 4
printing instruction:  READPM %a0<kill>, %t0<internal>, 8
printing instruction:  %t2<def> = ADD %a0, %t2<kill>
printing instruction:  WRITEPM %t0<internal>, %t2<internal>, 8
printing instruction:  READPM %a2<kill>, %t0<internal>, 12
printing instruction:  READPM %a1<kill>, %t0<internal>, 16
printing instruction:  %a1<def> = ADD %a2<kill>, %a1<kill>
printing instruction:  %a3<def> = ADDI %zero, <fi#0>
printing instruction:  WRITEPM %t0<internal>, %a3<internal>, 12
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %fp<internal>, 16
printing instruction:  READPM %fp<kill>, %t0<internal>, 20
printing instruction:  %fp<def> = ADD %fp<kill>, %a1<kill>
printing instruction:  WRITEPM %t0<internal>, %fp<internal>, 16
printing instruction:  READPM %t1<kill>, %t0<internal>, 24
printing instruction:  %t1<def> = LW %t1<kill>, 0; mem:LD4[%arrayidx7]
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 24
printing instruction:  READPM %t1<kill>, %t0<internal>, 28
printing instruction:  %t1<def> = ADDI %t1<kill>, 1
printing instruction:  WRITEPM %t0<internal>, %t1<internal>, 28
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  JAL <BB#5>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t1<kill>, %t0<internal>, 0
printing instruction:  READPM %t0<kill>, %t0<internal>, 4
printing instruction:  READPM %t0<kill>, %t0<internal>, 8
printing instruction:  SW %t1<kill>, %t0<kill>, 0; mem:ST4[%j]
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  JAL <BB#3>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t1<kill>, %t0<internal>, 0
printing instruction:  READPM %t0<kill>, %t0<internal>, 4
printing instruction:  READPM %t0<kill>, %t0<internal>, 8
printing instruction:  SW %t1<kill>, %t0<kill>, 0; mem:ST4[%i]
printing instruction:  %t0<def> = LUI 1
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 2
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 3
printing instruction:  READPM %t0<kill>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 1
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 2
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  %t0<def> = LUI 3
printing instruction:  WRITEPM %t0<internal>, %t0<internal>, -116
printing instruction:  JAL <BB#1>
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
printing instruction:  ADDI %zero<internal>, %zero<internal>, 0
