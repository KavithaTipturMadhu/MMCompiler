Args: /home/arka/Workspace/work/Git_Compiler_Repo/redefine-tests/ECU_KERNELS/../../..//MM_Compiler_latest/build/Release+Asserts/bin/opt -debug --load /home/arka/Workspace/work/Git_Compiler_Repo/redefine-tests/ECU_KERNELS/../../..//MM_Compiler_latest/build/Release+Asserts/bin/../lib/HyperOpCreationPass.so --HyperOpCreationPass -S ./Working/startupglowplugs.ll -o ./Working/startupglowplugs_HyOpPass.ll 

Features:
CPU:REDEFINE

Found cycles?0

-----------
Partitioning function:startup_glowplugs

-------
Acquiring bb entry
Adding basic blocks for traversal in a breadth biased order for function startup_glowplugs
added to succ list:if.then,if.else,
distance of if.then to exit 2
distance of if.else to exit 4

-------
Acquiring bb if.else
Adding basic blocks for traversal in a breadth biased order for function startup_glowplugs
added to succ list:if.then5,if.else6,
distance of if.then to exit 2
distance of if.then5 to exit 3
distance of if.else6 to exit 3

-------
Acquiring bb if.then5
Adding basic blocks for traversal in a breadth biased order for function startup_glowplugs
added to succ list:if.end,
distance of if.else6 to exit 3
distance of if.then to exit 2
distance of if.end to exit 2

-------
Acquiring bb if.else6
Adding basic blocks for traversal in a breadth biased order for function startup_glowplugs
added to succ list:didn't add if.end

distance of if.then to exit 2
distance of if.end to exit 2

-------
Acquiring bb if.then
Adding basic blocks for traversal in a breadth biased order for function startup_glowplugs
added to succ list:if.end9,
distance of if.end to exit 2
distance of if.end9 to exit 1

-------
Acquiring bb if.end
Adding basic blocks for traversal in a breadth biased order for function startup_glowplugs
added to succ list:didn't add if.end9

distance of if.end9 to exit 1

-------
Acquiring bb if.end9
entered end hop for function startup_glowplugs
Adding basic blocks for traversal in a breadth biased order for function startup_glowplugs
added to succ list:
adding to creation map bbargs of size 1

-----------
Partitioning function:redefine_start

-------
Acquiring bb entry
entered end hop for function redefine_start
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:newName0,
distance of newName0 to exit 1

-------
Acquiring bb newName0
entered end hop for function redefine_start
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:newName01,
distance of newName01 to exit 1

-------
Acquiring bb newName01
entered end hop for function redefine_start
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:
adding to creation map bbargs of size 3
before partitioning:; ModuleID = './Working/startupglowplugs.ll'
target datalayout = "E-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-n32"
target triple = "redefine"

@redefine_in_a = common global [4 x i32] zeroinitializer, align 4
@redefine_out_b = common global [2 x i32] zeroinitializer, align 4

; Function Attrs: nounwind
define i32* @startup_glowplugs(i32* %input) #0 {
entry:
  %input.addr = alloca i32*, align 4
  %current_nh = alloca float, align 4
  store i32* %input, i32** %input.addr, align 4
  %0 = load i32** %input.addr, align 4
  %arrayidx = getelementptr inbounds i32* %0, i32 0
  %1 = bitcast i32* %arrayidx to float*
  %2 = load float* %1, align 4
  store float %2, float* %current_nh, align 4
  %3 = load i32** %input.addr, align 4
  %arrayidx1 = getelementptr inbounds i32* %3, i32 1
  %4 = load i32* %arrayidx1, align 4
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %5 = load i32** %input.addr, align 4
  %arrayidx2 = getelementptr inbounds i32* %5, i32 2
  store i32 1, i32* %arrayidx2, align 4
  %6 = load i32** %input.addr, align 4
  %arrayidx3 = getelementptr inbounds i32* %6, i32 3
  store i32 1, i32* %arrayidx3, align 4
  br label %if.end9

if.else:                                          ; preds = %entry
  %7 = load float* %current_nh, align 4
  %cmp4 = fcmp olt float %7, 1.500000e+04
  br i1 %cmp4, label %if.then5, label %if.else6

if.then5:                                         ; preds = %if.else
  br label %if.end

if.else6:                                         ; preds = %if.else
  %8 = load i32** %input.addr, align 4
  %arrayidx7 = getelementptr inbounds i32* %8, i32 2
  store i32 0, i32* %arrayidx7, align 4
  %9 = load i32** %input.addr, align 4
  %arrayidx8 = getelementptr inbounds i32* %9, i32 3
  store i32 0, i32* %arrayidx8, align 4
  br label %if.end

if.end:                                           ; preds = %if.else6, %if.then5
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %10 = load i32** %input.addr, align 4
  ret i32* %10
}

; Function Attrs: nounwind
define void @redefine_start() #0 {
entry:
  %0 = alloca i32*, align 4
  store i32* getelementptr inbounds ([4 x i32]* @redefine_in_a, i32 0, i32 0), i32** %0
  %1 = load i32** %0
  br label %newName0

newName0:                                         ; preds = %entry
  %call = call i32* @startup_glowplugs(i32* %1)
  br label %newName01

newName01:                                        ; preds = %newName0
  %output = alloca i32*, align 4
  store i32* %call, i32** %output, align 4
  %2 = load i32** %output, align 4
  %arrayidx = getelementptr inbounds i32* %2, i32 2
  %3 = load i32* %arrayidx, align 4
  store i32 %3, i32* getelementptr inbounds ([2 x i32]* @redefine_out_b, i32 0, i32 0), align 4
  %4 = load i32** %output, align 4
  %arrayidx1 = getelementptr inbounds i32* %4, i32 3
  %5 = load i32* %arrayidx1, align 4
  store i32 %5, i32* getelementptr inbounds ([2 x i32]* @redefine_out_b, i32 0, i32 1), align 4
  ret void
}

attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }

!redefine.annotations = !{}
-----------Creating HyperOps from partitioned functions-----------
added to traversallist:entry
added to traversallist:newName0
added to traversallist:newName01
now at func:entry

-----------Creating a new HyperOp for function:redefine_start-----------

--------
Acquired bb:entry from parent:redefine_start
created func:redefine_start1
now at func:newName0
now at func:newName01

-----------Creating a new HyperOp for function:redefine_start-----------

--------
Acquired bb:newName01 from parent:redefine_start
created func:redefine_start2
now at func:entry

-----------Creating a new HyperOp for function:startup_glowplugs-----------
newName0,
--------
Acquired bb:entry from parent:startup_glowplugs

--------
Acquired bb:if.else from parent:startup_glowplugs

--------
Acquired bb:if.then5 from parent:startup_glowplugs

--------
Acquired bb:if.else6 from parent:startup_glowplugs

--------
Acquired bb:if.then from parent:startup_glowplugs

--------
Acquired bb:if.end from parent:startup_glowplugs

--------
Acquired bb:if.end9 from parent:startup_glowplugs

--------
Acquired bb:newName0 from parent:redefine_start
created func:startup_glowplugs3
before patching stuff:; ModuleID = './Working/startupglowplugs.ll'
target datalayout = "E-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-n32"
target triple = "redefine"

@redefine_in_a = common global [4 x i32] zeroinitializer, align 4
@redefine_out_b = common global [2 x i32] zeroinitializer, align 4

; Function Attrs: nounwind
define i32* @startup_glowplugs(i32* %input) #0 {
entry:
  %input.addr = alloca i32*, align 4
  %current_nh = alloca float, align 4
  store i32* %input, i32** %input.addr, align 4
  %0 = load i32** %input.addr, align 4
  %arrayidx = getelementptr inbounds i32* %0, i32 0
  %1 = bitcast i32* %arrayidx to float*
  %2 = load float* %1, align 4
  store float %2, float* %current_nh, align 4
  %3 = load i32** %input.addr, align 4
  %arrayidx1 = getelementptr inbounds i32* %3, i32 1
  %4 = load i32* %arrayidx1, align 4
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %5 = load i32** %input.addr, align 4
  %arrayidx2 = getelementptr inbounds i32* %5, i32 2
  store i32 1, i32* %arrayidx2, align 4
  %6 = load i32** %input.addr, align 4
  %arrayidx3 = getelementptr inbounds i32* %6, i32 3
  store i32 1, i32* %arrayidx3, align 4
  br label %if.end9

if.else:                                          ; preds = %entry
  %7 = load float* %current_nh, align 4
  %cmp4 = fcmp olt float %7, 1.500000e+04
  br i1 %cmp4, label %if.then5, label %if.else6

if.then5:                                         ; preds = %if.else
  br label %if.end

if.else6:                                         ; preds = %if.else
  %8 = load i32** %input.addr, align 4
  %arrayidx7 = getelementptr inbounds i32* %8, i32 2
  store i32 0, i32* %arrayidx7, align 4
  %9 = load i32** %input.addr, align 4
  %arrayidx8 = getelementptr inbounds i32* %9, i32 3
  store i32 0, i32* %arrayidx8, align 4
  br label %if.end

if.end:                                           ; preds = %if.else6, %if.then5
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %10 = load i32** %input.addr, align 4
  ret i32* %10
}

; Function Attrs: nounwind
define void @redefine_start() #0 {
entry:
  %0 = alloca i32*, align 4
  store i32* getelementptr inbounds ([4 x i32]* @redefine_in_a, i32 0, i32 0), i32** %0
  %1 = load i32** %0
  br label %newName0

newName0:                                         ; preds = %redefine_start1.entry, %entry
  %call = call i32* @startup_glowplugs(i32* %1)
  br label %newName01

newName01:                                        ; preds = %newName0
  %output = alloca i32*, align 4
  store i32* %call, i32** %output, align 4
  %2 = load i32** %output, align 4
  %arrayidx = getelementptr inbounds i32* %2, i32 2
  %3 = load i32* %arrayidx, align 4
  store i32 %3, i32* getelementptr inbounds ([2 x i32]* @redefine_out_b, i32 0, i32 0), align 4
  %4 = load i32** %output, align 4
  %arrayidx1 = getelementptr inbounds i32* %4, i32 3
  %5 = load i32* %arrayidx1, align 4
  store i32 %5, i32* getelementptr inbounds ([2 x i32]* @redefine_out_b, i32 0, i32 1), align 4
  ret void
}

define void @redefine_start1() {
redefine_start1.entry:
  %0 = alloca i32*, align 4
  store i32* getelementptr inbounds ([4 x i32]* @redefine_in_a, i32 0, i32 0), i32** %0
  %1 = load i32** %0
  br label %newName0

redefine_start1.return:                           ; No predecessors!
  ret void
}

define void @redefine_start2(i32*) {
redefine_start2.newName01:
  %1 = alloca i32*, align 4
  store i32* %0, i32** %1, align 4
  %2 = load i32** %1, align 4
  %3 = getelementptr inbounds i32* %2, i32 2
  %4 = load i32* %3, align 4
  store i32 %4, i32* getelementptr inbounds ([2 x i32]* @redefine_out_b, i32 0, i32 0), align 4
  %5 = load i32** %1, align 4
  %6 = getelementptr inbounds i32* %5, i32 3
  %7 = load i32* %6, align 4
  store i32 %7, i32* getelementptr inbounds ([2 x i32]* @redefine_out_b, i32 0, i32 1), align 4
  br label %redefine_start2.return

redefine_start2.return:                           ; preds = %redefine_start2.newName01
  ret void
}

define void @startup_glowplugs3(i32*) {
startup_glowplugs3.entry:
  %1 = alloca i32*, align 4
  %2 = alloca float, align 4
  store i32* %0, i32** %1, align 4
  %3 = load i32** %1, align 4
  %4 = getelementptr inbounds i32* %3, i32 0
  %5 = bitcast i32* %4 to float*
  %6 = load float* %5, align 4
  store float %6, float* %2, align 4
  %7 = load i32** %1, align 4
  %8 = getelementptr inbounds i32* %7, i32 1
  %9 = load i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %startup_glowplugs3.if.then, label %startup_glowplugs3.if.else

startup_glowplugs3.if.else:                       ; preds = %startup_glowplugs3.entry
  %11 = load float* %2, align 4
  %12 = fcmp olt float %11, 1.500000e+04
  br i1 %12, label %startup_glowplugs3.if.then5, label %startup_glowplugs3.if.else6

startup_glowplugs3.if.then5:                      ; preds = %startup_glowplugs3.if.else
  br label %startup_glowplugs3.if.end

startup_glowplugs3.if.else6:                      ; preds = %startup_glowplugs3.if.else
  %13 = load i32** %1, align 4
  %14 = getelementptr inbounds i32* %13, i32 2
  store i32 0, i32* %14, align 4
  %15 = load i32** %1, align 4
  %16 = getelementptr inbounds i32* %15, i32 3
  store i32 0, i32* %16, align 4
  br label %startup_glowplugs3.if.end

startup_glowplugs3.if.then:                       ; preds = %startup_glowplugs3.entry
  %17 = load i32** %1, align 4
  %18 = getelementptr inbounds i32* %17, i32 2
  store i32 1, i32* %18, align 4
  %19 = load i32** %1, align 4
  %20 = getelementptr inbounds i32* %19, i32 3
  store i32 1, i32* %20, align 4
  br label %startup_glowplugs3.if.end9

startup_glowplugs3.if.end:                        ; preds = %startup_glowplugs3.if.else6, %startup_glowplugs3.if.then5
  br label %startup_glowplugs3.if.end9

startup_glowplugs3.if.end9:                       ; preds = %startup_glowplugs3.if.end, %startup_glowplugs3.if.then
  %21 = load i32** %1, align 4
  br label %startup_glowplugs3.return

startup_glowplugs3.return:                        ; preds = %startup_glowplugs3.if.end9
  ret void
}

attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }

!redefine.annotations = !{!0, !1, !2, !3, !4, !5}

!0 = metadata !{metadata !"HyperOp", void ()* @redefine_start1, metadata !"Static"}
!1 = metadata !{metadata !"Entry", metadata !0}
!2 = metadata !{metadata !"HyperOp", void (i32*)* @redefine_start2, metadata !"Static"}
!3 = metadata !{metadata !"Exit", metadata !2}
!4 = metadata !{metadata !"HyperOp", void (i32*)* @startup_glowplugs3, metadata !"Static"}
!5 = metadata !{metadata !"Intermediate", metadata !4}

----------Adding dependences across created HyperOps----------

-----------Patching created function redefine_start1--------------
accumulated bbs:
entry,

----------Adding consumed by metadata----------

----------Dealing with conditional branches from other HyperOps----------
number of conditional jump sources:0

----------Dealing with unconditional branches from other HyperOps----------
number of unconditional jump sources:0

----------Adding a predicate from entry hyperop if there are no incoming edges to the hyperop----------
after patching function redefine_start1, module:; ModuleID = './Working/startupglowplugs.ll'
target datalayout = "E-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-n32"
target triple = "redefine"

@redefine_in_a = common global [4 x i32] zeroinitializer, align 4
@redefine_out_b = common global [2 x i32] zeroinitializer, align 4

; Function Attrs: nounwind
define i32* @startup_glowplugs(i32* %input) #0 {
entry:
  %input.addr = alloca i32*, align 4
  %current_nh = alloca float, align 4
  store i32* %input, i32** %input.addr, align 4
  %0 = load i32** %input.addr, align 4
  %arrayidx = getelementptr inbounds i32* %0, i32 0
  %1 = bitcast i32* %arrayidx to float*
  %2 = load float* %1, align 4
  store float %2, float* %current_nh, align 4
  %3 = load i32** %input.addr, align 4
  %arrayidx1 = getelementptr inbounds i32* %3, i32 1
  %4 = load i32* %arrayidx1, align 4
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %5 = load i32** %input.addr, align 4
  %arrayidx2 = getelementptr inbounds i32* %5, i32 2
  store i32 1, i32* %arrayidx2, align 4
  %6 = load i32** %input.addr, align 4
  %arrayidx3 = getelementptr inbounds i32* %6, i32 3
  store i32 1, i32* %arrayidx3, align 4
  br label %if.end9

if.else:                                          ; preds = %entry
  %7 = load float* %current_nh, align 4
  %cmp4 = fcmp olt float %7, 1.500000e+04
  br i1 %cmp4, label %if.then5, label %if.else6

if.then5:                                         ; preds = %if.else
  br label %if.end

if.else6:                                         ; preds = %if.else
  %8 = load i32** %input.addr, align 4
  %arrayidx7 = getelementptr inbounds i32* %8, i32 2
  store i32 0, i32* %arrayidx7, align 4
  %9 = load i32** %input.addr, align 4
  %arrayidx8 = getelementptr inbounds i32* %9, i32 3
  store i32 0, i32* %arrayidx8, align 4
  br label %if.end

if.end:                                           ; preds = %if.else6, %if.then5
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %10 = load i32** %input.addr, align 4
  ret i32* %10
}

; Function Attrs: nounwind
define void @redefine_start() #0 {
entry:
  %0 = alloca i32*, align 4
  store i32* getelementptr inbounds ([4 x i32]* @redefine_in_a, i32 0, i32 0), i32** %0
  %1 = load i32** %0
  br label %newName0

newName0:                                         ; preds = %redefine_start1.entry, %entry
  %call = call i32* @startup_glowplugs(i32* %1)
  br label %newName01

newName01:                                        ; preds = %newName0
  %output = alloca i32*, align 4
  store i32* %call, i32** %output, align 4
  %2 = load i32** %output, align 4
  %arrayidx = getelementptr inbounds i32* %2, i32 2
  %3 = load i32* %arrayidx, align 4
  store i32 %3, i32* getelementptr inbounds ([2 x i32]* @redefine_out_b, i32 0, i32 0), align 4
  %4 = load i32** %output, align 4
  %arrayidx1 = getelementptr inbounds i32* %4, i32 3
  %5 = load i32* %arrayidx1, align 4
  store i32 %5, i32* getelementptr inbounds ([2 x i32]* @redefine_out_b, i32 0, i32 1), align 4
  ret void
}

define void @redefine_start1() {
redefine_start1.entry:
  %0 = alloca i32*, align 4
  store i32* getelementptr inbounds ([4 x i32]* @redefine_in_a, i32 0, i32 0), i32** %0
  %1 = load i32** %0
  br label %newName0

redefine_start1.return:                           ; No predecessors!
  ret void
}

define void @redefine_start2(i32*) {
redefine_start2.newName01:
  %1 = alloca i32*, align 4
  store i32* %0, i32** %1, align 4
  %2 = load i32** %1, align 4
  %3 = getelementptr inbounds i32* %2, i32 2
  %4 = load i32* %3, align 4
  store i32 %4, i32* getelementptr inbounds ([2 x i32]* @redefine_out_b, i32 0, i32 0), align 4
  %5 = load i32** %1, align 4
  %6 = getelementptr inbounds i32* %5, i32 3
  %7 = load i32* %6, align 4
  store i32 %7, i32* getelementptr inbounds ([2 x i32]* @redefine_out_b, i32 0, i32 1), align 4
  br label %redefine_start2.return

redefine_start2.return:                           ; preds = %redefine_start2.newName01
  ret void
}

define void @startup_glowplugs3(i32*) {
startup_glowplugs3.entry:
  %1 = alloca i32*, align 4
  %2 = alloca float, align 4
  store i32* %0, i32** %1, align 4
  %3 = load i32** %1, align 4
  %4 = getelementptr inbounds i32* %3, i32 0
  %5 = bitcast i32* %4 to float*
  %6 = load float* %5, align 4
  store float %6, float* %2, align 4
  %7 = load i32** %1, align 4
  %8 = getelementptr inbounds i32* %7, i32 1
  %9 = load i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %startup_glowplugs3.if.then, label %startup_glowplugs3.if.else

startup_glowplugs3.if.else:                       ; preds = %startup_glowplugs3.entry
  %11 = load float* %2, align 4
  %12 = fcmp olt float %11, 1.500000e+04
  br i1 %12, label %startup_glowplugs3.if.then5, label %startup_glowplugs3.if.else6

startup_glowplugs3.if.then5:                      ; preds = %startup_glowplugs3.if.else
  br label %startup_glowplugs3.if.end

startup_glowplugs3.if.else6:                      ; preds = %startup_glowplugs3.if.else
  %13 = load i32** %1, align 4
  %14 = getelementptr inbounds i32* %13, i32 2
  store i32 0, i32* %14, align 4
  %15 = load i32** %1, align 4
  %16 = getelementptr inbounds i32* %15, i32 3
  store i32 0, i32* %16, align 4
  br label %startup_glowplugs3.if.end

startup_glowplugs3.if.then:                       ; preds = %startup_glowplugs3.entry
  %17 = load i32** %1, align 4
  %18 = getelementptr inbounds i32* %17, i32 2
  store i32 1, i32* %18, align 4
  %19 = load i32** %1, align 4
  %20 = getelementptr inbounds i32* %19, i32 3
  store i32 1, i32* %20, align 4
  br label %startup_glowplugs3.if.end9

startup_glowplugs3.if.end:                        ; preds = %startup_glowplugs3.if.else6, %startup_glowplugs3.if.then5
  br label %startup_glowplugs3.if.end9

startup_glowplugs3.if.end9:                       ; preds = %startup_glowplugs3.if.end, %startup_glowplugs3.if.then
  %21 = load i32** %1, align 4
  br label %startup_glowplugs3.return

startup_glowplugs3.return:                        ; preds = %startup_glowplugs3.if.end9
  ret void
}

attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }

!redefine.annotations = !{!0, !1, !2, !3, !4, !5}

!0 = metadata !{metadata !"HyperOp", void ()* @redefine_start1, metadata !"Static"}
!1 = metadata !{metadata !"Entry", metadata !0}
!2 = metadata !{metadata !"HyperOp", void (i32*)* @redefine_start2, metadata !"Static"}
!3 = metadata !{metadata !"Exit", metadata !2}
!4 = metadata !{metadata !"HyperOp", void (i32*)* @startup_glowplugs3, metadata !"Static"}
!5 = metadata !{metadata !"Intermediate", metadata !4}

-----------Patching created function redefine_start2--------------
accumulated bbs:
newName01,

----------Adding consumed by metadata----------
  %call = call i32* @startup_glowplugs(i32* %1)
cloned inst second:  %10 = load i32** %input.addr, align 4
producer function:startup_glowplugs3
how many clones?1
added metadata on instruction that belongs to parent startup_glowplugs3 and is mapped to slot 0 when the function has 1 and is of type:1:  %1 = alloca i32*, align 4, !ConsumedBy !6

----------Dealing with conditional branches from other HyperOps----------
number of conditional jump sources:0

----------Dealing with unconditional branches from other HyperOps----------
number of unconditional jump sources:1
what was callsite size earlier??0

----------Adding a predicate from entry hyperop if there are no incoming edges to the hyperop----------
after patching function redefine_start2, module:; ModuleID = './Working/startupglowplugs.ll'
target datalayout = "E-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-n32"
target triple = "redefine"

@redefine_in_a = common global [4 x i32] zeroinitializer, align 4
@redefine_out_b = common global [2 x i32] zeroinitializer, align 4

; Function Attrs: nounwind
define i32* @startup_glowplugs(i32* %input) #0 {
entry:
  %input.addr = alloca i32*, align 4
  %current_nh = alloca float, align 4
  store i32* %input, i32** %input.addr, align 4
  %0 = load i32** %input.addr, align 4
  %arrayidx = getelementptr inbounds i32* %0, i32 0
  %1 = bitcast i32* %arrayidx to float*
  %2 = load float* %1, align 4
  store float %2, float* %current_nh, align 4
  %3 = load i32** %input.addr, align 4
  %arrayidx1 = getelementptr inbounds i32* %3, i32 1
  %4 = load i32* %arrayidx1, align 4
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %5 = load i32** %input.addr, align 4
  %arrayidx2 = getelementptr inbounds i32* %5, i32 2
  store i32 1, i32* %arrayidx2, align 4
  %6 = load i32** %input.addr, align 4
  %arrayidx3 = getelementptr inbounds i32* %6, i32 3
  store i32 1, i32* %arrayidx3, align 4
  br label %if.end9

if.else:                                          ; preds = %entry
  %7 = load float* %current_nh, align 4
  %cmp4 = fcmp olt float %7, 1.500000e+04
  br i1 %cmp4, label %if.then5, label %if.else6

if.then5:                                         ; preds = %if.else
  br label %if.end

if.else6:                                         ; preds = %if.else
  %8 = load i32** %input.addr, align 4
  %arrayidx7 = getelementptr inbounds i32* %8, i32 2
  store i32 0, i32* %arrayidx7, align 4
  %9 = load i32** %input.addr, align 4
  %arrayidx8 = getelementptr inbounds i32* %9, i32 3
  store i32 0, i32* %arrayidx8, align 4
  br label %if.end

if.end:                                           ; preds = %if.else6, %if.then5
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %10 = load i32** %input.addr, align 4
  ret i32* %10
}

; Function Attrs: nounwind
define void @redefine_start() #0 {
entry:
  %0 = alloca i32*, align 4
  store i32* getelementptr inbounds ([4 x i32]* @redefine_in_a, i32 0, i32 0), i32** %0
  %1 = load i32** %0
  br label %newName0

newName0:                                         ; preds = %redefine_start1.entry, %entry
  %call = call i32* @startup_glowplugs(i32* %1)
  br label %newName01

newName01:                                        ; preds = %newName0
  %output = alloca i32*, align 4
  store i32* %call, i32** %output, align 4
  %2 = load i32** %output, align 4
  %arrayidx = getelementptr inbounds i32* %2, i32 2
  %3 = load i32* %arrayidx, align 4
  store i32 %3, i32* getelementptr inbounds ([2 x i32]* @redefine_out_b, i32 0, i32 0), align 4
  %4 = load i32** %output, align 4
  %arrayidx1 = getelementptr inbounds i32* %4, i32 3
  %5 = load i32* %arrayidx1, align 4
  store i32 %5, i32* getelementptr inbounds ([2 x i32]* @redefine_out_b, i32 0, i32 1), align 4
  ret void
}

define void @redefine_start1() {
redefine_start1.entry:
  %0 = alloca i32*, align 4
  store i32* getelementptr inbounds ([4 x i32]* @redefine_in_a, i32 0, i32 0), i32** %0
  %1 = load i32** %0
  br label %newName0

redefine_start1.return:                           ; No predecessors!
  ret void
}

define void @redefine_start2(i32*) {
redefine_start2.newName01:
  %1 = alloca i32*, align 4
  store i32* %0, i32** %1, align 4
  %2 = load i32** %1, align 4
  %3 = getelementptr inbounds i32* %2, i32 2
  %4 = load i32* %3, align 4
  store i32 %4, i32* getelementptr inbounds ([2 x i32]* @redefine_out_b, i32 0, i32 0), align 4
  %5 = load i32** %1, align 4
  %6 = getelementptr inbounds i32* %5, i32 3
  %7 = load i32* %6, align 4
  store i32 %7, i32* getelementptr inbounds ([2 x i32]* @redefine_out_b, i32 0, i32 1), align 4
  br label %redefine_start2.return

redefine_start2.return:                           ; preds = %redefine_start2.newName01
  ret void
}

define void @startup_glowplugs3(i32*) {
startup_glowplugs3.entry:
  %1 = alloca i32*, align 4, !ConsumedBy !6
  %2 = alloca i32*, align 4
  %3 = alloca float, align 4
  store i32* %0, i32** %2, align 4
  %4 = load i32** %2, align 4
  %5 = getelementptr inbounds i32* %4, i32 0
  %6 = bitcast i32* %5 to float*
  %7 = load float* %6, align 4
  store float %7, float* %3, align 4
  %8 = load i32** %2, align 4
  %9 = getelementptr inbounds i32* %8, i32 1
  %10 = load i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %startup_glowplugs3.if.then, label %startup_glowplugs3.if.else

startup_glowplugs3.if.else:                       ; preds = %startup_glowplugs3.entry
  %12 = load float* %3, align 4
  %13 = fcmp olt float %12, 1.500000e+04
  br i1 %13, label %startup_glowplugs3.if.then5, label %startup_glowplugs3.if.else6

startup_glowplugs3.if.then5:                      ; preds = %startup_glowplugs3.if.else
  br label %startup_glowplugs3.if.end

startup_glowplugs3.if.else6:                      ; preds = %startup_glowplugs3.if.else
  %14 = load i32** %2, align 4
  %15 = getelementptr inbounds i32* %14, i32 2
  store i32 0, i32* %15, align 4
  %16 = load i32** %2, align 4
  %17 = getelementptr inbounds i32* %16, i32 3
  store i32 0, i32* %17, align 4
  br label %startup_glowplugs3.if.end

startup_glowplugs3.if.then:                       ; preds = %startup_glowplugs3.entry
  %18 = load i32** %2, align 4
  %19 = getelementptr inbounds i32* %18, i32 2
  store i32 1, i32* %19, align 4
  %20 = load i32** %2, align 4
  %21 = getelementptr inbounds i32* %20, i32 3
  store i32 1, i32* %21, align 4
  br label %startup_glowplugs3.if.end9

startup_glowplugs3.if.end:                        ; preds = %startup_glowplugs3.if.else6, %startup_glowplugs3.if.then5
  br label %startup_glowplugs3.if.end9

startup_glowplugs3.if.end9:                       ; preds = %startup_glowplugs3.if.end, %startup_glowplugs3.if.then
  %22 = load i32** %2, align 4
  store i32* %22, i32** %1, align 4
  br label %startup_glowplugs3.return

startup_glowplugs3.return:                        ; preds = %startup_glowplugs3.if.end9
  ret void
}

attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }

!redefine.annotations = !{!0, !1, !2, !3, !4, !5}

!0 = metadata !{metadata !"HyperOp", void ()* @redefine_start1, metadata !"Static"}
!1 = metadata !{metadata !"Entry", metadata !0}
!2 = metadata !{metadata !"HyperOp", void (i32*)* @redefine_start2, metadata !"Static"}
!3 = metadata !{metadata !"Exit", metadata !2}
!4 = metadata !{metadata !"HyperOp", void (i32*)* @startup_glowplugs3, metadata !"Static"}
!5 = metadata !{metadata !"Intermediate", metadata !4}
!6 = metadata !{metadata !7}
!7 = metadata !{metadata !2, metadata !"LocalReference", i32 0}

-----------Patching created function startup_glowplugs3--------------
accumulated bbs:
entry,if.else,if.then5,if.else6,if.then,if.end,if.end9,

----------Adding consumed by metadata----------
cloned inst second:  %0 = alloca i32*, align 4
producer function:redefine_start1
how many clones?1
added metadata on instruction that belongs to parent redefine_start1 and is mapped to slot 0 when the function has 1 and is of type:1:  %0 = alloca i32*, align 4, !ConsumedBy !6

----------Dealing with conditional branches from other HyperOps----------
number of conditional jump sources:0

----------Dealing with unconditional branches from other HyperOps----------
number of unconditional jump sources:1
what was callsite size earlier??1

----------Adding a predicate from entry hyperop if there are no incoming edges to the hyperop----------
after patching function startup_glowplugs3, module:; ModuleID = './Working/startupglowplugs.ll'
target datalayout = "E-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-n32"
target triple = "redefine"

@redefine_in_a = common global [4 x i32] zeroinitializer, align 4
@redefine_out_b = common global [2 x i32] zeroinitializer, align 4

; Function Attrs: nounwind
define i32* @startup_glowplugs(i32* %input) #0 {
entry:
  %input.addr = alloca i32*, align 4
  %current_nh = alloca float, align 4
  store i32* %input, i32** %input.addr, align 4
  %0 = load i32** %input.addr, align 4
  %arrayidx = getelementptr inbounds i32* %0, i32 0
  %1 = bitcast i32* %arrayidx to float*
  %2 = load float* %1, align 4
  store float %2, float* %current_nh, align 4
  %3 = load i32** %input.addr, align 4
  %arrayidx1 = getelementptr inbounds i32* %3, i32 1
  %4 = load i32* %arrayidx1, align 4
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %5 = load i32** %input.addr, align 4
  %arrayidx2 = getelementptr inbounds i32* %5, i32 2
  store i32 1, i32* %arrayidx2, align 4
  %6 = load i32** %input.addr, align 4
  %arrayidx3 = getelementptr inbounds i32* %6, i32 3
  store i32 1, i32* %arrayidx3, align 4
  br label %if.end9

if.else:                                          ; preds = %entry
  %7 = load float* %current_nh, align 4
  %cmp4 = fcmp olt float %7, 1.500000e+04
  br i1 %cmp4, label %if.then5, label %if.else6

if.then5:                                         ; preds = %if.else
  br label %if.end

if.else6:                                         ; preds = %if.else
  %8 = load i32** %input.addr, align 4
  %arrayidx7 = getelementptr inbounds i32* %8, i32 2
  store i32 0, i32* %arrayidx7, align 4
  %9 = load i32** %input.addr, align 4
  %arrayidx8 = getelementptr inbounds i32* %9, i32 3
  store i32 0, i32* %arrayidx8, align 4
  br label %if.end

if.end:                                           ; preds = %if.else6, %if.then5
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %10 = load i32** %input.addr, align 4
  ret i32* %10
}

; Function Attrs: nounwind
define void @redefine_start() #0 {
entry:
  %0 = alloca i32*, align 4
  store i32* getelementptr inbounds ([4 x i32]* @redefine_in_a, i32 0, i32 0), i32** %0
  %1 = load i32** %0
  br label %newName0

newName0:                                         ; preds = %entry
  %call = call i32* @startup_glowplugs(i32* %1)
  br label %newName01

newName01:                                        ; preds = %newName0
  %output = alloca i32*, align 4
  store i32* %call, i32** %output, align 4
  %2 = load i32** %output, align 4
  %arrayidx = getelementptr inbounds i32* %2, i32 2
  %3 = load i32* %arrayidx, align 4
  store i32 %3, i32* getelementptr inbounds ([2 x i32]* @redefine_out_b, i32 0, i32 0), align 4
  %4 = load i32** %output, align 4
  %arrayidx1 = getelementptr inbounds i32* %4, i32 3
  %5 = load i32* %arrayidx1, align 4
  store i32 %5, i32* getelementptr inbounds ([2 x i32]* @redefine_out_b, i32 0, i32 1), align 4
  ret void
}

define void @redefine_start1() {
redefine_start1.entry:
  %0 = alloca i32*, align 4, !ConsumedBy !6
  store i32* getelementptr inbounds ([4 x i32]* @redefine_in_a, i32 0, i32 0), i32** %0
  %1 = load i32** %0
  br label %redefine_start1.return

redefine_start1.return:                           ; preds = %redefine_start1.entry
  ret void
}

define void @redefine_start2(i32*) {
redefine_start2.newName01:
  %1 = alloca i32*, align 4
  store i32* %0, i32** %1, align 4
  %2 = load i32** %1, align 4
  %3 = getelementptr inbounds i32* %2, i32 2
  %4 = load i32* %3, align 4
  store i32 %4, i32* getelementptr inbounds ([2 x i32]* @redefine_out_b, i32 0, i32 0), align 4
  %5 = load i32** %1, align 4
  %6 = getelementptr inbounds i32* %5, i32 3
  %7 = load i32* %6, align 4
  store i32 %7, i32* getelementptr inbounds ([2 x i32]* @redefine_out_b, i32 0, i32 1), align 4
  br label %redefine_start2.return

redefine_start2.return:                           ; preds = %redefine_start2.newName01
  ret void
}

define void @startup_glowplugs3(i32*) {
startup_glowplugs3.entry:
  %1 = alloca i32*, align 4, !ConsumedBy !8
  %2 = alloca i32*, align 4
  %3 = alloca float, align 4
  store i32* %0, i32** %2, align 4
  %4 = load i32** %2, align 4
  %5 = getelementptr inbounds i32* %4, i32 0
  %6 = bitcast i32* %5 to float*
  %7 = load float* %6, align 4
  store float %7, float* %3, align 4
  %8 = load i32** %2, align 4
  %9 = getelementptr inbounds i32* %8, i32 1
  %10 = load i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %startup_glowplugs3.if.then, label %startup_glowplugs3.if.else

startup_glowplugs3.if.else:                       ; preds = %startup_glowplugs3.entry
  %12 = load float* %3, align 4
  %13 = fcmp olt float %12, 1.500000e+04
  br i1 %13, label %startup_glowplugs3.if.then5, label %startup_glowplugs3.if.else6

startup_glowplugs3.if.then5:                      ; preds = %startup_glowplugs3.if.else
  br label %startup_glowplugs3.if.end

startup_glowplugs3.if.else6:                      ; preds = %startup_glowplugs3.if.else
  %14 = load i32** %2, align 4
  %15 = getelementptr inbounds i32* %14, i32 2
  store i32 0, i32* %15, align 4
  %16 = load i32** %2, align 4
  %17 = getelementptr inbounds i32* %16, i32 3
  store i32 0, i32* %17, align 4
  br label %startup_glowplugs3.if.end

startup_glowplugs3.if.then:                       ; preds = %startup_glowplugs3.entry
  %18 = load i32** %2, align 4
  %19 = getelementptr inbounds i32* %18, i32 2
  store i32 1, i32* %19, align 4
  %20 = load i32** %2, align 4
  %21 = getelementptr inbounds i32* %20, i32 3
  store i32 1, i32* %21, align 4
  br label %startup_glowplugs3.if.end9

startup_glowplugs3.if.end:                        ; preds = %startup_glowplugs3.if.else6, %startup_glowplugs3.if.then5
  br label %startup_glowplugs3.if.end9

startup_glowplugs3.if.end9:                       ; preds = %startup_glowplugs3.if.end, %startup_glowplugs3.if.then
  %22 = load i32** %2, align 4
  store i32* %22, i32** %1, align 4
  br label %startup_glowplugs3.return

startup_glowplugs3.return:                        ; preds = %startup_glowplugs3.if.end9
  ret void
}

attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }

!redefine.annotations = !{!0, !1, !2, !3, !4, !5}

!0 = metadata !{metadata !"HyperOp", void ()* @redefine_start1, metadata !"Static"}
!1 = metadata !{metadata !"Entry", metadata !0}
!2 = metadata !{metadata !"HyperOp", void (i32*)* @redefine_start2, metadata !"Static"}
!3 = metadata !{metadata !"Exit", metadata !2}
!4 = metadata !{metadata !"HyperOp", void (i32*)* @startup_glowplugs3, metadata !"Static"}
!5 = metadata !{metadata !"Intermediate", metadata !4}
!6 = metadata !{metadata !7}
!7 = metadata !{metadata !4, metadata !"LocalReference", i32 0}
!8 = metadata !{metadata !9}
!9 = metadata !{metadata !2, metadata !"LocalReference", i32 0}

----------Adding sync edges to dangling HyperOps----------

-----------Re-routing sync edges from end hyperop to the newly created end HyperOp-----------
whats in module now?; ModuleID = './Working/startupglowplugs.ll'
target datalayout = "E-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-n32"
target triple = "redefine"

@redefine_in_a = common global [4 x i32] zeroinitializer, align 4
@redefine_out_b = common global [2 x i32] zeroinitializer, align 4

; Function Attrs: nounwind
define i32* @startup_glowplugs(i32* %input) #0 {
entry:
  %input.addr = alloca i32*, align 4
  %current_nh = alloca float, align 4
  store i32* %input, i32** %input.addr, align 4
  %0 = load i32** %input.addr, align 4
  %arrayidx = getelementptr inbounds i32* %0, i32 0
  %1 = bitcast i32* %arrayidx to float*
  %2 = load float* %1, align 4
  store float %2, float* %current_nh, align 4
  %3 = load i32** %input.addr, align 4
  %arrayidx1 = getelementptr inbounds i32* %3, i32 1
  %4 = load i32* %arrayidx1, align 4
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %5 = load i32** %input.addr, align 4
  %arrayidx2 = getelementptr inbounds i32* %5, i32 2
  store i32 1, i32* %arrayidx2, align 4
  %6 = load i32** %input.addr, align 4
  %arrayidx3 = getelementptr inbounds i32* %6, i32 3
  store i32 1, i32* %arrayidx3, align 4
  br label %if.end9

if.else:                                          ; preds = %entry
  %7 = load float* %current_nh, align 4
  %cmp4 = fcmp olt float %7, 1.500000e+04
  br i1 %cmp4, label %if.then5, label %if.else6

if.then5:                                         ; preds = %if.else
  br label %if.end

if.else6:                                         ; preds = %if.else
  %8 = load i32** %input.addr, align 4
  %arrayidx7 = getelementptr inbounds i32* %8, i32 2
  store i32 0, i32* %arrayidx7, align 4
  %9 = load i32** %input.addr, align 4
  %arrayidx8 = getelementptr inbounds i32* %9, i32 3
  store i32 0, i32* %arrayidx8, align 4
  br label %if.end

if.end:                                           ; preds = %if.else6, %if.then5
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %10 = load i32** %input.addr, align 4
  ret i32* %10
}

; Function Attrs: nounwind
define void @redefine_start() #0 {
entry:
  %0 = alloca i32*, align 4
  store i32* getelementptr inbounds ([4 x i32]* @redefine_in_a, i32 0, i32 0), i32** %0
  %1 = load i32** %0
  br label %newName0

newName0:                                         ; preds = %entry
  %call = call i32* @startup_glowplugs(i32* %1)
  br label %newName01

newName01:                                        ; preds = %newName0
  %output = alloca i32*, align 4
  store i32* %call, i32** %output, align 4
  %2 = load i32** %output, align 4
  %arrayidx = getelementptr inbounds i32* %2, i32 2
  %3 = load i32* %arrayidx, align 4
  store i32 %3, i32* getelementptr inbounds ([2 x i32]* @redefine_out_b, i32 0, i32 0), align 4
  %4 = load i32** %output, align 4
  %arrayidx1 = getelementptr inbounds i32* %4, i32 3
  %5 = load i32* %arrayidx1, align 4
  store i32 %5, i32* getelementptr inbounds ([2 x i32]* @redefine_out_b, i32 0, i32 1), align 4
  ret void
}

define void @redefine_start1() {
redefine_start1.entry:
  %0 = alloca i32*, align 4, !ConsumedBy !6
  store i32* getelementptr inbounds ([4 x i32]* @redefine_in_a, i32 0, i32 0), i32** %0
  %1 = load i32** %0
  br label %redefine_start1.return

redefine_start1.return:                           ; preds = %redefine_start1.entry
  ret void
}

define void @redefine_start2(i32*) {
redefine_start2.newName01:
  %1 = alloca i32*, align 4
  store i32* %0, i32** %1, align 4
  %2 = load i32** %1, align 4
  %3 = getelementptr inbounds i32* %2, i32 2
  %4 = load i32* %3, align 4
  store i32 %4, i32* getelementptr inbounds ([2 x i32]* @redefine_out_b, i32 0, i32 0), align 4
  %5 = load i32** %1, align 4
  %6 = getelementptr inbounds i32* %5, i32 3
  %7 = load i32* %6, align 4
  store i32 %7, i32* getelementptr inbounds ([2 x i32]* @redefine_out_b, i32 0, i32 1), align 4
  br label %redefine_start2.return

redefine_start2.return:                           ; preds = %redefine_start2.newName01
  ret void
}

define void @startup_glowplugs3(i32*) {
startup_glowplugs3.entry:
  %1 = alloca i32*, align 4, !ConsumedBy !8
  %2 = alloca i32*, align 4
  %3 = alloca float, align 4
  store i32* %0, i32** %2, align 4
  %4 = load i32** %2, align 4
  %5 = getelementptr inbounds i32* %4, i32 0
  %6 = bitcast i32* %5 to float*
  %7 = load float* %6, align 4
  store float %7, float* %3, align 4
  %8 = load i32** %2, align 4
  %9 = getelementptr inbounds i32* %8, i32 1
  %10 = load i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %startup_glowplugs3.if.then, label %startup_glowplugs3.if.else

startup_glowplugs3.if.else:                       ; preds = %startup_glowplugs3.entry
  %12 = load float* %3, align 4
  %13 = fcmp olt float %12, 1.500000e+04
  br i1 %13, label %startup_glowplugs3.if.then5, label %startup_glowplugs3.if.else6

startup_glowplugs3.if.then5:                      ; preds = %startup_glowplugs3.if.else
  br label %startup_glowplugs3.if.end

startup_glowplugs3.if.else6:                      ; preds = %startup_glowplugs3.if.else
  %14 = load i32** %2, align 4
  %15 = getelementptr inbounds i32* %14, i32 2
  store i32 0, i32* %15, align 4
  %16 = load i32** %2, align 4
  %17 = getelementptr inbounds i32* %16, i32 3
  store i32 0, i32* %17, align 4
  br label %startup_glowplugs3.if.end

startup_glowplugs3.if.then:                       ; preds = %startup_glowplugs3.entry
  %18 = load i32** %2, align 4
  %19 = getelementptr inbounds i32* %18, i32 2
  store i32 1, i32* %19, align 4
  %20 = load i32** %2, align 4
  %21 = getelementptr inbounds i32* %20, i32 3
  store i32 1, i32* %21, align 4
  br label %startup_glowplugs3.if.end9

startup_glowplugs3.if.end:                        ; preds = %startup_glowplugs3.if.else6, %startup_glowplugs3.if.then5
  br label %startup_glowplugs3.if.end9

startup_glowplugs3.if.end9:                       ; preds = %startup_glowplugs3.if.end, %startup_glowplugs3.if.then
  %22 = load i32** %2, align 4
  store i32* %22, i32** %1, align 4
  br label %startup_glowplugs3.return

startup_glowplugs3.return:                        ; preds = %startup_glowplugs3.if.end9
  ret void
}

attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }

!redefine.annotations = !{!0, !1, !2, !3, !4, !5}

!0 = metadata !{metadata !"HyperOp", void ()* @redefine_start1, metadata !"Static"}
!1 = metadata !{metadata !"Entry", metadata !0}
!2 = metadata !{metadata !"HyperOp", void (i32*)* @redefine_start2, metadata !"Static"}
!3 = metadata !{metadata !"Exit", metadata !2}
!4 = metadata !{metadata !"HyperOp", void (i32*)* @startup_glowplugs3, metadata !"Static"}
!5 = metadata !{metadata !"Intermediate", metadata !4}
!6 = metadata !{metadata !7}
!7 = metadata !{metadata !4, metadata !"LocalReference", i32 0}
!8 = metadata !{metadata !9}
!9 = metadata !{metadata !2, metadata !"LocalReference", i32 0}

-----------Deleting unused functions-----------
deleting contents of function:startup_glowplugs
deleting contents of function:redefine_start
Final module contents:; ModuleID = './Working/startupglowplugs.ll'
target datalayout = "E-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-n32"
target triple = "redefine"

@redefine_in_a = common global [4 x i32] zeroinitializer, align 4
@redefine_out_b = common global [2 x i32] zeroinitializer, align 4

define void @redefine_start1() {
redefine_start1.entry:
  %0 = alloca i32*, align 4, !ConsumedBy !6
  store i32* getelementptr inbounds ([4 x i32]* @redefine_in_a, i32 0, i32 0), i32** %0
  %1 = load i32** %0
  br label %redefine_start1.return

redefine_start1.return:                           ; preds = %redefine_start1.entry
  ret void
}

define void @redefine_start2(i32*) {
redefine_start2.newName01:
  %1 = alloca i32*, align 4
  store i32* %0, i32** %1, align 4
  %2 = load i32** %1, align 4
  %3 = getelementptr inbounds i32* %2, i32 2
  %4 = load i32* %3, align 4
  store i32 %4, i32* getelementptr inbounds ([2 x i32]* @redefine_out_b, i32 0, i32 0), align 4
  %5 = load i32** %1, align 4
  %6 = getelementptr inbounds i32* %5, i32 3
  %7 = load i32* %6, align 4
  store i32 %7, i32* getelementptr inbounds ([2 x i32]* @redefine_out_b, i32 0, i32 1), align 4
  br label %redefine_start2.return

redefine_start2.return:                           ; preds = %redefine_start2.newName01
  ret void
}

define void @startup_glowplugs3(i32*) {
startup_glowplugs3.entry:
  %1 = alloca i32*, align 4, !ConsumedBy !8
  %2 = alloca i32*, align 4
  %3 = alloca float, align 4
  store i32* %0, i32** %2, align 4
  %4 = load i32** %2, align 4
  %5 = getelementptr inbounds i32* %4, i32 0
  %6 = bitcast i32* %5 to float*
  %7 = load float* %6, align 4
  store float %7, float* %3, align 4
  %8 = load i32** %2, align 4
  %9 = getelementptr inbounds i32* %8, i32 1
  %10 = load i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %startup_glowplugs3.if.then, label %startup_glowplugs3.if.else

startup_glowplugs3.if.else:                       ; preds = %startup_glowplugs3.entry
  %12 = load float* %3, align 4
  %13 = fcmp olt float %12, 1.500000e+04
  br i1 %13, label %startup_glowplugs3.if.then5, label %startup_glowplugs3.if.else6

startup_glowplugs3.if.then5:                      ; preds = %startup_glowplugs3.if.else
  br label %startup_glowplugs3.if.end

startup_glowplugs3.if.else6:                      ; preds = %startup_glowplugs3.if.else
  %14 = load i32** %2, align 4
  %15 = getelementptr inbounds i32* %14, i32 2
  store i32 0, i32* %15, align 4
  %16 = load i32** %2, align 4
  %17 = getelementptr inbounds i32* %16, i32 3
  store i32 0, i32* %17, align 4
  br label %startup_glowplugs3.if.end

startup_glowplugs3.if.then:                       ; preds = %startup_glowplugs3.entry
  %18 = load i32** %2, align 4
  %19 = getelementptr inbounds i32* %18, i32 2
  store i32 1, i32* %19, align 4
  %20 = load i32** %2, align 4
  %21 = getelementptr inbounds i32* %20, i32 3
  store i32 1, i32* %21, align 4
  br label %startup_glowplugs3.if.end9

startup_glowplugs3.if.end:                        ; preds = %startup_glowplugs3.if.else6, %startup_glowplugs3.if.then5
  br label %startup_glowplugs3.if.end9

startup_glowplugs3.if.end9:                       ; preds = %startup_glowplugs3.if.end, %startup_glowplugs3.if.then
  %22 = load i32** %2, align 4
  store i32* %22, i32** %1, align 4
  br label %startup_glowplugs3.return

startup_glowplugs3.return:                        ; preds = %startup_glowplugs3.if.end9
  ret void
}

!redefine.annotations = !{!0, !1, !2, !3, !4, !5}

!0 = metadata !{metadata !"HyperOp", void ()* @redefine_start1, metadata !"Static"}
!1 = metadata !{metadata !"Entry", metadata !0}
!2 = metadata !{metadata !"HyperOp", void (i32*)* @redefine_start2, metadata !"Static"}
!3 = metadata !{metadata !"Exit", metadata !2}
!4 = metadata !{metadata !"HyperOp", void (i32*)* @startup_glowplugs3, metadata !"Static"}
!5 = metadata !{metadata !"Intermediate", metadata !4}
!6 = metadata !{metadata !7}
!7 = metadata !{metadata !4, metadata !"LocalReference", i32 0}
!8 = metadata !{metadata !9}
!9 = metadata !{metadata !2, metadata !"LocalReference", i32 0}
