Args: /home/arka/Workspace/work/Git_Compiler_Repo/redefine-tests/ECU_KERNELS/../../..//MM_Compiler_latest/build/Release+Asserts/bin/opt -debug --load /home/arka/Workspace/work/Git_Compiler_Repo/redefine-tests/ECU_KERNELS/../../..//MM_Compiler_latest/build/Release+Asserts/bin/../lib/HyperOpCreationPass.so --HyperOpCreationPass -S ./Compilation_Error/startuppump_original.ll -o ./Compilation_Error/startuppump_original_HyOpPass.ll 

Features:
CPU:REDEFINE

Found cycles?0

-----------
Partitioning function:pid_init

-------
Acquiring bb entry
entered end hop for function pid_init
Adding basic blocks for traversal in a breadth biased order for function pid_init
added to succ list:
adding to creation map bbargs of size 1

-----------
Partitioning function:regulation_nh_init

-------
Acquiring bb entry
entered end hop for function regulation_nh_init
Adding basic blocks for traversal in a breadth biased order for function regulation_nh_init
added to succ list:newName0,
distance of newName0 to exit 1

-------
Acquiring bb newName0
entered end hop for function regulation_nh_init
Adding basic blocks for traversal in a breadth biased order for function regulation_nh_init
added to succ list:newName01,
distance of newName01 to exit 1

-------
Acquiring bb newName01
entered end hop for function regulation_nh_init
Adding basic blocks for traversal in a breadth biased order for function regulation_nh_init
added to succ list:
adding to creation map bbargs of size 3

-----------
Partitioning function:redefine_start

-------
Acquiring bb entry
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.then,if.else,
distance of if.then to exit 2
distance of if.else to exit 31

-------
Acquiring bb if.else
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.then2,if.else3,
distance of if.then to exit 2
distance of if.then2 to exit 3
distance of if.else3 to exit 30

-------
Acquiring bb if.else3
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.then5,if.else51,
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.then5 to exit 18
distance of if.else51 to exit 29

-------
Acquiring bb if.else51
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.then54,if.else55,
distance of if.then5 to exit 18
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.then54 to exit 5
distance of if.else55 to exit 28

-------
Acquiring bb if.else55
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.then58,if.else62,
distance of if.then5 to exit 18
distance of if.then54 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.then58 to exit 6
distance of if.else62 to exit 27

-------
Acquiring bb if.else62
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.then65,if.else118,
distance of if.then5 to exit 18
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.then65 to exit 26
distance of if.else118 to exit 7

-------
Acquiring bb if.then65
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.then68,if.else71,
distance of if.then5 to exit 18
distance of if.else118 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.then68 to exit 25
distance of if.else71 to exit 25

-------
Acquiring bb if.then68
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.end74,
distance of if.else71 to exit 25
distance of if.then5 to exit 18
distance of if.else118 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.end74 to exit 24

-------
Acquiring bb if.else71
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add if.end74

distance of if.end74 to exit 24
distance of if.then5 to exit 18
distance of if.else118 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2

-------
Acquiring bb if.end74
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.then80,if.end81,
distance of if.then5 to exit 18
distance of if.else118 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.then80 to exit 23
distance of if.end81 to exit 22

-------
Acquiring bb if.then80
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add if.end81

distance of if.end81 to exit 22
distance of if.then5 to exit 18
distance of if.else118 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2

-------
Acquiring bb if.end81
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.then84,if.end85,
distance of if.then5 to exit 18
distance of if.else118 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.then84 to exit 21
distance of if.end85 to exit 20

-------
Acquiring bb if.then84
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add if.end85

distance of if.end85 to exit 20
distance of if.then5 to exit 18
distance of if.else118 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2

-------
Acquiring bb if.end85
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.then90,if.end91,
distance of if.then5 to exit 18
distance of if.else118 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.then90 to exit 19
distance of if.end91 to exit 18

-------
Acquiring bb if.then90
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add if.end91

distance of if.then5 to exit 18
distance of if.end91 to exit 18
distance of if.else118 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2

-------
Acquiring bb if.then5
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.then7,if.else9,
distance of if.end91 to exit 18
distance of if.else118 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.then7 to exit 5
distance of if.else9 to exit 17

-------
Acquiring bb if.end91
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.then95,if.end96,
distance of if.else9 to exit 17
distance of if.else118 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.then95 to exit 17
distance of if.end96 to exit 16

-------
Acquiring bb if.else9
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.then12,if.else13,
distance of if.then95 to exit 17
distance of if.end96 to exit 16
distance of if.else118 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.then12 to exit 12
distance of if.else13 to exit 16

-------
Acquiring bb if.then95
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add if.end96

distance of if.end96 to exit 16
distance of if.else13 to exit 16
distance of if.then12 to exit 12
distance of if.else118 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2

-------
Acquiring bb if.end96
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:for.cond,
distance of if.else13 to exit 16
distance of if.then12 to exit 12
distance of if.else118 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of for.cond to exit 15

-------
Acquiring bb if.else13
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.then18,if.else19,
distance of for.cond to exit 15
distance of if.then12 to exit 12
distance of if.else118 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.then18 to exit 13
distance of if.else19 to exit 15

-------
Acquiring bb for.cond
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:for.body,for.end,
distance of if.else19 to exit 15
distance of if.then18 to exit 13
distance of if.then12 to exit 12
distance of if.else118 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of for.body to exit 17
distance of for.end to exit 14

-------
Acquiring bb for.body
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:for.inc,
distance of if.else19 to exit 15
distance of for.end to exit 14
distance of if.then18 to exit 13
distance of if.then12 to exit 12
distance of if.else118 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of for.inc to exit 16

-------
Acquiring bb for.inc
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add for.cond

distance of if.else19 to exit 15
distance of for.end to exit 14
distance of if.then18 to exit 13
distance of if.then12 to exit 12
distance of if.else118 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2

-------
Acquiring bb if.else19
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.then24,if.else30,
distance of for.end to exit 14
distance of if.then18 to exit 13
distance of if.then12 to exit 12
distance of if.else118 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.then24 to exit 14
distance of if.else30 to exit 14

-------
Acquiring bb for.end
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:land.lhs.true,if.end117,
distance of if.then24 to exit 14
distance of if.else30 to exit 14
distance of if.then18 to exit 13
distance of if.then12 to exit 12
distance of if.else118 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of land.lhs.true to exit 13
distance of if.end117 to exit 7

-------
Acquiring bb if.then24
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.end,
distance of if.else30 to exit 14
distance of if.then18 to exit 13
distance of land.lhs.true to exit 13
distance of if.then12 to exit 12
distance of if.else118 to exit 7
distance of if.end117 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.end to exit 13

-------
Acquiring bb if.else30
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add if.end

distance of if.then18 to exit 13
distance of land.lhs.true to exit 13
distance of if.end to exit 13
distance of if.then12 to exit 12
distance of if.else118 to exit 7
distance of if.end117 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2

-------
Acquiring bb if.then18
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.end31,
distance of land.lhs.true to exit 13
distance of if.end to exit 13
distance of if.then12 to exit 12
distance of if.else118 to exit 7
distance of if.end117 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.end31 to exit 12

-------
Acquiring bb land.lhs.true
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add if.end117
land.lhs.true107,
distance of if.end to exit 13
distance of if.then12 to exit 12
distance of if.end31 to exit 12
distance of if.else118 to exit 7
distance of if.end117 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of land.lhs.true107 to exit 12

-------
Acquiring bb if.end
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add if.end31

distance of if.then12 to exit 12
distance of if.end31 to exit 12
distance of land.lhs.true107 to exit 12
distance of if.else118 to exit 7
distance of if.end117 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2

-------
Acquiring bb if.then12
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.end32,
distance of if.end31 to exit 12
distance of land.lhs.true107 to exit 12
distance of if.else118 to exit 7
distance of if.end117 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.end32 to exit 11

-------
Acquiring bb if.end31
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add if.end32

distance of land.lhs.true107 to exit 12
distance of if.end32 to exit 11
distance of if.else118 to exit 7
distance of if.end117 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2

-------
Acquiring bb land.lhs.true107
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add if.end117
land.lhs.true109,
distance of if.end32 to exit 11
distance of if.else118 to exit 7
distance of if.end117 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of land.lhs.true109 to exit 11

-------
Acquiring bb if.end32
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.then38,if.end39,
distance of land.lhs.true109 to exit 11
distance of if.else118 to exit 7
distance of if.end117 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.then38 to exit 10
distance of if.end39 to exit 9

-------
Acquiring bb land.lhs.true109
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add if.end117
land.lhs.true111,
distance of if.then38 to exit 10
distance of if.end39 to exit 9
distance of if.else118 to exit 7
distance of if.end117 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of land.lhs.true111 to exit 10

-------
Acquiring bb if.then38
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add if.end39

distance of land.lhs.true111 to exit 10
distance of if.end39 to exit 9
distance of if.else118 to exit 7
distance of if.end117 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2

-------
Acquiring bb land.lhs.true111
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add if.end117
land.lhs.true113,
distance of if.end39 to exit 9
distance of if.else118 to exit 7
distance of if.end117 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of land.lhs.true113 to exit 9

-------
Acquiring bb if.end39
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.then42,if.end43,
distance of land.lhs.true113 to exit 9
distance of if.else118 to exit 7
distance of if.end117 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.then42 to exit 8
distance of if.end43 to exit 7

-------
Acquiring bb land.lhs.true113
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.then116,didn't add if.end117

distance of if.then42 to exit 8
distance of if.else118 to exit 7
distance of if.end117 to exit 7
distance of if.end43 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.then116 to exit 8

-------
Acquiring bb if.then42
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add if.end43

distance of if.then116 to exit 8
distance of if.else118 to exit 7
distance of if.end117 to exit 7
distance of if.end43 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2

-------
Acquiring bb if.then116
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add if.end117

distance of if.else118 to exit 7
distance of if.end117 to exit 7
distance of if.end43 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2

-------
Acquiring bb if.else118
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.end119,
distance of if.end117 to exit 7
distance of if.end43 to exit 7
distance of if.then58 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.end119 to exit 6

-------
Acquiring bb if.end117
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add if.end119

distance of if.end43 to exit 7
distance of if.then58 to exit 6
distance of if.end119 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2

-------
Acquiring bb if.end43
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.then48,if.end49,
distance of if.then58 to exit 6
distance of if.end119 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.then48 to exit 6
distance of if.end49 to exit 5

-------
Acquiring bb if.then58
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.end120,
distance of if.end119 to exit 6
distance of if.then48 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.end49 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.end120 to exit 5

-------
Acquiring bb if.end119
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add if.end120

distance of if.then48 to exit 6
distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.end49 to exit 5
distance of if.end120 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2

-------
Acquiring bb if.then48
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add if.end49

distance of if.then54 to exit 5
distance of if.then7 to exit 5
distance of if.end49 to exit 5
distance of if.end120 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2

-------
Acquiring bb if.then54
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.end121,
distance of if.then7 to exit 5
distance of if.end49 to exit 5
distance of if.end120 to exit 5
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.end121 to exit 4

-------
Acquiring bb if.then7
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.end50,
distance of if.end49 to exit 5
distance of if.end120 to exit 5
distance of if.end121 to exit 4
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.end50 to exit 4

-------
Acquiring bb if.end49
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add if.end50

distance of if.end120 to exit 5
distance of if.end121 to exit 4
distance of if.end50 to exit 4
distance of if.then2 to exit 3
distance of if.then to exit 2

-------
Acquiring bb if.end120
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add if.end121

distance of if.end121 to exit 4
distance of if.end50 to exit 4
distance of if.then2 to exit 3
distance of if.then to exit 2

-------
Acquiring bb if.end121
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.end122,
distance of if.end50 to exit 4
distance of if.then2 to exit 3
distance of if.then to exit 2
distance of if.end122 to exit 3

-------
Acquiring bb if.end50
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add if.end122

distance of if.then2 to exit 3
distance of if.end122 to exit 3
distance of if.then to exit 2

-------
Acquiring bb if.then2
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.end123,
distance of if.end122 to exit 3
distance of if.then to exit 2
distance of if.end123 to exit 2

-------
Acquiring bb if.end122
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add if.end123

distance of if.then to exit 2
distance of if.end123 to exit 2

-------
Acquiring bb if.then
entered end hop for function redefine_start
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:newName0,
distance of if.end123 to exit 2
distance of newName0 to exit 2

-------
Acquiring bb if.end123
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:if.end124,
distance of newName0 to exit 2
distance of if.end124 to exit 1

-------
Acquiring bb newName0
entered end hop for function redefine_start
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add if.end124

distance of newName0 to exit 2
distance of if.end124 to exit 1

-------
Acquiring bb newName0
entered end hop for function redefine_start
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:didn't add if.end124

distance of if.end124 to exit 1

-------
Acquiring bb if.end124
entered end hop for function redefine_start
Adding basic blocks for traversal in a breadth biased order for function redefine_start
added to succ list:
adding to creation map bbargs of size 4
before partitioning:; ModuleID = './Compilation_Error/startuppump_original.ll'
target datalayout = "E-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-n32"
target triple = "redefine"

@CMD_FUEL_RAMP_START = global float 0x3FC1EB8520000000, align 4
@CMD_FUEL_RAMP_END = global float 0x3FC1EB8520000000, align 4
@NH_IDLE_GROUND = global float 5.350000e+01, align 4
@NL_IDLE_GROUND = global float 3.000000e+01, align 4
@zero_point_zero_zero_one_four = global float 0x3F56F00680000000, align 4
@zero_point_zero_zero_one = global float 0x3F50624DE0000000, align 4
@one_point_o = global float 1.000000e+00, align 4
@zero_point_one_eight = global float 0x3FC70A3D80000000, align 4
@NL_REF = global float 4.363600e+04, align 4
@NH_REF = global float 5.071900e+04, align 4
@hundred = global float 1.000000e+02, align 4
@zero_point_zero_two = global float 0x3F947AE140000000, align 4
@zero_point_zero_two_five = global float 0x3F999999A0000000, align 4
@zero_point_nine_nine_five = global float 0x3FEFD70A40000000, align 4
@zero_point_one = global float 0x3FB99999A0000000, align 4
@zero_point_zero_one = global float 0x3F847AE140000000, align 4
@exp1 = global float 0x3E8AD7F2A0000000, align 4
@exp3 = global float 0x3F0A36E2E0000000, align 4
@ten = global i32 10, align 4
@fifty = global i32 50, align 4
@thirty = global i32 30, align 4
@twenty = global i32 20, align 4
@two = global i32 2, align 4
@epsilon_global = common global float 0.000000e+00, align 4
@iTerm = common global float 0.000000e+00, align 4
@epsilon_modified = common global float 0.000000e+00, align 4
@dTerm_modified = common global float 0.000000e+00, align 4
@fuel_pump_integrator = common global float 0.000000e+00, align 4
@nh_setpoint = common global float 0.000000e+00, align 4
@ramp_filter_memory = common global float 0.000000e+00, align 4
@redefine_in_parameters = common global [16 x i32] zeroinitializer, align 4
@redefine_start.fuel_press_integrator = internal global float 0.000000e+00, align 4
@redefine_start.fuel_pump_integrator = internal global float 0.000000e+00, align 4
@redefine_start.dnhqdt = internal global float 0.000000e+00, align 4
@fuel_pump_cmd = common global float 0.000000e+00, align 4
@t_fuel_press_control = common global i32 0, align 4
@fuel_press_setpoint = common global float 0.000000e+00, align 4
@operation_mode = common global i32 0, align 4
@redefine_in_stab = common global [50 x i32] zeroinitializer, align 4
@stab_array_index = common global i32 0, align 4
@nh_idle = common global float 0.000000e+00, align 4
@redefine_out_parameters = common global [12 x i32] zeroinitializer, align 4
@nh_average = common global float 0.000000e+00, align 4

; Function Attrs: nounwind
define void @pid_init(float %iTermtemp) #0 {
entry:
  %iTermtemp.addr = alloca float, align 4
  store float %iTermtemp, float* %iTermtemp.addr, align 4
  store float 0.000000e+00, float* @epsilon_global, align 4
  %0 = load float* %iTermtemp.addr, align 4
  store float %0, float* @iTerm, align 4
  store float 0.000000e+00, float* @epsilon_modified, align 4
  store float 0.000000e+00, float* @dTerm_modified, align 4
  ret void
}

; Function Attrs: nounwind
define void @regulation_nh_init(float %cmd) #0 {
entry:
  %cmd.addr = alloca float, align 4
  store float %cmd, float* %cmd.addr, align 4
  %0 = load float* %cmd.addr, align 4
  br label %newName0

newName0:                                         ; preds = %entry
  call void @pid_init(float %0)
  br label %newName01

newName01:                                        ; preds = %newName0
  %1 = load float* %cmd.addr, align 4
  store float %1, float* @fuel_pump_integrator, align 4
  %2 = load float* @nh_setpoint, align 4
  store float %2, float* @ramp_filter_memory, align 4
  ret void
}

; Function Attrs: nounwind
define void @redefine_start() #0 {
entry:
  %0 = getelementptr inbounds float* @CMD_FUEL_RAMP_START, i32 0
  store float 0x3FC1EB8520000000, float* %0, align 4
  %1 = getelementptr inbounds float* @CMD_FUEL_RAMP_END, i32 0
  store float 0x3FC1EB8520000000, float* %1, align 4
  %2 = getelementptr inbounds float* @NH_IDLE_GROUND, i32 0
  store float 5.350000e+01, float* %2, align 4
  %3 = getelementptr inbounds float* @NL_IDLE_GROUND, i32 0
  store float 3.000000e+01, float* %3, align 4
  %4 = getelementptr inbounds float* @zero_point_zero_zero_one_four, i32 0
  store float 0x3F56F00680000000, float* %4, align 4
  %5 = getelementptr inbounds float* @zero_point_zero_zero_one, i32 0
  store float 0x3F50624DE0000000, float* %5, align 4
  %6 = getelementptr inbounds float* @one_point_o, i32 0
  store float 1.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds float* @zero_point_one_eight, i32 0
  store float 0x3FC70A3D80000000, float* %7, align 4
  %8 = getelementptr inbounds float* @NL_REF, i32 0
  store float 4.363600e+04, float* %8, align 4
  %9 = getelementptr inbounds float* @NH_REF, i32 0
  store float 5.071900e+04, float* %9, align 4
  %10 = getelementptr inbounds float* @hundred, i32 0
  store float 1.000000e+02, float* %10, align 4
  %11 = getelementptr inbounds float* @zero_point_zero_two, i32 0
  store float 0x3F947AE140000000, float* %11, align 4
  %12 = getelementptr inbounds float* @zero_point_zero_two_five, i32 0
  store float 0x3F999999A0000000, float* %12, align 4
  %13 = getelementptr inbounds float* @zero_point_nine_nine_five, i32 0
  store float 0x3FEFD70A40000000, float* %13, align 4
  %14 = getelementptr inbounds float* @zero_point_one, i32 0
  store float 0x3FB99999A0000000, float* %14, align 4
  %15 = getelementptr inbounds float* @zero_point_zero_one, i32 0
  store float 0x3F847AE140000000, float* %15, align 4
  %16 = getelementptr inbounds float* @exp1, i32 0
  store float 0x3E8AD7F2A0000000, float* %16, align 4
  %17 = getelementptr inbounds float* @exp3, i32 0
  store float 0x3F0A36E2E0000000, float* %17, align 4
  %18 = getelementptr inbounds i32* @ten, i32 0
  store i32 10, i32* %18, align 4
  %19 = getelementptr inbounds i32* @fifty, i32 0
  store i32 50, i32* %19, align 4
  %20 = getelementptr inbounds i32* @thirty, i32 0
  store i32 30, i32* %20, align 4
  %21 = getelementptr inbounds i32* @twenty, i32 0
  store i32 20, i32* %21, align 4
  %22 = getelementptr inbounds i32* @two, i32 0
  store i32 2, i32* %22, align 4
  %23 = getelementptr inbounds float* @epsilon_global, i32 0
  store float 0.000000e+00, float* %23, align 4
  %24 = getelementptr inbounds float* @iTerm, i32 0
  store float 0.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds float* @epsilon_modified, i32 0
  store float 0.000000e+00, float* %25, align 4
  %26 = getelementptr inbounds float* @dTerm_modified, i32 0
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds float* @fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds float* @nh_setpoint, i32 0
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds float* @ramp_filter_memory, i32 0
  store float 0.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds float* @redefine_start.fuel_press_integrator, i32 0
  store float 0.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds float* @redefine_start.fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %31, align 4
  %32 = getelementptr inbounds float* @redefine_start.dnhqdt, i32 0
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds float* @fuel_pump_cmd, i32 0
  store float 0.000000e+00, float* %33, align 4
  %34 = getelementptr inbounds i32* @t_fuel_press_control, i32 0
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds float* @fuel_press_setpoint, i32 0
  store float 0.000000e+00, float* %35, align 4
  %36 = getelementptr inbounds i32* @operation_mode, i32 0
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds i32* @stab_array_index, i32 0
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds float* @nh_idle, i32 0
  store float 0.000000e+00, float* %38, align 4
  %39 = getelementptr inbounds float* @nh_average, i32 0
  store float 0.000000e+00, float* %39, align 4
  %current_nh = alloca float, align 4
  %index_nh = alloca float, align 4
  %epsilon = alloca float, align 4
  %nh_average = alloca float, align 4
  %i = alloca i32, align 4
  %startup_time = alloca i32, align 4
  %fuel_press = alloca float, align 4
  %40 = load float* bitcast ([16 x i32]* @redefine_in_parameters to float*), align 4
  store float %40, float* %current_nh, align 4
  %41 = load float* bitcast (i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 5) to float*), align 4
  store float %41, float* %index_nh, align 4
  %42 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 1), align 4
  %cmp = icmp eq i32 %42, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* @fuel_pump_cmd, align 4
  %43 = load float* @fuel_pump_cmd, align 4
  br label %newName0

newName0:                                         ; preds = %if.then
  call void @regulation_nh_init(float %43)
  br label %if.end124

if.else:                                          ; preds = %entry
  %44 = load float* %current_nh, align 4
  %cmp1 = fcmp olt float %44, 2.700000e+03
  br i1 %cmp1, label %if.then2, label %if.else3

if.then2:                                         ; preds = %if.else
  br label %if.end123

if.else3:                                         ; preds = %if.else
  %45 = load float* %current_nh, align 4
  %cmp4 = fcmp olt float %45, 1.500000e+04
  br i1 %cmp4, label %if.then5, label %if.else51

if.then5:                                         ; preds = %if.else3
  %46 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 2), align 4
  %cmp6 = icmp eq i32 %46, -1
  br i1 %cmp6, label %if.then7, label %if.else9

if.then7:                                         ; preds = %if.then5
  %47 = load float* @CMD_FUEL_RAMP_START, align 4
  %48 = load float* %current_nh, align 4
  %sub = fsub float %48, 2.700000e+03
  %49 = load float* @CMD_FUEL_RAMP_END, align 4
  %50 = load float* @CMD_FUEL_RAMP_START, align 4
  %sub8 = fsub float %49, %50
  %mul = fmul float %sub, %sub8
  %add = fadd float %47, %mul
  store float %add, float* @fuel_pump_cmd, align 4
  %51 = load float* @fuel_pump_cmd, align 4
  store float %51, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end50

if.else9:                                         ; preds = %if.then5
  %52 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 14), align 4
  store i32 %52, i32* %startup_time, align 4
  %53 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 15), align 4
  %conv = sitofp i32 %53 to float
  store float %conv, float* %fuel_press, align 4
  %54 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 3), align 4
  %cmp10 = icmp eq i32 %54, -1
  br i1 %cmp10, label %if.then12, label %if.else13

if.then12:                                        ; preds = %if.else9
  %55 = load i32* %startup_time, align 4
  store i32 %55, i32* @t_fuel_press_control, align 4
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %if.end32

if.else13:                                        ; preds = %if.else9
  %56 = load i32* %startup_time, align 4
  %57 = load i32* @t_fuel_press_control, align 4
  %sub14 = sub nsw i32 %56, %57
  %58 = load i32* @ten, align 4
  %59 = load i32* @fifty, align 4
  %mul15 = mul nsw i32 %58, %59
  %cmp16 = icmp slt i32 %sub14, %mul15
  br i1 %cmp16, label %if.then18, label %if.else19

if.then18:                                        ; preds = %if.else13
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %if.end31

if.else19:                                        ; preds = %if.else13
  %60 = load i32* %startup_time, align 4
  %61 = load i32* @t_fuel_press_control, align 4
  %sub20 = sub nsw i32 %60, %61
  %62 = load i32* @thirty, align 4
  %63 = load i32* @fifty, align 4
  %mul21 = mul nsw i32 %62, %63
  %cmp22 = icmp slt i32 %sub20, %mul21
  br i1 %cmp22, label %if.then24, label %if.else30

if.then24:                                        ; preds = %if.else19
  %64 = load float* @zero_point_one_eight, align 4
  %65 = load i32* %startup_time, align 4
  %66 = load i32* @t_fuel_press_control, align 4
  %67 = load i32* @ten, align 4
  %68 = load i32* @fifty, align 4
  %mul25 = mul nsw i32 %67, %68
  %add26 = add nsw i32 %66, %mul25
  %sub27 = sub nsw i32 %65, %add26
  %conv28 = sitofp i32 %sub27 to float
  %add29 = fadd float %64, %conv28
  store float %add29, float* @fuel_press_setpoint, align 4
  br label %if.end

if.else30:                                        ; preds = %if.else19
  store float 1.000000e+00, float* @fuel_press_setpoint, align 4
  br label %if.end

if.end:                                           ; preds = %if.else30, %if.then24
  br label %if.end31

if.end31:                                         ; preds = %if.end, %if.then18
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then12
  %69 = load float* @fuel_press_setpoint, align 4
  %70 = load float* %fuel_press, align 4
  %sub33 = fsub float %69, %70
  store float %sub33, float* %epsilon, align 4
  %71 = load float* @redefine_start.fuel_press_integrator, align 4
  %72 = load float* %epsilon, align 4
  %73 = load float* @zero_point_zero_zero_one_four, align 4
  %mul34 = fmul float %72, %73
  %add35 = fadd float %71, %mul34
  store float %add35, float* @redefine_start.fuel_press_integrator, align 4
  %74 = load float* @redefine_start.fuel_press_integrator, align 4
  %75 = load float* @zero_point_zero_two_five, align 4
  %cmp36 = fcmp ogt float %74, %75
  br i1 %cmp36, label %if.then38, label %if.end39

if.then38:                                        ; preds = %if.end32
  store float 2.500000e-01, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end39

if.end39:                                         ; preds = %if.then38, %if.end32
  %76 = load float* @redefine_start.fuel_press_integrator, align 4
  %77 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp40 = fcmp olt float %76, %77
  br i1 %cmp40, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.end39
  %78 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %78, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.then42, %if.end39
  %79 = load float* @redefine_start.fuel_press_integrator, align 4
  %80 = load float* @zero_point_zero_zero_one, align 4
  %81 = load float* %epsilon, align 4
  %mul44 = fmul float %80, %81
  %add45 = fadd float %79, %mul44
  store float %add45, float* @fuel_pump_cmd, align 4
  %82 = load float* @fuel_pump_cmd, align 4
  %83 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp46 = fcmp olt float %82, %83
  br i1 %cmp46, label %if.then48, label %if.end49

if.then48:                                        ; preds = %if.end43
  %84 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %84, float* @fuel_pump_cmd, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.then48, %if.end43
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then7
  br label %if.end122

if.else51:                                        ; preds = %if.else3
  %85 = load float* %current_nh, align 4
  %cmp52 = fcmp olt float %85, 1.500000e+04
  br i1 %cmp52, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.else51
  br label %if.end121

if.else55:                                        ; preds = %if.else51
  %86 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 4), align 4
  store i32 %86, i32* @operation_mode, align 4
  %87 = load i32* @operation_mode, align 4
  %cmp56 = icmp eq i32 %87, 2
  br i1 %cmp56, label %if.then58, label %if.else62

if.then58:                                        ; preds = %if.else55
  store float 0.000000e+00, float* @fuel_press_setpoint, align 4
  %88 = load float* %current_nh, align 4
  store float %88, float* @nh_setpoint, align 4
  %89 = load float* @fuel_pump_cmd, align 4
  store float %89, float* @redefine_start.fuel_pump_integrator, align 4
  %90 = load float* %current_nh, align 4
  %91 = load float* %index_nh, align 4
  %sub59 = fsub float %90, %91
  %92 = load i32* @two, align 4
  %conv60 = sitofp i32 %92 to float
  %mul61 = fmul float %sub59, %conv60
  store float %mul61, float* @redefine_start.dnhqdt, align 4
  store i32 4, i32* @operation_mode, align 4
  br label %if.end120

if.else62:                                        ; preds = %if.else55
  %93 = load i32* @operation_mode, align 4
  %cmp63 = icmp eq i32 %93, 4
  br i1 %cmp63, label %if.then65, label %if.else118

if.then65:                                        ; preds = %if.else62
  %94 = load float* @nh_setpoint, align 4
  %95 = load float* @NH_IDLE_GROUND, align 4
  %cmp66 = fcmp olt float %94, %95
  br i1 %cmp66, label %if.then68, label %if.else71

if.then68:                                        ; preds = %if.then65
  %96 = load float* @nh_setpoint, align 4
  %97 = load float* @zero_point_zero_two, align 4
  %98 = load float* @redefine_start.dnhqdt, align 4
  %mul69 = fmul float %97, %98
  %add70 = fadd float %96, %mul69
  store float %add70, float* @nh_setpoint, align 4
  br label %if.end74

if.else71:                                        ; preds = %if.then65
  %99 = load float* @nh_setpoint, align 4
  %100 = load float* @zero_point_zero_two, align 4
  %101 = load float* @redefine_start.dnhqdt, align 4
  %mul72 = fmul float %100, %101
  %sub73 = fsub float %99, %mul72
  store float %sub73, float* @nh_setpoint, align 4
  br label %if.end74

if.end74:                                         ; preds = %if.else71, %if.then68
  %102 = load float* @nh_setpoint, align 4
  %103 = load float* %current_nh, align 4
  %sub75 = fsub float %102, %103
  store float %sub75, float* %epsilon, align 4
  %104 = load float* @redefine_start.fuel_pump_integrator, align 4
  %105 = load float* %epsilon, align 4
  %106 = load float* @exp1, align 4
  %mul76 = fmul float %105, %106
  %add77 = fadd float %104, %mul76
  store float %add77, float* @redefine_start.fuel_pump_integrator, align 4
  %107 = load float* @redefine_start.fuel_pump_integrator, align 4
  %108 = load float* @zero_point_zero_two_five, align 4
  %cmp78 = fcmp ogt float %107, %108
  br i1 %cmp78, label %if.then80, label %if.end81

if.then80:                                        ; preds = %if.end74
  store float 2.500000e-01, float* @redefine_start.fuel_pump_integrator, align 4
  br label %if.end81

if.end81:                                         ; preds = %if.then80, %if.end74
  %109 = load float* @redefine_start.fuel_pump_integrator, align 4
  %110 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp82 = fcmp olt float %109, %110
  br i1 %cmp82, label %if.then84, label %if.end85

if.then84:                                        ; preds = %if.end81
  %111 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %111, float* @redefine_start.fuel_pump_integrator, align 4
  br label %if.end85

if.end85:                                         ; preds = %if.then84, %if.end81
  %112 = load float* @redefine_start.fuel_pump_integrator, align 4
  %113 = load float* @exp3, align 4
  %114 = load float* %epsilon, align 4
  %mul86 = fmul float %113, %114
  %add87 = fadd float %112, %mul86
  store float %add87, float* @fuel_pump_cmd, align 4
  %115 = load float* @fuel_pump_cmd, align 4
  %116 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp88 = fcmp olt float %115, %116
  br i1 %cmp88, label %if.then90, label %if.end91

if.then90:                                        ; preds = %if.end85
  %117 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %117, float* @fuel_pump_cmd, align 4
  br label %if.end91

if.end91:                                         ; preds = %if.then90, %if.end85
  %118 = load float* %current_nh, align 4
  %conv92 = fptosi float %118 to i32
  %119 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 6), align 4
  %arrayidx = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %119
  store i32 %conv92, i32* %arrayidx, align 4
  %120 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 7), align 4
  store i32 %120, i32* @stab_array_index, align 4
  %121 = load i32* @stab_array_index, align 4
  %cmp93 = icmp eq i32 %121, 50
  br i1 %cmp93, label %if.then95, label %if.end96

if.then95:                                        ; preds = %if.end91
  store i32 0, i32* @stab_array_index, align 4
  br label %if.end96

if.end96:                                         ; preds = %if.then95, %if.end91
  store float 0.000000e+00, float* %nh_average, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end96
  %122 = load i32* %i, align 4
  %cmp97 = icmp slt i32 %122, 50
  br i1 %cmp97, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %123 = load i32* %i, align 4
  %arrayidx99 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %123
  %124 = load i32* %arrayidx99, align 4
  %conv100 = sitofp i32 %124 to float
  %125 = load float* %nh_average, align 4
  %add101 = fadd float %125, %conv100
  store float %add101, float* %nh_average, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %126 = load i32* %i, align 4
  %inc = add nsw i32 %126, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %127 = load float* @NH_IDLE_GROUND, align 4
  store float %127, float* @nh_idle, align 4
  %128 = load float* %nh_average, align 4
  %129 = load float* @nh_idle, align 4
  %130 = load float* @NH_REF, align 4
  %mul102 = fmul float %129, %130
  %131 = load float* @hundred, align 4
  %mul103 = fmul float %mul102, %131
  %132 = load float* @zero_point_nine_nine_five, align 4
  %mul104 = fmul float %mul103, %132
  %cmp105 = fcmp oge float %128, %mul104
  br i1 %cmp105, label %land.lhs.true, label %if.end117

land.lhs.true:                                    ; preds = %for.end
  %133 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 8), align 4
  %tobool = icmp ne i32 %133, 0
  br i1 %tobool, label %if.end117, label %land.lhs.true107

land.lhs.true107:                                 ; preds = %land.lhs.true
  %134 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 9), align 4
  %tobool108 = icmp ne i32 %134, 0
  br i1 %tobool108, label %if.end117, label %land.lhs.true109

land.lhs.true109:                                 ; preds = %land.lhs.true107
  %135 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 10), align 4
  %tobool110 = icmp ne i32 %135, 0
  br i1 %tobool110, label %if.end117, label %land.lhs.true111

land.lhs.true111:                                 ; preds = %land.lhs.true109
  %136 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 11), align 4
  %tobool112 = icmp ne i32 %136, 0
  br i1 %tobool112, label %if.end117, label %land.lhs.true113

land.lhs.true113:                                 ; preds = %land.lhs.true111
  %137 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 12), align 4
  %cmp114 = icmp sle i32 %137, 10
  br i1 %cmp114, label %if.then116, label %if.end117

if.then116:                                       ; preds = %land.lhs.true113
  store i32 8, i32* @operation_mode, align 4
  br label %if.end117

if.end117:                                        ; preds = %if.then116, %land.lhs.true113, %land.lhs.true111, %land.lhs.true109, %land.lhs.true107, %land.lhs.true, %for.end
  br label %if.end119

if.else118:                                       ; preds = %if.else62
  store i32 16, i32* @operation_mode, align 4
  br label %if.end119

if.end119:                                        ; preds = %if.else118, %if.end117
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then58
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.then54
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.end50
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %if.then2
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %newName0
  %138 = load i32* bitcast (float* @redefine_start.fuel_press_integrator to i32*), align 4
  store i32 %138, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 0), align 4
  %139 = load i32* bitcast (float* @fuel_press_setpoint to i32*), align 4
  store i32 %139, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 1), align 4
  %140 = load i32* bitcast (float* @epsilon_global to i32*), align 4
  store i32 %140, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 2), align 4
  %141 = load i32* bitcast (float* @iTerm to i32*), align 4
  store i32 %141, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 3), align 4
  %142 = load i32* bitcast (float* @epsilon_modified to i32*), align 4
  store i32 %142, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 4), align 4
  %143 = load i32* bitcast (float* @dTerm_modified to i32*), align 4
  store i32 %143, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 5), align 4
  %144 = load i32* bitcast (float* @redefine_start.fuel_pump_integrator to i32*), align 4
  store i32 %144, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 6), align 4
  %145 = load i32* bitcast (float* @ramp_filter_memory to i32*), align 4
  store i32 %145, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 7), align 4
  %146 = bitcast float* %current_nh to i32*
  %147 = load i32* %146, align 4
  store i32 %147, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 8), align 4
  %148 = load i32* @stab_array_index, align 4
  store i32 %148, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 9), align 4
  %149 = bitcast float* %nh_average to i32*
  %150 = load i32* %149, align 4
  store i32 %150, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 10), align 4
  %151 = load i32* bitcast (float* @nh_idle to i32*), align 4
  store i32 %151, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 11), align 4
  ret void
}

attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }

!redefine.annotations = !{}
-----------Creating HyperOps from partitioned functions-----------
added to traversallist:entry
added to traversallist:if.end123
added to traversallist:newName0
added to traversallist:if.end124
now at func:entry

-----------Creating a new HyperOp for function:redefine_start-----------

--------
Acquired bb:entry from parent:redefine_start

--------
Acquired bb:if.else from parent:redefine_start

--------
Acquired bb:if.else3 from parent:redefine_start

--------
Acquired bb:if.else51 from parent:redefine_start

--------
Acquired bb:if.else55 from parent:redefine_start

--------
Acquired bb:if.else62 from parent:redefine_start

--------
Acquired bb:if.then65 from parent:redefine_start

--------
Acquired bb:if.then68 from parent:redefine_start

--------
Acquired bb:if.else71 from parent:redefine_start

--------
Acquired bb:if.end74 from parent:redefine_start

--------
Acquired bb:if.then80 from parent:redefine_start

--------
Acquired bb:if.end81 from parent:redefine_start

--------
Acquired bb:if.then84 from parent:redefine_start

--------
Acquired bb:if.end85 from parent:redefine_start

--------
Acquired bb:if.then90 from parent:redefine_start

--------
Acquired bb:if.then5 from parent:redefine_start

--------
Acquired bb:if.end91 from parent:redefine_start

--------
Acquired bb:if.else9 from parent:redefine_start

--------
Acquired bb:if.then95 from parent:redefine_start

--------
Acquired bb:if.end96 from parent:redefine_start

--------
Acquired bb:if.else13 from parent:redefine_start

--------
Acquired bb:for.cond from parent:redefine_start

--------
Acquired bb:for.body from parent:redefine_start

--------
Acquired bb:for.inc from parent:redefine_start

--------
Acquired bb:if.else19 from parent:redefine_start

--------
Acquired bb:for.end from parent:redefine_start

--------
Acquired bb:if.then24 from parent:redefine_start

--------
Acquired bb:if.else30 from parent:redefine_start

--------
Acquired bb:if.then18 from parent:redefine_start

--------
Acquired bb:land.lhs.true from parent:redefine_start

--------
Acquired bb:if.end from parent:redefine_start

--------
Acquired bb:if.then12 from parent:redefine_start

--------
Acquired bb:if.end31 from parent:redefine_start

--------
Acquired bb:land.lhs.true107 from parent:redefine_start

--------
Acquired bb:if.end32 from parent:redefine_start

--------
Acquired bb:land.lhs.true109 from parent:redefine_start

--------
Acquired bb:if.then38 from parent:redefine_start

--------
Acquired bb:land.lhs.true111 from parent:redefine_start

--------
Acquired bb:if.end39 from parent:redefine_start

--------
Acquired bb:land.lhs.true113 from parent:redefine_start

--------
Acquired bb:if.then42 from parent:redefine_start

--------
Acquired bb:if.then116 from parent:redefine_start

--------
Acquired bb:if.else118 from parent:redefine_start

--------
Acquired bb:if.end117 from parent:redefine_start

--------
Acquired bb:if.end43 from parent:redefine_start

--------
Acquired bb:if.then58 from parent:redefine_start

--------
Acquired bb:if.end119 from parent:redefine_start

--------
Acquired bb:if.then48 from parent:redefine_start

--------
Acquired bb:if.then54 from parent:redefine_start

--------
Acquired bb:if.then7 from parent:redefine_start

--------
Acquired bb:if.end49 from parent:redefine_start

--------
Acquired bb:if.end120 from parent:redefine_start

--------
Acquired bb:if.end121 from parent:redefine_start

--------
Acquired bb:if.end50 from parent:redefine_start

--------
Acquired bb:if.then2 from parent:redefine_start

--------
Acquired bb:if.end122 from parent:redefine_start

--------
Acquired bb:if.then from parent:redefine_start
created func:redefine_start1
now at func:if.end123

-----------Creating a new HyperOp for function:redefine_start-----------

--------
Acquired bb:if.end123 from parent:redefine_start
created func:redefine_start2
now at func:newName0
now at func:if.end124

-----------Creating a new HyperOp for function:redefine_start-----------

--------
Acquired bb:if.end124 from parent:redefine_start
created func:redefine_start3
now at func:newName01

-----------Creating a new HyperOp for function:regulation_nh_init-----------

--------
Acquired bb:newName01 from parent:regulation_nh_init
created func:regulation_nh_init4
now at func:newName0
now at func:entry

-----------Creating a new HyperOp for function:regulation_nh_init-----------
newName0,
--------
Acquired bb:entry from parent:regulation_nh_init

--------
Acquired bb:newName0 from parent:redefine_start
created func:regulation_nh_init5
now at func:entry

-----------Creating a new HyperOp for function:pid_init-----------
newName0,
--------
Acquired bb:entry from parent:pid_init

--------
Acquired bb:newName0 from parent:regulation_nh_init
created func:pid_init6
before patching stuff:; ModuleID = './Compilation_Error/startuppump_original.ll'
target datalayout = "E-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-n32"
target triple = "redefine"

@CMD_FUEL_RAMP_START = global float 0x3FC1EB8520000000, align 4
@CMD_FUEL_RAMP_END = global float 0x3FC1EB8520000000, align 4
@NH_IDLE_GROUND = global float 5.350000e+01, align 4
@NL_IDLE_GROUND = global float 3.000000e+01, align 4
@zero_point_zero_zero_one_four = global float 0x3F56F00680000000, align 4
@zero_point_zero_zero_one = global float 0x3F50624DE0000000, align 4
@one_point_o = global float 1.000000e+00, align 4
@zero_point_one_eight = global float 0x3FC70A3D80000000, align 4
@NL_REF = global float 4.363600e+04, align 4
@NH_REF = global float 5.071900e+04, align 4
@hundred = global float 1.000000e+02, align 4
@zero_point_zero_two = global float 0x3F947AE140000000, align 4
@zero_point_zero_two_five = global float 0x3F999999A0000000, align 4
@zero_point_nine_nine_five = global float 0x3FEFD70A40000000, align 4
@zero_point_one = global float 0x3FB99999A0000000, align 4
@zero_point_zero_one = global float 0x3F847AE140000000, align 4
@exp1 = global float 0x3E8AD7F2A0000000, align 4
@exp3 = global float 0x3F0A36E2E0000000, align 4
@ten = global i32 10, align 4
@fifty = global i32 50, align 4
@thirty = global i32 30, align 4
@twenty = global i32 20, align 4
@two = global i32 2, align 4
@epsilon_global = common global float 0.000000e+00, align 4
@iTerm = common global float 0.000000e+00, align 4
@epsilon_modified = common global float 0.000000e+00, align 4
@dTerm_modified = common global float 0.000000e+00, align 4
@fuel_pump_integrator = common global float 0.000000e+00, align 4
@nh_setpoint = common global float 0.000000e+00, align 4
@ramp_filter_memory = common global float 0.000000e+00, align 4
@redefine_in_parameters = common global [16 x i32] zeroinitializer, align 4
@redefine_start.fuel_press_integrator = internal global float 0.000000e+00, align 4
@redefine_start.fuel_pump_integrator = internal global float 0.000000e+00, align 4
@redefine_start.dnhqdt = internal global float 0.000000e+00, align 4
@fuel_pump_cmd = common global float 0.000000e+00, align 4
@t_fuel_press_control = common global i32 0, align 4
@fuel_press_setpoint = common global float 0.000000e+00, align 4
@operation_mode = common global i32 0, align 4
@redefine_in_stab = common global [50 x i32] zeroinitializer, align 4
@stab_array_index = common global i32 0, align 4
@nh_idle = common global float 0.000000e+00, align 4
@redefine_out_parameters = common global [12 x i32] zeroinitializer, align 4
@nh_average = common global float 0.000000e+00, align 4

; Function Attrs: nounwind
define void @pid_init(float %iTermtemp) #0 {
entry:
  %iTermtemp.addr = alloca float, align 4
  store float %iTermtemp, float* %iTermtemp.addr, align 4
  store float 0.000000e+00, float* @epsilon_global, align 4
  %0 = load float* %iTermtemp.addr, align 4
  store float %0, float* @iTerm, align 4
  store float 0.000000e+00, float* @epsilon_modified, align 4
  store float 0.000000e+00, float* @dTerm_modified, align 4
  ret void
}

; Function Attrs: nounwind
define void @regulation_nh_init(float %cmd) #0 {
entry:
  %cmd.addr = alloca float, align 4
  store float %cmd, float* %cmd.addr, align 4
  %0 = load float* %cmd.addr, align 4
  br label %newName0

newName0:                                         ; preds = %regulation_nh_init5.entry, %entry
  call void @pid_init(float %0)
  br label %newName01

newName01:                                        ; preds = %newName0
  %1 = load float* %cmd.addr, align 4
  store float %1, float* @fuel_pump_integrator, align 4
  %2 = load float* @nh_setpoint, align 4
  store float %2, float* @ramp_filter_memory, align 4
  ret void
}

; Function Attrs: nounwind
define void @redefine_start() #0 {
entry:
  %0 = getelementptr inbounds float* @CMD_FUEL_RAMP_START, i32 0
  store float 0x3FC1EB8520000000, float* %0, align 4
  %1 = getelementptr inbounds float* @CMD_FUEL_RAMP_END, i32 0
  store float 0x3FC1EB8520000000, float* %1, align 4
  %2 = getelementptr inbounds float* @NH_IDLE_GROUND, i32 0
  store float 5.350000e+01, float* %2, align 4
  %3 = getelementptr inbounds float* @NL_IDLE_GROUND, i32 0
  store float 3.000000e+01, float* %3, align 4
  %4 = getelementptr inbounds float* @zero_point_zero_zero_one_four, i32 0
  store float 0x3F56F00680000000, float* %4, align 4
  %5 = getelementptr inbounds float* @zero_point_zero_zero_one, i32 0
  store float 0x3F50624DE0000000, float* %5, align 4
  %6 = getelementptr inbounds float* @one_point_o, i32 0
  store float 1.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds float* @zero_point_one_eight, i32 0
  store float 0x3FC70A3D80000000, float* %7, align 4
  %8 = getelementptr inbounds float* @NL_REF, i32 0
  store float 4.363600e+04, float* %8, align 4
  %9 = getelementptr inbounds float* @NH_REF, i32 0
  store float 5.071900e+04, float* %9, align 4
  %10 = getelementptr inbounds float* @hundred, i32 0
  store float 1.000000e+02, float* %10, align 4
  %11 = getelementptr inbounds float* @zero_point_zero_two, i32 0
  store float 0x3F947AE140000000, float* %11, align 4
  %12 = getelementptr inbounds float* @zero_point_zero_two_five, i32 0
  store float 0x3F999999A0000000, float* %12, align 4
  %13 = getelementptr inbounds float* @zero_point_nine_nine_five, i32 0
  store float 0x3FEFD70A40000000, float* %13, align 4
  %14 = getelementptr inbounds float* @zero_point_one, i32 0
  store float 0x3FB99999A0000000, float* %14, align 4
  %15 = getelementptr inbounds float* @zero_point_zero_one, i32 0
  store float 0x3F847AE140000000, float* %15, align 4
  %16 = getelementptr inbounds float* @exp1, i32 0
  store float 0x3E8AD7F2A0000000, float* %16, align 4
  %17 = getelementptr inbounds float* @exp3, i32 0
  store float 0x3F0A36E2E0000000, float* %17, align 4
  %18 = getelementptr inbounds i32* @ten, i32 0
  store i32 10, i32* %18, align 4
  %19 = getelementptr inbounds i32* @fifty, i32 0
  store i32 50, i32* %19, align 4
  %20 = getelementptr inbounds i32* @thirty, i32 0
  store i32 30, i32* %20, align 4
  %21 = getelementptr inbounds i32* @twenty, i32 0
  store i32 20, i32* %21, align 4
  %22 = getelementptr inbounds i32* @two, i32 0
  store i32 2, i32* %22, align 4
  %23 = getelementptr inbounds float* @epsilon_global, i32 0
  store float 0.000000e+00, float* %23, align 4
  %24 = getelementptr inbounds float* @iTerm, i32 0
  store float 0.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds float* @epsilon_modified, i32 0
  store float 0.000000e+00, float* %25, align 4
  %26 = getelementptr inbounds float* @dTerm_modified, i32 0
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds float* @fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds float* @nh_setpoint, i32 0
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds float* @ramp_filter_memory, i32 0
  store float 0.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds float* @redefine_start.fuel_press_integrator, i32 0
  store float 0.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds float* @redefine_start.fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %31, align 4
  %32 = getelementptr inbounds float* @redefine_start.dnhqdt, i32 0
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds float* @fuel_pump_cmd, i32 0
  store float 0.000000e+00, float* %33, align 4
  %34 = getelementptr inbounds i32* @t_fuel_press_control, i32 0
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds float* @fuel_press_setpoint, i32 0
  store float 0.000000e+00, float* %35, align 4
  %36 = getelementptr inbounds i32* @operation_mode, i32 0
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds i32* @stab_array_index, i32 0
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds float* @nh_idle, i32 0
  store float 0.000000e+00, float* %38, align 4
  %39 = getelementptr inbounds float* @nh_average, i32 0
  store float 0.000000e+00, float* %39, align 4
  %current_nh = alloca float, align 4
  %index_nh = alloca float, align 4
  %epsilon = alloca float, align 4
  %nh_average = alloca float, align 4
  %i = alloca i32, align 4
  %startup_time = alloca i32, align 4
  %fuel_press = alloca float, align 4
  %40 = load float* bitcast ([16 x i32]* @redefine_in_parameters to float*), align 4
  store float %40, float* %current_nh, align 4
  %41 = load float* bitcast (i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 5) to float*), align 4
  store float %41, float* %index_nh, align 4
  %42 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 1), align 4
  %cmp = icmp eq i32 %42, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* @fuel_pump_cmd, align 4
  %43 = load float* @fuel_pump_cmd, align 4
  br label %newName0

newName0:                                         ; preds = %redefine_start1.if.then, %if.then
  call void @regulation_nh_init(float %43)
  br label %if.end124

if.else:                                          ; preds = %entry
  %44 = load float* %current_nh, align 4
  %cmp1 = fcmp olt float %44, 2.700000e+03
  br i1 %cmp1, label %if.then2, label %if.else3

if.then2:                                         ; preds = %if.else
  br label %if.end123

if.else3:                                         ; preds = %if.else
  %45 = load float* %current_nh, align 4
  %cmp4 = fcmp olt float %45, 1.500000e+04
  br i1 %cmp4, label %if.then5, label %if.else51

if.then5:                                         ; preds = %if.else3
  %46 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 2), align 4
  %cmp6 = icmp eq i32 %46, -1
  br i1 %cmp6, label %if.then7, label %if.else9

if.then7:                                         ; preds = %if.then5
  %47 = load float* @CMD_FUEL_RAMP_START, align 4
  %48 = load float* %current_nh, align 4
  %sub = fsub float %48, 2.700000e+03
  %49 = load float* @CMD_FUEL_RAMP_END, align 4
  %50 = load float* @CMD_FUEL_RAMP_START, align 4
  %sub8 = fsub float %49, %50
  %mul = fmul float %sub, %sub8
  %add = fadd float %47, %mul
  store float %add, float* @fuel_pump_cmd, align 4
  %51 = load float* @fuel_pump_cmd, align 4
  store float %51, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end50

if.else9:                                         ; preds = %if.then5
  %52 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 14), align 4
  store i32 %52, i32* %startup_time, align 4
  %53 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 15), align 4
  %conv = sitofp i32 %53 to float
  store float %conv, float* %fuel_press, align 4
  %54 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 3), align 4
  %cmp10 = icmp eq i32 %54, -1
  br i1 %cmp10, label %if.then12, label %if.else13

if.then12:                                        ; preds = %if.else9
  %55 = load i32* %startup_time, align 4
  store i32 %55, i32* @t_fuel_press_control, align 4
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %if.end32

if.else13:                                        ; preds = %if.else9
  %56 = load i32* %startup_time, align 4
  %57 = load i32* @t_fuel_press_control, align 4
  %sub14 = sub nsw i32 %56, %57
  %58 = load i32* @ten, align 4
  %59 = load i32* @fifty, align 4
  %mul15 = mul nsw i32 %58, %59
  %cmp16 = icmp slt i32 %sub14, %mul15
  br i1 %cmp16, label %if.then18, label %if.else19

if.then18:                                        ; preds = %if.else13
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %if.end31

if.else19:                                        ; preds = %if.else13
  %60 = load i32* %startup_time, align 4
  %61 = load i32* @t_fuel_press_control, align 4
  %sub20 = sub nsw i32 %60, %61
  %62 = load i32* @thirty, align 4
  %63 = load i32* @fifty, align 4
  %mul21 = mul nsw i32 %62, %63
  %cmp22 = icmp slt i32 %sub20, %mul21
  br i1 %cmp22, label %if.then24, label %if.else30

if.then24:                                        ; preds = %if.else19
  %64 = load float* @zero_point_one_eight, align 4
  %65 = load i32* %startup_time, align 4
  %66 = load i32* @t_fuel_press_control, align 4
  %67 = load i32* @ten, align 4
  %68 = load i32* @fifty, align 4
  %mul25 = mul nsw i32 %67, %68
  %add26 = add nsw i32 %66, %mul25
  %sub27 = sub nsw i32 %65, %add26
  %conv28 = sitofp i32 %sub27 to float
  %add29 = fadd float %64, %conv28
  store float %add29, float* @fuel_press_setpoint, align 4
  br label %if.end

if.else30:                                        ; preds = %if.else19
  store float 1.000000e+00, float* @fuel_press_setpoint, align 4
  br label %if.end

if.end:                                           ; preds = %if.else30, %if.then24
  br label %if.end31

if.end31:                                         ; preds = %if.end, %if.then18
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then12
  %69 = load float* @fuel_press_setpoint, align 4
  %70 = load float* %fuel_press, align 4
  %sub33 = fsub float %69, %70
  store float %sub33, float* %epsilon, align 4
  %71 = load float* @redefine_start.fuel_press_integrator, align 4
  %72 = load float* %epsilon, align 4
  %73 = load float* @zero_point_zero_zero_one_four, align 4
  %mul34 = fmul float %72, %73
  %add35 = fadd float %71, %mul34
  store float %add35, float* @redefine_start.fuel_press_integrator, align 4
  %74 = load float* @redefine_start.fuel_press_integrator, align 4
  %75 = load float* @zero_point_zero_two_five, align 4
  %cmp36 = fcmp ogt float %74, %75
  br i1 %cmp36, label %if.then38, label %if.end39

if.then38:                                        ; preds = %if.end32
  store float 2.500000e-01, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end39

if.end39:                                         ; preds = %if.then38, %if.end32
  %76 = load float* @redefine_start.fuel_press_integrator, align 4
  %77 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp40 = fcmp olt float %76, %77
  br i1 %cmp40, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.end39
  %78 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %78, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.then42, %if.end39
  %79 = load float* @redefine_start.fuel_press_integrator, align 4
  %80 = load float* @zero_point_zero_zero_one, align 4
  %81 = load float* %epsilon, align 4
  %mul44 = fmul float %80, %81
  %add45 = fadd float %79, %mul44
  store float %add45, float* @fuel_pump_cmd, align 4
  %82 = load float* @fuel_pump_cmd, align 4
  %83 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp46 = fcmp olt float %82, %83
  br i1 %cmp46, label %if.then48, label %if.end49

if.then48:                                        ; preds = %if.end43
  %84 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %84, float* @fuel_pump_cmd, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.then48, %if.end43
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then7
  br label %if.end122

if.else51:                                        ; preds = %if.else3
  %85 = load float* %current_nh, align 4
  %cmp52 = fcmp olt float %85, 1.500000e+04
  br i1 %cmp52, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.else51
  br label %if.end121

if.else55:                                        ; preds = %if.else51
  %86 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 4), align 4
  store i32 %86, i32* @operation_mode, align 4
  %87 = load i32* @operation_mode, align 4
  %cmp56 = icmp eq i32 %87, 2
  br i1 %cmp56, label %if.then58, label %if.else62

if.then58:                                        ; preds = %if.else55
  store float 0.000000e+00, float* @fuel_press_setpoint, align 4
  %88 = load float* %current_nh, align 4
  store float %88, float* @nh_setpoint, align 4
  %89 = load float* @fuel_pump_cmd, align 4
  store float %89, float* @redefine_start.fuel_pump_integrator, align 4
  %90 = load float* %current_nh, align 4
  %91 = load float* %index_nh, align 4
  %sub59 = fsub float %90, %91
  %92 = load i32* @two, align 4
  %conv60 = sitofp i32 %92 to float
  %mul61 = fmul float %sub59, %conv60
  store float %mul61, float* @redefine_start.dnhqdt, align 4
  store i32 4, i32* @operation_mode, align 4
  br label %if.end120

if.else62:                                        ; preds = %if.else55
  %93 = load i32* @operation_mode, align 4
  %cmp63 = icmp eq i32 %93, 4
  br i1 %cmp63, label %if.then65, label %if.else118

if.then65:                                        ; preds = %if.else62
  %94 = load float* @nh_setpoint, align 4
  %95 = load float* @NH_IDLE_GROUND, align 4
  %cmp66 = fcmp olt float %94, %95
  br i1 %cmp66, label %if.then68, label %if.else71

if.then68:                                        ; preds = %if.then65
  %96 = load float* @nh_setpoint, align 4
  %97 = load float* @zero_point_zero_two, align 4
  %98 = load float* @redefine_start.dnhqdt, align 4
  %mul69 = fmul float %97, %98
  %add70 = fadd float %96, %mul69
  store float %add70, float* @nh_setpoint, align 4
  br label %if.end74

if.else71:                                        ; preds = %if.then65
  %99 = load float* @nh_setpoint, align 4
  %100 = load float* @zero_point_zero_two, align 4
  %101 = load float* @redefine_start.dnhqdt, align 4
  %mul72 = fmul float %100, %101
  %sub73 = fsub float %99, %mul72
  store float %sub73, float* @nh_setpoint, align 4
  br label %if.end74

if.end74:                                         ; preds = %if.else71, %if.then68
  %102 = load float* @nh_setpoint, align 4
  %103 = load float* %current_nh, align 4
  %sub75 = fsub float %102, %103
  store float %sub75, float* %epsilon, align 4
  %104 = load float* @redefine_start.fuel_pump_integrator, align 4
  %105 = load float* %epsilon, align 4
  %106 = load float* @exp1, align 4
  %mul76 = fmul float %105, %106
  %add77 = fadd float %104, %mul76
  store float %add77, float* @redefine_start.fuel_pump_integrator, align 4
  %107 = load float* @redefine_start.fuel_pump_integrator, align 4
  %108 = load float* @zero_point_zero_two_five, align 4
  %cmp78 = fcmp ogt float %107, %108
  br i1 %cmp78, label %if.then80, label %if.end81

if.then80:                                        ; preds = %if.end74
  store float 2.500000e-01, float* @redefine_start.fuel_pump_integrator, align 4
  br label %if.end81

if.end81:                                         ; preds = %if.then80, %if.end74
  %109 = load float* @redefine_start.fuel_pump_integrator, align 4
  %110 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp82 = fcmp olt float %109, %110
  br i1 %cmp82, label %if.then84, label %if.end85

if.then84:                                        ; preds = %if.end81
  %111 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %111, float* @redefine_start.fuel_pump_integrator, align 4
  br label %if.end85

if.end85:                                         ; preds = %if.then84, %if.end81
  %112 = load float* @redefine_start.fuel_pump_integrator, align 4
  %113 = load float* @exp3, align 4
  %114 = load float* %epsilon, align 4
  %mul86 = fmul float %113, %114
  %add87 = fadd float %112, %mul86
  store float %add87, float* @fuel_pump_cmd, align 4
  %115 = load float* @fuel_pump_cmd, align 4
  %116 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp88 = fcmp olt float %115, %116
  br i1 %cmp88, label %if.then90, label %if.end91

if.then90:                                        ; preds = %if.end85
  %117 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %117, float* @fuel_pump_cmd, align 4
  br label %if.end91

if.end91:                                         ; preds = %if.then90, %if.end85
  %118 = load float* %current_nh, align 4
  %conv92 = fptosi float %118 to i32
  %119 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 6), align 4
  %arrayidx = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %119
  store i32 %conv92, i32* %arrayidx, align 4
  %120 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 7), align 4
  store i32 %120, i32* @stab_array_index, align 4
  %121 = load i32* @stab_array_index, align 4
  %cmp93 = icmp eq i32 %121, 50
  br i1 %cmp93, label %if.then95, label %if.end96

if.then95:                                        ; preds = %if.end91
  store i32 0, i32* @stab_array_index, align 4
  br label %if.end96

if.end96:                                         ; preds = %if.then95, %if.end91
  store float 0.000000e+00, float* %nh_average, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end96
  %122 = load i32* %i, align 4
  %cmp97 = icmp slt i32 %122, 50
  br i1 %cmp97, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %123 = load i32* %i, align 4
  %arrayidx99 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %123
  %124 = load i32* %arrayidx99, align 4
  %conv100 = sitofp i32 %124 to float
  %125 = load float* %nh_average, align 4
  %add101 = fadd float %125, %conv100
  store float %add101, float* %nh_average, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %126 = load i32* %i, align 4
  %inc = add nsw i32 %126, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %127 = load float* @NH_IDLE_GROUND, align 4
  store float %127, float* @nh_idle, align 4
  %128 = load float* %nh_average, align 4
  %129 = load float* @nh_idle, align 4
  %130 = load float* @NH_REF, align 4
  %mul102 = fmul float %129, %130
  %131 = load float* @hundred, align 4
  %mul103 = fmul float %mul102, %131
  %132 = load float* @zero_point_nine_nine_five, align 4
  %mul104 = fmul float %mul103, %132
  %cmp105 = fcmp oge float %128, %mul104
  br i1 %cmp105, label %land.lhs.true, label %if.end117

land.lhs.true:                                    ; preds = %for.end
  %133 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 8), align 4
  %tobool = icmp ne i32 %133, 0
  br i1 %tobool, label %if.end117, label %land.lhs.true107

land.lhs.true107:                                 ; preds = %land.lhs.true
  %134 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 9), align 4
  %tobool108 = icmp ne i32 %134, 0
  br i1 %tobool108, label %if.end117, label %land.lhs.true109

land.lhs.true109:                                 ; preds = %land.lhs.true107
  %135 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 10), align 4
  %tobool110 = icmp ne i32 %135, 0
  br i1 %tobool110, label %if.end117, label %land.lhs.true111

land.lhs.true111:                                 ; preds = %land.lhs.true109
  %136 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 11), align 4
  %tobool112 = icmp ne i32 %136, 0
  br i1 %tobool112, label %if.end117, label %land.lhs.true113

land.lhs.true113:                                 ; preds = %land.lhs.true111
  %137 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 12), align 4
  %cmp114 = icmp sle i32 %137, 10
  br i1 %cmp114, label %if.then116, label %if.end117

if.then116:                                       ; preds = %land.lhs.true113
  store i32 8, i32* @operation_mode, align 4
  br label %if.end117

if.end117:                                        ; preds = %if.then116, %land.lhs.true113, %land.lhs.true111, %land.lhs.true109, %land.lhs.true107, %land.lhs.true, %for.end
  br label %if.end119

if.else118:                                       ; preds = %if.else62
  store i32 16, i32* @operation_mode, align 4
  br label %if.end119

if.end119:                                        ; preds = %if.else118, %if.end117
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then58
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.then54
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.end50
  br label %if.end123

if.end123:                                        ; preds = %redefine_start1.if.end122, %redefine_start1.if.then2, %if.end122, %if.then2
  br label %if.end124

if.end124:                                        ; preds = %redefine_start2.if.end123, %if.end123, %newName0
  %138 = load i32* bitcast (float* @redefine_start.fuel_press_integrator to i32*), align 4
  store i32 %138, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 0), align 4
  %139 = load i32* bitcast (float* @fuel_press_setpoint to i32*), align 4
  store i32 %139, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 1), align 4
  %140 = load i32* bitcast (float* @epsilon_global to i32*), align 4
  store i32 %140, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 2), align 4
  %141 = load i32* bitcast (float* @iTerm to i32*), align 4
  store i32 %141, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 3), align 4
  %142 = load i32* bitcast (float* @epsilon_modified to i32*), align 4
  store i32 %142, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 4), align 4
  %143 = load i32* bitcast (float* @dTerm_modified to i32*), align 4
  store i32 %143, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 5), align 4
  %144 = load i32* bitcast (float* @redefine_start.fuel_pump_integrator to i32*), align 4
  store i32 %144, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 6), align 4
  %145 = load i32* bitcast (float* @ramp_filter_memory to i32*), align 4
  store i32 %145, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 7), align 4
  %146 = bitcast float* %current_nh to i32*
  %147 = load i32* %146, align 4
  store i32 %147, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 8), align 4
  %148 = load i32* @stab_array_index, align 4
  store i32 %148, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 9), align 4
  %149 = bitcast float* %nh_average to i32*
  %150 = load i32* %149, align 4
  store i32 %150, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 10), align 4
  %151 = load i32* bitcast (float* @nh_idle to i32*), align 4
  store i32 %151, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 11), align 4
  ret void
}

define void @redefine_start1() {
redefine_start1.entry:
  %0 = getelementptr inbounds float* @CMD_FUEL_RAMP_START, i32 0
  store float 0x3FC1EB8520000000, float* %0, align 4
  %1 = getelementptr inbounds float* @CMD_FUEL_RAMP_END, i32 0
  store float 0x3FC1EB8520000000, float* %1, align 4
  %2 = getelementptr inbounds float* @NH_IDLE_GROUND, i32 0
  store float 5.350000e+01, float* %2, align 4
  %3 = getelementptr inbounds float* @NL_IDLE_GROUND, i32 0
  store float 3.000000e+01, float* %3, align 4
  %4 = getelementptr inbounds float* @zero_point_zero_zero_one_four, i32 0
  store float 0x3F56F00680000000, float* %4, align 4
  %5 = getelementptr inbounds float* @zero_point_zero_zero_one, i32 0
  store float 0x3F50624DE0000000, float* %5, align 4
  %6 = getelementptr inbounds float* @one_point_o, i32 0
  store float 1.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds float* @zero_point_one_eight, i32 0
  store float 0x3FC70A3D80000000, float* %7, align 4
  %8 = getelementptr inbounds float* @NL_REF, i32 0
  store float 4.363600e+04, float* %8, align 4
  %9 = getelementptr inbounds float* @NH_REF, i32 0
  store float 5.071900e+04, float* %9, align 4
  %10 = getelementptr inbounds float* @hundred, i32 0
  store float 1.000000e+02, float* %10, align 4
  %11 = getelementptr inbounds float* @zero_point_zero_two, i32 0
  store float 0x3F947AE140000000, float* %11, align 4
  %12 = getelementptr inbounds float* @zero_point_zero_two_five, i32 0
  store float 0x3F999999A0000000, float* %12, align 4
  %13 = getelementptr inbounds float* @zero_point_nine_nine_five, i32 0
  store float 0x3FEFD70A40000000, float* %13, align 4
  %14 = getelementptr inbounds float* @zero_point_one, i32 0
  store float 0x3FB99999A0000000, float* %14, align 4
  %15 = getelementptr inbounds float* @zero_point_zero_one, i32 0
  store float 0x3F847AE140000000, float* %15, align 4
  %16 = getelementptr inbounds float* @exp1, i32 0
  store float 0x3E8AD7F2A0000000, float* %16, align 4
  %17 = getelementptr inbounds float* @exp3, i32 0
  store float 0x3F0A36E2E0000000, float* %17, align 4
  %18 = getelementptr inbounds i32* @ten, i32 0
  store i32 10, i32* %18, align 4
  %19 = getelementptr inbounds i32* @fifty, i32 0
  store i32 50, i32* %19, align 4
  %20 = getelementptr inbounds i32* @thirty, i32 0
  store i32 30, i32* %20, align 4
  %21 = getelementptr inbounds i32* @twenty, i32 0
  store i32 20, i32* %21, align 4
  %22 = getelementptr inbounds i32* @two, i32 0
  store i32 2, i32* %22, align 4
  %23 = getelementptr inbounds float* @epsilon_global, i32 0
  store float 0.000000e+00, float* %23, align 4
  %24 = getelementptr inbounds float* @iTerm, i32 0
  store float 0.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds float* @epsilon_modified, i32 0
  store float 0.000000e+00, float* %25, align 4
  %26 = getelementptr inbounds float* @dTerm_modified, i32 0
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds float* @fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds float* @nh_setpoint, i32 0
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds float* @ramp_filter_memory, i32 0
  store float 0.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds float* @redefine_start.fuel_press_integrator, i32 0
  store float 0.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds float* @redefine_start.fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %31, align 4
  %32 = getelementptr inbounds float* @redefine_start.dnhqdt, i32 0
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds float* @fuel_pump_cmd, i32 0
  store float 0.000000e+00, float* %33, align 4
  %34 = getelementptr inbounds i32* @t_fuel_press_control, i32 0
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds float* @fuel_press_setpoint, i32 0
  store float 0.000000e+00, float* %35, align 4
  %36 = getelementptr inbounds i32* @operation_mode, i32 0
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds i32* @stab_array_index, i32 0
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds float* @nh_idle, i32 0
  store float 0.000000e+00, float* %38, align 4
  %39 = getelementptr inbounds float* @nh_average, i32 0
  store float 0.000000e+00, float* %39, align 4
  %40 = alloca float, align 4
  %41 = alloca float, align 4
  %42 = alloca float, align 4
  %43 = alloca float, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca float, align 4
  %47 = load float* bitcast ([16 x i32]* @redefine_in_parameters to float*), align 4
  store float %47, float* %40, align 4
  %48 = load float* bitcast (i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 5) to float*), align 4
  store float %48, float* %41, align 4
  %49 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 1), align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %redefine_start1.if.then, label %redefine_start1.if.else

redefine_start1.if.else:                          ; preds = %redefine_start1.entry
  %51 = load float* %40, align 4
  %52 = fcmp olt float %51, 2.700000e+03
  br i1 %52, label %redefine_start1.if.then2, label %redefine_start1.if.else3

redefine_start1.if.else3:                         ; preds = %redefine_start1.if.else
  %53 = load float* %40, align 4
  %54 = fcmp olt float %53, 1.500000e+04
  br i1 %54, label %redefine_start1.if.then5, label %redefine_start1.if.else51

redefine_start1.if.else51:                        ; preds = %redefine_start1.if.else3
  %55 = load float* %40, align 4
  %56 = fcmp olt float %55, 1.500000e+04
  br i1 %56, label %redefine_start1.if.then54, label %redefine_start1.if.else55

redefine_start1.if.else55:                        ; preds = %redefine_start1.if.else51
  %57 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 4), align 4
  store i32 %57, i32* @operation_mode, align 4
  %58 = load i32* @operation_mode, align 4
  %59 = icmp eq i32 %58, 2
  br i1 %59, label %redefine_start1.if.then58, label %redefine_start1.if.else62

redefine_start1.if.else62:                        ; preds = %redefine_start1.if.else55
  %60 = load i32* @operation_mode, align 4
  %61 = icmp eq i32 %60, 4
  br i1 %61, label %redefine_start1.if.then65, label %redefine_start1.if.else118

redefine_start1.if.then65:                        ; preds = %redefine_start1.if.else62
  %62 = load float* @nh_setpoint, align 4
  %63 = load float* @NH_IDLE_GROUND, align 4
  %64 = fcmp olt float %62, %63
  br i1 %64, label %redefine_start1.if.then68, label %redefine_start1.if.else71

redefine_start1.if.then68:                        ; preds = %redefine_start1.if.then65
  %65 = load float* @nh_setpoint, align 4
  %66 = load float* @zero_point_zero_two, align 4
  %67 = load float* @redefine_start.dnhqdt, align 4
  %68 = fmul float %66, %67
  %69 = fadd float %65, %68
  store float %69, float* @nh_setpoint, align 4
  br label %redefine_start1.if.end74

redefine_start1.if.else71:                        ; preds = %redefine_start1.if.then65
  %70 = load float* @nh_setpoint, align 4
  %71 = load float* @zero_point_zero_two, align 4
  %72 = load float* @redefine_start.dnhqdt, align 4
  %73 = fmul float %71, %72
  %74 = fsub float %70, %73
  store float %74, float* @nh_setpoint, align 4
  br label %redefine_start1.if.end74

redefine_start1.if.end74:                         ; preds = %redefine_start1.if.else71, %redefine_start1.if.then68
  %75 = load float* @nh_setpoint, align 4
  %76 = load float* %40, align 4
  %77 = fsub float %75, %76
  store float %77, float* %42, align 4
  %78 = load float* @redefine_start.fuel_pump_integrator, align 4
  %79 = load float* %42, align 4
  %80 = load float* @exp1, align 4
  %81 = fmul float %79, %80
  %82 = fadd float %78, %81
  store float %82, float* @redefine_start.fuel_pump_integrator, align 4
  %83 = load float* @redefine_start.fuel_pump_integrator, align 4
  %84 = load float* @zero_point_zero_two_five, align 4
  %85 = fcmp ogt float %83, %84
  br i1 %85, label %redefine_start1.if.then80, label %redefine_start1.if.end81

redefine_start1.if.then80:                        ; preds = %redefine_start1.if.end74
  store float 2.500000e-01, float* @redefine_start.fuel_pump_integrator, align 4
  br label %redefine_start1.if.end81

redefine_start1.if.end81:                         ; preds = %redefine_start1.if.then80, %redefine_start1.if.end74
  %86 = load float* @redefine_start.fuel_pump_integrator, align 4
  %87 = load float* @CMD_FUEL_RAMP_END, align 4
  %88 = fcmp olt float %86, %87
  br i1 %88, label %redefine_start1.if.then84, label %redefine_start1.if.end85

redefine_start1.if.then84:                        ; preds = %redefine_start1.if.end81
  %89 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %89, float* @redefine_start.fuel_pump_integrator, align 4
  br label %redefine_start1.if.end85

redefine_start1.if.end85:                         ; preds = %redefine_start1.if.then84, %redefine_start1.if.end81
  %90 = load float* @redefine_start.fuel_pump_integrator, align 4
  %91 = load float* @exp3, align 4
  %92 = load float* %42, align 4
  %93 = fmul float %91, %92
  %94 = fadd float %90, %93
  store float %94, float* @fuel_pump_cmd, align 4
  %95 = load float* @fuel_pump_cmd, align 4
  %96 = load float* @CMD_FUEL_RAMP_END, align 4
  %97 = fcmp olt float %95, %96
  br i1 %97, label %redefine_start1.if.then90, label %redefine_start1.if.end91

redefine_start1.if.then90:                        ; preds = %redefine_start1.if.end85
  %98 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %98, float* @fuel_pump_cmd, align 4
  br label %redefine_start1.if.end91

redefine_start1.if.then5:                         ; preds = %redefine_start1.if.else3
  %99 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 2), align 4
  %100 = icmp eq i32 %99, -1
  br i1 %100, label %redefine_start1.if.then7, label %redefine_start1.if.else9

redefine_start1.if.end91:                         ; preds = %redefine_start1.if.then90, %redefine_start1.if.end85
  %101 = load float* %40, align 4
  %102 = fptosi float %101 to i32
  %103 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 6), align 4
  %104 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %103
  store i32 %102, i32* %104, align 4
  %105 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 7), align 4
  store i32 %105, i32* @stab_array_index, align 4
  %106 = load i32* @stab_array_index, align 4
  %107 = icmp eq i32 %106, 50
  br i1 %107, label %redefine_start1.if.then95, label %redefine_start1.if.end96

redefine_start1.if.else9:                         ; preds = %redefine_start1.if.then5
  %108 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 14), align 4
  store i32 %108, i32* %45, align 4
  %109 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 15), align 4
  %110 = sitofp i32 %109 to float
  store float %110, float* %46, align 4
  %111 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 3), align 4
  %112 = icmp eq i32 %111, -1
  br i1 %112, label %redefine_start1.if.then12, label %redefine_start1.if.else13

redefine_start1.if.then95:                        ; preds = %redefine_start1.if.end91
  store i32 0, i32* @stab_array_index, align 4
  br label %redefine_start1.if.end96

redefine_start1.if.end96:                         ; preds = %redefine_start1.if.then95, %redefine_start1.if.end91
  store float 0.000000e+00, float* %43, align 4
  store i32 0, i32* %44, align 4
  br label %redefine_start1.for.cond

redefine_start1.if.else13:                        ; preds = %redefine_start1.if.else9
  %113 = load i32* %45, align 4
  %114 = load i32* @t_fuel_press_control, align 4
  %115 = sub nsw i32 %113, %114
  %116 = load i32* @ten, align 4
  %117 = load i32* @fifty, align 4
  %118 = mul nsw i32 %116, %117
  %119 = icmp slt i32 %115, %118
  br i1 %119, label %redefine_start1.if.then18, label %redefine_start1.if.else19

redefine_start1.for.cond:                         ; preds = %redefine_start1.for.inc, %redefine_start1.if.end96
  %120 = load i32* %44, align 4
  %121 = icmp slt i32 %120, 50
  br i1 %121, label %redefine_start1.for.body, label %redefine_start1.for.end

redefine_start1.for.body:                         ; preds = %redefine_start1.for.cond
  %122 = load i32* %44, align 4
  %123 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %122
  %124 = load i32* %123, align 4
  %125 = sitofp i32 %124 to float
  %126 = load float* %43, align 4
  %127 = fadd float %126, %125
  store float %127, float* %43, align 4
  br label %redefine_start1.for.inc

redefine_start1.for.inc:                          ; preds = %redefine_start1.for.body
  %128 = load i32* %44, align 4
  %129 = add nsw i32 %128, 1
  store i32 %129, i32* %44, align 4
  br label %redefine_start1.for.cond

redefine_start1.if.else19:                        ; preds = %redefine_start1.if.else13
  %130 = load i32* %45, align 4
  %131 = load i32* @t_fuel_press_control, align 4
  %132 = sub nsw i32 %130, %131
  %133 = load i32* @thirty, align 4
  %134 = load i32* @fifty, align 4
  %135 = mul nsw i32 %133, %134
  %136 = icmp slt i32 %132, %135
  br i1 %136, label %redefine_start1.if.then24, label %redefine_start1.if.else30

redefine_start1.for.end:                          ; preds = %redefine_start1.for.cond
  %137 = load float* @NH_IDLE_GROUND, align 4
  store float %137, float* @nh_idle, align 4
  %138 = load float* %43, align 4
  %139 = load float* @nh_idle, align 4
  %140 = load float* @NH_REF, align 4
  %141 = fmul float %139, %140
  %142 = load float* @hundred, align 4
  %143 = fmul float %141, %142
  %144 = load float* @zero_point_nine_nine_five, align 4
  %145 = fmul float %143, %144
  %146 = fcmp oge float %138, %145
  br i1 %146, label %redefine_start1.land.lhs.true, label %redefine_start1.if.end117

redefine_start1.if.then24:                        ; preds = %redefine_start1.if.else19
  %147 = load float* @zero_point_one_eight, align 4
  %148 = load i32* %45, align 4
  %149 = load i32* @t_fuel_press_control, align 4
  %150 = load i32* @ten, align 4
  %151 = load i32* @fifty, align 4
  %152 = mul nsw i32 %150, %151
  %153 = add nsw i32 %149, %152
  %154 = sub nsw i32 %148, %153
  %155 = sitofp i32 %154 to float
  %156 = fadd float %147, %155
  store float %156, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end

redefine_start1.if.else30:                        ; preds = %redefine_start1.if.else19
  store float 1.000000e+00, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end

redefine_start1.if.then18:                        ; preds = %redefine_start1.if.else13
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end31

redefine_start1.land.lhs.true:                    ; preds = %redefine_start1.for.end
  %157 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 8), align 4
  %158 = icmp ne i32 %157, 0
  br i1 %158, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true107

redefine_start1.if.end:                           ; preds = %redefine_start1.if.else30, %redefine_start1.if.then24
  br label %redefine_start1.if.end31

redefine_start1.if.then12:                        ; preds = %redefine_start1.if.else9
  %159 = load i32* %45, align 4
  store i32 %159, i32* @t_fuel_press_control, align 4
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end32

redefine_start1.if.end31:                         ; preds = %redefine_start1.if.end, %redefine_start1.if.then18
  br label %redefine_start1.if.end32

redefine_start1.land.lhs.true107:                 ; preds = %redefine_start1.land.lhs.true
  %160 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 9), align 4
  %161 = icmp ne i32 %160, 0
  br i1 %161, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true109

redefine_start1.if.end32:                         ; preds = %redefine_start1.if.end31, %redefine_start1.if.then12
  %162 = load float* @fuel_press_setpoint, align 4
  %163 = load float* %46, align 4
  %164 = fsub float %162, %163
  store float %164, float* %42, align 4
  %165 = load float* @redefine_start.fuel_press_integrator, align 4
  %166 = load float* %42, align 4
  %167 = load float* @zero_point_zero_zero_one_four, align 4
  %168 = fmul float %166, %167
  %169 = fadd float %165, %168
  store float %169, float* @redefine_start.fuel_press_integrator, align 4
  %170 = load float* @redefine_start.fuel_press_integrator, align 4
  %171 = load float* @zero_point_zero_two_five, align 4
  %172 = fcmp ogt float %170, %171
  br i1 %172, label %redefine_start1.if.then38, label %redefine_start1.if.end39

redefine_start1.land.lhs.true109:                 ; preds = %redefine_start1.land.lhs.true107
  %173 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 10), align 4
  %174 = icmp ne i32 %173, 0
  br i1 %174, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true111

redefine_start1.if.then38:                        ; preds = %redefine_start1.if.end32
  store float 2.500000e-01, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end39

redefine_start1.land.lhs.true111:                 ; preds = %redefine_start1.land.lhs.true109
  %175 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 11), align 4
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true113

redefine_start1.if.end39:                         ; preds = %redefine_start1.if.then38, %redefine_start1.if.end32
  %177 = load float* @redefine_start.fuel_press_integrator, align 4
  %178 = load float* @CMD_FUEL_RAMP_END, align 4
  %179 = fcmp olt float %177, %178
  br i1 %179, label %redefine_start1.if.then42, label %redefine_start1.if.end43

redefine_start1.land.lhs.true113:                 ; preds = %redefine_start1.land.lhs.true111
  %180 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 12), align 4
  %181 = icmp sle i32 %180, 10
  br i1 %181, label %redefine_start1.if.then116, label %redefine_start1.if.end117

redefine_start1.if.then42:                        ; preds = %redefine_start1.if.end39
  %182 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %182, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end43

redefine_start1.if.then116:                       ; preds = %redefine_start1.land.lhs.true113
  store i32 8, i32* @operation_mode, align 4
  br label %redefine_start1.if.end117

redefine_start1.if.else118:                       ; preds = %redefine_start1.if.else62
  store i32 16, i32* @operation_mode, align 4
  br label %redefine_start1.if.end119

redefine_start1.if.end117:                        ; preds = %redefine_start1.if.then116, %redefine_start1.land.lhs.true113, %redefine_start1.land.lhs.true111, %redefine_start1.land.lhs.true109, %redefine_start1.land.lhs.true107, %redefine_start1.land.lhs.true, %redefine_start1.for.end
  br label %redefine_start1.if.end119

redefine_start1.if.end43:                         ; preds = %redefine_start1.if.then42, %redefine_start1.if.end39
  %183 = load float* @redefine_start.fuel_press_integrator, align 4
  %184 = load float* @zero_point_zero_zero_one, align 4
  %185 = load float* %42, align 4
  %186 = fmul float %184, %185
  %187 = fadd float %183, %186
  store float %187, float* @fuel_pump_cmd, align 4
  %188 = load float* @fuel_pump_cmd, align 4
  %189 = load float* @CMD_FUEL_RAMP_END, align 4
  %190 = fcmp olt float %188, %189
  br i1 %190, label %redefine_start1.if.then48, label %redefine_start1.if.end49

redefine_start1.if.then58:                        ; preds = %redefine_start1.if.else55
  store float 0.000000e+00, float* @fuel_press_setpoint, align 4
  %191 = load float* %40, align 4
  store float %191, float* @nh_setpoint, align 4
  %192 = load float* @fuel_pump_cmd, align 4
  store float %192, float* @redefine_start.fuel_pump_integrator, align 4
  %193 = load float* %40, align 4
  %194 = load float* %41, align 4
  %195 = fsub float %193, %194
  %196 = load i32* @two, align 4
  %197 = sitofp i32 %196 to float
  %198 = fmul float %195, %197
  store float %198, float* @redefine_start.dnhqdt, align 4
  store i32 4, i32* @operation_mode, align 4
  br label %redefine_start1.if.end120

redefine_start1.if.end119:                        ; preds = %redefine_start1.if.end117, %redefine_start1.if.else118
  br label %redefine_start1.if.end120

redefine_start1.if.then48:                        ; preds = %redefine_start1.if.end43
  %199 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %199, float* @fuel_pump_cmd, align 4
  br label %redefine_start1.if.end49

redefine_start1.if.then54:                        ; preds = %redefine_start1.if.else51
  br label %redefine_start1.if.end121

redefine_start1.if.then7:                         ; preds = %redefine_start1.if.then5
  %200 = load float* @CMD_FUEL_RAMP_START, align 4
  %201 = load float* %40, align 4
  %202 = fsub float %201, 2.700000e+03
  %203 = load float* @CMD_FUEL_RAMP_END, align 4
  %204 = load float* @CMD_FUEL_RAMP_START, align 4
  %205 = fsub float %203, %204
  %206 = fmul float %202, %205
  %207 = fadd float %200, %206
  store float %207, float* @fuel_pump_cmd, align 4
  %208 = load float* @fuel_pump_cmd, align 4
  store float %208, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end50

redefine_start1.if.end49:                         ; preds = %redefine_start1.if.then48, %redefine_start1.if.end43
  br label %redefine_start1.if.end50

redefine_start1.if.end120:                        ; preds = %redefine_start1.if.end119, %redefine_start1.if.then58
  br label %redefine_start1.if.end121

redefine_start1.if.end121:                        ; preds = %redefine_start1.if.end120, %redefine_start1.if.then54
  br label %redefine_start1.if.end122

redefine_start1.if.end50:                         ; preds = %redefine_start1.if.end49, %redefine_start1.if.then7
  br label %redefine_start1.if.end122

redefine_start1.if.then2:                         ; preds = %redefine_start1.if.else
  br label %if.end123

redefine_start1.if.end122:                        ; preds = %redefine_start1.if.end50, %redefine_start1.if.end121
  br label %if.end123

redefine_start1.if.then:                          ; preds = %redefine_start1.entry
  store float 0.000000e+00, float* @fuel_pump_cmd, align 4
  %209 = load float* @fuel_pump_cmd, align 4
  br label %newName0

redefine_start1.return:                           ; No predecessors!
  ret void
}

define void @redefine_start2() {
redefine_start2.if.end123:
  br label %if.end124

redefine_start2.return:                           ; No predecessors!
  ret void
}

define void @redefine_start3(float*, float*) {
redefine_start3.if.end124:
  %2 = load i32* bitcast (float* @redefine_start.fuel_press_integrator to i32*), align 4
  store i32 %2, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 0), align 4
  %3 = load i32* bitcast (float* @fuel_press_setpoint to i32*), align 4
  store i32 %3, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 1), align 4
  %4 = load i32* bitcast (float* @epsilon_global to i32*), align 4
  store i32 %4, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 2), align 4
  %5 = load i32* bitcast (float* @iTerm to i32*), align 4
  store i32 %5, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 3), align 4
  %6 = load i32* bitcast (float* @epsilon_modified to i32*), align 4
  store i32 %6, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 4), align 4
  %7 = load i32* bitcast (float* @dTerm_modified to i32*), align 4
  store i32 %7, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 5), align 4
  %8 = load i32* bitcast (float* @redefine_start.fuel_pump_integrator to i32*), align 4
  store i32 %8, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 6), align 4
  %9 = load i32* bitcast (float* @ramp_filter_memory to i32*), align 4
  store i32 %9, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 7), align 4
  %10 = bitcast float* %0 to i32*
  %11 = load i32* %10, align 4
  store i32 %11, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 8), align 4
  %12 = load i32* @stab_array_index, align 4
  store i32 %12, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 9), align 4
  %13 = bitcast float* %1 to i32*
  %14 = load i32* %13, align 4
  store i32 %14, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 10), align 4
  %15 = load i32* bitcast (float* @nh_idle to i32*), align 4
  store i32 %15, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 11), align 4
  br label %redefine_start3.return

redefine_start3.return:                           ; preds = %redefine_start3.if.end124
  ret void
}

define void @regulation_nh_init4(float*) {
regulation_nh_init4.newName01:
  %1 = load float* %0, align 4
  store float %1, float* @fuel_pump_integrator, align 4
  %2 = load float* @nh_setpoint, align 4
  store float %2, float* @ramp_filter_memory, align 4
  br label %regulation_nh_init4.return

regulation_nh_init4.return:                       ; preds = %regulation_nh_init4.newName01
  ret void
}

define void @regulation_nh_init5(float*) {
regulation_nh_init5.entry:
  %1 = load float* %0
  %2 = alloca float, align 4
  store float %1, float* %2, align 4
  %3 = load float* %2, align 4
  br label %newName0

regulation_nh_init5.return:                       ; No predecessors!
  ret void
}

define void @pid_init6(float*) {
pid_init6.entry:
  %1 = load float* %0
  %2 = alloca float, align 4
  store float %1, float* %2, align 4
  store float 0.000000e+00, float* @epsilon_global, align 4
  %3 = load float* %2, align 4
  store float %3, float* @iTerm, align 4
  store float 0.000000e+00, float* @epsilon_modified, align 4
  store float 0.000000e+00, float* @dTerm_modified, align 4
  br label %pid_init6.return

pid_init6.return:                                 ; preds = %pid_init6.entry
  ret void
}

attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }

!redefine.annotations = !{!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10, !11}

!0 = metadata !{metadata !"HyperOp", void ()* @redefine_start1, metadata !"Static"}
!1 = metadata !{metadata !"Entry", metadata !0}
!2 = metadata !{metadata !"HyperOp", void ()* @redefine_start2, metadata !"Static"}
!3 = metadata !{metadata !"Intermediate", metadata !2}
!4 = metadata !{metadata !"HyperOp", void (float*, float*)* @redefine_start3, metadata !"Static"}
!5 = metadata !{metadata !"Exit", metadata !4}
!6 = metadata !{metadata !"HyperOp", void (float*)* @regulation_nh_init4, metadata !"Static"}
!7 = metadata !{metadata !"Intermediate", metadata !6}
!8 = metadata !{metadata !"HyperOp", void (float*)* @regulation_nh_init5, metadata !"Static"}
!9 = metadata !{metadata !"Intermediate", metadata !8}
!10 = metadata !{metadata !"HyperOp", void (float*)* @pid_init6, metadata !"Static"}
!11 = metadata !{metadata !"Intermediate", metadata !10}

----------Adding dependences across created HyperOps----------

-----------Patching created function regulation_nh_init4--------------
accumulated bbs:
newName01,

----------Adding consumed by metadata----------
cloned inst second:  store float %cmd, float* %cmd.addr, align 4
producer function:regulation_nh_init5
how many clones?1
added metadata on instruction that belongs to parent regulation_nh_init5 and is mapped to slot 0 when the function has 1 and is of type:1:  %2 = alloca float, align 4, !ConsumedBy !12

----------Dealing with conditional branches from other HyperOps----------
number of conditional jump sources:0

----------Dealing with unconditional branches from other HyperOps----------
number of unconditional jump sources:1
what was callsite size earlier??1

----------Adding a predicate from entry hyperop if there are no incoming edges to the hyperop----------
after patching function regulation_nh_init4, module:; ModuleID = './Compilation_Error/startuppump_original.ll'
target datalayout = "E-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-n32"
target triple = "redefine"

@CMD_FUEL_RAMP_START = global float 0x3FC1EB8520000000, align 4
@CMD_FUEL_RAMP_END = global float 0x3FC1EB8520000000, align 4
@NH_IDLE_GROUND = global float 5.350000e+01, align 4
@NL_IDLE_GROUND = global float 3.000000e+01, align 4
@zero_point_zero_zero_one_four = global float 0x3F56F00680000000, align 4
@zero_point_zero_zero_one = global float 0x3F50624DE0000000, align 4
@one_point_o = global float 1.000000e+00, align 4
@zero_point_one_eight = global float 0x3FC70A3D80000000, align 4
@NL_REF = global float 4.363600e+04, align 4
@NH_REF = global float 5.071900e+04, align 4
@hundred = global float 1.000000e+02, align 4
@zero_point_zero_two = global float 0x3F947AE140000000, align 4
@zero_point_zero_two_five = global float 0x3F999999A0000000, align 4
@zero_point_nine_nine_five = global float 0x3FEFD70A40000000, align 4
@zero_point_one = global float 0x3FB99999A0000000, align 4
@zero_point_zero_one = global float 0x3F847AE140000000, align 4
@exp1 = global float 0x3E8AD7F2A0000000, align 4
@exp3 = global float 0x3F0A36E2E0000000, align 4
@ten = global i32 10, align 4
@fifty = global i32 50, align 4
@thirty = global i32 30, align 4
@twenty = global i32 20, align 4
@two = global i32 2, align 4
@epsilon_global = common global float 0.000000e+00, align 4
@iTerm = common global float 0.000000e+00, align 4
@epsilon_modified = common global float 0.000000e+00, align 4
@dTerm_modified = common global float 0.000000e+00, align 4
@fuel_pump_integrator = common global float 0.000000e+00, align 4
@nh_setpoint = common global float 0.000000e+00, align 4
@ramp_filter_memory = common global float 0.000000e+00, align 4
@redefine_in_parameters = common global [16 x i32] zeroinitializer, align 4
@redefine_start.fuel_press_integrator = internal global float 0.000000e+00, align 4
@redefine_start.fuel_pump_integrator = internal global float 0.000000e+00, align 4
@redefine_start.dnhqdt = internal global float 0.000000e+00, align 4
@fuel_pump_cmd = common global float 0.000000e+00, align 4
@t_fuel_press_control = common global i32 0, align 4
@fuel_press_setpoint = common global float 0.000000e+00, align 4
@operation_mode = common global i32 0, align 4
@redefine_in_stab = common global [50 x i32] zeroinitializer, align 4
@stab_array_index = common global i32 0, align 4
@nh_idle = common global float 0.000000e+00, align 4
@redefine_out_parameters = common global [12 x i32] zeroinitializer, align 4
@nh_average = common global float 0.000000e+00, align 4

; Function Attrs: nounwind
define void @pid_init(float %iTermtemp) #0 {
entry:
  %iTermtemp.addr = alloca float, align 4
  store float %iTermtemp, float* %iTermtemp.addr, align 4
  store float 0.000000e+00, float* @epsilon_global, align 4
  %0 = load float* %iTermtemp.addr, align 4
  store float %0, float* @iTerm, align 4
  store float 0.000000e+00, float* @epsilon_modified, align 4
  store float 0.000000e+00, float* @dTerm_modified, align 4
  ret void
}

; Function Attrs: nounwind
define void @regulation_nh_init(float %cmd) #0 {
entry:
  %cmd.addr = alloca float, align 4
  store float %cmd, float* %cmd.addr, align 4
  %0 = load float* %cmd.addr, align 4
  br label %newName0

newName0:                                         ; preds = %regulation_nh_init5.entry, %entry
  call void @pid_init(float %0)
  br label %newName01

newName01:                                        ; preds = %newName0
  %1 = load float* %cmd.addr, align 4
  store float %1, float* @fuel_pump_integrator, align 4
  %2 = load float* @nh_setpoint, align 4
  store float %2, float* @ramp_filter_memory, align 4
  ret void
}

; Function Attrs: nounwind
define void @redefine_start() #0 {
entry:
  %0 = getelementptr inbounds float* @CMD_FUEL_RAMP_START, i32 0
  store float 0x3FC1EB8520000000, float* %0, align 4
  %1 = getelementptr inbounds float* @CMD_FUEL_RAMP_END, i32 0
  store float 0x3FC1EB8520000000, float* %1, align 4
  %2 = getelementptr inbounds float* @NH_IDLE_GROUND, i32 0
  store float 5.350000e+01, float* %2, align 4
  %3 = getelementptr inbounds float* @NL_IDLE_GROUND, i32 0
  store float 3.000000e+01, float* %3, align 4
  %4 = getelementptr inbounds float* @zero_point_zero_zero_one_four, i32 0
  store float 0x3F56F00680000000, float* %4, align 4
  %5 = getelementptr inbounds float* @zero_point_zero_zero_one, i32 0
  store float 0x3F50624DE0000000, float* %5, align 4
  %6 = getelementptr inbounds float* @one_point_o, i32 0
  store float 1.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds float* @zero_point_one_eight, i32 0
  store float 0x3FC70A3D80000000, float* %7, align 4
  %8 = getelementptr inbounds float* @NL_REF, i32 0
  store float 4.363600e+04, float* %8, align 4
  %9 = getelementptr inbounds float* @NH_REF, i32 0
  store float 5.071900e+04, float* %9, align 4
  %10 = getelementptr inbounds float* @hundred, i32 0
  store float 1.000000e+02, float* %10, align 4
  %11 = getelementptr inbounds float* @zero_point_zero_two, i32 0
  store float 0x3F947AE140000000, float* %11, align 4
  %12 = getelementptr inbounds float* @zero_point_zero_two_five, i32 0
  store float 0x3F999999A0000000, float* %12, align 4
  %13 = getelementptr inbounds float* @zero_point_nine_nine_five, i32 0
  store float 0x3FEFD70A40000000, float* %13, align 4
  %14 = getelementptr inbounds float* @zero_point_one, i32 0
  store float 0x3FB99999A0000000, float* %14, align 4
  %15 = getelementptr inbounds float* @zero_point_zero_one, i32 0
  store float 0x3F847AE140000000, float* %15, align 4
  %16 = getelementptr inbounds float* @exp1, i32 0
  store float 0x3E8AD7F2A0000000, float* %16, align 4
  %17 = getelementptr inbounds float* @exp3, i32 0
  store float 0x3F0A36E2E0000000, float* %17, align 4
  %18 = getelementptr inbounds i32* @ten, i32 0
  store i32 10, i32* %18, align 4
  %19 = getelementptr inbounds i32* @fifty, i32 0
  store i32 50, i32* %19, align 4
  %20 = getelementptr inbounds i32* @thirty, i32 0
  store i32 30, i32* %20, align 4
  %21 = getelementptr inbounds i32* @twenty, i32 0
  store i32 20, i32* %21, align 4
  %22 = getelementptr inbounds i32* @two, i32 0
  store i32 2, i32* %22, align 4
  %23 = getelementptr inbounds float* @epsilon_global, i32 0
  store float 0.000000e+00, float* %23, align 4
  %24 = getelementptr inbounds float* @iTerm, i32 0
  store float 0.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds float* @epsilon_modified, i32 0
  store float 0.000000e+00, float* %25, align 4
  %26 = getelementptr inbounds float* @dTerm_modified, i32 0
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds float* @fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds float* @nh_setpoint, i32 0
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds float* @ramp_filter_memory, i32 0
  store float 0.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds float* @redefine_start.fuel_press_integrator, i32 0
  store float 0.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds float* @redefine_start.fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %31, align 4
  %32 = getelementptr inbounds float* @redefine_start.dnhqdt, i32 0
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds float* @fuel_pump_cmd, i32 0
  store float 0.000000e+00, float* %33, align 4
  %34 = getelementptr inbounds i32* @t_fuel_press_control, i32 0
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds float* @fuel_press_setpoint, i32 0
  store float 0.000000e+00, float* %35, align 4
  %36 = getelementptr inbounds i32* @operation_mode, i32 0
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds i32* @stab_array_index, i32 0
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds float* @nh_idle, i32 0
  store float 0.000000e+00, float* %38, align 4
  %39 = getelementptr inbounds float* @nh_average, i32 0
  store float 0.000000e+00, float* %39, align 4
  %current_nh = alloca float, align 4
  %index_nh = alloca float, align 4
  %epsilon = alloca float, align 4
  %nh_average = alloca float, align 4
  %i = alloca i32, align 4
  %startup_time = alloca i32, align 4
  %fuel_press = alloca float, align 4
  %40 = load float* bitcast ([16 x i32]* @redefine_in_parameters to float*), align 4
  store float %40, float* %current_nh, align 4
  %41 = load float* bitcast (i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 5) to float*), align 4
  store float %41, float* %index_nh, align 4
  %42 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 1), align 4
  %cmp = icmp eq i32 %42, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* @fuel_pump_cmd, align 4
  %43 = load float* @fuel_pump_cmd, align 4
  br label %newName0

newName0:                                         ; preds = %redefine_start1.if.then, %if.then
  call void @regulation_nh_init(float %43)
  br label %if.end124

if.else:                                          ; preds = %entry
  %44 = load float* %current_nh, align 4
  %cmp1 = fcmp olt float %44, 2.700000e+03
  br i1 %cmp1, label %if.then2, label %if.else3

if.then2:                                         ; preds = %if.else
  br label %if.end123

if.else3:                                         ; preds = %if.else
  %45 = load float* %current_nh, align 4
  %cmp4 = fcmp olt float %45, 1.500000e+04
  br i1 %cmp4, label %if.then5, label %if.else51

if.then5:                                         ; preds = %if.else3
  %46 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 2), align 4
  %cmp6 = icmp eq i32 %46, -1
  br i1 %cmp6, label %if.then7, label %if.else9

if.then7:                                         ; preds = %if.then5
  %47 = load float* @CMD_FUEL_RAMP_START, align 4
  %48 = load float* %current_nh, align 4
  %sub = fsub float %48, 2.700000e+03
  %49 = load float* @CMD_FUEL_RAMP_END, align 4
  %50 = load float* @CMD_FUEL_RAMP_START, align 4
  %sub8 = fsub float %49, %50
  %mul = fmul float %sub, %sub8
  %add = fadd float %47, %mul
  store float %add, float* @fuel_pump_cmd, align 4
  %51 = load float* @fuel_pump_cmd, align 4
  store float %51, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end50

if.else9:                                         ; preds = %if.then5
  %52 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 14), align 4
  store i32 %52, i32* %startup_time, align 4
  %53 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 15), align 4
  %conv = sitofp i32 %53 to float
  store float %conv, float* %fuel_press, align 4
  %54 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 3), align 4
  %cmp10 = icmp eq i32 %54, -1
  br i1 %cmp10, label %if.then12, label %if.else13

if.then12:                                        ; preds = %if.else9
  %55 = load i32* %startup_time, align 4
  store i32 %55, i32* @t_fuel_press_control, align 4
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %if.end32

if.else13:                                        ; preds = %if.else9
  %56 = load i32* %startup_time, align 4
  %57 = load i32* @t_fuel_press_control, align 4
  %sub14 = sub nsw i32 %56, %57
  %58 = load i32* @ten, align 4
  %59 = load i32* @fifty, align 4
  %mul15 = mul nsw i32 %58, %59
  %cmp16 = icmp slt i32 %sub14, %mul15
  br i1 %cmp16, label %if.then18, label %if.else19

if.then18:                                        ; preds = %if.else13
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %if.end31

if.else19:                                        ; preds = %if.else13
  %60 = load i32* %startup_time, align 4
  %61 = load i32* @t_fuel_press_control, align 4
  %sub20 = sub nsw i32 %60, %61
  %62 = load i32* @thirty, align 4
  %63 = load i32* @fifty, align 4
  %mul21 = mul nsw i32 %62, %63
  %cmp22 = icmp slt i32 %sub20, %mul21
  br i1 %cmp22, label %if.then24, label %if.else30

if.then24:                                        ; preds = %if.else19
  %64 = load float* @zero_point_one_eight, align 4
  %65 = load i32* %startup_time, align 4
  %66 = load i32* @t_fuel_press_control, align 4
  %67 = load i32* @ten, align 4
  %68 = load i32* @fifty, align 4
  %mul25 = mul nsw i32 %67, %68
  %add26 = add nsw i32 %66, %mul25
  %sub27 = sub nsw i32 %65, %add26
  %conv28 = sitofp i32 %sub27 to float
  %add29 = fadd float %64, %conv28
  store float %add29, float* @fuel_press_setpoint, align 4
  br label %if.end

if.else30:                                        ; preds = %if.else19
  store float 1.000000e+00, float* @fuel_press_setpoint, align 4
  br label %if.end

if.end:                                           ; preds = %if.else30, %if.then24
  br label %if.end31

if.end31:                                         ; preds = %if.end, %if.then18
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then12
  %69 = load float* @fuel_press_setpoint, align 4
  %70 = load float* %fuel_press, align 4
  %sub33 = fsub float %69, %70
  store float %sub33, float* %epsilon, align 4
  %71 = load float* @redefine_start.fuel_press_integrator, align 4
  %72 = load float* %epsilon, align 4
  %73 = load float* @zero_point_zero_zero_one_four, align 4
  %mul34 = fmul float %72, %73
  %add35 = fadd float %71, %mul34
  store float %add35, float* @redefine_start.fuel_press_integrator, align 4
  %74 = load float* @redefine_start.fuel_press_integrator, align 4
  %75 = load float* @zero_point_zero_two_five, align 4
  %cmp36 = fcmp ogt float %74, %75
  br i1 %cmp36, label %if.then38, label %if.end39

if.then38:                                        ; preds = %if.end32
  store float 2.500000e-01, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end39

if.end39:                                         ; preds = %if.then38, %if.end32
  %76 = load float* @redefine_start.fuel_press_integrator, align 4
  %77 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp40 = fcmp olt float %76, %77
  br i1 %cmp40, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.end39
  %78 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %78, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.then42, %if.end39
  %79 = load float* @redefine_start.fuel_press_integrator, align 4
  %80 = load float* @zero_point_zero_zero_one, align 4
  %81 = load float* %epsilon, align 4
  %mul44 = fmul float %80, %81
  %add45 = fadd float %79, %mul44
  store float %add45, float* @fuel_pump_cmd, align 4
  %82 = load float* @fuel_pump_cmd, align 4
  %83 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp46 = fcmp olt float %82, %83
  br i1 %cmp46, label %if.then48, label %if.end49

if.then48:                                        ; preds = %if.end43
  %84 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %84, float* @fuel_pump_cmd, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.then48, %if.end43
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then7
  br label %if.end122

if.else51:                                        ; preds = %if.else3
  %85 = load float* %current_nh, align 4
  %cmp52 = fcmp olt float %85, 1.500000e+04
  br i1 %cmp52, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.else51
  br label %if.end121

if.else55:                                        ; preds = %if.else51
  %86 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 4), align 4
  store i32 %86, i32* @operation_mode, align 4
  %87 = load i32* @operation_mode, align 4
  %cmp56 = icmp eq i32 %87, 2
  br i1 %cmp56, label %if.then58, label %if.else62

if.then58:                                        ; preds = %if.else55
  store float 0.000000e+00, float* @fuel_press_setpoint, align 4
  %88 = load float* %current_nh, align 4
  store float %88, float* @nh_setpoint, align 4
  %89 = load float* @fuel_pump_cmd, align 4
  store float %89, float* @redefine_start.fuel_pump_integrator, align 4
  %90 = load float* %current_nh, align 4
  %91 = load float* %index_nh, align 4
  %sub59 = fsub float %90, %91
  %92 = load i32* @two, align 4
  %conv60 = sitofp i32 %92 to float
  %mul61 = fmul float %sub59, %conv60
  store float %mul61, float* @redefine_start.dnhqdt, align 4
  store i32 4, i32* @operation_mode, align 4
  br label %if.end120

if.else62:                                        ; preds = %if.else55
  %93 = load i32* @operation_mode, align 4
  %cmp63 = icmp eq i32 %93, 4
  br i1 %cmp63, label %if.then65, label %if.else118

if.then65:                                        ; preds = %if.else62
  %94 = load float* @nh_setpoint, align 4
  %95 = load float* @NH_IDLE_GROUND, align 4
  %cmp66 = fcmp olt float %94, %95
  br i1 %cmp66, label %if.then68, label %if.else71

if.then68:                                        ; preds = %if.then65
  %96 = load float* @nh_setpoint, align 4
  %97 = load float* @zero_point_zero_two, align 4
  %98 = load float* @redefine_start.dnhqdt, align 4
  %mul69 = fmul float %97, %98
  %add70 = fadd float %96, %mul69
  store float %add70, float* @nh_setpoint, align 4
  br label %if.end74

if.else71:                                        ; preds = %if.then65
  %99 = load float* @nh_setpoint, align 4
  %100 = load float* @zero_point_zero_two, align 4
  %101 = load float* @redefine_start.dnhqdt, align 4
  %mul72 = fmul float %100, %101
  %sub73 = fsub float %99, %mul72
  store float %sub73, float* @nh_setpoint, align 4
  br label %if.end74

if.end74:                                         ; preds = %if.else71, %if.then68
  %102 = load float* @nh_setpoint, align 4
  %103 = load float* %current_nh, align 4
  %sub75 = fsub float %102, %103
  store float %sub75, float* %epsilon, align 4
  %104 = load float* @redefine_start.fuel_pump_integrator, align 4
  %105 = load float* %epsilon, align 4
  %106 = load float* @exp1, align 4
  %mul76 = fmul float %105, %106
  %add77 = fadd float %104, %mul76
  store float %add77, float* @redefine_start.fuel_pump_integrator, align 4
  %107 = load float* @redefine_start.fuel_pump_integrator, align 4
  %108 = load float* @zero_point_zero_two_five, align 4
  %cmp78 = fcmp ogt float %107, %108
  br i1 %cmp78, label %if.then80, label %if.end81

if.then80:                                        ; preds = %if.end74
  store float 2.500000e-01, float* @redefine_start.fuel_pump_integrator, align 4
  br label %if.end81

if.end81:                                         ; preds = %if.then80, %if.end74
  %109 = load float* @redefine_start.fuel_pump_integrator, align 4
  %110 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp82 = fcmp olt float %109, %110
  br i1 %cmp82, label %if.then84, label %if.end85

if.then84:                                        ; preds = %if.end81
  %111 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %111, float* @redefine_start.fuel_pump_integrator, align 4
  br label %if.end85

if.end85:                                         ; preds = %if.then84, %if.end81
  %112 = load float* @redefine_start.fuel_pump_integrator, align 4
  %113 = load float* @exp3, align 4
  %114 = load float* %epsilon, align 4
  %mul86 = fmul float %113, %114
  %add87 = fadd float %112, %mul86
  store float %add87, float* @fuel_pump_cmd, align 4
  %115 = load float* @fuel_pump_cmd, align 4
  %116 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp88 = fcmp olt float %115, %116
  br i1 %cmp88, label %if.then90, label %if.end91

if.then90:                                        ; preds = %if.end85
  %117 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %117, float* @fuel_pump_cmd, align 4
  br label %if.end91

if.end91:                                         ; preds = %if.then90, %if.end85
  %118 = load float* %current_nh, align 4
  %conv92 = fptosi float %118 to i32
  %119 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 6), align 4
  %arrayidx = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %119
  store i32 %conv92, i32* %arrayidx, align 4
  %120 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 7), align 4
  store i32 %120, i32* @stab_array_index, align 4
  %121 = load i32* @stab_array_index, align 4
  %cmp93 = icmp eq i32 %121, 50
  br i1 %cmp93, label %if.then95, label %if.end96

if.then95:                                        ; preds = %if.end91
  store i32 0, i32* @stab_array_index, align 4
  br label %if.end96

if.end96:                                         ; preds = %if.then95, %if.end91
  store float 0.000000e+00, float* %nh_average, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end96
  %122 = load i32* %i, align 4
  %cmp97 = icmp slt i32 %122, 50
  br i1 %cmp97, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %123 = load i32* %i, align 4
  %arrayidx99 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %123
  %124 = load i32* %arrayidx99, align 4
  %conv100 = sitofp i32 %124 to float
  %125 = load float* %nh_average, align 4
  %add101 = fadd float %125, %conv100
  store float %add101, float* %nh_average, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %126 = load i32* %i, align 4
  %inc = add nsw i32 %126, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %127 = load float* @NH_IDLE_GROUND, align 4
  store float %127, float* @nh_idle, align 4
  %128 = load float* %nh_average, align 4
  %129 = load float* @nh_idle, align 4
  %130 = load float* @NH_REF, align 4
  %mul102 = fmul float %129, %130
  %131 = load float* @hundred, align 4
  %mul103 = fmul float %mul102, %131
  %132 = load float* @zero_point_nine_nine_five, align 4
  %mul104 = fmul float %mul103, %132
  %cmp105 = fcmp oge float %128, %mul104
  br i1 %cmp105, label %land.lhs.true, label %if.end117

land.lhs.true:                                    ; preds = %for.end
  %133 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 8), align 4
  %tobool = icmp ne i32 %133, 0
  br i1 %tobool, label %if.end117, label %land.lhs.true107

land.lhs.true107:                                 ; preds = %land.lhs.true
  %134 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 9), align 4
  %tobool108 = icmp ne i32 %134, 0
  br i1 %tobool108, label %if.end117, label %land.lhs.true109

land.lhs.true109:                                 ; preds = %land.lhs.true107
  %135 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 10), align 4
  %tobool110 = icmp ne i32 %135, 0
  br i1 %tobool110, label %if.end117, label %land.lhs.true111

land.lhs.true111:                                 ; preds = %land.lhs.true109
  %136 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 11), align 4
  %tobool112 = icmp ne i32 %136, 0
  br i1 %tobool112, label %if.end117, label %land.lhs.true113

land.lhs.true113:                                 ; preds = %land.lhs.true111
  %137 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 12), align 4
  %cmp114 = icmp sle i32 %137, 10
  br i1 %cmp114, label %if.then116, label %if.end117

if.then116:                                       ; preds = %land.lhs.true113
  store i32 8, i32* @operation_mode, align 4
  br label %if.end117

if.end117:                                        ; preds = %if.then116, %land.lhs.true113, %land.lhs.true111, %land.lhs.true109, %land.lhs.true107, %land.lhs.true, %for.end
  br label %if.end119

if.else118:                                       ; preds = %if.else62
  store i32 16, i32* @operation_mode, align 4
  br label %if.end119

if.end119:                                        ; preds = %if.else118, %if.end117
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then58
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.then54
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.end50
  br label %if.end123

if.end123:                                        ; preds = %redefine_start1.if.end122, %redefine_start1.if.then2, %if.end122, %if.then2
  br label %if.end124

if.end124:                                        ; preds = %redefine_start2.if.end123, %if.end123, %newName0
  %138 = load i32* bitcast (float* @redefine_start.fuel_press_integrator to i32*), align 4
  store i32 %138, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 0), align 4
  %139 = load i32* bitcast (float* @fuel_press_setpoint to i32*), align 4
  store i32 %139, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 1), align 4
  %140 = load i32* bitcast (float* @epsilon_global to i32*), align 4
  store i32 %140, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 2), align 4
  %141 = load i32* bitcast (float* @iTerm to i32*), align 4
  store i32 %141, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 3), align 4
  %142 = load i32* bitcast (float* @epsilon_modified to i32*), align 4
  store i32 %142, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 4), align 4
  %143 = load i32* bitcast (float* @dTerm_modified to i32*), align 4
  store i32 %143, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 5), align 4
  %144 = load i32* bitcast (float* @redefine_start.fuel_pump_integrator to i32*), align 4
  store i32 %144, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 6), align 4
  %145 = load i32* bitcast (float* @ramp_filter_memory to i32*), align 4
  store i32 %145, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 7), align 4
  %146 = bitcast float* %current_nh to i32*
  %147 = load i32* %146, align 4
  store i32 %147, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 8), align 4
  %148 = load i32* @stab_array_index, align 4
  store i32 %148, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 9), align 4
  %149 = bitcast float* %nh_average to i32*
  %150 = load i32* %149, align 4
  store i32 %150, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 10), align 4
  %151 = load i32* bitcast (float* @nh_idle to i32*), align 4
  store i32 %151, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 11), align 4
  ret void
}

define void @redefine_start1() {
redefine_start1.entry:
  %0 = getelementptr inbounds float* @CMD_FUEL_RAMP_START, i32 0
  store float 0x3FC1EB8520000000, float* %0, align 4
  %1 = getelementptr inbounds float* @CMD_FUEL_RAMP_END, i32 0
  store float 0x3FC1EB8520000000, float* %1, align 4
  %2 = getelementptr inbounds float* @NH_IDLE_GROUND, i32 0
  store float 5.350000e+01, float* %2, align 4
  %3 = getelementptr inbounds float* @NL_IDLE_GROUND, i32 0
  store float 3.000000e+01, float* %3, align 4
  %4 = getelementptr inbounds float* @zero_point_zero_zero_one_four, i32 0
  store float 0x3F56F00680000000, float* %4, align 4
  %5 = getelementptr inbounds float* @zero_point_zero_zero_one, i32 0
  store float 0x3F50624DE0000000, float* %5, align 4
  %6 = getelementptr inbounds float* @one_point_o, i32 0
  store float 1.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds float* @zero_point_one_eight, i32 0
  store float 0x3FC70A3D80000000, float* %7, align 4
  %8 = getelementptr inbounds float* @NL_REF, i32 0
  store float 4.363600e+04, float* %8, align 4
  %9 = getelementptr inbounds float* @NH_REF, i32 0
  store float 5.071900e+04, float* %9, align 4
  %10 = getelementptr inbounds float* @hundred, i32 0
  store float 1.000000e+02, float* %10, align 4
  %11 = getelementptr inbounds float* @zero_point_zero_two, i32 0
  store float 0x3F947AE140000000, float* %11, align 4
  %12 = getelementptr inbounds float* @zero_point_zero_two_five, i32 0
  store float 0x3F999999A0000000, float* %12, align 4
  %13 = getelementptr inbounds float* @zero_point_nine_nine_five, i32 0
  store float 0x3FEFD70A40000000, float* %13, align 4
  %14 = getelementptr inbounds float* @zero_point_one, i32 0
  store float 0x3FB99999A0000000, float* %14, align 4
  %15 = getelementptr inbounds float* @zero_point_zero_one, i32 0
  store float 0x3F847AE140000000, float* %15, align 4
  %16 = getelementptr inbounds float* @exp1, i32 0
  store float 0x3E8AD7F2A0000000, float* %16, align 4
  %17 = getelementptr inbounds float* @exp3, i32 0
  store float 0x3F0A36E2E0000000, float* %17, align 4
  %18 = getelementptr inbounds i32* @ten, i32 0
  store i32 10, i32* %18, align 4
  %19 = getelementptr inbounds i32* @fifty, i32 0
  store i32 50, i32* %19, align 4
  %20 = getelementptr inbounds i32* @thirty, i32 0
  store i32 30, i32* %20, align 4
  %21 = getelementptr inbounds i32* @twenty, i32 0
  store i32 20, i32* %21, align 4
  %22 = getelementptr inbounds i32* @two, i32 0
  store i32 2, i32* %22, align 4
  %23 = getelementptr inbounds float* @epsilon_global, i32 0
  store float 0.000000e+00, float* %23, align 4
  %24 = getelementptr inbounds float* @iTerm, i32 0
  store float 0.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds float* @epsilon_modified, i32 0
  store float 0.000000e+00, float* %25, align 4
  %26 = getelementptr inbounds float* @dTerm_modified, i32 0
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds float* @fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds float* @nh_setpoint, i32 0
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds float* @ramp_filter_memory, i32 0
  store float 0.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds float* @redefine_start.fuel_press_integrator, i32 0
  store float 0.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds float* @redefine_start.fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %31, align 4
  %32 = getelementptr inbounds float* @redefine_start.dnhqdt, i32 0
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds float* @fuel_pump_cmd, i32 0
  store float 0.000000e+00, float* %33, align 4
  %34 = getelementptr inbounds i32* @t_fuel_press_control, i32 0
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds float* @fuel_press_setpoint, i32 0
  store float 0.000000e+00, float* %35, align 4
  %36 = getelementptr inbounds i32* @operation_mode, i32 0
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds i32* @stab_array_index, i32 0
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds float* @nh_idle, i32 0
  store float 0.000000e+00, float* %38, align 4
  %39 = getelementptr inbounds float* @nh_average, i32 0
  store float 0.000000e+00, float* %39, align 4
  %40 = alloca float, align 4
  %41 = alloca float, align 4
  %42 = alloca float, align 4
  %43 = alloca float, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca float, align 4
  %47 = load float* bitcast ([16 x i32]* @redefine_in_parameters to float*), align 4
  store float %47, float* %40, align 4
  %48 = load float* bitcast (i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 5) to float*), align 4
  store float %48, float* %41, align 4
  %49 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 1), align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %redefine_start1.if.then, label %redefine_start1.if.else

redefine_start1.if.else:                          ; preds = %redefine_start1.entry
  %51 = load float* %40, align 4
  %52 = fcmp olt float %51, 2.700000e+03
  br i1 %52, label %redefine_start1.if.then2, label %redefine_start1.if.else3

redefine_start1.if.else3:                         ; preds = %redefine_start1.if.else
  %53 = load float* %40, align 4
  %54 = fcmp olt float %53, 1.500000e+04
  br i1 %54, label %redefine_start1.if.then5, label %redefine_start1.if.else51

redefine_start1.if.else51:                        ; preds = %redefine_start1.if.else3
  %55 = load float* %40, align 4
  %56 = fcmp olt float %55, 1.500000e+04
  br i1 %56, label %redefine_start1.if.then54, label %redefine_start1.if.else55

redefine_start1.if.else55:                        ; preds = %redefine_start1.if.else51
  %57 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 4), align 4
  store i32 %57, i32* @operation_mode, align 4
  %58 = load i32* @operation_mode, align 4
  %59 = icmp eq i32 %58, 2
  br i1 %59, label %redefine_start1.if.then58, label %redefine_start1.if.else62

redefine_start1.if.else62:                        ; preds = %redefine_start1.if.else55
  %60 = load i32* @operation_mode, align 4
  %61 = icmp eq i32 %60, 4
  br i1 %61, label %redefine_start1.if.then65, label %redefine_start1.if.else118

redefine_start1.if.then65:                        ; preds = %redefine_start1.if.else62
  %62 = load float* @nh_setpoint, align 4
  %63 = load float* @NH_IDLE_GROUND, align 4
  %64 = fcmp olt float %62, %63
  br i1 %64, label %redefine_start1.if.then68, label %redefine_start1.if.else71

redefine_start1.if.then68:                        ; preds = %redefine_start1.if.then65
  %65 = load float* @nh_setpoint, align 4
  %66 = load float* @zero_point_zero_two, align 4
  %67 = load float* @redefine_start.dnhqdt, align 4
  %68 = fmul float %66, %67
  %69 = fadd float %65, %68
  store float %69, float* @nh_setpoint, align 4
  br label %redefine_start1.if.end74

redefine_start1.if.else71:                        ; preds = %redefine_start1.if.then65
  %70 = load float* @nh_setpoint, align 4
  %71 = load float* @zero_point_zero_two, align 4
  %72 = load float* @redefine_start.dnhqdt, align 4
  %73 = fmul float %71, %72
  %74 = fsub float %70, %73
  store float %74, float* @nh_setpoint, align 4
  br label %redefine_start1.if.end74

redefine_start1.if.end74:                         ; preds = %redefine_start1.if.else71, %redefine_start1.if.then68
  %75 = load float* @nh_setpoint, align 4
  %76 = load float* %40, align 4
  %77 = fsub float %75, %76
  store float %77, float* %42, align 4
  %78 = load float* @redefine_start.fuel_pump_integrator, align 4
  %79 = load float* %42, align 4
  %80 = load float* @exp1, align 4
  %81 = fmul float %79, %80
  %82 = fadd float %78, %81
  store float %82, float* @redefine_start.fuel_pump_integrator, align 4
  %83 = load float* @redefine_start.fuel_pump_integrator, align 4
  %84 = load float* @zero_point_zero_two_five, align 4
  %85 = fcmp ogt float %83, %84
  br i1 %85, label %redefine_start1.if.then80, label %redefine_start1.if.end81

redefine_start1.if.then80:                        ; preds = %redefine_start1.if.end74
  store float 2.500000e-01, float* @redefine_start.fuel_pump_integrator, align 4
  br label %redefine_start1.if.end81

redefine_start1.if.end81:                         ; preds = %redefine_start1.if.then80, %redefine_start1.if.end74
  %86 = load float* @redefine_start.fuel_pump_integrator, align 4
  %87 = load float* @CMD_FUEL_RAMP_END, align 4
  %88 = fcmp olt float %86, %87
  br i1 %88, label %redefine_start1.if.then84, label %redefine_start1.if.end85

redefine_start1.if.then84:                        ; preds = %redefine_start1.if.end81
  %89 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %89, float* @redefine_start.fuel_pump_integrator, align 4
  br label %redefine_start1.if.end85

redefine_start1.if.end85:                         ; preds = %redefine_start1.if.then84, %redefine_start1.if.end81
  %90 = load float* @redefine_start.fuel_pump_integrator, align 4
  %91 = load float* @exp3, align 4
  %92 = load float* %42, align 4
  %93 = fmul float %91, %92
  %94 = fadd float %90, %93
  store float %94, float* @fuel_pump_cmd, align 4
  %95 = load float* @fuel_pump_cmd, align 4
  %96 = load float* @CMD_FUEL_RAMP_END, align 4
  %97 = fcmp olt float %95, %96
  br i1 %97, label %redefine_start1.if.then90, label %redefine_start1.if.end91

redefine_start1.if.then90:                        ; preds = %redefine_start1.if.end85
  %98 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %98, float* @fuel_pump_cmd, align 4
  br label %redefine_start1.if.end91

redefine_start1.if.then5:                         ; preds = %redefine_start1.if.else3
  %99 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 2), align 4
  %100 = icmp eq i32 %99, -1
  br i1 %100, label %redefine_start1.if.then7, label %redefine_start1.if.else9

redefine_start1.if.end91:                         ; preds = %redefine_start1.if.then90, %redefine_start1.if.end85
  %101 = load float* %40, align 4
  %102 = fptosi float %101 to i32
  %103 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 6), align 4
  %104 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %103
  store i32 %102, i32* %104, align 4
  %105 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 7), align 4
  store i32 %105, i32* @stab_array_index, align 4
  %106 = load i32* @stab_array_index, align 4
  %107 = icmp eq i32 %106, 50
  br i1 %107, label %redefine_start1.if.then95, label %redefine_start1.if.end96

redefine_start1.if.else9:                         ; preds = %redefine_start1.if.then5
  %108 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 14), align 4
  store i32 %108, i32* %45, align 4
  %109 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 15), align 4
  %110 = sitofp i32 %109 to float
  store float %110, float* %46, align 4
  %111 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 3), align 4
  %112 = icmp eq i32 %111, -1
  br i1 %112, label %redefine_start1.if.then12, label %redefine_start1.if.else13

redefine_start1.if.then95:                        ; preds = %redefine_start1.if.end91
  store i32 0, i32* @stab_array_index, align 4
  br label %redefine_start1.if.end96

redefine_start1.if.end96:                         ; preds = %redefine_start1.if.then95, %redefine_start1.if.end91
  store float 0.000000e+00, float* %43, align 4
  store i32 0, i32* %44, align 4
  br label %redefine_start1.for.cond

redefine_start1.if.else13:                        ; preds = %redefine_start1.if.else9
  %113 = load i32* %45, align 4
  %114 = load i32* @t_fuel_press_control, align 4
  %115 = sub nsw i32 %113, %114
  %116 = load i32* @ten, align 4
  %117 = load i32* @fifty, align 4
  %118 = mul nsw i32 %116, %117
  %119 = icmp slt i32 %115, %118
  br i1 %119, label %redefine_start1.if.then18, label %redefine_start1.if.else19

redefine_start1.for.cond:                         ; preds = %redefine_start1.for.inc, %redefine_start1.if.end96
  %120 = load i32* %44, align 4
  %121 = icmp slt i32 %120, 50
  br i1 %121, label %redefine_start1.for.body, label %redefine_start1.for.end

redefine_start1.for.body:                         ; preds = %redefine_start1.for.cond
  %122 = load i32* %44, align 4
  %123 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %122
  %124 = load i32* %123, align 4
  %125 = sitofp i32 %124 to float
  %126 = load float* %43, align 4
  %127 = fadd float %126, %125
  store float %127, float* %43, align 4
  br label %redefine_start1.for.inc

redefine_start1.for.inc:                          ; preds = %redefine_start1.for.body
  %128 = load i32* %44, align 4
  %129 = add nsw i32 %128, 1
  store i32 %129, i32* %44, align 4
  br label %redefine_start1.for.cond

redefine_start1.if.else19:                        ; preds = %redefine_start1.if.else13
  %130 = load i32* %45, align 4
  %131 = load i32* @t_fuel_press_control, align 4
  %132 = sub nsw i32 %130, %131
  %133 = load i32* @thirty, align 4
  %134 = load i32* @fifty, align 4
  %135 = mul nsw i32 %133, %134
  %136 = icmp slt i32 %132, %135
  br i1 %136, label %redefine_start1.if.then24, label %redefine_start1.if.else30

redefine_start1.for.end:                          ; preds = %redefine_start1.for.cond
  %137 = load float* @NH_IDLE_GROUND, align 4
  store float %137, float* @nh_idle, align 4
  %138 = load float* %43, align 4
  %139 = load float* @nh_idle, align 4
  %140 = load float* @NH_REF, align 4
  %141 = fmul float %139, %140
  %142 = load float* @hundred, align 4
  %143 = fmul float %141, %142
  %144 = load float* @zero_point_nine_nine_five, align 4
  %145 = fmul float %143, %144
  %146 = fcmp oge float %138, %145
  br i1 %146, label %redefine_start1.land.lhs.true, label %redefine_start1.if.end117

redefine_start1.if.then24:                        ; preds = %redefine_start1.if.else19
  %147 = load float* @zero_point_one_eight, align 4
  %148 = load i32* %45, align 4
  %149 = load i32* @t_fuel_press_control, align 4
  %150 = load i32* @ten, align 4
  %151 = load i32* @fifty, align 4
  %152 = mul nsw i32 %150, %151
  %153 = add nsw i32 %149, %152
  %154 = sub nsw i32 %148, %153
  %155 = sitofp i32 %154 to float
  %156 = fadd float %147, %155
  store float %156, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end

redefine_start1.if.else30:                        ; preds = %redefine_start1.if.else19
  store float 1.000000e+00, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end

redefine_start1.if.then18:                        ; preds = %redefine_start1.if.else13
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end31

redefine_start1.land.lhs.true:                    ; preds = %redefine_start1.for.end
  %157 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 8), align 4
  %158 = icmp ne i32 %157, 0
  br i1 %158, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true107

redefine_start1.if.end:                           ; preds = %redefine_start1.if.else30, %redefine_start1.if.then24
  br label %redefine_start1.if.end31

redefine_start1.if.then12:                        ; preds = %redefine_start1.if.else9
  %159 = load i32* %45, align 4
  store i32 %159, i32* @t_fuel_press_control, align 4
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end32

redefine_start1.if.end31:                         ; preds = %redefine_start1.if.end, %redefine_start1.if.then18
  br label %redefine_start1.if.end32

redefine_start1.land.lhs.true107:                 ; preds = %redefine_start1.land.lhs.true
  %160 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 9), align 4
  %161 = icmp ne i32 %160, 0
  br i1 %161, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true109

redefine_start1.if.end32:                         ; preds = %redefine_start1.if.end31, %redefine_start1.if.then12
  %162 = load float* @fuel_press_setpoint, align 4
  %163 = load float* %46, align 4
  %164 = fsub float %162, %163
  store float %164, float* %42, align 4
  %165 = load float* @redefine_start.fuel_press_integrator, align 4
  %166 = load float* %42, align 4
  %167 = load float* @zero_point_zero_zero_one_four, align 4
  %168 = fmul float %166, %167
  %169 = fadd float %165, %168
  store float %169, float* @redefine_start.fuel_press_integrator, align 4
  %170 = load float* @redefine_start.fuel_press_integrator, align 4
  %171 = load float* @zero_point_zero_two_five, align 4
  %172 = fcmp ogt float %170, %171
  br i1 %172, label %redefine_start1.if.then38, label %redefine_start1.if.end39

redefine_start1.land.lhs.true109:                 ; preds = %redefine_start1.land.lhs.true107
  %173 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 10), align 4
  %174 = icmp ne i32 %173, 0
  br i1 %174, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true111

redefine_start1.if.then38:                        ; preds = %redefine_start1.if.end32
  store float 2.500000e-01, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end39

redefine_start1.land.lhs.true111:                 ; preds = %redefine_start1.land.lhs.true109
  %175 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 11), align 4
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true113

redefine_start1.if.end39:                         ; preds = %redefine_start1.if.then38, %redefine_start1.if.end32
  %177 = load float* @redefine_start.fuel_press_integrator, align 4
  %178 = load float* @CMD_FUEL_RAMP_END, align 4
  %179 = fcmp olt float %177, %178
  br i1 %179, label %redefine_start1.if.then42, label %redefine_start1.if.end43

redefine_start1.land.lhs.true113:                 ; preds = %redefine_start1.land.lhs.true111
  %180 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 12), align 4
  %181 = icmp sle i32 %180, 10
  br i1 %181, label %redefine_start1.if.then116, label %redefine_start1.if.end117

redefine_start1.if.then42:                        ; preds = %redefine_start1.if.end39
  %182 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %182, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end43

redefine_start1.if.then116:                       ; preds = %redefine_start1.land.lhs.true113
  store i32 8, i32* @operation_mode, align 4
  br label %redefine_start1.if.end117

redefine_start1.if.else118:                       ; preds = %redefine_start1.if.else62
  store i32 16, i32* @operation_mode, align 4
  br label %redefine_start1.if.end119

redefine_start1.if.end117:                        ; preds = %redefine_start1.if.then116, %redefine_start1.land.lhs.true113, %redefine_start1.land.lhs.true111, %redefine_start1.land.lhs.true109, %redefine_start1.land.lhs.true107, %redefine_start1.land.lhs.true, %redefine_start1.for.end
  br label %redefine_start1.if.end119

redefine_start1.if.end43:                         ; preds = %redefine_start1.if.then42, %redefine_start1.if.end39
  %183 = load float* @redefine_start.fuel_press_integrator, align 4
  %184 = load float* @zero_point_zero_zero_one, align 4
  %185 = load float* %42, align 4
  %186 = fmul float %184, %185
  %187 = fadd float %183, %186
  store float %187, float* @fuel_pump_cmd, align 4
  %188 = load float* @fuel_pump_cmd, align 4
  %189 = load float* @CMD_FUEL_RAMP_END, align 4
  %190 = fcmp olt float %188, %189
  br i1 %190, label %redefine_start1.if.then48, label %redefine_start1.if.end49

redefine_start1.if.then58:                        ; preds = %redefine_start1.if.else55
  store float 0.000000e+00, float* @fuel_press_setpoint, align 4
  %191 = load float* %40, align 4
  store float %191, float* @nh_setpoint, align 4
  %192 = load float* @fuel_pump_cmd, align 4
  store float %192, float* @redefine_start.fuel_pump_integrator, align 4
  %193 = load float* %40, align 4
  %194 = load float* %41, align 4
  %195 = fsub float %193, %194
  %196 = load i32* @two, align 4
  %197 = sitofp i32 %196 to float
  %198 = fmul float %195, %197
  store float %198, float* @redefine_start.dnhqdt, align 4
  store i32 4, i32* @operation_mode, align 4
  br label %redefine_start1.if.end120

redefine_start1.if.end119:                        ; preds = %redefine_start1.if.end117, %redefine_start1.if.else118
  br label %redefine_start1.if.end120

redefine_start1.if.then48:                        ; preds = %redefine_start1.if.end43
  %199 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %199, float* @fuel_pump_cmd, align 4
  br label %redefine_start1.if.end49

redefine_start1.if.then54:                        ; preds = %redefine_start1.if.else51
  br label %redefine_start1.if.end121

redefine_start1.if.then7:                         ; preds = %redefine_start1.if.then5
  %200 = load float* @CMD_FUEL_RAMP_START, align 4
  %201 = load float* %40, align 4
  %202 = fsub float %201, 2.700000e+03
  %203 = load float* @CMD_FUEL_RAMP_END, align 4
  %204 = load float* @CMD_FUEL_RAMP_START, align 4
  %205 = fsub float %203, %204
  %206 = fmul float %202, %205
  %207 = fadd float %200, %206
  store float %207, float* @fuel_pump_cmd, align 4
  %208 = load float* @fuel_pump_cmd, align 4
  store float %208, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end50

redefine_start1.if.end49:                         ; preds = %redefine_start1.if.then48, %redefine_start1.if.end43
  br label %redefine_start1.if.end50

redefine_start1.if.end120:                        ; preds = %redefine_start1.if.end119, %redefine_start1.if.then58
  br label %redefine_start1.if.end121

redefine_start1.if.end121:                        ; preds = %redefine_start1.if.end120, %redefine_start1.if.then54
  br label %redefine_start1.if.end122

redefine_start1.if.end50:                         ; preds = %redefine_start1.if.end49, %redefine_start1.if.then7
  br label %redefine_start1.if.end122

redefine_start1.if.then2:                         ; preds = %redefine_start1.if.else
  br label %if.end123

redefine_start1.if.end122:                        ; preds = %redefine_start1.if.end50, %redefine_start1.if.end121
  br label %if.end123

redefine_start1.if.then:                          ; preds = %redefine_start1.entry
  store float 0.000000e+00, float* @fuel_pump_cmd, align 4
  %209 = load float* @fuel_pump_cmd, align 4
  br label %newName0

redefine_start1.return:                           ; No predecessors!
  ret void
}

define void @redefine_start2() {
redefine_start2.if.end123:
  br label %if.end124

redefine_start2.return:                           ; No predecessors!
  ret void
}

define void @redefine_start3(float*, float*) {
redefine_start3.if.end124:
  %2 = load i32* bitcast (float* @redefine_start.fuel_press_integrator to i32*), align 4
  store i32 %2, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 0), align 4
  %3 = load i32* bitcast (float* @fuel_press_setpoint to i32*), align 4
  store i32 %3, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 1), align 4
  %4 = load i32* bitcast (float* @epsilon_global to i32*), align 4
  store i32 %4, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 2), align 4
  %5 = load i32* bitcast (float* @iTerm to i32*), align 4
  store i32 %5, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 3), align 4
  %6 = load i32* bitcast (float* @epsilon_modified to i32*), align 4
  store i32 %6, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 4), align 4
  %7 = load i32* bitcast (float* @dTerm_modified to i32*), align 4
  store i32 %7, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 5), align 4
  %8 = load i32* bitcast (float* @redefine_start.fuel_pump_integrator to i32*), align 4
  store i32 %8, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 6), align 4
  %9 = load i32* bitcast (float* @ramp_filter_memory to i32*), align 4
  store i32 %9, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 7), align 4
  %10 = bitcast float* %0 to i32*
  %11 = load i32* %10, align 4
  store i32 %11, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 8), align 4
  %12 = load i32* @stab_array_index, align 4
  store i32 %12, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 9), align 4
  %13 = bitcast float* %1 to i32*
  %14 = load i32* %13, align 4
  store i32 %14, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 10), align 4
  %15 = load i32* bitcast (float* @nh_idle to i32*), align 4
  store i32 %15, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 11), align 4
  br label %redefine_start3.return

redefine_start3.return:                           ; preds = %redefine_start3.if.end124
  ret void
}

define void @regulation_nh_init4(float*) {
regulation_nh_init4.newName01:
  %1 = load float* %0, align 4
  store float %1, float* @fuel_pump_integrator, align 4
  %2 = load float* @nh_setpoint, align 4
  store float %2, float* @ramp_filter_memory, align 4
  br label %regulation_nh_init4.return

regulation_nh_init4.return:                       ; preds = %regulation_nh_init4.newName01
  ret void
}

define void @regulation_nh_init5(float*) {
regulation_nh_init5.entry:
  %1 = load float* %0
  %2 = alloca float, align 4, !ConsumedBy !12
  store float %1, float* %2, align 4
  %3 = load float* %2, align 4
  br label %newName0

regulation_nh_init5.return:                       ; No predecessors!
  ret void
}

define void @pid_init6(float*) {
pid_init6.entry:
  %1 = load float* %0
  %2 = alloca float, align 4
  store float %1, float* %2, align 4
  store float 0.000000e+00, float* @epsilon_global, align 4
  %3 = load float* %2, align 4
  store float %3, float* @iTerm, align 4
  store float 0.000000e+00, float* @epsilon_modified, align 4
  store float 0.000000e+00, float* @dTerm_modified, align 4
  br label %pid_init6.return

pid_init6.return:                                 ; preds = %pid_init6.entry
  ret void
}

attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }

!redefine.annotations = !{!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10, !11}

!0 = metadata !{metadata !"HyperOp", void ()* @redefine_start1, metadata !"Static"}
!1 = metadata !{metadata !"Entry", metadata !0}
!2 = metadata !{metadata !"HyperOp", void ()* @redefine_start2, metadata !"Static"}
!3 = metadata !{metadata !"Intermediate", metadata !2}
!4 = metadata !{metadata !"HyperOp", void (float*, float*)* @redefine_start3, metadata !"Static"}
!5 = metadata !{metadata !"Exit", metadata !4}
!6 = metadata !{metadata !"HyperOp", void (float*)* @regulation_nh_init4, metadata !"Static"}
!7 = metadata !{metadata !"Intermediate", metadata !6}
!8 = metadata !{metadata !"HyperOp", void (float*)* @regulation_nh_init5, metadata !"Static"}
!9 = metadata !{metadata !"Intermediate", metadata !8}
!10 = metadata !{metadata !"HyperOp", void (float*)* @pid_init6, metadata !"Static"}
!11 = metadata !{metadata !"Intermediate", metadata !10}
!12 = metadata !{metadata !13}
!13 = metadata !{metadata !6, metadata !"LocalReference", i32 0}

-----------Patching created function redefine_start3--------------
accumulated bbs:
if.end124,

----------Adding consumed by metadata----------
cloned inst second:  store float %40, float* %current_nh, align 4
producer function:redefine_start1
how many clones?1
added metadata on instruction that belongs to parent redefine_start1 and is mapped to slot 0 when the function has 2 and is of type:1:  %40 = alloca float, align 4, !ConsumedBy !12
cloned inst second:  store float %add101, float* %nh_average, align 4
producer function:redefine_start1
how many clones?1
added metadata on instruction that belongs to parent redefine_start1 and is mapped to slot 1 when the function has 2 and is of type:1:  %43 = alloca float, align 4, !ConsumedBy !14

----------Dealing with conditional branches from other HyperOps----------
number of conditional jump sources:0

----------Dealing with unconditional branches from other HyperOps----------
number of unconditional jump sources:2
what was callsite size earlier??0
what was callsite size earlier??0

----------Adding a predicate from entry hyperop if there are no incoming edges to the hyperop----------
after patching function redefine_start3, module:; ModuleID = './Compilation_Error/startuppump_original.ll'
target datalayout = "E-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-n32"
target triple = "redefine"

@CMD_FUEL_RAMP_START = global float 0x3FC1EB8520000000, align 4
@CMD_FUEL_RAMP_END = global float 0x3FC1EB8520000000, align 4
@NH_IDLE_GROUND = global float 5.350000e+01, align 4
@NL_IDLE_GROUND = global float 3.000000e+01, align 4
@zero_point_zero_zero_one_four = global float 0x3F56F00680000000, align 4
@zero_point_zero_zero_one = global float 0x3F50624DE0000000, align 4
@one_point_o = global float 1.000000e+00, align 4
@zero_point_one_eight = global float 0x3FC70A3D80000000, align 4
@NL_REF = global float 4.363600e+04, align 4
@NH_REF = global float 5.071900e+04, align 4
@hundred = global float 1.000000e+02, align 4
@zero_point_zero_two = global float 0x3F947AE140000000, align 4
@zero_point_zero_two_five = global float 0x3F999999A0000000, align 4
@zero_point_nine_nine_five = global float 0x3FEFD70A40000000, align 4
@zero_point_one = global float 0x3FB99999A0000000, align 4
@zero_point_zero_one = global float 0x3F847AE140000000, align 4
@exp1 = global float 0x3E8AD7F2A0000000, align 4
@exp3 = global float 0x3F0A36E2E0000000, align 4
@ten = global i32 10, align 4
@fifty = global i32 50, align 4
@thirty = global i32 30, align 4
@twenty = global i32 20, align 4
@two = global i32 2, align 4
@epsilon_global = common global float 0.000000e+00, align 4
@iTerm = common global float 0.000000e+00, align 4
@epsilon_modified = common global float 0.000000e+00, align 4
@dTerm_modified = common global float 0.000000e+00, align 4
@fuel_pump_integrator = common global float 0.000000e+00, align 4
@nh_setpoint = common global float 0.000000e+00, align 4
@ramp_filter_memory = common global float 0.000000e+00, align 4
@redefine_in_parameters = common global [16 x i32] zeroinitializer, align 4
@redefine_start.fuel_press_integrator = internal global float 0.000000e+00, align 4
@redefine_start.fuel_pump_integrator = internal global float 0.000000e+00, align 4
@redefine_start.dnhqdt = internal global float 0.000000e+00, align 4
@fuel_pump_cmd = common global float 0.000000e+00, align 4
@t_fuel_press_control = common global i32 0, align 4
@fuel_press_setpoint = common global float 0.000000e+00, align 4
@operation_mode = common global i32 0, align 4
@redefine_in_stab = common global [50 x i32] zeroinitializer, align 4
@stab_array_index = common global i32 0, align 4
@nh_idle = common global float 0.000000e+00, align 4
@redefine_out_parameters = common global [12 x i32] zeroinitializer, align 4
@nh_average = common global float 0.000000e+00, align 4

; Function Attrs: nounwind
define void @pid_init(float %iTermtemp) #0 {
entry:
  %iTermtemp.addr = alloca float, align 4
  store float %iTermtemp, float* %iTermtemp.addr, align 4
  store float 0.000000e+00, float* @epsilon_global, align 4
  %0 = load float* %iTermtemp.addr, align 4
  store float %0, float* @iTerm, align 4
  store float 0.000000e+00, float* @epsilon_modified, align 4
  store float 0.000000e+00, float* @dTerm_modified, align 4
  ret void
}

; Function Attrs: nounwind
define void @regulation_nh_init(float %cmd) #0 {
entry:
  %cmd.addr = alloca float, align 4
  store float %cmd, float* %cmd.addr, align 4
  %0 = load float* %cmd.addr, align 4
  br label %newName0

newName0:                                         ; preds = %regulation_nh_init5.entry, %entry
  call void @pid_init(float %0)
  br label %newName01

newName01:                                        ; preds = %newName0
  %1 = load float* %cmd.addr, align 4
  store float %1, float* @fuel_pump_integrator, align 4
  %2 = load float* @nh_setpoint, align 4
  store float %2, float* @ramp_filter_memory, align 4
  ret void
}

; Function Attrs: nounwind
define void @redefine_start() #0 {
entry:
  %0 = getelementptr inbounds float* @CMD_FUEL_RAMP_START, i32 0
  store float 0x3FC1EB8520000000, float* %0, align 4
  %1 = getelementptr inbounds float* @CMD_FUEL_RAMP_END, i32 0
  store float 0x3FC1EB8520000000, float* %1, align 4
  %2 = getelementptr inbounds float* @NH_IDLE_GROUND, i32 0
  store float 5.350000e+01, float* %2, align 4
  %3 = getelementptr inbounds float* @NL_IDLE_GROUND, i32 0
  store float 3.000000e+01, float* %3, align 4
  %4 = getelementptr inbounds float* @zero_point_zero_zero_one_four, i32 0
  store float 0x3F56F00680000000, float* %4, align 4
  %5 = getelementptr inbounds float* @zero_point_zero_zero_one, i32 0
  store float 0x3F50624DE0000000, float* %5, align 4
  %6 = getelementptr inbounds float* @one_point_o, i32 0
  store float 1.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds float* @zero_point_one_eight, i32 0
  store float 0x3FC70A3D80000000, float* %7, align 4
  %8 = getelementptr inbounds float* @NL_REF, i32 0
  store float 4.363600e+04, float* %8, align 4
  %9 = getelementptr inbounds float* @NH_REF, i32 0
  store float 5.071900e+04, float* %9, align 4
  %10 = getelementptr inbounds float* @hundred, i32 0
  store float 1.000000e+02, float* %10, align 4
  %11 = getelementptr inbounds float* @zero_point_zero_two, i32 0
  store float 0x3F947AE140000000, float* %11, align 4
  %12 = getelementptr inbounds float* @zero_point_zero_two_five, i32 0
  store float 0x3F999999A0000000, float* %12, align 4
  %13 = getelementptr inbounds float* @zero_point_nine_nine_five, i32 0
  store float 0x3FEFD70A40000000, float* %13, align 4
  %14 = getelementptr inbounds float* @zero_point_one, i32 0
  store float 0x3FB99999A0000000, float* %14, align 4
  %15 = getelementptr inbounds float* @zero_point_zero_one, i32 0
  store float 0x3F847AE140000000, float* %15, align 4
  %16 = getelementptr inbounds float* @exp1, i32 0
  store float 0x3E8AD7F2A0000000, float* %16, align 4
  %17 = getelementptr inbounds float* @exp3, i32 0
  store float 0x3F0A36E2E0000000, float* %17, align 4
  %18 = getelementptr inbounds i32* @ten, i32 0
  store i32 10, i32* %18, align 4
  %19 = getelementptr inbounds i32* @fifty, i32 0
  store i32 50, i32* %19, align 4
  %20 = getelementptr inbounds i32* @thirty, i32 0
  store i32 30, i32* %20, align 4
  %21 = getelementptr inbounds i32* @twenty, i32 0
  store i32 20, i32* %21, align 4
  %22 = getelementptr inbounds i32* @two, i32 0
  store i32 2, i32* %22, align 4
  %23 = getelementptr inbounds float* @epsilon_global, i32 0
  store float 0.000000e+00, float* %23, align 4
  %24 = getelementptr inbounds float* @iTerm, i32 0
  store float 0.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds float* @epsilon_modified, i32 0
  store float 0.000000e+00, float* %25, align 4
  %26 = getelementptr inbounds float* @dTerm_modified, i32 0
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds float* @fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds float* @nh_setpoint, i32 0
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds float* @ramp_filter_memory, i32 0
  store float 0.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds float* @redefine_start.fuel_press_integrator, i32 0
  store float 0.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds float* @redefine_start.fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %31, align 4
  %32 = getelementptr inbounds float* @redefine_start.dnhqdt, i32 0
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds float* @fuel_pump_cmd, i32 0
  store float 0.000000e+00, float* %33, align 4
  %34 = getelementptr inbounds i32* @t_fuel_press_control, i32 0
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds float* @fuel_press_setpoint, i32 0
  store float 0.000000e+00, float* %35, align 4
  %36 = getelementptr inbounds i32* @operation_mode, i32 0
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds i32* @stab_array_index, i32 0
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds float* @nh_idle, i32 0
  store float 0.000000e+00, float* %38, align 4
  %39 = getelementptr inbounds float* @nh_average, i32 0
  store float 0.000000e+00, float* %39, align 4
  %current_nh = alloca float, align 4
  %index_nh = alloca float, align 4
  %epsilon = alloca float, align 4
  %nh_average = alloca float, align 4
  %i = alloca i32, align 4
  %startup_time = alloca i32, align 4
  %fuel_press = alloca float, align 4
  %40 = load float* bitcast ([16 x i32]* @redefine_in_parameters to float*), align 4
  store float %40, float* %current_nh, align 4
  %41 = load float* bitcast (i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 5) to float*), align 4
  store float %41, float* %index_nh, align 4
  %42 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 1), align 4
  %cmp = icmp eq i32 %42, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* @fuel_pump_cmd, align 4
  %43 = load float* @fuel_pump_cmd, align 4
  br label %newName0

newName0:                                         ; preds = %redefine_start1.if.then, %if.then
  call void @regulation_nh_init(float %43)
  br label %if.end124

if.else:                                          ; preds = %entry
  %44 = load float* %current_nh, align 4
  %cmp1 = fcmp olt float %44, 2.700000e+03
  br i1 %cmp1, label %if.then2, label %if.else3

if.then2:                                         ; preds = %if.else
  br label %if.end123

if.else3:                                         ; preds = %if.else
  %45 = load float* %current_nh, align 4
  %cmp4 = fcmp olt float %45, 1.500000e+04
  br i1 %cmp4, label %if.then5, label %if.else51

if.then5:                                         ; preds = %if.else3
  %46 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 2), align 4
  %cmp6 = icmp eq i32 %46, -1
  br i1 %cmp6, label %if.then7, label %if.else9

if.then7:                                         ; preds = %if.then5
  %47 = load float* @CMD_FUEL_RAMP_START, align 4
  %48 = load float* %current_nh, align 4
  %sub = fsub float %48, 2.700000e+03
  %49 = load float* @CMD_FUEL_RAMP_END, align 4
  %50 = load float* @CMD_FUEL_RAMP_START, align 4
  %sub8 = fsub float %49, %50
  %mul = fmul float %sub, %sub8
  %add = fadd float %47, %mul
  store float %add, float* @fuel_pump_cmd, align 4
  %51 = load float* @fuel_pump_cmd, align 4
  store float %51, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end50

if.else9:                                         ; preds = %if.then5
  %52 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 14), align 4
  store i32 %52, i32* %startup_time, align 4
  %53 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 15), align 4
  %conv = sitofp i32 %53 to float
  store float %conv, float* %fuel_press, align 4
  %54 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 3), align 4
  %cmp10 = icmp eq i32 %54, -1
  br i1 %cmp10, label %if.then12, label %if.else13

if.then12:                                        ; preds = %if.else9
  %55 = load i32* %startup_time, align 4
  store i32 %55, i32* @t_fuel_press_control, align 4
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %if.end32

if.else13:                                        ; preds = %if.else9
  %56 = load i32* %startup_time, align 4
  %57 = load i32* @t_fuel_press_control, align 4
  %sub14 = sub nsw i32 %56, %57
  %58 = load i32* @ten, align 4
  %59 = load i32* @fifty, align 4
  %mul15 = mul nsw i32 %58, %59
  %cmp16 = icmp slt i32 %sub14, %mul15
  br i1 %cmp16, label %if.then18, label %if.else19

if.then18:                                        ; preds = %if.else13
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %if.end31

if.else19:                                        ; preds = %if.else13
  %60 = load i32* %startup_time, align 4
  %61 = load i32* @t_fuel_press_control, align 4
  %sub20 = sub nsw i32 %60, %61
  %62 = load i32* @thirty, align 4
  %63 = load i32* @fifty, align 4
  %mul21 = mul nsw i32 %62, %63
  %cmp22 = icmp slt i32 %sub20, %mul21
  br i1 %cmp22, label %if.then24, label %if.else30

if.then24:                                        ; preds = %if.else19
  %64 = load float* @zero_point_one_eight, align 4
  %65 = load i32* %startup_time, align 4
  %66 = load i32* @t_fuel_press_control, align 4
  %67 = load i32* @ten, align 4
  %68 = load i32* @fifty, align 4
  %mul25 = mul nsw i32 %67, %68
  %add26 = add nsw i32 %66, %mul25
  %sub27 = sub nsw i32 %65, %add26
  %conv28 = sitofp i32 %sub27 to float
  %add29 = fadd float %64, %conv28
  store float %add29, float* @fuel_press_setpoint, align 4
  br label %if.end

if.else30:                                        ; preds = %if.else19
  store float 1.000000e+00, float* @fuel_press_setpoint, align 4
  br label %if.end

if.end:                                           ; preds = %if.else30, %if.then24
  br label %if.end31

if.end31:                                         ; preds = %if.end, %if.then18
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then12
  %69 = load float* @fuel_press_setpoint, align 4
  %70 = load float* %fuel_press, align 4
  %sub33 = fsub float %69, %70
  store float %sub33, float* %epsilon, align 4
  %71 = load float* @redefine_start.fuel_press_integrator, align 4
  %72 = load float* %epsilon, align 4
  %73 = load float* @zero_point_zero_zero_one_four, align 4
  %mul34 = fmul float %72, %73
  %add35 = fadd float %71, %mul34
  store float %add35, float* @redefine_start.fuel_press_integrator, align 4
  %74 = load float* @redefine_start.fuel_press_integrator, align 4
  %75 = load float* @zero_point_zero_two_five, align 4
  %cmp36 = fcmp ogt float %74, %75
  br i1 %cmp36, label %if.then38, label %if.end39

if.then38:                                        ; preds = %if.end32
  store float 2.500000e-01, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end39

if.end39:                                         ; preds = %if.then38, %if.end32
  %76 = load float* @redefine_start.fuel_press_integrator, align 4
  %77 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp40 = fcmp olt float %76, %77
  br i1 %cmp40, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.end39
  %78 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %78, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.then42, %if.end39
  %79 = load float* @redefine_start.fuel_press_integrator, align 4
  %80 = load float* @zero_point_zero_zero_one, align 4
  %81 = load float* %epsilon, align 4
  %mul44 = fmul float %80, %81
  %add45 = fadd float %79, %mul44
  store float %add45, float* @fuel_pump_cmd, align 4
  %82 = load float* @fuel_pump_cmd, align 4
  %83 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp46 = fcmp olt float %82, %83
  br i1 %cmp46, label %if.then48, label %if.end49

if.then48:                                        ; preds = %if.end43
  %84 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %84, float* @fuel_pump_cmd, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.then48, %if.end43
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then7
  br label %if.end122

if.else51:                                        ; preds = %if.else3
  %85 = load float* %current_nh, align 4
  %cmp52 = fcmp olt float %85, 1.500000e+04
  br i1 %cmp52, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.else51
  br label %if.end121

if.else55:                                        ; preds = %if.else51
  %86 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 4), align 4
  store i32 %86, i32* @operation_mode, align 4
  %87 = load i32* @operation_mode, align 4
  %cmp56 = icmp eq i32 %87, 2
  br i1 %cmp56, label %if.then58, label %if.else62

if.then58:                                        ; preds = %if.else55
  store float 0.000000e+00, float* @fuel_press_setpoint, align 4
  %88 = load float* %current_nh, align 4
  store float %88, float* @nh_setpoint, align 4
  %89 = load float* @fuel_pump_cmd, align 4
  store float %89, float* @redefine_start.fuel_pump_integrator, align 4
  %90 = load float* %current_nh, align 4
  %91 = load float* %index_nh, align 4
  %sub59 = fsub float %90, %91
  %92 = load i32* @two, align 4
  %conv60 = sitofp i32 %92 to float
  %mul61 = fmul float %sub59, %conv60
  store float %mul61, float* @redefine_start.dnhqdt, align 4
  store i32 4, i32* @operation_mode, align 4
  br label %if.end120

if.else62:                                        ; preds = %if.else55
  %93 = load i32* @operation_mode, align 4
  %cmp63 = icmp eq i32 %93, 4
  br i1 %cmp63, label %if.then65, label %if.else118

if.then65:                                        ; preds = %if.else62
  %94 = load float* @nh_setpoint, align 4
  %95 = load float* @NH_IDLE_GROUND, align 4
  %cmp66 = fcmp olt float %94, %95
  br i1 %cmp66, label %if.then68, label %if.else71

if.then68:                                        ; preds = %if.then65
  %96 = load float* @nh_setpoint, align 4
  %97 = load float* @zero_point_zero_two, align 4
  %98 = load float* @redefine_start.dnhqdt, align 4
  %mul69 = fmul float %97, %98
  %add70 = fadd float %96, %mul69
  store float %add70, float* @nh_setpoint, align 4
  br label %if.end74

if.else71:                                        ; preds = %if.then65
  %99 = load float* @nh_setpoint, align 4
  %100 = load float* @zero_point_zero_two, align 4
  %101 = load float* @redefine_start.dnhqdt, align 4
  %mul72 = fmul float %100, %101
  %sub73 = fsub float %99, %mul72
  store float %sub73, float* @nh_setpoint, align 4
  br label %if.end74

if.end74:                                         ; preds = %if.else71, %if.then68
  %102 = load float* @nh_setpoint, align 4
  %103 = load float* %current_nh, align 4
  %sub75 = fsub float %102, %103
  store float %sub75, float* %epsilon, align 4
  %104 = load float* @redefine_start.fuel_pump_integrator, align 4
  %105 = load float* %epsilon, align 4
  %106 = load float* @exp1, align 4
  %mul76 = fmul float %105, %106
  %add77 = fadd float %104, %mul76
  store float %add77, float* @redefine_start.fuel_pump_integrator, align 4
  %107 = load float* @redefine_start.fuel_pump_integrator, align 4
  %108 = load float* @zero_point_zero_two_five, align 4
  %cmp78 = fcmp ogt float %107, %108
  br i1 %cmp78, label %if.then80, label %if.end81

if.then80:                                        ; preds = %if.end74
  store float 2.500000e-01, float* @redefine_start.fuel_pump_integrator, align 4
  br label %if.end81

if.end81:                                         ; preds = %if.then80, %if.end74
  %109 = load float* @redefine_start.fuel_pump_integrator, align 4
  %110 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp82 = fcmp olt float %109, %110
  br i1 %cmp82, label %if.then84, label %if.end85

if.then84:                                        ; preds = %if.end81
  %111 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %111, float* @redefine_start.fuel_pump_integrator, align 4
  br label %if.end85

if.end85:                                         ; preds = %if.then84, %if.end81
  %112 = load float* @redefine_start.fuel_pump_integrator, align 4
  %113 = load float* @exp3, align 4
  %114 = load float* %epsilon, align 4
  %mul86 = fmul float %113, %114
  %add87 = fadd float %112, %mul86
  store float %add87, float* @fuel_pump_cmd, align 4
  %115 = load float* @fuel_pump_cmd, align 4
  %116 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp88 = fcmp olt float %115, %116
  br i1 %cmp88, label %if.then90, label %if.end91

if.then90:                                        ; preds = %if.end85
  %117 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %117, float* @fuel_pump_cmd, align 4
  br label %if.end91

if.end91:                                         ; preds = %if.then90, %if.end85
  %118 = load float* %current_nh, align 4
  %conv92 = fptosi float %118 to i32
  %119 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 6), align 4
  %arrayidx = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %119
  store i32 %conv92, i32* %arrayidx, align 4
  %120 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 7), align 4
  store i32 %120, i32* @stab_array_index, align 4
  %121 = load i32* @stab_array_index, align 4
  %cmp93 = icmp eq i32 %121, 50
  br i1 %cmp93, label %if.then95, label %if.end96

if.then95:                                        ; preds = %if.end91
  store i32 0, i32* @stab_array_index, align 4
  br label %if.end96

if.end96:                                         ; preds = %if.then95, %if.end91
  store float 0.000000e+00, float* %nh_average, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end96
  %122 = load i32* %i, align 4
  %cmp97 = icmp slt i32 %122, 50
  br i1 %cmp97, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %123 = load i32* %i, align 4
  %arrayidx99 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %123
  %124 = load i32* %arrayidx99, align 4
  %conv100 = sitofp i32 %124 to float
  %125 = load float* %nh_average, align 4
  %add101 = fadd float %125, %conv100
  store float %add101, float* %nh_average, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %126 = load i32* %i, align 4
  %inc = add nsw i32 %126, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %127 = load float* @NH_IDLE_GROUND, align 4
  store float %127, float* @nh_idle, align 4
  %128 = load float* %nh_average, align 4
  %129 = load float* @nh_idle, align 4
  %130 = load float* @NH_REF, align 4
  %mul102 = fmul float %129, %130
  %131 = load float* @hundred, align 4
  %mul103 = fmul float %mul102, %131
  %132 = load float* @zero_point_nine_nine_five, align 4
  %mul104 = fmul float %mul103, %132
  %cmp105 = fcmp oge float %128, %mul104
  br i1 %cmp105, label %land.lhs.true, label %if.end117

land.lhs.true:                                    ; preds = %for.end
  %133 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 8), align 4
  %tobool = icmp ne i32 %133, 0
  br i1 %tobool, label %if.end117, label %land.lhs.true107

land.lhs.true107:                                 ; preds = %land.lhs.true
  %134 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 9), align 4
  %tobool108 = icmp ne i32 %134, 0
  br i1 %tobool108, label %if.end117, label %land.lhs.true109

land.lhs.true109:                                 ; preds = %land.lhs.true107
  %135 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 10), align 4
  %tobool110 = icmp ne i32 %135, 0
  br i1 %tobool110, label %if.end117, label %land.lhs.true111

land.lhs.true111:                                 ; preds = %land.lhs.true109
  %136 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 11), align 4
  %tobool112 = icmp ne i32 %136, 0
  br i1 %tobool112, label %if.end117, label %land.lhs.true113

land.lhs.true113:                                 ; preds = %land.lhs.true111
  %137 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 12), align 4
  %cmp114 = icmp sle i32 %137, 10
  br i1 %cmp114, label %if.then116, label %if.end117

if.then116:                                       ; preds = %land.lhs.true113
  store i32 8, i32* @operation_mode, align 4
  br label %if.end117

if.end117:                                        ; preds = %if.then116, %land.lhs.true113, %land.lhs.true111, %land.lhs.true109, %land.lhs.true107, %land.lhs.true, %for.end
  br label %if.end119

if.else118:                                       ; preds = %if.else62
  store i32 16, i32* @operation_mode, align 4
  br label %if.end119

if.end119:                                        ; preds = %if.else118, %if.end117
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then58
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.then54
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.end50
  br label %if.end123

if.end123:                                        ; preds = %redefine_start1.if.end122, %redefine_start1.if.then2, %if.end122, %if.then2
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %newName0
  %138 = load i32* bitcast (float* @redefine_start.fuel_press_integrator to i32*), align 4
  store i32 %138, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 0), align 4
  %139 = load i32* bitcast (float* @fuel_press_setpoint to i32*), align 4
  store i32 %139, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 1), align 4
  %140 = load i32* bitcast (float* @epsilon_global to i32*), align 4
  store i32 %140, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 2), align 4
  %141 = load i32* bitcast (float* @iTerm to i32*), align 4
  store i32 %141, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 3), align 4
  %142 = load i32* bitcast (float* @epsilon_modified to i32*), align 4
  store i32 %142, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 4), align 4
  %143 = load i32* bitcast (float* @dTerm_modified to i32*), align 4
  store i32 %143, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 5), align 4
  %144 = load i32* bitcast (float* @redefine_start.fuel_pump_integrator to i32*), align 4
  store i32 %144, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 6), align 4
  %145 = load i32* bitcast (float* @ramp_filter_memory to i32*), align 4
  store i32 %145, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 7), align 4
  %146 = bitcast float* %current_nh to i32*
  %147 = load i32* %146, align 4
  store i32 %147, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 8), align 4
  %148 = load i32* @stab_array_index, align 4
  store i32 %148, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 9), align 4
  %149 = bitcast float* %nh_average to i32*
  %150 = load i32* %149, align 4
  store i32 %150, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 10), align 4
  %151 = load i32* bitcast (float* @nh_idle to i32*), align 4
  store i32 %151, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 11), align 4
  ret void
}

define void @redefine_start1() {
redefine_start1.entry:
  %0 = getelementptr inbounds float* @CMD_FUEL_RAMP_START, i32 0
  store float 0x3FC1EB8520000000, float* %0, align 4
  %1 = getelementptr inbounds float* @CMD_FUEL_RAMP_END, i32 0
  store float 0x3FC1EB8520000000, float* %1, align 4
  %2 = getelementptr inbounds float* @NH_IDLE_GROUND, i32 0
  store float 5.350000e+01, float* %2, align 4
  %3 = getelementptr inbounds float* @NL_IDLE_GROUND, i32 0
  store float 3.000000e+01, float* %3, align 4
  %4 = getelementptr inbounds float* @zero_point_zero_zero_one_four, i32 0
  store float 0x3F56F00680000000, float* %4, align 4
  %5 = getelementptr inbounds float* @zero_point_zero_zero_one, i32 0
  store float 0x3F50624DE0000000, float* %5, align 4
  %6 = getelementptr inbounds float* @one_point_o, i32 0
  store float 1.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds float* @zero_point_one_eight, i32 0
  store float 0x3FC70A3D80000000, float* %7, align 4
  %8 = getelementptr inbounds float* @NL_REF, i32 0
  store float 4.363600e+04, float* %8, align 4
  %9 = getelementptr inbounds float* @NH_REF, i32 0
  store float 5.071900e+04, float* %9, align 4
  %10 = getelementptr inbounds float* @hundred, i32 0
  store float 1.000000e+02, float* %10, align 4
  %11 = getelementptr inbounds float* @zero_point_zero_two, i32 0
  store float 0x3F947AE140000000, float* %11, align 4
  %12 = getelementptr inbounds float* @zero_point_zero_two_five, i32 0
  store float 0x3F999999A0000000, float* %12, align 4
  %13 = getelementptr inbounds float* @zero_point_nine_nine_five, i32 0
  store float 0x3FEFD70A40000000, float* %13, align 4
  %14 = getelementptr inbounds float* @zero_point_one, i32 0
  store float 0x3FB99999A0000000, float* %14, align 4
  %15 = getelementptr inbounds float* @zero_point_zero_one, i32 0
  store float 0x3F847AE140000000, float* %15, align 4
  %16 = getelementptr inbounds float* @exp1, i32 0
  store float 0x3E8AD7F2A0000000, float* %16, align 4
  %17 = getelementptr inbounds float* @exp3, i32 0
  store float 0x3F0A36E2E0000000, float* %17, align 4
  %18 = getelementptr inbounds i32* @ten, i32 0
  store i32 10, i32* %18, align 4
  %19 = getelementptr inbounds i32* @fifty, i32 0
  store i32 50, i32* %19, align 4
  %20 = getelementptr inbounds i32* @thirty, i32 0
  store i32 30, i32* %20, align 4
  %21 = getelementptr inbounds i32* @twenty, i32 0
  store i32 20, i32* %21, align 4
  %22 = getelementptr inbounds i32* @two, i32 0
  store i32 2, i32* %22, align 4
  %23 = getelementptr inbounds float* @epsilon_global, i32 0
  store float 0.000000e+00, float* %23, align 4
  %24 = getelementptr inbounds float* @iTerm, i32 0
  store float 0.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds float* @epsilon_modified, i32 0
  store float 0.000000e+00, float* %25, align 4
  %26 = getelementptr inbounds float* @dTerm_modified, i32 0
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds float* @fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds float* @nh_setpoint, i32 0
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds float* @ramp_filter_memory, i32 0
  store float 0.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds float* @redefine_start.fuel_press_integrator, i32 0
  store float 0.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds float* @redefine_start.fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %31, align 4
  %32 = getelementptr inbounds float* @redefine_start.dnhqdt, i32 0
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds float* @fuel_pump_cmd, i32 0
  store float 0.000000e+00, float* %33, align 4
  %34 = getelementptr inbounds i32* @t_fuel_press_control, i32 0
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds float* @fuel_press_setpoint, i32 0
  store float 0.000000e+00, float* %35, align 4
  %36 = getelementptr inbounds i32* @operation_mode, i32 0
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds i32* @stab_array_index, i32 0
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds float* @nh_idle, i32 0
  store float 0.000000e+00, float* %38, align 4
  %39 = getelementptr inbounds float* @nh_average, i32 0
  store float 0.000000e+00, float* %39, align 4
  %40 = alloca float, align 4, !ConsumedBy !12
  %41 = alloca float, align 4
  %42 = alloca float, align 4
  %43 = alloca float, align 4, !ConsumedBy !14
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca float, align 4
  %47 = load float* bitcast ([16 x i32]* @redefine_in_parameters to float*), align 4
  store float %47, float* %40, align 4
  %48 = load float* bitcast (i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 5) to float*), align 4
  store float %48, float* %41, align 4
  %49 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 1), align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %redefine_start1.if.then, label %redefine_start1.if.else

redefine_start1.if.else:                          ; preds = %redefine_start1.entry
  %51 = load float* %40, align 4
  %52 = fcmp olt float %51, 2.700000e+03
  br i1 %52, label %redefine_start1.if.then2, label %redefine_start1.if.else3

redefine_start1.if.else3:                         ; preds = %redefine_start1.if.else
  %53 = load float* %40, align 4
  %54 = fcmp olt float %53, 1.500000e+04
  br i1 %54, label %redefine_start1.if.then5, label %redefine_start1.if.else51

redefine_start1.if.else51:                        ; preds = %redefine_start1.if.else3
  %55 = load float* %40, align 4
  %56 = fcmp olt float %55, 1.500000e+04
  br i1 %56, label %redefine_start1.if.then54, label %redefine_start1.if.else55

redefine_start1.if.else55:                        ; preds = %redefine_start1.if.else51
  %57 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 4), align 4
  store i32 %57, i32* @operation_mode, align 4
  %58 = load i32* @operation_mode, align 4
  %59 = icmp eq i32 %58, 2
  br i1 %59, label %redefine_start1.if.then58, label %redefine_start1.if.else62

redefine_start1.if.else62:                        ; preds = %redefine_start1.if.else55
  %60 = load i32* @operation_mode, align 4
  %61 = icmp eq i32 %60, 4
  br i1 %61, label %redefine_start1.if.then65, label %redefine_start1.if.else118

redefine_start1.if.then65:                        ; preds = %redefine_start1.if.else62
  %62 = load float* @nh_setpoint, align 4
  %63 = load float* @NH_IDLE_GROUND, align 4
  %64 = fcmp olt float %62, %63
  br i1 %64, label %redefine_start1.if.then68, label %redefine_start1.if.else71

redefine_start1.if.then68:                        ; preds = %redefine_start1.if.then65
  %65 = load float* @nh_setpoint, align 4
  %66 = load float* @zero_point_zero_two, align 4
  %67 = load float* @redefine_start.dnhqdt, align 4
  %68 = fmul float %66, %67
  %69 = fadd float %65, %68
  store float %69, float* @nh_setpoint, align 4
  br label %redefine_start1.if.end74

redefine_start1.if.else71:                        ; preds = %redefine_start1.if.then65
  %70 = load float* @nh_setpoint, align 4
  %71 = load float* @zero_point_zero_two, align 4
  %72 = load float* @redefine_start.dnhqdt, align 4
  %73 = fmul float %71, %72
  %74 = fsub float %70, %73
  store float %74, float* @nh_setpoint, align 4
  br label %redefine_start1.if.end74

redefine_start1.if.end74:                         ; preds = %redefine_start1.if.else71, %redefine_start1.if.then68
  %75 = load float* @nh_setpoint, align 4
  %76 = load float* %40, align 4
  %77 = fsub float %75, %76
  store float %77, float* %42, align 4
  %78 = load float* @redefine_start.fuel_pump_integrator, align 4
  %79 = load float* %42, align 4
  %80 = load float* @exp1, align 4
  %81 = fmul float %79, %80
  %82 = fadd float %78, %81
  store float %82, float* @redefine_start.fuel_pump_integrator, align 4
  %83 = load float* @redefine_start.fuel_pump_integrator, align 4
  %84 = load float* @zero_point_zero_two_five, align 4
  %85 = fcmp ogt float %83, %84
  br i1 %85, label %redefine_start1.if.then80, label %redefine_start1.if.end81

redefine_start1.if.then80:                        ; preds = %redefine_start1.if.end74
  store float 2.500000e-01, float* @redefine_start.fuel_pump_integrator, align 4
  br label %redefine_start1.if.end81

redefine_start1.if.end81:                         ; preds = %redefine_start1.if.then80, %redefine_start1.if.end74
  %86 = load float* @redefine_start.fuel_pump_integrator, align 4
  %87 = load float* @CMD_FUEL_RAMP_END, align 4
  %88 = fcmp olt float %86, %87
  br i1 %88, label %redefine_start1.if.then84, label %redefine_start1.if.end85

redefine_start1.if.then84:                        ; preds = %redefine_start1.if.end81
  %89 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %89, float* @redefine_start.fuel_pump_integrator, align 4
  br label %redefine_start1.if.end85

redefine_start1.if.end85:                         ; preds = %redefine_start1.if.then84, %redefine_start1.if.end81
  %90 = load float* @redefine_start.fuel_pump_integrator, align 4
  %91 = load float* @exp3, align 4
  %92 = load float* %42, align 4
  %93 = fmul float %91, %92
  %94 = fadd float %90, %93
  store float %94, float* @fuel_pump_cmd, align 4
  %95 = load float* @fuel_pump_cmd, align 4
  %96 = load float* @CMD_FUEL_RAMP_END, align 4
  %97 = fcmp olt float %95, %96
  br i1 %97, label %redefine_start1.if.then90, label %redefine_start1.if.end91

redefine_start1.if.then90:                        ; preds = %redefine_start1.if.end85
  %98 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %98, float* @fuel_pump_cmd, align 4
  br label %redefine_start1.if.end91

redefine_start1.if.then5:                         ; preds = %redefine_start1.if.else3
  %99 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 2), align 4
  %100 = icmp eq i32 %99, -1
  br i1 %100, label %redefine_start1.if.then7, label %redefine_start1.if.else9

redefine_start1.if.end91:                         ; preds = %redefine_start1.if.then90, %redefine_start1.if.end85
  %101 = load float* %40, align 4
  %102 = fptosi float %101 to i32
  %103 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 6), align 4
  %104 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %103
  store i32 %102, i32* %104, align 4
  %105 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 7), align 4
  store i32 %105, i32* @stab_array_index, align 4
  %106 = load i32* @stab_array_index, align 4
  %107 = icmp eq i32 %106, 50
  br i1 %107, label %redefine_start1.if.then95, label %redefine_start1.if.end96

redefine_start1.if.else9:                         ; preds = %redefine_start1.if.then5
  %108 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 14), align 4
  store i32 %108, i32* %45, align 4
  %109 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 15), align 4
  %110 = sitofp i32 %109 to float
  store float %110, float* %46, align 4
  %111 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 3), align 4
  %112 = icmp eq i32 %111, -1
  br i1 %112, label %redefine_start1.if.then12, label %redefine_start1.if.else13

redefine_start1.if.then95:                        ; preds = %redefine_start1.if.end91
  store i32 0, i32* @stab_array_index, align 4
  br label %redefine_start1.if.end96

redefine_start1.if.end96:                         ; preds = %redefine_start1.if.then95, %redefine_start1.if.end91
  store float 0.000000e+00, float* %43, align 4
  store i32 0, i32* %44, align 4
  br label %redefine_start1.for.cond

redefine_start1.if.else13:                        ; preds = %redefine_start1.if.else9
  %113 = load i32* %45, align 4
  %114 = load i32* @t_fuel_press_control, align 4
  %115 = sub nsw i32 %113, %114
  %116 = load i32* @ten, align 4
  %117 = load i32* @fifty, align 4
  %118 = mul nsw i32 %116, %117
  %119 = icmp slt i32 %115, %118
  br i1 %119, label %redefine_start1.if.then18, label %redefine_start1.if.else19

redefine_start1.for.cond:                         ; preds = %redefine_start1.for.inc, %redefine_start1.if.end96
  %120 = load i32* %44, align 4
  %121 = icmp slt i32 %120, 50
  br i1 %121, label %redefine_start1.for.body, label %redefine_start1.for.end

redefine_start1.for.body:                         ; preds = %redefine_start1.for.cond
  %122 = load i32* %44, align 4
  %123 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %122
  %124 = load i32* %123, align 4
  %125 = sitofp i32 %124 to float
  %126 = load float* %43, align 4
  %127 = fadd float %126, %125
  store float %127, float* %43, align 4
  br label %redefine_start1.for.inc

redefine_start1.for.inc:                          ; preds = %redefine_start1.for.body
  %128 = load i32* %44, align 4
  %129 = add nsw i32 %128, 1
  store i32 %129, i32* %44, align 4
  br label %redefine_start1.for.cond

redefine_start1.if.else19:                        ; preds = %redefine_start1.if.else13
  %130 = load i32* %45, align 4
  %131 = load i32* @t_fuel_press_control, align 4
  %132 = sub nsw i32 %130, %131
  %133 = load i32* @thirty, align 4
  %134 = load i32* @fifty, align 4
  %135 = mul nsw i32 %133, %134
  %136 = icmp slt i32 %132, %135
  br i1 %136, label %redefine_start1.if.then24, label %redefine_start1.if.else30

redefine_start1.for.end:                          ; preds = %redefine_start1.for.cond
  %137 = load float* @NH_IDLE_GROUND, align 4
  store float %137, float* @nh_idle, align 4
  %138 = load float* %43, align 4
  %139 = load float* @nh_idle, align 4
  %140 = load float* @NH_REF, align 4
  %141 = fmul float %139, %140
  %142 = load float* @hundred, align 4
  %143 = fmul float %141, %142
  %144 = load float* @zero_point_nine_nine_five, align 4
  %145 = fmul float %143, %144
  %146 = fcmp oge float %138, %145
  br i1 %146, label %redefine_start1.land.lhs.true, label %redefine_start1.if.end117

redefine_start1.if.then24:                        ; preds = %redefine_start1.if.else19
  %147 = load float* @zero_point_one_eight, align 4
  %148 = load i32* %45, align 4
  %149 = load i32* @t_fuel_press_control, align 4
  %150 = load i32* @ten, align 4
  %151 = load i32* @fifty, align 4
  %152 = mul nsw i32 %150, %151
  %153 = add nsw i32 %149, %152
  %154 = sub nsw i32 %148, %153
  %155 = sitofp i32 %154 to float
  %156 = fadd float %147, %155
  store float %156, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end

redefine_start1.if.else30:                        ; preds = %redefine_start1.if.else19
  store float 1.000000e+00, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end

redefine_start1.if.then18:                        ; preds = %redefine_start1.if.else13
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end31

redefine_start1.land.lhs.true:                    ; preds = %redefine_start1.for.end
  %157 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 8), align 4
  %158 = icmp ne i32 %157, 0
  br i1 %158, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true107

redefine_start1.if.end:                           ; preds = %redefine_start1.if.else30, %redefine_start1.if.then24
  br label %redefine_start1.if.end31

redefine_start1.if.then12:                        ; preds = %redefine_start1.if.else9
  %159 = load i32* %45, align 4
  store i32 %159, i32* @t_fuel_press_control, align 4
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end32

redefine_start1.if.end31:                         ; preds = %redefine_start1.if.end, %redefine_start1.if.then18
  br label %redefine_start1.if.end32

redefine_start1.land.lhs.true107:                 ; preds = %redefine_start1.land.lhs.true
  %160 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 9), align 4
  %161 = icmp ne i32 %160, 0
  br i1 %161, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true109

redefine_start1.if.end32:                         ; preds = %redefine_start1.if.end31, %redefine_start1.if.then12
  %162 = load float* @fuel_press_setpoint, align 4
  %163 = load float* %46, align 4
  %164 = fsub float %162, %163
  store float %164, float* %42, align 4
  %165 = load float* @redefine_start.fuel_press_integrator, align 4
  %166 = load float* %42, align 4
  %167 = load float* @zero_point_zero_zero_one_four, align 4
  %168 = fmul float %166, %167
  %169 = fadd float %165, %168
  store float %169, float* @redefine_start.fuel_press_integrator, align 4
  %170 = load float* @redefine_start.fuel_press_integrator, align 4
  %171 = load float* @zero_point_zero_two_five, align 4
  %172 = fcmp ogt float %170, %171
  br i1 %172, label %redefine_start1.if.then38, label %redefine_start1.if.end39

redefine_start1.land.lhs.true109:                 ; preds = %redefine_start1.land.lhs.true107
  %173 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 10), align 4
  %174 = icmp ne i32 %173, 0
  br i1 %174, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true111

redefine_start1.if.then38:                        ; preds = %redefine_start1.if.end32
  store float 2.500000e-01, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end39

redefine_start1.land.lhs.true111:                 ; preds = %redefine_start1.land.lhs.true109
  %175 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 11), align 4
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true113

redefine_start1.if.end39:                         ; preds = %redefine_start1.if.then38, %redefine_start1.if.end32
  %177 = load float* @redefine_start.fuel_press_integrator, align 4
  %178 = load float* @CMD_FUEL_RAMP_END, align 4
  %179 = fcmp olt float %177, %178
  br i1 %179, label %redefine_start1.if.then42, label %redefine_start1.if.end43

redefine_start1.land.lhs.true113:                 ; preds = %redefine_start1.land.lhs.true111
  %180 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 12), align 4
  %181 = icmp sle i32 %180, 10
  br i1 %181, label %redefine_start1.if.then116, label %redefine_start1.if.end117

redefine_start1.if.then42:                        ; preds = %redefine_start1.if.end39
  %182 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %182, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end43

redefine_start1.if.then116:                       ; preds = %redefine_start1.land.lhs.true113
  store i32 8, i32* @operation_mode, align 4
  br label %redefine_start1.if.end117

redefine_start1.if.else118:                       ; preds = %redefine_start1.if.else62
  store i32 16, i32* @operation_mode, align 4
  br label %redefine_start1.if.end119

redefine_start1.if.end117:                        ; preds = %redefine_start1.if.then116, %redefine_start1.land.lhs.true113, %redefine_start1.land.lhs.true111, %redefine_start1.land.lhs.true109, %redefine_start1.land.lhs.true107, %redefine_start1.land.lhs.true, %redefine_start1.for.end
  br label %redefine_start1.if.end119

redefine_start1.if.end43:                         ; preds = %redefine_start1.if.then42, %redefine_start1.if.end39
  %183 = load float* @redefine_start.fuel_press_integrator, align 4
  %184 = load float* @zero_point_zero_zero_one, align 4
  %185 = load float* %42, align 4
  %186 = fmul float %184, %185
  %187 = fadd float %183, %186
  store float %187, float* @fuel_pump_cmd, align 4
  %188 = load float* @fuel_pump_cmd, align 4
  %189 = load float* @CMD_FUEL_RAMP_END, align 4
  %190 = fcmp olt float %188, %189
  br i1 %190, label %redefine_start1.if.then48, label %redefine_start1.if.end49

redefine_start1.if.then58:                        ; preds = %redefine_start1.if.else55
  store float 0.000000e+00, float* @fuel_press_setpoint, align 4
  %191 = load float* %40, align 4
  store float %191, float* @nh_setpoint, align 4
  %192 = load float* @fuel_pump_cmd, align 4
  store float %192, float* @redefine_start.fuel_pump_integrator, align 4
  %193 = load float* %40, align 4
  %194 = load float* %41, align 4
  %195 = fsub float %193, %194
  %196 = load i32* @two, align 4
  %197 = sitofp i32 %196 to float
  %198 = fmul float %195, %197
  store float %198, float* @redefine_start.dnhqdt, align 4
  store i32 4, i32* @operation_mode, align 4
  br label %redefine_start1.if.end120

redefine_start1.if.end119:                        ; preds = %redefine_start1.if.end117, %redefine_start1.if.else118
  br label %redefine_start1.if.end120

redefine_start1.if.then48:                        ; preds = %redefine_start1.if.end43
  %199 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %199, float* @fuel_pump_cmd, align 4
  br label %redefine_start1.if.end49

redefine_start1.if.then54:                        ; preds = %redefine_start1.if.else51
  br label %redefine_start1.if.end121

redefine_start1.if.then7:                         ; preds = %redefine_start1.if.then5
  %200 = load float* @CMD_FUEL_RAMP_START, align 4
  %201 = load float* %40, align 4
  %202 = fsub float %201, 2.700000e+03
  %203 = load float* @CMD_FUEL_RAMP_END, align 4
  %204 = load float* @CMD_FUEL_RAMP_START, align 4
  %205 = fsub float %203, %204
  %206 = fmul float %202, %205
  %207 = fadd float %200, %206
  store float %207, float* @fuel_pump_cmd, align 4
  %208 = load float* @fuel_pump_cmd, align 4
  store float %208, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end50

redefine_start1.if.end49:                         ; preds = %redefine_start1.if.then48, %redefine_start1.if.end43
  br label %redefine_start1.if.end50

redefine_start1.if.end120:                        ; preds = %redefine_start1.if.end119, %redefine_start1.if.then58
  br label %redefine_start1.if.end121

redefine_start1.if.end121:                        ; preds = %redefine_start1.if.end120, %redefine_start1.if.then54
  br label %redefine_start1.if.end122

redefine_start1.if.end50:                         ; preds = %redefine_start1.if.end49, %redefine_start1.if.then7
  br label %redefine_start1.if.end122

redefine_start1.if.then2:                         ; preds = %redefine_start1.if.else
  br label %if.end123

redefine_start1.if.end122:                        ; preds = %redefine_start1.if.end50, %redefine_start1.if.end121
  br label %if.end123

redefine_start1.if.then:                          ; preds = %redefine_start1.entry
  store float 0.000000e+00, float* @fuel_pump_cmd, align 4
  %209 = load float* @fuel_pump_cmd, align 4
  br label %newName0

redefine_start1.return:                           ; No predecessors!
  ret void
}

define void @redefine_start2() {
redefine_start2.if.end123:
  br label %redefine_start2.return

redefine_start2.return:                           ; preds = %redefine_start2.if.end123
  ret void
}

define void @redefine_start3(float*, float*) {
redefine_start3.if.end124:
  %2 = load i32* bitcast (float* @redefine_start.fuel_press_integrator to i32*), align 4
  store i32 %2, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 0), align 4
  %3 = load i32* bitcast (float* @fuel_press_setpoint to i32*), align 4
  store i32 %3, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 1), align 4
  %4 = load i32* bitcast (float* @epsilon_global to i32*), align 4
  store i32 %4, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 2), align 4
  %5 = load i32* bitcast (float* @iTerm to i32*), align 4
  store i32 %5, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 3), align 4
  %6 = load i32* bitcast (float* @epsilon_modified to i32*), align 4
  store i32 %6, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 4), align 4
  %7 = load i32* bitcast (float* @dTerm_modified to i32*), align 4
  store i32 %7, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 5), align 4
  %8 = load i32* bitcast (float* @redefine_start.fuel_pump_integrator to i32*), align 4
  store i32 %8, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 6), align 4
  %9 = load i32* bitcast (float* @ramp_filter_memory to i32*), align 4
  store i32 %9, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 7), align 4
  %10 = bitcast float* %0 to i32*
  %11 = load i32* %10, align 4
  store i32 %11, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 8), align 4
  %12 = load i32* @stab_array_index, align 4
  store i32 %12, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 9), align 4
  %13 = bitcast float* %1 to i32*
  %14 = load i32* %13, align 4
  store i32 %14, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 10), align 4
  %15 = load i32* bitcast (float* @nh_idle to i32*), align 4
  store i32 %15, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 11), align 4
  br label %redefine_start3.return

redefine_start3.return:                           ; preds = %redefine_start3.if.end124
  ret void
}

define void @regulation_nh_init4(float*) {
regulation_nh_init4.newName01:
  %1 = load float* %0, align 4
  store float %1, float* @fuel_pump_integrator, align 4
  %2 = load float* @nh_setpoint, align 4
  store float %2, float* @ramp_filter_memory, align 4
  br label %regulation_nh_init4.return

regulation_nh_init4.return:                       ; preds = %regulation_nh_init4.newName01
  ret void
}

define void @regulation_nh_init5(float*) {
regulation_nh_init5.entry:
  %1 = load float* %0
  %2 = alloca float, align 4, !ConsumedBy !16
  store float %1, float* %2, align 4
  %3 = load float* %2, align 4
  br label %newName0

regulation_nh_init5.return:                       ; No predecessors!
  ret void
}

define void @pid_init6(float*) {
pid_init6.entry:
  %1 = load float* %0
  %2 = alloca float, align 4
  store float %1, float* %2, align 4
  store float 0.000000e+00, float* @epsilon_global, align 4
  %3 = load float* %2, align 4
  store float %3, float* @iTerm, align 4
  store float 0.000000e+00, float* @epsilon_modified, align 4
  store float 0.000000e+00, float* @dTerm_modified, align 4
  br label %pid_init6.return

pid_init6.return:                                 ; preds = %pid_init6.entry
  ret void
}

attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }

!redefine.annotations = !{!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10, !11}

!0 = metadata !{metadata !"HyperOp", void ()* @redefine_start1, metadata !"Static"}
!1 = metadata !{metadata !"Entry", metadata !0}
!2 = metadata !{metadata !"HyperOp", void ()* @redefine_start2, metadata !"Static"}
!3 = metadata !{metadata !"Intermediate", metadata !2}
!4 = metadata !{metadata !"HyperOp", void (float*, float*)* @redefine_start3, metadata !"Static"}
!5 = metadata !{metadata !"Exit", metadata !4}
!6 = metadata !{metadata !"HyperOp", void (float*)* @regulation_nh_init4, metadata !"Static"}
!7 = metadata !{metadata !"Intermediate", metadata !6}
!8 = metadata !{metadata !"HyperOp", void (float*)* @regulation_nh_init5, metadata !"Static"}
!9 = metadata !{metadata !"Intermediate", metadata !8}
!10 = metadata !{metadata !"HyperOp", void (float*)* @pid_init6, metadata !"Static"}
!11 = metadata !{metadata !"Intermediate", metadata !10}
!12 = metadata !{metadata !13}
!13 = metadata !{metadata !4, metadata !"LocalReference", i32 0}
!14 = metadata !{metadata !15}
!15 = metadata !{metadata !4, metadata !"LocalReference", i32 1}
!16 = metadata !{metadata !17}
!17 = metadata !{metadata !6, metadata !"LocalReference", i32 0}

-----------Patching created function regulation_nh_init5--------------
accumulated bbs:
entry,

----------Adding consumed by metadata----------
cloned inst second:  %43 = load float* @fuel_pump_cmd, align 4
producer function:redefine_start1
how many clones?1
added metadata on instruction that belongs to parent redefine_start1 and is mapped to slot 0 when the function has 1 and is of type:1:  %0 = alloca float, align 4, !ConsumedBy !12

----------Dealing with conditional branches from other HyperOps----------
number of conditional jump sources:1
working on conditional branch instruction:  br i1 %cmp, label %if.then, label %if.else
target bb:
newName0:                                         ; preds = %redefine_start1.if.then, %if.then
  call void @regulation_nh_init(float %43)
  br label %if.end124

producer of data:redefine_start and its clone?redefine_start1, is it static?1

----------Dealing with unconditional branches from other HyperOps----------
number of unconditional jump sources:1
what was callsite size earlier??1

----------Adding a predicate from entry hyperop if there are no incoming edges to the hyperop----------
after patching function regulation_nh_init5, module:; ModuleID = './Compilation_Error/startuppump_original.ll'
target datalayout = "E-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-n32"
target triple = "redefine"

@CMD_FUEL_RAMP_START = global float 0x3FC1EB8520000000, align 4
@CMD_FUEL_RAMP_END = global float 0x3FC1EB8520000000, align 4
@NH_IDLE_GROUND = global float 5.350000e+01, align 4
@NL_IDLE_GROUND = global float 3.000000e+01, align 4
@zero_point_zero_zero_one_four = global float 0x3F56F00680000000, align 4
@zero_point_zero_zero_one = global float 0x3F50624DE0000000, align 4
@one_point_o = global float 1.000000e+00, align 4
@zero_point_one_eight = global float 0x3FC70A3D80000000, align 4
@NL_REF = global float 4.363600e+04, align 4
@NH_REF = global float 5.071900e+04, align 4
@hundred = global float 1.000000e+02, align 4
@zero_point_zero_two = global float 0x3F947AE140000000, align 4
@zero_point_zero_two_five = global float 0x3F999999A0000000, align 4
@zero_point_nine_nine_five = global float 0x3FEFD70A40000000, align 4
@zero_point_one = global float 0x3FB99999A0000000, align 4
@zero_point_zero_one = global float 0x3F847AE140000000, align 4
@exp1 = global float 0x3E8AD7F2A0000000, align 4
@exp3 = global float 0x3F0A36E2E0000000, align 4
@ten = global i32 10, align 4
@fifty = global i32 50, align 4
@thirty = global i32 30, align 4
@twenty = global i32 20, align 4
@two = global i32 2, align 4
@epsilon_global = common global float 0.000000e+00, align 4
@iTerm = common global float 0.000000e+00, align 4
@epsilon_modified = common global float 0.000000e+00, align 4
@dTerm_modified = common global float 0.000000e+00, align 4
@fuel_pump_integrator = common global float 0.000000e+00, align 4
@nh_setpoint = common global float 0.000000e+00, align 4
@ramp_filter_memory = common global float 0.000000e+00, align 4
@redefine_in_parameters = common global [16 x i32] zeroinitializer, align 4
@redefine_start.fuel_press_integrator = internal global float 0.000000e+00, align 4
@redefine_start.fuel_pump_integrator = internal global float 0.000000e+00, align 4
@redefine_start.dnhqdt = internal global float 0.000000e+00, align 4
@fuel_pump_cmd = common global float 0.000000e+00, align 4
@t_fuel_press_control = common global i32 0, align 4
@fuel_press_setpoint = common global float 0.000000e+00, align 4
@operation_mode = common global i32 0, align 4
@redefine_in_stab = common global [50 x i32] zeroinitializer, align 4
@stab_array_index = common global i32 0, align 4
@nh_idle = common global float 0.000000e+00, align 4
@redefine_out_parameters = common global [12 x i32] zeroinitializer, align 4
@nh_average = common global float 0.000000e+00, align 4

; Function Attrs: nounwind
define void @pid_init(float %iTermtemp) #0 {
entry:
  %iTermtemp.addr = alloca float, align 4
  store float %iTermtemp, float* %iTermtemp.addr, align 4
  store float 0.000000e+00, float* @epsilon_global, align 4
  %0 = load float* %iTermtemp.addr, align 4
  store float %0, float* @iTerm, align 4
  store float 0.000000e+00, float* @epsilon_modified, align 4
  store float 0.000000e+00, float* @dTerm_modified, align 4
  ret void
}

; Function Attrs: nounwind
define void @regulation_nh_init(float %cmd) #0 {
entry:
  %cmd.addr = alloca float, align 4
  store float %cmd, float* %cmd.addr, align 4
  %0 = load float* %cmd.addr, align 4
  br label %newName0

newName0:                                         ; preds = %regulation_nh_init5.entry, %entry
  call void @pid_init(float %0)
  br label %newName01

newName01:                                        ; preds = %newName0
  %1 = load float* %cmd.addr, align 4
  store float %1, float* @fuel_pump_integrator, align 4
  %2 = load float* @nh_setpoint, align 4
  store float %2, float* @ramp_filter_memory, align 4
  ret void
}

; Function Attrs: nounwind
define void @redefine_start() #0 {
entry:
  %0 = getelementptr inbounds float* @CMD_FUEL_RAMP_START, i32 0
  store float 0x3FC1EB8520000000, float* %0, align 4
  %1 = getelementptr inbounds float* @CMD_FUEL_RAMP_END, i32 0
  store float 0x3FC1EB8520000000, float* %1, align 4
  %2 = getelementptr inbounds float* @NH_IDLE_GROUND, i32 0
  store float 5.350000e+01, float* %2, align 4
  %3 = getelementptr inbounds float* @NL_IDLE_GROUND, i32 0
  store float 3.000000e+01, float* %3, align 4
  %4 = getelementptr inbounds float* @zero_point_zero_zero_one_four, i32 0
  store float 0x3F56F00680000000, float* %4, align 4
  %5 = getelementptr inbounds float* @zero_point_zero_zero_one, i32 0
  store float 0x3F50624DE0000000, float* %5, align 4
  %6 = getelementptr inbounds float* @one_point_o, i32 0
  store float 1.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds float* @zero_point_one_eight, i32 0
  store float 0x3FC70A3D80000000, float* %7, align 4
  %8 = getelementptr inbounds float* @NL_REF, i32 0
  store float 4.363600e+04, float* %8, align 4
  %9 = getelementptr inbounds float* @NH_REF, i32 0
  store float 5.071900e+04, float* %9, align 4
  %10 = getelementptr inbounds float* @hundred, i32 0
  store float 1.000000e+02, float* %10, align 4
  %11 = getelementptr inbounds float* @zero_point_zero_two, i32 0
  store float 0x3F947AE140000000, float* %11, align 4
  %12 = getelementptr inbounds float* @zero_point_zero_two_five, i32 0
  store float 0x3F999999A0000000, float* %12, align 4
  %13 = getelementptr inbounds float* @zero_point_nine_nine_five, i32 0
  store float 0x3FEFD70A40000000, float* %13, align 4
  %14 = getelementptr inbounds float* @zero_point_one, i32 0
  store float 0x3FB99999A0000000, float* %14, align 4
  %15 = getelementptr inbounds float* @zero_point_zero_one, i32 0
  store float 0x3F847AE140000000, float* %15, align 4
  %16 = getelementptr inbounds float* @exp1, i32 0
  store float 0x3E8AD7F2A0000000, float* %16, align 4
  %17 = getelementptr inbounds float* @exp3, i32 0
  store float 0x3F0A36E2E0000000, float* %17, align 4
  %18 = getelementptr inbounds i32* @ten, i32 0
  store i32 10, i32* %18, align 4
  %19 = getelementptr inbounds i32* @fifty, i32 0
  store i32 50, i32* %19, align 4
  %20 = getelementptr inbounds i32* @thirty, i32 0
  store i32 30, i32* %20, align 4
  %21 = getelementptr inbounds i32* @twenty, i32 0
  store i32 20, i32* %21, align 4
  %22 = getelementptr inbounds i32* @two, i32 0
  store i32 2, i32* %22, align 4
  %23 = getelementptr inbounds float* @epsilon_global, i32 0
  store float 0.000000e+00, float* %23, align 4
  %24 = getelementptr inbounds float* @iTerm, i32 0
  store float 0.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds float* @epsilon_modified, i32 0
  store float 0.000000e+00, float* %25, align 4
  %26 = getelementptr inbounds float* @dTerm_modified, i32 0
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds float* @fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds float* @nh_setpoint, i32 0
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds float* @ramp_filter_memory, i32 0
  store float 0.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds float* @redefine_start.fuel_press_integrator, i32 0
  store float 0.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds float* @redefine_start.fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %31, align 4
  %32 = getelementptr inbounds float* @redefine_start.dnhqdt, i32 0
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds float* @fuel_pump_cmd, i32 0
  store float 0.000000e+00, float* %33, align 4
  %34 = getelementptr inbounds i32* @t_fuel_press_control, i32 0
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds float* @fuel_press_setpoint, i32 0
  store float 0.000000e+00, float* %35, align 4
  %36 = getelementptr inbounds i32* @operation_mode, i32 0
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds i32* @stab_array_index, i32 0
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds float* @nh_idle, i32 0
  store float 0.000000e+00, float* %38, align 4
  %39 = getelementptr inbounds float* @nh_average, i32 0
  store float 0.000000e+00, float* %39, align 4
  %current_nh = alloca float, align 4
  %index_nh = alloca float, align 4
  %epsilon = alloca float, align 4
  %nh_average = alloca float, align 4
  %i = alloca i32, align 4
  %startup_time = alloca i32, align 4
  %fuel_press = alloca float, align 4
  %40 = load float* bitcast ([16 x i32]* @redefine_in_parameters to float*), align 4
  store float %40, float* %current_nh, align 4
  %41 = load float* bitcast (i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 5) to float*), align 4
  store float %41, float* %index_nh, align 4
  %42 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 1), align 4
  %cmp = icmp eq i32 %42, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* @fuel_pump_cmd, align 4
  %43 = load float* @fuel_pump_cmd, align 4
  br label %newName0

newName0:                                         ; preds = %if.then
  call void @regulation_nh_init(float %43)
  br label %if.end124

if.else:                                          ; preds = %entry
  %44 = load float* %current_nh, align 4
  %cmp1 = fcmp olt float %44, 2.700000e+03
  br i1 %cmp1, label %if.then2, label %if.else3

if.then2:                                         ; preds = %if.else
  br label %if.end123

if.else3:                                         ; preds = %if.else
  %45 = load float* %current_nh, align 4
  %cmp4 = fcmp olt float %45, 1.500000e+04
  br i1 %cmp4, label %if.then5, label %if.else51

if.then5:                                         ; preds = %if.else3
  %46 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 2), align 4
  %cmp6 = icmp eq i32 %46, -1
  br i1 %cmp6, label %if.then7, label %if.else9

if.then7:                                         ; preds = %if.then5
  %47 = load float* @CMD_FUEL_RAMP_START, align 4
  %48 = load float* %current_nh, align 4
  %sub = fsub float %48, 2.700000e+03
  %49 = load float* @CMD_FUEL_RAMP_END, align 4
  %50 = load float* @CMD_FUEL_RAMP_START, align 4
  %sub8 = fsub float %49, %50
  %mul = fmul float %sub, %sub8
  %add = fadd float %47, %mul
  store float %add, float* @fuel_pump_cmd, align 4
  %51 = load float* @fuel_pump_cmd, align 4
  store float %51, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end50

if.else9:                                         ; preds = %if.then5
  %52 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 14), align 4
  store i32 %52, i32* %startup_time, align 4
  %53 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 15), align 4
  %conv = sitofp i32 %53 to float
  store float %conv, float* %fuel_press, align 4
  %54 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 3), align 4
  %cmp10 = icmp eq i32 %54, -1
  br i1 %cmp10, label %if.then12, label %if.else13

if.then12:                                        ; preds = %if.else9
  %55 = load i32* %startup_time, align 4
  store i32 %55, i32* @t_fuel_press_control, align 4
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %if.end32

if.else13:                                        ; preds = %if.else9
  %56 = load i32* %startup_time, align 4
  %57 = load i32* @t_fuel_press_control, align 4
  %sub14 = sub nsw i32 %56, %57
  %58 = load i32* @ten, align 4
  %59 = load i32* @fifty, align 4
  %mul15 = mul nsw i32 %58, %59
  %cmp16 = icmp slt i32 %sub14, %mul15
  br i1 %cmp16, label %if.then18, label %if.else19

if.then18:                                        ; preds = %if.else13
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %if.end31

if.else19:                                        ; preds = %if.else13
  %60 = load i32* %startup_time, align 4
  %61 = load i32* @t_fuel_press_control, align 4
  %sub20 = sub nsw i32 %60, %61
  %62 = load i32* @thirty, align 4
  %63 = load i32* @fifty, align 4
  %mul21 = mul nsw i32 %62, %63
  %cmp22 = icmp slt i32 %sub20, %mul21
  br i1 %cmp22, label %if.then24, label %if.else30

if.then24:                                        ; preds = %if.else19
  %64 = load float* @zero_point_one_eight, align 4
  %65 = load i32* %startup_time, align 4
  %66 = load i32* @t_fuel_press_control, align 4
  %67 = load i32* @ten, align 4
  %68 = load i32* @fifty, align 4
  %mul25 = mul nsw i32 %67, %68
  %add26 = add nsw i32 %66, %mul25
  %sub27 = sub nsw i32 %65, %add26
  %conv28 = sitofp i32 %sub27 to float
  %add29 = fadd float %64, %conv28
  store float %add29, float* @fuel_press_setpoint, align 4
  br label %if.end

if.else30:                                        ; preds = %if.else19
  store float 1.000000e+00, float* @fuel_press_setpoint, align 4
  br label %if.end

if.end:                                           ; preds = %if.else30, %if.then24
  br label %if.end31

if.end31:                                         ; preds = %if.end, %if.then18
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then12
  %69 = load float* @fuel_press_setpoint, align 4
  %70 = load float* %fuel_press, align 4
  %sub33 = fsub float %69, %70
  store float %sub33, float* %epsilon, align 4
  %71 = load float* @redefine_start.fuel_press_integrator, align 4
  %72 = load float* %epsilon, align 4
  %73 = load float* @zero_point_zero_zero_one_four, align 4
  %mul34 = fmul float %72, %73
  %add35 = fadd float %71, %mul34
  store float %add35, float* @redefine_start.fuel_press_integrator, align 4
  %74 = load float* @redefine_start.fuel_press_integrator, align 4
  %75 = load float* @zero_point_zero_two_five, align 4
  %cmp36 = fcmp ogt float %74, %75
  br i1 %cmp36, label %if.then38, label %if.end39

if.then38:                                        ; preds = %if.end32
  store float 2.500000e-01, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end39

if.end39:                                         ; preds = %if.then38, %if.end32
  %76 = load float* @redefine_start.fuel_press_integrator, align 4
  %77 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp40 = fcmp olt float %76, %77
  br i1 %cmp40, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.end39
  %78 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %78, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.then42, %if.end39
  %79 = load float* @redefine_start.fuel_press_integrator, align 4
  %80 = load float* @zero_point_zero_zero_one, align 4
  %81 = load float* %epsilon, align 4
  %mul44 = fmul float %80, %81
  %add45 = fadd float %79, %mul44
  store float %add45, float* @fuel_pump_cmd, align 4
  %82 = load float* @fuel_pump_cmd, align 4
  %83 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp46 = fcmp olt float %82, %83
  br i1 %cmp46, label %if.then48, label %if.end49

if.then48:                                        ; preds = %if.end43
  %84 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %84, float* @fuel_pump_cmd, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.then48, %if.end43
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then7
  br label %if.end122

if.else51:                                        ; preds = %if.else3
  %85 = load float* %current_nh, align 4
  %cmp52 = fcmp olt float %85, 1.500000e+04
  br i1 %cmp52, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.else51
  br label %if.end121

if.else55:                                        ; preds = %if.else51
  %86 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 4), align 4
  store i32 %86, i32* @operation_mode, align 4
  %87 = load i32* @operation_mode, align 4
  %cmp56 = icmp eq i32 %87, 2
  br i1 %cmp56, label %if.then58, label %if.else62

if.then58:                                        ; preds = %if.else55
  store float 0.000000e+00, float* @fuel_press_setpoint, align 4
  %88 = load float* %current_nh, align 4
  store float %88, float* @nh_setpoint, align 4
  %89 = load float* @fuel_pump_cmd, align 4
  store float %89, float* @redefine_start.fuel_pump_integrator, align 4
  %90 = load float* %current_nh, align 4
  %91 = load float* %index_nh, align 4
  %sub59 = fsub float %90, %91
  %92 = load i32* @two, align 4
  %conv60 = sitofp i32 %92 to float
  %mul61 = fmul float %sub59, %conv60
  store float %mul61, float* @redefine_start.dnhqdt, align 4
  store i32 4, i32* @operation_mode, align 4
  br label %if.end120

if.else62:                                        ; preds = %if.else55
  %93 = load i32* @operation_mode, align 4
  %cmp63 = icmp eq i32 %93, 4
  br i1 %cmp63, label %if.then65, label %if.else118

if.then65:                                        ; preds = %if.else62
  %94 = load float* @nh_setpoint, align 4
  %95 = load float* @NH_IDLE_GROUND, align 4
  %cmp66 = fcmp olt float %94, %95
  br i1 %cmp66, label %if.then68, label %if.else71

if.then68:                                        ; preds = %if.then65
  %96 = load float* @nh_setpoint, align 4
  %97 = load float* @zero_point_zero_two, align 4
  %98 = load float* @redefine_start.dnhqdt, align 4
  %mul69 = fmul float %97, %98
  %add70 = fadd float %96, %mul69
  store float %add70, float* @nh_setpoint, align 4
  br label %if.end74

if.else71:                                        ; preds = %if.then65
  %99 = load float* @nh_setpoint, align 4
  %100 = load float* @zero_point_zero_two, align 4
  %101 = load float* @redefine_start.dnhqdt, align 4
  %mul72 = fmul float %100, %101
  %sub73 = fsub float %99, %mul72
  store float %sub73, float* @nh_setpoint, align 4
  br label %if.end74

if.end74:                                         ; preds = %if.else71, %if.then68
  %102 = load float* @nh_setpoint, align 4
  %103 = load float* %current_nh, align 4
  %sub75 = fsub float %102, %103
  store float %sub75, float* %epsilon, align 4
  %104 = load float* @redefine_start.fuel_pump_integrator, align 4
  %105 = load float* %epsilon, align 4
  %106 = load float* @exp1, align 4
  %mul76 = fmul float %105, %106
  %add77 = fadd float %104, %mul76
  store float %add77, float* @redefine_start.fuel_pump_integrator, align 4
  %107 = load float* @redefine_start.fuel_pump_integrator, align 4
  %108 = load float* @zero_point_zero_two_five, align 4
  %cmp78 = fcmp ogt float %107, %108
  br i1 %cmp78, label %if.then80, label %if.end81

if.then80:                                        ; preds = %if.end74
  store float 2.500000e-01, float* @redefine_start.fuel_pump_integrator, align 4
  br label %if.end81

if.end81:                                         ; preds = %if.then80, %if.end74
  %109 = load float* @redefine_start.fuel_pump_integrator, align 4
  %110 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp82 = fcmp olt float %109, %110
  br i1 %cmp82, label %if.then84, label %if.end85

if.then84:                                        ; preds = %if.end81
  %111 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %111, float* @redefine_start.fuel_pump_integrator, align 4
  br label %if.end85

if.end85:                                         ; preds = %if.then84, %if.end81
  %112 = load float* @redefine_start.fuel_pump_integrator, align 4
  %113 = load float* @exp3, align 4
  %114 = load float* %epsilon, align 4
  %mul86 = fmul float %113, %114
  %add87 = fadd float %112, %mul86
  store float %add87, float* @fuel_pump_cmd, align 4
  %115 = load float* @fuel_pump_cmd, align 4
  %116 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp88 = fcmp olt float %115, %116
  br i1 %cmp88, label %if.then90, label %if.end91

if.then90:                                        ; preds = %if.end85
  %117 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %117, float* @fuel_pump_cmd, align 4
  br label %if.end91

if.end91:                                         ; preds = %if.then90, %if.end85
  %118 = load float* %current_nh, align 4
  %conv92 = fptosi float %118 to i32
  %119 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 6), align 4
  %arrayidx = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %119
  store i32 %conv92, i32* %arrayidx, align 4
  %120 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 7), align 4
  store i32 %120, i32* @stab_array_index, align 4
  %121 = load i32* @stab_array_index, align 4
  %cmp93 = icmp eq i32 %121, 50
  br i1 %cmp93, label %if.then95, label %if.end96

if.then95:                                        ; preds = %if.end91
  store i32 0, i32* @stab_array_index, align 4
  br label %if.end96

if.end96:                                         ; preds = %if.then95, %if.end91
  store float 0.000000e+00, float* %nh_average, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end96
  %122 = load i32* %i, align 4
  %cmp97 = icmp slt i32 %122, 50
  br i1 %cmp97, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %123 = load i32* %i, align 4
  %arrayidx99 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %123
  %124 = load i32* %arrayidx99, align 4
  %conv100 = sitofp i32 %124 to float
  %125 = load float* %nh_average, align 4
  %add101 = fadd float %125, %conv100
  store float %add101, float* %nh_average, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %126 = load i32* %i, align 4
  %inc = add nsw i32 %126, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %127 = load float* @NH_IDLE_GROUND, align 4
  store float %127, float* @nh_idle, align 4
  %128 = load float* %nh_average, align 4
  %129 = load float* @nh_idle, align 4
  %130 = load float* @NH_REF, align 4
  %mul102 = fmul float %129, %130
  %131 = load float* @hundred, align 4
  %mul103 = fmul float %mul102, %131
  %132 = load float* @zero_point_nine_nine_five, align 4
  %mul104 = fmul float %mul103, %132
  %cmp105 = fcmp oge float %128, %mul104
  br i1 %cmp105, label %land.lhs.true, label %if.end117

land.lhs.true:                                    ; preds = %for.end
  %133 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 8), align 4
  %tobool = icmp ne i32 %133, 0
  br i1 %tobool, label %if.end117, label %land.lhs.true107

land.lhs.true107:                                 ; preds = %land.lhs.true
  %134 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 9), align 4
  %tobool108 = icmp ne i32 %134, 0
  br i1 %tobool108, label %if.end117, label %land.lhs.true109

land.lhs.true109:                                 ; preds = %land.lhs.true107
  %135 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 10), align 4
  %tobool110 = icmp ne i32 %135, 0
  br i1 %tobool110, label %if.end117, label %land.lhs.true111

land.lhs.true111:                                 ; preds = %land.lhs.true109
  %136 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 11), align 4
  %tobool112 = icmp ne i32 %136, 0
  br i1 %tobool112, label %if.end117, label %land.lhs.true113

land.lhs.true113:                                 ; preds = %land.lhs.true111
  %137 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 12), align 4
  %cmp114 = icmp sle i32 %137, 10
  br i1 %cmp114, label %if.then116, label %if.end117

if.then116:                                       ; preds = %land.lhs.true113
  store i32 8, i32* @operation_mode, align 4
  br label %if.end117

if.end117:                                        ; preds = %if.then116, %land.lhs.true113, %land.lhs.true111, %land.lhs.true109, %land.lhs.true107, %land.lhs.true, %for.end
  br label %if.end119

if.else118:                                       ; preds = %if.else62
  store i32 16, i32* @operation_mode, align 4
  br label %if.end119

if.end119:                                        ; preds = %if.else118, %if.end117
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then58
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.then54
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.end50
  br label %if.end123

if.end123:                                        ; preds = %redefine_start1.if.end122, %redefine_start1.if.then2, %if.end122, %if.then2
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %newName0
  %138 = load i32* bitcast (float* @redefine_start.fuel_press_integrator to i32*), align 4
  store i32 %138, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 0), align 4
  %139 = load i32* bitcast (float* @fuel_press_setpoint to i32*), align 4
  store i32 %139, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 1), align 4
  %140 = load i32* bitcast (float* @epsilon_global to i32*), align 4
  store i32 %140, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 2), align 4
  %141 = load i32* bitcast (float* @iTerm to i32*), align 4
  store i32 %141, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 3), align 4
  %142 = load i32* bitcast (float* @epsilon_modified to i32*), align 4
  store i32 %142, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 4), align 4
  %143 = load i32* bitcast (float* @dTerm_modified to i32*), align 4
  store i32 %143, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 5), align 4
  %144 = load i32* bitcast (float* @redefine_start.fuel_pump_integrator to i32*), align 4
  store i32 %144, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 6), align 4
  %145 = load i32* bitcast (float* @ramp_filter_memory to i32*), align 4
  store i32 %145, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 7), align 4
  %146 = bitcast float* %current_nh to i32*
  %147 = load i32* %146, align 4
  store i32 %147, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 8), align 4
  %148 = load i32* @stab_array_index, align 4
  store i32 %148, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 9), align 4
  %149 = bitcast float* %nh_average to i32*
  %150 = load i32* %149, align 4
  store i32 %150, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 10), align 4
  %151 = load i32* bitcast (float* @nh_idle to i32*), align 4
  store i32 %151, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 11), align 4
  ret void
}

define void @redefine_start1() {
redefine_start1.entry:
  %0 = alloca i1, align 4, !Controls !12
  %1 = alloca float, align 4, !ConsumedBy !14
  %2 = getelementptr inbounds float* @CMD_FUEL_RAMP_START, i32 0
  store float 0x3FC1EB8520000000, float* %2, align 4
  %3 = getelementptr inbounds float* @CMD_FUEL_RAMP_END, i32 0
  store float 0x3FC1EB8520000000, float* %3, align 4
  %4 = getelementptr inbounds float* @NH_IDLE_GROUND, i32 0
  store float 5.350000e+01, float* %4, align 4
  %5 = getelementptr inbounds float* @NL_IDLE_GROUND, i32 0
  store float 3.000000e+01, float* %5, align 4
  %6 = getelementptr inbounds float* @zero_point_zero_zero_one_four, i32 0
  store float 0x3F56F00680000000, float* %6, align 4
  %7 = getelementptr inbounds float* @zero_point_zero_zero_one, i32 0
  store float 0x3F50624DE0000000, float* %7, align 4
  %8 = getelementptr inbounds float* @one_point_o, i32 0
  store float 1.000000e+00, float* %8, align 4
  %9 = getelementptr inbounds float* @zero_point_one_eight, i32 0
  store float 0x3FC70A3D80000000, float* %9, align 4
  %10 = getelementptr inbounds float* @NL_REF, i32 0
  store float 4.363600e+04, float* %10, align 4
  %11 = getelementptr inbounds float* @NH_REF, i32 0
  store float 5.071900e+04, float* %11, align 4
  %12 = getelementptr inbounds float* @hundred, i32 0
  store float 1.000000e+02, float* %12, align 4
  %13 = getelementptr inbounds float* @zero_point_zero_two, i32 0
  store float 0x3F947AE140000000, float* %13, align 4
  %14 = getelementptr inbounds float* @zero_point_zero_two_five, i32 0
  store float 0x3F999999A0000000, float* %14, align 4
  %15 = getelementptr inbounds float* @zero_point_nine_nine_five, i32 0
  store float 0x3FEFD70A40000000, float* %15, align 4
  %16 = getelementptr inbounds float* @zero_point_one, i32 0
  store float 0x3FB99999A0000000, float* %16, align 4
  %17 = getelementptr inbounds float* @zero_point_zero_one, i32 0
  store float 0x3F847AE140000000, float* %17, align 4
  %18 = getelementptr inbounds float* @exp1, i32 0
  store float 0x3E8AD7F2A0000000, float* %18, align 4
  %19 = getelementptr inbounds float* @exp3, i32 0
  store float 0x3F0A36E2E0000000, float* %19, align 4
  %20 = getelementptr inbounds i32* @ten, i32 0
  store i32 10, i32* %20, align 4
  %21 = getelementptr inbounds i32* @fifty, i32 0
  store i32 50, i32* %21, align 4
  %22 = getelementptr inbounds i32* @thirty, i32 0
  store i32 30, i32* %22, align 4
  %23 = getelementptr inbounds i32* @twenty, i32 0
  store i32 20, i32* %23, align 4
  %24 = getelementptr inbounds i32* @two, i32 0
  store i32 2, i32* %24, align 4
  %25 = getelementptr inbounds float* @epsilon_global, i32 0
  store float 0.000000e+00, float* %25, align 4
  %26 = getelementptr inbounds float* @iTerm, i32 0
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds float* @epsilon_modified, i32 0
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds float* @dTerm_modified, i32 0
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds float* @fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds float* @nh_setpoint, i32 0
  store float 0.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds float* @ramp_filter_memory, i32 0
  store float 0.000000e+00, float* %31, align 4
  %32 = getelementptr inbounds float* @redefine_start.fuel_press_integrator, i32 0
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds float* @redefine_start.fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %33, align 4
  %34 = getelementptr inbounds float* @redefine_start.dnhqdt, i32 0
  store float 0.000000e+00, float* %34, align 4
  %35 = getelementptr inbounds float* @fuel_pump_cmd, i32 0
  store float 0.000000e+00, float* %35, align 4
  %36 = getelementptr inbounds i32* @t_fuel_press_control, i32 0
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds float* @fuel_press_setpoint, i32 0
  store float 0.000000e+00, float* %37, align 4
  %38 = getelementptr inbounds i32* @operation_mode, i32 0
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds i32* @stab_array_index, i32 0
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds float* @nh_idle, i32 0
  store float 0.000000e+00, float* %40, align 4
  %41 = getelementptr inbounds float* @nh_average, i32 0
  store float 0.000000e+00, float* %41, align 4
  %42 = alloca float, align 4, !ConsumedBy !16
  %43 = alloca float, align 4
  %44 = alloca float, align 4
  %45 = alloca float, align 4, !ConsumedBy !18
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca float, align 4
  %49 = load float* bitcast ([16 x i32]* @redefine_in_parameters to float*), align 4
  store float %49, float* %42, align 4
  %50 = load float* bitcast (i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 5) to float*), align 4
  store float %50, float* %43, align 4
  %51 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 1), align 4
  %52 = icmp eq i32 %51, 0
  store i1 %52, i1* %0, align 4
  br i1 %52, label %redefine_start1.if.then, label %redefine_start1.if.else

redefine_start1.if.else:                          ; preds = %redefine_start1.entry
  %53 = load float* %42, align 4
  %54 = fcmp olt float %53, 2.700000e+03
  br i1 %54, label %redefine_start1.if.then2, label %redefine_start1.if.else3

redefine_start1.if.else3:                         ; preds = %redefine_start1.if.else
  %55 = load float* %42, align 4
  %56 = fcmp olt float %55, 1.500000e+04
  br i1 %56, label %redefine_start1.if.then5, label %redefine_start1.if.else51

redefine_start1.if.else51:                        ; preds = %redefine_start1.if.else3
  %57 = load float* %42, align 4
  %58 = fcmp olt float %57, 1.500000e+04
  br i1 %58, label %redefine_start1.if.then54, label %redefine_start1.if.else55

redefine_start1.if.else55:                        ; preds = %redefine_start1.if.else51
  %59 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 4), align 4
  store i32 %59, i32* @operation_mode, align 4
  %60 = load i32* @operation_mode, align 4
  %61 = icmp eq i32 %60, 2
  br i1 %61, label %redefine_start1.if.then58, label %redefine_start1.if.else62

redefine_start1.if.else62:                        ; preds = %redefine_start1.if.else55
  %62 = load i32* @operation_mode, align 4
  %63 = icmp eq i32 %62, 4
  br i1 %63, label %redefine_start1.if.then65, label %redefine_start1.if.else118

redefine_start1.if.then65:                        ; preds = %redefine_start1.if.else62
  %64 = load float* @nh_setpoint, align 4
  %65 = load float* @NH_IDLE_GROUND, align 4
  %66 = fcmp olt float %64, %65
  br i1 %66, label %redefine_start1.if.then68, label %redefine_start1.if.else71

redefine_start1.if.then68:                        ; preds = %redefine_start1.if.then65
  %67 = load float* @nh_setpoint, align 4
  %68 = load float* @zero_point_zero_two, align 4
  %69 = load float* @redefine_start.dnhqdt, align 4
  %70 = fmul float %68, %69
  %71 = fadd float %67, %70
  store float %71, float* @nh_setpoint, align 4
  br label %redefine_start1.if.end74

redefine_start1.if.else71:                        ; preds = %redefine_start1.if.then65
  %72 = load float* @nh_setpoint, align 4
  %73 = load float* @zero_point_zero_two, align 4
  %74 = load float* @redefine_start.dnhqdt, align 4
  %75 = fmul float %73, %74
  %76 = fsub float %72, %75
  store float %76, float* @nh_setpoint, align 4
  br label %redefine_start1.if.end74

redefine_start1.if.end74:                         ; preds = %redefine_start1.if.else71, %redefine_start1.if.then68
  %77 = load float* @nh_setpoint, align 4
  %78 = load float* %42, align 4
  %79 = fsub float %77, %78
  store float %79, float* %44, align 4
  %80 = load float* @redefine_start.fuel_pump_integrator, align 4
  %81 = load float* %44, align 4
  %82 = load float* @exp1, align 4
  %83 = fmul float %81, %82
  %84 = fadd float %80, %83
  store float %84, float* @redefine_start.fuel_pump_integrator, align 4
  %85 = load float* @redefine_start.fuel_pump_integrator, align 4
  %86 = load float* @zero_point_zero_two_five, align 4
  %87 = fcmp ogt float %85, %86
  br i1 %87, label %redefine_start1.if.then80, label %redefine_start1.if.end81

redefine_start1.if.then80:                        ; preds = %redefine_start1.if.end74
  store float 2.500000e-01, float* @redefine_start.fuel_pump_integrator, align 4
  br label %redefine_start1.if.end81

redefine_start1.if.end81:                         ; preds = %redefine_start1.if.then80, %redefine_start1.if.end74
  %88 = load float* @redefine_start.fuel_pump_integrator, align 4
  %89 = load float* @CMD_FUEL_RAMP_END, align 4
  %90 = fcmp olt float %88, %89
  br i1 %90, label %redefine_start1.if.then84, label %redefine_start1.if.end85

redefine_start1.if.then84:                        ; preds = %redefine_start1.if.end81
  %91 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %91, float* @redefine_start.fuel_pump_integrator, align 4
  br label %redefine_start1.if.end85

redefine_start1.if.end85:                         ; preds = %redefine_start1.if.then84, %redefine_start1.if.end81
  %92 = load float* @redefine_start.fuel_pump_integrator, align 4
  %93 = load float* @exp3, align 4
  %94 = load float* %44, align 4
  %95 = fmul float %93, %94
  %96 = fadd float %92, %95
  store float %96, float* @fuel_pump_cmd, align 4
  %97 = load float* @fuel_pump_cmd, align 4
  %98 = load float* @CMD_FUEL_RAMP_END, align 4
  %99 = fcmp olt float %97, %98
  br i1 %99, label %redefine_start1.if.then90, label %redefine_start1.if.end91

redefine_start1.if.then90:                        ; preds = %redefine_start1.if.end85
  %100 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %100, float* @fuel_pump_cmd, align 4
  br label %redefine_start1.if.end91

redefine_start1.if.then5:                         ; preds = %redefine_start1.if.else3
  %101 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 2), align 4
  %102 = icmp eq i32 %101, -1
  br i1 %102, label %redefine_start1.if.then7, label %redefine_start1.if.else9

redefine_start1.if.end91:                         ; preds = %redefine_start1.if.then90, %redefine_start1.if.end85
  %103 = load float* %42, align 4
  %104 = fptosi float %103 to i32
  %105 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 6), align 4
  %106 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %105
  store i32 %104, i32* %106, align 4
  %107 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 7), align 4
  store i32 %107, i32* @stab_array_index, align 4
  %108 = load i32* @stab_array_index, align 4
  %109 = icmp eq i32 %108, 50
  br i1 %109, label %redefine_start1.if.then95, label %redefine_start1.if.end96

redefine_start1.if.else9:                         ; preds = %redefine_start1.if.then5
  %110 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 14), align 4
  store i32 %110, i32* %47, align 4
  %111 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 15), align 4
  %112 = sitofp i32 %111 to float
  store float %112, float* %48, align 4
  %113 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 3), align 4
  %114 = icmp eq i32 %113, -1
  br i1 %114, label %redefine_start1.if.then12, label %redefine_start1.if.else13

redefine_start1.if.then95:                        ; preds = %redefine_start1.if.end91
  store i32 0, i32* @stab_array_index, align 4
  br label %redefine_start1.if.end96

redefine_start1.if.end96:                         ; preds = %redefine_start1.if.then95, %redefine_start1.if.end91
  store float 0.000000e+00, float* %45, align 4
  store i32 0, i32* %46, align 4
  br label %redefine_start1.for.cond

redefine_start1.if.else13:                        ; preds = %redefine_start1.if.else9
  %115 = load i32* %47, align 4
  %116 = load i32* @t_fuel_press_control, align 4
  %117 = sub nsw i32 %115, %116
  %118 = load i32* @ten, align 4
  %119 = load i32* @fifty, align 4
  %120 = mul nsw i32 %118, %119
  %121 = icmp slt i32 %117, %120
  br i1 %121, label %redefine_start1.if.then18, label %redefine_start1.if.else19

redefine_start1.for.cond:                         ; preds = %redefine_start1.for.inc, %redefine_start1.if.end96
  %122 = load i32* %46, align 4
  %123 = icmp slt i32 %122, 50
  br i1 %123, label %redefine_start1.for.body, label %redefine_start1.for.end

redefine_start1.for.body:                         ; preds = %redefine_start1.for.cond
  %124 = load i32* %46, align 4
  %125 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %124
  %126 = load i32* %125, align 4
  %127 = sitofp i32 %126 to float
  %128 = load float* %45, align 4
  %129 = fadd float %128, %127
  store float %129, float* %45, align 4
  br label %redefine_start1.for.inc

redefine_start1.for.inc:                          ; preds = %redefine_start1.for.body
  %130 = load i32* %46, align 4
  %131 = add nsw i32 %130, 1
  store i32 %131, i32* %46, align 4
  br label %redefine_start1.for.cond

redefine_start1.if.else19:                        ; preds = %redefine_start1.if.else13
  %132 = load i32* %47, align 4
  %133 = load i32* @t_fuel_press_control, align 4
  %134 = sub nsw i32 %132, %133
  %135 = load i32* @thirty, align 4
  %136 = load i32* @fifty, align 4
  %137 = mul nsw i32 %135, %136
  %138 = icmp slt i32 %134, %137
  br i1 %138, label %redefine_start1.if.then24, label %redefine_start1.if.else30

redefine_start1.for.end:                          ; preds = %redefine_start1.for.cond
  %139 = load float* @NH_IDLE_GROUND, align 4
  store float %139, float* @nh_idle, align 4
  %140 = load float* %45, align 4
  %141 = load float* @nh_idle, align 4
  %142 = load float* @NH_REF, align 4
  %143 = fmul float %141, %142
  %144 = load float* @hundred, align 4
  %145 = fmul float %143, %144
  %146 = load float* @zero_point_nine_nine_five, align 4
  %147 = fmul float %145, %146
  %148 = fcmp oge float %140, %147
  br i1 %148, label %redefine_start1.land.lhs.true, label %redefine_start1.if.end117

redefine_start1.if.then24:                        ; preds = %redefine_start1.if.else19
  %149 = load float* @zero_point_one_eight, align 4
  %150 = load i32* %47, align 4
  %151 = load i32* @t_fuel_press_control, align 4
  %152 = load i32* @ten, align 4
  %153 = load i32* @fifty, align 4
  %154 = mul nsw i32 %152, %153
  %155 = add nsw i32 %151, %154
  %156 = sub nsw i32 %150, %155
  %157 = sitofp i32 %156 to float
  %158 = fadd float %149, %157
  store float %158, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end

redefine_start1.if.else30:                        ; preds = %redefine_start1.if.else19
  store float 1.000000e+00, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end

redefine_start1.if.then18:                        ; preds = %redefine_start1.if.else13
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end31

redefine_start1.land.lhs.true:                    ; preds = %redefine_start1.for.end
  %159 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 8), align 4
  %160 = icmp ne i32 %159, 0
  br i1 %160, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true107

redefine_start1.if.end:                           ; preds = %redefine_start1.if.else30, %redefine_start1.if.then24
  br label %redefine_start1.if.end31

redefine_start1.if.then12:                        ; preds = %redefine_start1.if.else9
  %161 = load i32* %47, align 4
  store i32 %161, i32* @t_fuel_press_control, align 4
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end32

redefine_start1.if.end31:                         ; preds = %redefine_start1.if.end, %redefine_start1.if.then18
  br label %redefine_start1.if.end32

redefine_start1.land.lhs.true107:                 ; preds = %redefine_start1.land.lhs.true
  %162 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 9), align 4
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true109

redefine_start1.if.end32:                         ; preds = %redefine_start1.if.end31, %redefine_start1.if.then12
  %164 = load float* @fuel_press_setpoint, align 4
  %165 = load float* %48, align 4
  %166 = fsub float %164, %165
  store float %166, float* %44, align 4
  %167 = load float* @redefine_start.fuel_press_integrator, align 4
  %168 = load float* %44, align 4
  %169 = load float* @zero_point_zero_zero_one_four, align 4
  %170 = fmul float %168, %169
  %171 = fadd float %167, %170
  store float %171, float* @redefine_start.fuel_press_integrator, align 4
  %172 = load float* @redefine_start.fuel_press_integrator, align 4
  %173 = load float* @zero_point_zero_two_five, align 4
  %174 = fcmp ogt float %172, %173
  br i1 %174, label %redefine_start1.if.then38, label %redefine_start1.if.end39

redefine_start1.land.lhs.true109:                 ; preds = %redefine_start1.land.lhs.true107
  %175 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 10), align 4
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true111

redefine_start1.if.then38:                        ; preds = %redefine_start1.if.end32
  store float 2.500000e-01, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end39

redefine_start1.land.lhs.true111:                 ; preds = %redefine_start1.land.lhs.true109
  %177 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 11), align 4
  %178 = icmp ne i32 %177, 0
  br i1 %178, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true113

redefine_start1.if.end39:                         ; preds = %redefine_start1.if.then38, %redefine_start1.if.end32
  %179 = load float* @redefine_start.fuel_press_integrator, align 4
  %180 = load float* @CMD_FUEL_RAMP_END, align 4
  %181 = fcmp olt float %179, %180
  br i1 %181, label %redefine_start1.if.then42, label %redefine_start1.if.end43

redefine_start1.land.lhs.true113:                 ; preds = %redefine_start1.land.lhs.true111
  %182 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 12), align 4
  %183 = icmp sle i32 %182, 10
  br i1 %183, label %redefine_start1.if.then116, label %redefine_start1.if.end117

redefine_start1.if.then42:                        ; preds = %redefine_start1.if.end39
  %184 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %184, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end43

redefine_start1.if.then116:                       ; preds = %redefine_start1.land.lhs.true113
  store i32 8, i32* @operation_mode, align 4
  br label %redefine_start1.if.end117

redefine_start1.if.else118:                       ; preds = %redefine_start1.if.else62
  store i32 16, i32* @operation_mode, align 4
  br label %redefine_start1.if.end119

redefine_start1.if.end117:                        ; preds = %redefine_start1.if.then116, %redefine_start1.land.lhs.true113, %redefine_start1.land.lhs.true111, %redefine_start1.land.lhs.true109, %redefine_start1.land.lhs.true107, %redefine_start1.land.lhs.true, %redefine_start1.for.end
  br label %redefine_start1.if.end119

redefine_start1.if.end43:                         ; preds = %redefine_start1.if.then42, %redefine_start1.if.end39
  %185 = load float* @redefine_start.fuel_press_integrator, align 4
  %186 = load float* @zero_point_zero_zero_one, align 4
  %187 = load float* %44, align 4
  %188 = fmul float %186, %187
  %189 = fadd float %185, %188
  store float %189, float* @fuel_pump_cmd, align 4
  %190 = load float* @fuel_pump_cmd, align 4
  %191 = load float* @CMD_FUEL_RAMP_END, align 4
  %192 = fcmp olt float %190, %191
  br i1 %192, label %redefine_start1.if.then48, label %redefine_start1.if.end49

redefine_start1.if.then58:                        ; preds = %redefine_start1.if.else55
  store float 0.000000e+00, float* @fuel_press_setpoint, align 4
  %193 = load float* %42, align 4
  store float %193, float* @nh_setpoint, align 4
  %194 = load float* @fuel_pump_cmd, align 4
  store float %194, float* @redefine_start.fuel_pump_integrator, align 4
  %195 = load float* %42, align 4
  %196 = load float* %43, align 4
  %197 = fsub float %195, %196
  %198 = load i32* @two, align 4
  %199 = sitofp i32 %198 to float
  %200 = fmul float %197, %199
  store float %200, float* @redefine_start.dnhqdt, align 4
  store i32 4, i32* @operation_mode, align 4
  br label %redefine_start1.if.end120

redefine_start1.if.end119:                        ; preds = %redefine_start1.if.end117, %redefine_start1.if.else118
  br label %redefine_start1.if.end120

redefine_start1.if.then48:                        ; preds = %redefine_start1.if.end43
  %201 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %201, float* @fuel_pump_cmd, align 4
  br label %redefine_start1.if.end49

redefine_start1.if.then54:                        ; preds = %redefine_start1.if.else51
  br label %redefine_start1.if.end121

redefine_start1.if.then7:                         ; preds = %redefine_start1.if.then5
  %202 = load float* @CMD_FUEL_RAMP_START, align 4
  %203 = load float* %42, align 4
  %204 = fsub float %203, 2.700000e+03
  %205 = load float* @CMD_FUEL_RAMP_END, align 4
  %206 = load float* @CMD_FUEL_RAMP_START, align 4
  %207 = fsub float %205, %206
  %208 = fmul float %204, %207
  %209 = fadd float %202, %208
  store float %209, float* @fuel_pump_cmd, align 4
  %210 = load float* @fuel_pump_cmd, align 4
  store float %210, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end50

redefine_start1.if.end49:                         ; preds = %redefine_start1.if.then48, %redefine_start1.if.end43
  br label %redefine_start1.if.end50

redefine_start1.if.end120:                        ; preds = %redefine_start1.if.end119, %redefine_start1.if.then58
  br label %redefine_start1.if.end121

redefine_start1.if.end121:                        ; preds = %redefine_start1.if.end120, %redefine_start1.if.then54
  br label %redefine_start1.if.end122

redefine_start1.if.end50:                         ; preds = %redefine_start1.if.end49, %redefine_start1.if.then7
  br label %redefine_start1.if.end122

redefine_start1.if.then2:                         ; preds = %redefine_start1.if.else
  br label %if.end123

redefine_start1.if.end122:                        ; preds = %redefine_start1.if.end50, %redefine_start1.if.end121
  br label %if.end123

redefine_start1.if.then:                          ; preds = %redefine_start1.entry
  store float 0.000000e+00, float* @fuel_pump_cmd, align 4
  %211 = load float* @fuel_pump_cmd, align 4
  store float %211, float* %1, align 4
  br label %redefine_start1.return

redefine_start1.return:                           ; preds = %redefine_start1.if.then
  ret void
}

define void @redefine_start2() {
redefine_start2.if.end123:
  br label %redefine_start2.return

redefine_start2.return:                           ; preds = %redefine_start2.if.end123
  ret void
}

define void @redefine_start3(float*, float*) {
redefine_start3.if.end124:
  %2 = load i32* bitcast (float* @redefine_start.fuel_press_integrator to i32*), align 4
  store i32 %2, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 0), align 4
  %3 = load i32* bitcast (float* @fuel_press_setpoint to i32*), align 4
  store i32 %3, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 1), align 4
  %4 = load i32* bitcast (float* @epsilon_global to i32*), align 4
  store i32 %4, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 2), align 4
  %5 = load i32* bitcast (float* @iTerm to i32*), align 4
  store i32 %5, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 3), align 4
  %6 = load i32* bitcast (float* @epsilon_modified to i32*), align 4
  store i32 %6, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 4), align 4
  %7 = load i32* bitcast (float* @dTerm_modified to i32*), align 4
  store i32 %7, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 5), align 4
  %8 = load i32* bitcast (float* @redefine_start.fuel_pump_integrator to i32*), align 4
  store i32 %8, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 6), align 4
  %9 = load i32* bitcast (float* @ramp_filter_memory to i32*), align 4
  store i32 %9, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 7), align 4
  %10 = bitcast float* %0 to i32*
  %11 = load i32* %10, align 4
  store i32 %11, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 8), align 4
  %12 = load i32* @stab_array_index, align 4
  store i32 %12, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 9), align 4
  %13 = bitcast float* %1 to i32*
  %14 = load i32* %13, align 4
  store i32 %14, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 10), align 4
  %15 = load i32* bitcast (float* @nh_idle to i32*), align 4
  store i32 %15, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 11), align 4
  br label %redefine_start3.return

redefine_start3.return:                           ; preds = %redefine_start3.if.end124
  ret void
}

define void @regulation_nh_init4(float*) {
regulation_nh_init4.newName01:
  %1 = load float* %0, align 4
  store float %1, float* @fuel_pump_integrator, align 4
  %2 = load float* @nh_setpoint, align 4
  store float %2, float* @ramp_filter_memory, align 4
  br label %regulation_nh_init4.return

regulation_nh_init4.return:                       ; preds = %regulation_nh_init4.newName01
  ret void
}

define void @regulation_nh_init5(float*) {
regulation_nh_init5.entry:
  %1 = load float* %0
  %2 = alloca float, align 4, !ConsumedBy !20
  store float %1, float* %2, align 4
  %3 = load float* %2, align 4
  br label %newName0

regulation_nh_init5.return:                       ; No predecessors!
  ret void
}

define void @pid_init6(float*) {
pid_init6.entry:
  %1 = load float* %0
  %2 = alloca float, align 4
  store float %1, float* %2, align 4
  store float 0.000000e+00, float* @epsilon_global, align 4
  %3 = load float* %2, align 4
  store float %3, float* @iTerm, align 4
  store float 0.000000e+00, float* @epsilon_modified, align 4
  store float 0.000000e+00, float* @dTerm_modified, align 4
  br label %pid_init6.return

pid_init6.return:                                 ; preds = %pid_init6.entry
  ret void
}

attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }

!redefine.annotations = !{!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10, !11}

!0 = metadata !{metadata !"HyperOp", void ()* @redefine_start1, metadata !"Static"}
!1 = metadata !{metadata !"Entry", metadata !0}
!2 = metadata !{metadata !"HyperOp", void ()* @redefine_start2, metadata !"Static"}
!3 = metadata !{metadata !"Intermediate", metadata !2}
!4 = metadata !{metadata !"HyperOp", void (float*, float*)* @redefine_start3, metadata !"Static"}
!5 = metadata !{metadata !"Exit", metadata !4}
!6 = metadata !{metadata !"HyperOp", void (float*)* @regulation_nh_init4, metadata !"Static"}
!7 = metadata !{metadata !"Intermediate", metadata !6}
!8 = metadata !{metadata !"HyperOp", void (float*)* @regulation_nh_init5, metadata !"Static"}
!9 = metadata !{metadata !"Intermediate", metadata !8}
!10 = metadata !{metadata !"HyperOp", void (float*)* @pid_init6, metadata !"Static"}
!11 = metadata !{metadata !"Intermediate", metadata !10}
!12 = metadata !{metadata !13}
!13 = metadata !{metadata !8, metadata !"1"}
!14 = metadata !{metadata !15}
!15 = metadata !{metadata !8, metadata !"LocalReference", i32 0}
!16 = metadata !{metadata !17}
!17 = metadata !{metadata !4, metadata !"LocalReference", i32 0}
!18 = metadata !{metadata !19}
!19 = metadata !{metadata !4, metadata !"LocalReference", i32 1}
!20 = metadata !{metadata !21}
!21 = metadata !{metadata !6, metadata !"LocalReference", i32 0}

-----------Patching created function pid_init6--------------
accumulated bbs:
entry,

----------Adding consumed by metadata----------
cloned inst second:  %cmd.addr = alloca float, align 4
producer function:regulation_nh_init5
how many clones?1
added metadata on instruction that belongs to parent regulation_nh_init5 and is mapped to slot 0 when the function has 1 and is of type:1:  %2 = alloca float, align 4, !ConsumedBy !12

----------Dealing with conditional branches from other HyperOps----------
number of conditional jump sources:0

----------Dealing with unconditional branches from other HyperOps----------
number of unconditional jump sources:1
what was callsite size earlier??2

----------Adding a predicate from entry hyperop if there are no incoming edges to the hyperop----------
after patching function pid_init6, module:; ModuleID = './Compilation_Error/startuppump_original.ll'
target datalayout = "E-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-n32"
target triple = "redefine"

@CMD_FUEL_RAMP_START = global float 0x3FC1EB8520000000, align 4
@CMD_FUEL_RAMP_END = global float 0x3FC1EB8520000000, align 4
@NH_IDLE_GROUND = global float 5.350000e+01, align 4
@NL_IDLE_GROUND = global float 3.000000e+01, align 4
@zero_point_zero_zero_one_four = global float 0x3F56F00680000000, align 4
@zero_point_zero_zero_one = global float 0x3F50624DE0000000, align 4
@one_point_o = global float 1.000000e+00, align 4
@zero_point_one_eight = global float 0x3FC70A3D80000000, align 4
@NL_REF = global float 4.363600e+04, align 4
@NH_REF = global float 5.071900e+04, align 4
@hundred = global float 1.000000e+02, align 4
@zero_point_zero_two = global float 0x3F947AE140000000, align 4
@zero_point_zero_two_five = global float 0x3F999999A0000000, align 4
@zero_point_nine_nine_five = global float 0x3FEFD70A40000000, align 4
@zero_point_one = global float 0x3FB99999A0000000, align 4
@zero_point_zero_one = global float 0x3F847AE140000000, align 4
@exp1 = global float 0x3E8AD7F2A0000000, align 4
@exp3 = global float 0x3F0A36E2E0000000, align 4
@ten = global i32 10, align 4
@fifty = global i32 50, align 4
@thirty = global i32 30, align 4
@twenty = global i32 20, align 4
@two = global i32 2, align 4
@epsilon_global = common global float 0.000000e+00, align 4
@iTerm = common global float 0.000000e+00, align 4
@epsilon_modified = common global float 0.000000e+00, align 4
@dTerm_modified = common global float 0.000000e+00, align 4
@fuel_pump_integrator = common global float 0.000000e+00, align 4
@nh_setpoint = common global float 0.000000e+00, align 4
@ramp_filter_memory = common global float 0.000000e+00, align 4
@redefine_in_parameters = common global [16 x i32] zeroinitializer, align 4
@redefine_start.fuel_press_integrator = internal global float 0.000000e+00, align 4
@redefine_start.fuel_pump_integrator = internal global float 0.000000e+00, align 4
@redefine_start.dnhqdt = internal global float 0.000000e+00, align 4
@fuel_pump_cmd = common global float 0.000000e+00, align 4
@t_fuel_press_control = common global i32 0, align 4
@fuel_press_setpoint = common global float 0.000000e+00, align 4
@operation_mode = common global i32 0, align 4
@redefine_in_stab = common global [50 x i32] zeroinitializer, align 4
@stab_array_index = common global i32 0, align 4
@nh_idle = common global float 0.000000e+00, align 4
@redefine_out_parameters = common global [12 x i32] zeroinitializer, align 4
@nh_average = common global float 0.000000e+00, align 4

; Function Attrs: nounwind
define void @pid_init(float %iTermtemp) #0 {
entry:
  %iTermtemp.addr = alloca float, align 4
  store float %iTermtemp, float* %iTermtemp.addr, align 4
  store float 0.000000e+00, float* @epsilon_global, align 4
  %0 = load float* %iTermtemp.addr, align 4
  store float %0, float* @iTerm, align 4
  store float 0.000000e+00, float* @epsilon_modified, align 4
  store float 0.000000e+00, float* @dTerm_modified, align 4
  ret void
}

; Function Attrs: nounwind
define void @regulation_nh_init(float %cmd) #0 {
entry:
  %cmd.addr = alloca float, align 4
  store float %cmd, float* %cmd.addr, align 4
  %0 = load float* %cmd.addr, align 4
  br label %newName0

newName0:                                         ; preds = %entry
  call void @pid_init(float %0)
  br label %newName01

newName01:                                        ; preds = %newName0
  %1 = load float* %cmd.addr, align 4
  store float %1, float* @fuel_pump_integrator, align 4
  %2 = load float* @nh_setpoint, align 4
  store float %2, float* @ramp_filter_memory, align 4
  ret void
}

; Function Attrs: nounwind
define void @redefine_start() #0 {
entry:
  %0 = getelementptr inbounds float* @CMD_FUEL_RAMP_START, i32 0
  store float 0x3FC1EB8520000000, float* %0, align 4
  %1 = getelementptr inbounds float* @CMD_FUEL_RAMP_END, i32 0
  store float 0x3FC1EB8520000000, float* %1, align 4
  %2 = getelementptr inbounds float* @NH_IDLE_GROUND, i32 0
  store float 5.350000e+01, float* %2, align 4
  %3 = getelementptr inbounds float* @NL_IDLE_GROUND, i32 0
  store float 3.000000e+01, float* %3, align 4
  %4 = getelementptr inbounds float* @zero_point_zero_zero_one_four, i32 0
  store float 0x3F56F00680000000, float* %4, align 4
  %5 = getelementptr inbounds float* @zero_point_zero_zero_one, i32 0
  store float 0x3F50624DE0000000, float* %5, align 4
  %6 = getelementptr inbounds float* @one_point_o, i32 0
  store float 1.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds float* @zero_point_one_eight, i32 0
  store float 0x3FC70A3D80000000, float* %7, align 4
  %8 = getelementptr inbounds float* @NL_REF, i32 0
  store float 4.363600e+04, float* %8, align 4
  %9 = getelementptr inbounds float* @NH_REF, i32 0
  store float 5.071900e+04, float* %9, align 4
  %10 = getelementptr inbounds float* @hundred, i32 0
  store float 1.000000e+02, float* %10, align 4
  %11 = getelementptr inbounds float* @zero_point_zero_two, i32 0
  store float 0x3F947AE140000000, float* %11, align 4
  %12 = getelementptr inbounds float* @zero_point_zero_two_five, i32 0
  store float 0x3F999999A0000000, float* %12, align 4
  %13 = getelementptr inbounds float* @zero_point_nine_nine_five, i32 0
  store float 0x3FEFD70A40000000, float* %13, align 4
  %14 = getelementptr inbounds float* @zero_point_one, i32 0
  store float 0x3FB99999A0000000, float* %14, align 4
  %15 = getelementptr inbounds float* @zero_point_zero_one, i32 0
  store float 0x3F847AE140000000, float* %15, align 4
  %16 = getelementptr inbounds float* @exp1, i32 0
  store float 0x3E8AD7F2A0000000, float* %16, align 4
  %17 = getelementptr inbounds float* @exp3, i32 0
  store float 0x3F0A36E2E0000000, float* %17, align 4
  %18 = getelementptr inbounds i32* @ten, i32 0
  store i32 10, i32* %18, align 4
  %19 = getelementptr inbounds i32* @fifty, i32 0
  store i32 50, i32* %19, align 4
  %20 = getelementptr inbounds i32* @thirty, i32 0
  store i32 30, i32* %20, align 4
  %21 = getelementptr inbounds i32* @twenty, i32 0
  store i32 20, i32* %21, align 4
  %22 = getelementptr inbounds i32* @two, i32 0
  store i32 2, i32* %22, align 4
  %23 = getelementptr inbounds float* @epsilon_global, i32 0
  store float 0.000000e+00, float* %23, align 4
  %24 = getelementptr inbounds float* @iTerm, i32 0
  store float 0.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds float* @epsilon_modified, i32 0
  store float 0.000000e+00, float* %25, align 4
  %26 = getelementptr inbounds float* @dTerm_modified, i32 0
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds float* @fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds float* @nh_setpoint, i32 0
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds float* @ramp_filter_memory, i32 0
  store float 0.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds float* @redefine_start.fuel_press_integrator, i32 0
  store float 0.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds float* @redefine_start.fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %31, align 4
  %32 = getelementptr inbounds float* @redefine_start.dnhqdt, i32 0
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds float* @fuel_pump_cmd, i32 0
  store float 0.000000e+00, float* %33, align 4
  %34 = getelementptr inbounds i32* @t_fuel_press_control, i32 0
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds float* @fuel_press_setpoint, i32 0
  store float 0.000000e+00, float* %35, align 4
  %36 = getelementptr inbounds i32* @operation_mode, i32 0
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds i32* @stab_array_index, i32 0
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds float* @nh_idle, i32 0
  store float 0.000000e+00, float* %38, align 4
  %39 = getelementptr inbounds float* @nh_average, i32 0
  store float 0.000000e+00, float* %39, align 4
  %current_nh = alloca float, align 4
  %index_nh = alloca float, align 4
  %epsilon = alloca float, align 4
  %nh_average = alloca float, align 4
  %i = alloca i32, align 4
  %startup_time = alloca i32, align 4
  %fuel_press = alloca float, align 4
  %40 = load float* bitcast ([16 x i32]* @redefine_in_parameters to float*), align 4
  store float %40, float* %current_nh, align 4
  %41 = load float* bitcast (i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 5) to float*), align 4
  store float %41, float* %index_nh, align 4
  %42 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 1), align 4
  %cmp = icmp eq i32 %42, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* @fuel_pump_cmd, align 4
  %43 = load float* @fuel_pump_cmd, align 4
  br label %newName0

newName0:                                         ; preds = %if.then
  call void @regulation_nh_init(float %43)
  br label %if.end124

if.else:                                          ; preds = %entry
  %44 = load float* %current_nh, align 4
  %cmp1 = fcmp olt float %44, 2.700000e+03
  br i1 %cmp1, label %if.then2, label %if.else3

if.then2:                                         ; preds = %if.else
  br label %if.end123

if.else3:                                         ; preds = %if.else
  %45 = load float* %current_nh, align 4
  %cmp4 = fcmp olt float %45, 1.500000e+04
  br i1 %cmp4, label %if.then5, label %if.else51

if.then5:                                         ; preds = %if.else3
  %46 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 2), align 4
  %cmp6 = icmp eq i32 %46, -1
  br i1 %cmp6, label %if.then7, label %if.else9

if.then7:                                         ; preds = %if.then5
  %47 = load float* @CMD_FUEL_RAMP_START, align 4
  %48 = load float* %current_nh, align 4
  %sub = fsub float %48, 2.700000e+03
  %49 = load float* @CMD_FUEL_RAMP_END, align 4
  %50 = load float* @CMD_FUEL_RAMP_START, align 4
  %sub8 = fsub float %49, %50
  %mul = fmul float %sub, %sub8
  %add = fadd float %47, %mul
  store float %add, float* @fuel_pump_cmd, align 4
  %51 = load float* @fuel_pump_cmd, align 4
  store float %51, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end50

if.else9:                                         ; preds = %if.then5
  %52 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 14), align 4
  store i32 %52, i32* %startup_time, align 4
  %53 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 15), align 4
  %conv = sitofp i32 %53 to float
  store float %conv, float* %fuel_press, align 4
  %54 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 3), align 4
  %cmp10 = icmp eq i32 %54, -1
  br i1 %cmp10, label %if.then12, label %if.else13

if.then12:                                        ; preds = %if.else9
  %55 = load i32* %startup_time, align 4
  store i32 %55, i32* @t_fuel_press_control, align 4
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %if.end32

if.else13:                                        ; preds = %if.else9
  %56 = load i32* %startup_time, align 4
  %57 = load i32* @t_fuel_press_control, align 4
  %sub14 = sub nsw i32 %56, %57
  %58 = load i32* @ten, align 4
  %59 = load i32* @fifty, align 4
  %mul15 = mul nsw i32 %58, %59
  %cmp16 = icmp slt i32 %sub14, %mul15
  br i1 %cmp16, label %if.then18, label %if.else19

if.then18:                                        ; preds = %if.else13
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %if.end31

if.else19:                                        ; preds = %if.else13
  %60 = load i32* %startup_time, align 4
  %61 = load i32* @t_fuel_press_control, align 4
  %sub20 = sub nsw i32 %60, %61
  %62 = load i32* @thirty, align 4
  %63 = load i32* @fifty, align 4
  %mul21 = mul nsw i32 %62, %63
  %cmp22 = icmp slt i32 %sub20, %mul21
  br i1 %cmp22, label %if.then24, label %if.else30

if.then24:                                        ; preds = %if.else19
  %64 = load float* @zero_point_one_eight, align 4
  %65 = load i32* %startup_time, align 4
  %66 = load i32* @t_fuel_press_control, align 4
  %67 = load i32* @ten, align 4
  %68 = load i32* @fifty, align 4
  %mul25 = mul nsw i32 %67, %68
  %add26 = add nsw i32 %66, %mul25
  %sub27 = sub nsw i32 %65, %add26
  %conv28 = sitofp i32 %sub27 to float
  %add29 = fadd float %64, %conv28
  store float %add29, float* @fuel_press_setpoint, align 4
  br label %if.end

if.else30:                                        ; preds = %if.else19
  store float 1.000000e+00, float* @fuel_press_setpoint, align 4
  br label %if.end

if.end:                                           ; preds = %if.else30, %if.then24
  br label %if.end31

if.end31:                                         ; preds = %if.end, %if.then18
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then12
  %69 = load float* @fuel_press_setpoint, align 4
  %70 = load float* %fuel_press, align 4
  %sub33 = fsub float %69, %70
  store float %sub33, float* %epsilon, align 4
  %71 = load float* @redefine_start.fuel_press_integrator, align 4
  %72 = load float* %epsilon, align 4
  %73 = load float* @zero_point_zero_zero_one_four, align 4
  %mul34 = fmul float %72, %73
  %add35 = fadd float %71, %mul34
  store float %add35, float* @redefine_start.fuel_press_integrator, align 4
  %74 = load float* @redefine_start.fuel_press_integrator, align 4
  %75 = load float* @zero_point_zero_two_five, align 4
  %cmp36 = fcmp ogt float %74, %75
  br i1 %cmp36, label %if.then38, label %if.end39

if.then38:                                        ; preds = %if.end32
  store float 2.500000e-01, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end39

if.end39:                                         ; preds = %if.then38, %if.end32
  %76 = load float* @redefine_start.fuel_press_integrator, align 4
  %77 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp40 = fcmp olt float %76, %77
  br i1 %cmp40, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.end39
  %78 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %78, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.then42, %if.end39
  %79 = load float* @redefine_start.fuel_press_integrator, align 4
  %80 = load float* @zero_point_zero_zero_one, align 4
  %81 = load float* %epsilon, align 4
  %mul44 = fmul float %80, %81
  %add45 = fadd float %79, %mul44
  store float %add45, float* @fuel_pump_cmd, align 4
  %82 = load float* @fuel_pump_cmd, align 4
  %83 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp46 = fcmp olt float %82, %83
  br i1 %cmp46, label %if.then48, label %if.end49

if.then48:                                        ; preds = %if.end43
  %84 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %84, float* @fuel_pump_cmd, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.then48, %if.end43
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then7
  br label %if.end122

if.else51:                                        ; preds = %if.else3
  %85 = load float* %current_nh, align 4
  %cmp52 = fcmp olt float %85, 1.500000e+04
  br i1 %cmp52, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.else51
  br label %if.end121

if.else55:                                        ; preds = %if.else51
  %86 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 4), align 4
  store i32 %86, i32* @operation_mode, align 4
  %87 = load i32* @operation_mode, align 4
  %cmp56 = icmp eq i32 %87, 2
  br i1 %cmp56, label %if.then58, label %if.else62

if.then58:                                        ; preds = %if.else55
  store float 0.000000e+00, float* @fuel_press_setpoint, align 4
  %88 = load float* %current_nh, align 4
  store float %88, float* @nh_setpoint, align 4
  %89 = load float* @fuel_pump_cmd, align 4
  store float %89, float* @redefine_start.fuel_pump_integrator, align 4
  %90 = load float* %current_nh, align 4
  %91 = load float* %index_nh, align 4
  %sub59 = fsub float %90, %91
  %92 = load i32* @two, align 4
  %conv60 = sitofp i32 %92 to float
  %mul61 = fmul float %sub59, %conv60
  store float %mul61, float* @redefine_start.dnhqdt, align 4
  store i32 4, i32* @operation_mode, align 4
  br label %if.end120

if.else62:                                        ; preds = %if.else55
  %93 = load i32* @operation_mode, align 4
  %cmp63 = icmp eq i32 %93, 4
  br i1 %cmp63, label %if.then65, label %if.else118

if.then65:                                        ; preds = %if.else62
  %94 = load float* @nh_setpoint, align 4
  %95 = load float* @NH_IDLE_GROUND, align 4
  %cmp66 = fcmp olt float %94, %95
  br i1 %cmp66, label %if.then68, label %if.else71

if.then68:                                        ; preds = %if.then65
  %96 = load float* @nh_setpoint, align 4
  %97 = load float* @zero_point_zero_two, align 4
  %98 = load float* @redefine_start.dnhqdt, align 4
  %mul69 = fmul float %97, %98
  %add70 = fadd float %96, %mul69
  store float %add70, float* @nh_setpoint, align 4
  br label %if.end74

if.else71:                                        ; preds = %if.then65
  %99 = load float* @nh_setpoint, align 4
  %100 = load float* @zero_point_zero_two, align 4
  %101 = load float* @redefine_start.dnhqdt, align 4
  %mul72 = fmul float %100, %101
  %sub73 = fsub float %99, %mul72
  store float %sub73, float* @nh_setpoint, align 4
  br label %if.end74

if.end74:                                         ; preds = %if.else71, %if.then68
  %102 = load float* @nh_setpoint, align 4
  %103 = load float* %current_nh, align 4
  %sub75 = fsub float %102, %103
  store float %sub75, float* %epsilon, align 4
  %104 = load float* @redefine_start.fuel_pump_integrator, align 4
  %105 = load float* %epsilon, align 4
  %106 = load float* @exp1, align 4
  %mul76 = fmul float %105, %106
  %add77 = fadd float %104, %mul76
  store float %add77, float* @redefine_start.fuel_pump_integrator, align 4
  %107 = load float* @redefine_start.fuel_pump_integrator, align 4
  %108 = load float* @zero_point_zero_two_five, align 4
  %cmp78 = fcmp ogt float %107, %108
  br i1 %cmp78, label %if.then80, label %if.end81

if.then80:                                        ; preds = %if.end74
  store float 2.500000e-01, float* @redefine_start.fuel_pump_integrator, align 4
  br label %if.end81

if.end81:                                         ; preds = %if.then80, %if.end74
  %109 = load float* @redefine_start.fuel_pump_integrator, align 4
  %110 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp82 = fcmp olt float %109, %110
  br i1 %cmp82, label %if.then84, label %if.end85

if.then84:                                        ; preds = %if.end81
  %111 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %111, float* @redefine_start.fuel_pump_integrator, align 4
  br label %if.end85

if.end85:                                         ; preds = %if.then84, %if.end81
  %112 = load float* @redefine_start.fuel_pump_integrator, align 4
  %113 = load float* @exp3, align 4
  %114 = load float* %epsilon, align 4
  %mul86 = fmul float %113, %114
  %add87 = fadd float %112, %mul86
  store float %add87, float* @fuel_pump_cmd, align 4
  %115 = load float* @fuel_pump_cmd, align 4
  %116 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp88 = fcmp olt float %115, %116
  br i1 %cmp88, label %if.then90, label %if.end91

if.then90:                                        ; preds = %if.end85
  %117 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %117, float* @fuel_pump_cmd, align 4
  br label %if.end91

if.end91:                                         ; preds = %if.then90, %if.end85
  %118 = load float* %current_nh, align 4
  %conv92 = fptosi float %118 to i32
  %119 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 6), align 4
  %arrayidx = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %119
  store i32 %conv92, i32* %arrayidx, align 4
  %120 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 7), align 4
  store i32 %120, i32* @stab_array_index, align 4
  %121 = load i32* @stab_array_index, align 4
  %cmp93 = icmp eq i32 %121, 50
  br i1 %cmp93, label %if.then95, label %if.end96

if.then95:                                        ; preds = %if.end91
  store i32 0, i32* @stab_array_index, align 4
  br label %if.end96

if.end96:                                         ; preds = %if.then95, %if.end91
  store float 0.000000e+00, float* %nh_average, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end96
  %122 = load i32* %i, align 4
  %cmp97 = icmp slt i32 %122, 50
  br i1 %cmp97, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %123 = load i32* %i, align 4
  %arrayidx99 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %123
  %124 = load i32* %arrayidx99, align 4
  %conv100 = sitofp i32 %124 to float
  %125 = load float* %nh_average, align 4
  %add101 = fadd float %125, %conv100
  store float %add101, float* %nh_average, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %126 = load i32* %i, align 4
  %inc = add nsw i32 %126, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %127 = load float* @NH_IDLE_GROUND, align 4
  store float %127, float* @nh_idle, align 4
  %128 = load float* %nh_average, align 4
  %129 = load float* @nh_idle, align 4
  %130 = load float* @NH_REF, align 4
  %mul102 = fmul float %129, %130
  %131 = load float* @hundred, align 4
  %mul103 = fmul float %mul102, %131
  %132 = load float* @zero_point_nine_nine_five, align 4
  %mul104 = fmul float %mul103, %132
  %cmp105 = fcmp oge float %128, %mul104
  br i1 %cmp105, label %land.lhs.true, label %if.end117

land.lhs.true:                                    ; preds = %for.end
  %133 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 8), align 4
  %tobool = icmp ne i32 %133, 0
  br i1 %tobool, label %if.end117, label %land.lhs.true107

land.lhs.true107:                                 ; preds = %land.lhs.true
  %134 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 9), align 4
  %tobool108 = icmp ne i32 %134, 0
  br i1 %tobool108, label %if.end117, label %land.lhs.true109

land.lhs.true109:                                 ; preds = %land.lhs.true107
  %135 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 10), align 4
  %tobool110 = icmp ne i32 %135, 0
  br i1 %tobool110, label %if.end117, label %land.lhs.true111

land.lhs.true111:                                 ; preds = %land.lhs.true109
  %136 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 11), align 4
  %tobool112 = icmp ne i32 %136, 0
  br i1 %tobool112, label %if.end117, label %land.lhs.true113

land.lhs.true113:                                 ; preds = %land.lhs.true111
  %137 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 12), align 4
  %cmp114 = icmp sle i32 %137, 10
  br i1 %cmp114, label %if.then116, label %if.end117

if.then116:                                       ; preds = %land.lhs.true113
  store i32 8, i32* @operation_mode, align 4
  br label %if.end117

if.end117:                                        ; preds = %if.then116, %land.lhs.true113, %land.lhs.true111, %land.lhs.true109, %land.lhs.true107, %land.lhs.true, %for.end
  br label %if.end119

if.else118:                                       ; preds = %if.else62
  store i32 16, i32* @operation_mode, align 4
  br label %if.end119

if.end119:                                        ; preds = %if.else118, %if.end117
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then58
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.then54
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.end50
  br label %if.end123

if.end123:                                        ; preds = %redefine_start1.if.end122, %redefine_start1.if.then2, %if.end122, %if.then2
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %newName0
  %138 = load i32* bitcast (float* @redefine_start.fuel_press_integrator to i32*), align 4
  store i32 %138, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 0), align 4
  %139 = load i32* bitcast (float* @fuel_press_setpoint to i32*), align 4
  store i32 %139, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 1), align 4
  %140 = load i32* bitcast (float* @epsilon_global to i32*), align 4
  store i32 %140, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 2), align 4
  %141 = load i32* bitcast (float* @iTerm to i32*), align 4
  store i32 %141, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 3), align 4
  %142 = load i32* bitcast (float* @epsilon_modified to i32*), align 4
  store i32 %142, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 4), align 4
  %143 = load i32* bitcast (float* @dTerm_modified to i32*), align 4
  store i32 %143, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 5), align 4
  %144 = load i32* bitcast (float* @redefine_start.fuel_pump_integrator to i32*), align 4
  store i32 %144, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 6), align 4
  %145 = load i32* bitcast (float* @ramp_filter_memory to i32*), align 4
  store i32 %145, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 7), align 4
  %146 = bitcast float* %current_nh to i32*
  %147 = load i32* %146, align 4
  store i32 %147, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 8), align 4
  %148 = load i32* @stab_array_index, align 4
  store i32 %148, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 9), align 4
  %149 = bitcast float* %nh_average to i32*
  %150 = load i32* %149, align 4
  store i32 %150, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 10), align 4
  %151 = load i32* bitcast (float* @nh_idle to i32*), align 4
  store i32 %151, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 11), align 4
  ret void
}

define void @redefine_start1() {
redefine_start1.entry:
  %0 = alloca i1, align 4, !Controls !12
  %1 = alloca float, align 4, !ConsumedBy !14
  %2 = getelementptr inbounds float* @CMD_FUEL_RAMP_START, i32 0
  store float 0x3FC1EB8520000000, float* %2, align 4
  %3 = getelementptr inbounds float* @CMD_FUEL_RAMP_END, i32 0
  store float 0x3FC1EB8520000000, float* %3, align 4
  %4 = getelementptr inbounds float* @NH_IDLE_GROUND, i32 0
  store float 5.350000e+01, float* %4, align 4
  %5 = getelementptr inbounds float* @NL_IDLE_GROUND, i32 0
  store float 3.000000e+01, float* %5, align 4
  %6 = getelementptr inbounds float* @zero_point_zero_zero_one_four, i32 0
  store float 0x3F56F00680000000, float* %6, align 4
  %7 = getelementptr inbounds float* @zero_point_zero_zero_one, i32 0
  store float 0x3F50624DE0000000, float* %7, align 4
  %8 = getelementptr inbounds float* @one_point_o, i32 0
  store float 1.000000e+00, float* %8, align 4
  %9 = getelementptr inbounds float* @zero_point_one_eight, i32 0
  store float 0x3FC70A3D80000000, float* %9, align 4
  %10 = getelementptr inbounds float* @NL_REF, i32 0
  store float 4.363600e+04, float* %10, align 4
  %11 = getelementptr inbounds float* @NH_REF, i32 0
  store float 5.071900e+04, float* %11, align 4
  %12 = getelementptr inbounds float* @hundred, i32 0
  store float 1.000000e+02, float* %12, align 4
  %13 = getelementptr inbounds float* @zero_point_zero_two, i32 0
  store float 0x3F947AE140000000, float* %13, align 4
  %14 = getelementptr inbounds float* @zero_point_zero_two_five, i32 0
  store float 0x3F999999A0000000, float* %14, align 4
  %15 = getelementptr inbounds float* @zero_point_nine_nine_five, i32 0
  store float 0x3FEFD70A40000000, float* %15, align 4
  %16 = getelementptr inbounds float* @zero_point_one, i32 0
  store float 0x3FB99999A0000000, float* %16, align 4
  %17 = getelementptr inbounds float* @zero_point_zero_one, i32 0
  store float 0x3F847AE140000000, float* %17, align 4
  %18 = getelementptr inbounds float* @exp1, i32 0
  store float 0x3E8AD7F2A0000000, float* %18, align 4
  %19 = getelementptr inbounds float* @exp3, i32 0
  store float 0x3F0A36E2E0000000, float* %19, align 4
  %20 = getelementptr inbounds i32* @ten, i32 0
  store i32 10, i32* %20, align 4
  %21 = getelementptr inbounds i32* @fifty, i32 0
  store i32 50, i32* %21, align 4
  %22 = getelementptr inbounds i32* @thirty, i32 0
  store i32 30, i32* %22, align 4
  %23 = getelementptr inbounds i32* @twenty, i32 0
  store i32 20, i32* %23, align 4
  %24 = getelementptr inbounds i32* @two, i32 0
  store i32 2, i32* %24, align 4
  %25 = getelementptr inbounds float* @epsilon_global, i32 0
  store float 0.000000e+00, float* %25, align 4
  %26 = getelementptr inbounds float* @iTerm, i32 0
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds float* @epsilon_modified, i32 0
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds float* @dTerm_modified, i32 0
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds float* @fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds float* @nh_setpoint, i32 0
  store float 0.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds float* @ramp_filter_memory, i32 0
  store float 0.000000e+00, float* %31, align 4
  %32 = getelementptr inbounds float* @redefine_start.fuel_press_integrator, i32 0
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds float* @redefine_start.fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %33, align 4
  %34 = getelementptr inbounds float* @redefine_start.dnhqdt, i32 0
  store float 0.000000e+00, float* %34, align 4
  %35 = getelementptr inbounds float* @fuel_pump_cmd, i32 0
  store float 0.000000e+00, float* %35, align 4
  %36 = getelementptr inbounds i32* @t_fuel_press_control, i32 0
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds float* @fuel_press_setpoint, i32 0
  store float 0.000000e+00, float* %37, align 4
  %38 = getelementptr inbounds i32* @operation_mode, i32 0
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds i32* @stab_array_index, i32 0
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds float* @nh_idle, i32 0
  store float 0.000000e+00, float* %40, align 4
  %41 = getelementptr inbounds float* @nh_average, i32 0
  store float 0.000000e+00, float* %41, align 4
  %42 = alloca float, align 4, !ConsumedBy !16
  %43 = alloca float, align 4
  %44 = alloca float, align 4
  %45 = alloca float, align 4, !ConsumedBy !18
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca float, align 4
  %49 = load float* bitcast ([16 x i32]* @redefine_in_parameters to float*), align 4
  store float %49, float* %42, align 4
  %50 = load float* bitcast (i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 5) to float*), align 4
  store float %50, float* %43, align 4
  %51 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 1), align 4
  %52 = icmp eq i32 %51, 0
  store i1 %52, i1* %0, align 4
  br i1 %52, label %redefine_start1.if.then, label %redefine_start1.if.else

redefine_start1.if.else:                          ; preds = %redefine_start1.entry
  %53 = load float* %42, align 4
  %54 = fcmp olt float %53, 2.700000e+03
  br i1 %54, label %redefine_start1.if.then2, label %redefine_start1.if.else3

redefine_start1.if.else3:                         ; preds = %redefine_start1.if.else
  %55 = load float* %42, align 4
  %56 = fcmp olt float %55, 1.500000e+04
  br i1 %56, label %redefine_start1.if.then5, label %redefine_start1.if.else51

redefine_start1.if.else51:                        ; preds = %redefine_start1.if.else3
  %57 = load float* %42, align 4
  %58 = fcmp olt float %57, 1.500000e+04
  br i1 %58, label %redefine_start1.if.then54, label %redefine_start1.if.else55

redefine_start1.if.else55:                        ; preds = %redefine_start1.if.else51
  %59 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 4), align 4
  store i32 %59, i32* @operation_mode, align 4
  %60 = load i32* @operation_mode, align 4
  %61 = icmp eq i32 %60, 2
  br i1 %61, label %redefine_start1.if.then58, label %redefine_start1.if.else62

redefine_start1.if.else62:                        ; preds = %redefine_start1.if.else55
  %62 = load i32* @operation_mode, align 4
  %63 = icmp eq i32 %62, 4
  br i1 %63, label %redefine_start1.if.then65, label %redefine_start1.if.else118

redefine_start1.if.then65:                        ; preds = %redefine_start1.if.else62
  %64 = load float* @nh_setpoint, align 4
  %65 = load float* @NH_IDLE_GROUND, align 4
  %66 = fcmp olt float %64, %65
  br i1 %66, label %redefine_start1.if.then68, label %redefine_start1.if.else71

redefine_start1.if.then68:                        ; preds = %redefine_start1.if.then65
  %67 = load float* @nh_setpoint, align 4
  %68 = load float* @zero_point_zero_two, align 4
  %69 = load float* @redefine_start.dnhqdt, align 4
  %70 = fmul float %68, %69
  %71 = fadd float %67, %70
  store float %71, float* @nh_setpoint, align 4
  br label %redefine_start1.if.end74

redefine_start1.if.else71:                        ; preds = %redefine_start1.if.then65
  %72 = load float* @nh_setpoint, align 4
  %73 = load float* @zero_point_zero_two, align 4
  %74 = load float* @redefine_start.dnhqdt, align 4
  %75 = fmul float %73, %74
  %76 = fsub float %72, %75
  store float %76, float* @nh_setpoint, align 4
  br label %redefine_start1.if.end74

redefine_start1.if.end74:                         ; preds = %redefine_start1.if.else71, %redefine_start1.if.then68
  %77 = load float* @nh_setpoint, align 4
  %78 = load float* %42, align 4
  %79 = fsub float %77, %78
  store float %79, float* %44, align 4
  %80 = load float* @redefine_start.fuel_pump_integrator, align 4
  %81 = load float* %44, align 4
  %82 = load float* @exp1, align 4
  %83 = fmul float %81, %82
  %84 = fadd float %80, %83
  store float %84, float* @redefine_start.fuel_pump_integrator, align 4
  %85 = load float* @redefine_start.fuel_pump_integrator, align 4
  %86 = load float* @zero_point_zero_two_five, align 4
  %87 = fcmp ogt float %85, %86
  br i1 %87, label %redefine_start1.if.then80, label %redefine_start1.if.end81

redefine_start1.if.then80:                        ; preds = %redefine_start1.if.end74
  store float 2.500000e-01, float* @redefine_start.fuel_pump_integrator, align 4
  br label %redefine_start1.if.end81

redefine_start1.if.end81:                         ; preds = %redefine_start1.if.then80, %redefine_start1.if.end74
  %88 = load float* @redefine_start.fuel_pump_integrator, align 4
  %89 = load float* @CMD_FUEL_RAMP_END, align 4
  %90 = fcmp olt float %88, %89
  br i1 %90, label %redefine_start1.if.then84, label %redefine_start1.if.end85

redefine_start1.if.then84:                        ; preds = %redefine_start1.if.end81
  %91 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %91, float* @redefine_start.fuel_pump_integrator, align 4
  br label %redefine_start1.if.end85

redefine_start1.if.end85:                         ; preds = %redefine_start1.if.then84, %redefine_start1.if.end81
  %92 = load float* @redefine_start.fuel_pump_integrator, align 4
  %93 = load float* @exp3, align 4
  %94 = load float* %44, align 4
  %95 = fmul float %93, %94
  %96 = fadd float %92, %95
  store float %96, float* @fuel_pump_cmd, align 4
  %97 = load float* @fuel_pump_cmd, align 4
  %98 = load float* @CMD_FUEL_RAMP_END, align 4
  %99 = fcmp olt float %97, %98
  br i1 %99, label %redefine_start1.if.then90, label %redefine_start1.if.end91

redefine_start1.if.then90:                        ; preds = %redefine_start1.if.end85
  %100 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %100, float* @fuel_pump_cmd, align 4
  br label %redefine_start1.if.end91

redefine_start1.if.then5:                         ; preds = %redefine_start1.if.else3
  %101 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 2), align 4
  %102 = icmp eq i32 %101, -1
  br i1 %102, label %redefine_start1.if.then7, label %redefine_start1.if.else9

redefine_start1.if.end91:                         ; preds = %redefine_start1.if.then90, %redefine_start1.if.end85
  %103 = load float* %42, align 4
  %104 = fptosi float %103 to i32
  %105 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 6), align 4
  %106 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %105
  store i32 %104, i32* %106, align 4
  %107 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 7), align 4
  store i32 %107, i32* @stab_array_index, align 4
  %108 = load i32* @stab_array_index, align 4
  %109 = icmp eq i32 %108, 50
  br i1 %109, label %redefine_start1.if.then95, label %redefine_start1.if.end96

redefine_start1.if.else9:                         ; preds = %redefine_start1.if.then5
  %110 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 14), align 4
  store i32 %110, i32* %47, align 4
  %111 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 15), align 4
  %112 = sitofp i32 %111 to float
  store float %112, float* %48, align 4
  %113 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 3), align 4
  %114 = icmp eq i32 %113, -1
  br i1 %114, label %redefine_start1.if.then12, label %redefine_start1.if.else13

redefine_start1.if.then95:                        ; preds = %redefine_start1.if.end91
  store i32 0, i32* @stab_array_index, align 4
  br label %redefine_start1.if.end96

redefine_start1.if.end96:                         ; preds = %redefine_start1.if.then95, %redefine_start1.if.end91
  store float 0.000000e+00, float* %45, align 4
  store i32 0, i32* %46, align 4
  br label %redefine_start1.for.cond

redefine_start1.if.else13:                        ; preds = %redefine_start1.if.else9
  %115 = load i32* %47, align 4
  %116 = load i32* @t_fuel_press_control, align 4
  %117 = sub nsw i32 %115, %116
  %118 = load i32* @ten, align 4
  %119 = load i32* @fifty, align 4
  %120 = mul nsw i32 %118, %119
  %121 = icmp slt i32 %117, %120
  br i1 %121, label %redefine_start1.if.then18, label %redefine_start1.if.else19

redefine_start1.for.cond:                         ; preds = %redefine_start1.for.inc, %redefine_start1.if.end96
  %122 = load i32* %46, align 4
  %123 = icmp slt i32 %122, 50
  br i1 %123, label %redefine_start1.for.body, label %redefine_start1.for.end

redefine_start1.for.body:                         ; preds = %redefine_start1.for.cond
  %124 = load i32* %46, align 4
  %125 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %124
  %126 = load i32* %125, align 4
  %127 = sitofp i32 %126 to float
  %128 = load float* %45, align 4
  %129 = fadd float %128, %127
  store float %129, float* %45, align 4
  br label %redefine_start1.for.inc

redefine_start1.for.inc:                          ; preds = %redefine_start1.for.body
  %130 = load i32* %46, align 4
  %131 = add nsw i32 %130, 1
  store i32 %131, i32* %46, align 4
  br label %redefine_start1.for.cond

redefine_start1.if.else19:                        ; preds = %redefine_start1.if.else13
  %132 = load i32* %47, align 4
  %133 = load i32* @t_fuel_press_control, align 4
  %134 = sub nsw i32 %132, %133
  %135 = load i32* @thirty, align 4
  %136 = load i32* @fifty, align 4
  %137 = mul nsw i32 %135, %136
  %138 = icmp slt i32 %134, %137
  br i1 %138, label %redefine_start1.if.then24, label %redefine_start1.if.else30

redefine_start1.for.end:                          ; preds = %redefine_start1.for.cond
  %139 = load float* @NH_IDLE_GROUND, align 4
  store float %139, float* @nh_idle, align 4
  %140 = load float* %45, align 4
  %141 = load float* @nh_idle, align 4
  %142 = load float* @NH_REF, align 4
  %143 = fmul float %141, %142
  %144 = load float* @hundred, align 4
  %145 = fmul float %143, %144
  %146 = load float* @zero_point_nine_nine_five, align 4
  %147 = fmul float %145, %146
  %148 = fcmp oge float %140, %147
  br i1 %148, label %redefine_start1.land.lhs.true, label %redefine_start1.if.end117

redefine_start1.if.then24:                        ; preds = %redefine_start1.if.else19
  %149 = load float* @zero_point_one_eight, align 4
  %150 = load i32* %47, align 4
  %151 = load i32* @t_fuel_press_control, align 4
  %152 = load i32* @ten, align 4
  %153 = load i32* @fifty, align 4
  %154 = mul nsw i32 %152, %153
  %155 = add nsw i32 %151, %154
  %156 = sub nsw i32 %150, %155
  %157 = sitofp i32 %156 to float
  %158 = fadd float %149, %157
  store float %158, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end

redefine_start1.if.else30:                        ; preds = %redefine_start1.if.else19
  store float 1.000000e+00, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end

redefine_start1.if.then18:                        ; preds = %redefine_start1.if.else13
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end31

redefine_start1.land.lhs.true:                    ; preds = %redefine_start1.for.end
  %159 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 8), align 4
  %160 = icmp ne i32 %159, 0
  br i1 %160, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true107

redefine_start1.if.end:                           ; preds = %redefine_start1.if.else30, %redefine_start1.if.then24
  br label %redefine_start1.if.end31

redefine_start1.if.then12:                        ; preds = %redefine_start1.if.else9
  %161 = load i32* %47, align 4
  store i32 %161, i32* @t_fuel_press_control, align 4
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end32

redefine_start1.if.end31:                         ; preds = %redefine_start1.if.end, %redefine_start1.if.then18
  br label %redefine_start1.if.end32

redefine_start1.land.lhs.true107:                 ; preds = %redefine_start1.land.lhs.true
  %162 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 9), align 4
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true109

redefine_start1.if.end32:                         ; preds = %redefine_start1.if.end31, %redefine_start1.if.then12
  %164 = load float* @fuel_press_setpoint, align 4
  %165 = load float* %48, align 4
  %166 = fsub float %164, %165
  store float %166, float* %44, align 4
  %167 = load float* @redefine_start.fuel_press_integrator, align 4
  %168 = load float* %44, align 4
  %169 = load float* @zero_point_zero_zero_one_four, align 4
  %170 = fmul float %168, %169
  %171 = fadd float %167, %170
  store float %171, float* @redefine_start.fuel_press_integrator, align 4
  %172 = load float* @redefine_start.fuel_press_integrator, align 4
  %173 = load float* @zero_point_zero_two_five, align 4
  %174 = fcmp ogt float %172, %173
  br i1 %174, label %redefine_start1.if.then38, label %redefine_start1.if.end39

redefine_start1.land.lhs.true109:                 ; preds = %redefine_start1.land.lhs.true107
  %175 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 10), align 4
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true111

redefine_start1.if.then38:                        ; preds = %redefine_start1.if.end32
  store float 2.500000e-01, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end39

redefine_start1.land.lhs.true111:                 ; preds = %redefine_start1.land.lhs.true109
  %177 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 11), align 4
  %178 = icmp ne i32 %177, 0
  br i1 %178, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true113

redefine_start1.if.end39:                         ; preds = %redefine_start1.if.then38, %redefine_start1.if.end32
  %179 = load float* @redefine_start.fuel_press_integrator, align 4
  %180 = load float* @CMD_FUEL_RAMP_END, align 4
  %181 = fcmp olt float %179, %180
  br i1 %181, label %redefine_start1.if.then42, label %redefine_start1.if.end43

redefine_start1.land.lhs.true113:                 ; preds = %redefine_start1.land.lhs.true111
  %182 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 12), align 4
  %183 = icmp sle i32 %182, 10
  br i1 %183, label %redefine_start1.if.then116, label %redefine_start1.if.end117

redefine_start1.if.then42:                        ; preds = %redefine_start1.if.end39
  %184 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %184, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end43

redefine_start1.if.then116:                       ; preds = %redefine_start1.land.lhs.true113
  store i32 8, i32* @operation_mode, align 4
  br label %redefine_start1.if.end117

redefine_start1.if.else118:                       ; preds = %redefine_start1.if.else62
  store i32 16, i32* @operation_mode, align 4
  br label %redefine_start1.if.end119

redefine_start1.if.end117:                        ; preds = %redefine_start1.if.then116, %redefine_start1.land.lhs.true113, %redefine_start1.land.lhs.true111, %redefine_start1.land.lhs.true109, %redefine_start1.land.lhs.true107, %redefine_start1.land.lhs.true, %redefine_start1.for.end
  br label %redefine_start1.if.end119

redefine_start1.if.end43:                         ; preds = %redefine_start1.if.then42, %redefine_start1.if.end39
  %185 = load float* @redefine_start.fuel_press_integrator, align 4
  %186 = load float* @zero_point_zero_zero_one, align 4
  %187 = load float* %44, align 4
  %188 = fmul float %186, %187
  %189 = fadd float %185, %188
  store float %189, float* @fuel_pump_cmd, align 4
  %190 = load float* @fuel_pump_cmd, align 4
  %191 = load float* @CMD_FUEL_RAMP_END, align 4
  %192 = fcmp olt float %190, %191
  br i1 %192, label %redefine_start1.if.then48, label %redefine_start1.if.end49

redefine_start1.if.then58:                        ; preds = %redefine_start1.if.else55
  store float 0.000000e+00, float* @fuel_press_setpoint, align 4
  %193 = load float* %42, align 4
  store float %193, float* @nh_setpoint, align 4
  %194 = load float* @fuel_pump_cmd, align 4
  store float %194, float* @redefine_start.fuel_pump_integrator, align 4
  %195 = load float* %42, align 4
  %196 = load float* %43, align 4
  %197 = fsub float %195, %196
  %198 = load i32* @two, align 4
  %199 = sitofp i32 %198 to float
  %200 = fmul float %197, %199
  store float %200, float* @redefine_start.dnhqdt, align 4
  store i32 4, i32* @operation_mode, align 4
  br label %redefine_start1.if.end120

redefine_start1.if.end119:                        ; preds = %redefine_start1.if.end117, %redefine_start1.if.else118
  br label %redefine_start1.if.end120

redefine_start1.if.then48:                        ; preds = %redefine_start1.if.end43
  %201 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %201, float* @fuel_pump_cmd, align 4
  br label %redefine_start1.if.end49

redefine_start1.if.then54:                        ; preds = %redefine_start1.if.else51
  br label %redefine_start1.if.end121

redefine_start1.if.then7:                         ; preds = %redefine_start1.if.then5
  %202 = load float* @CMD_FUEL_RAMP_START, align 4
  %203 = load float* %42, align 4
  %204 = fsub float %203, 2.700000e+03
  %205 = load float* @CMD_FUEL_RAMP_END, align 4
  %206 = load float* @CMD_FUEL_RAMP_START, align 4
  %207 = fsub float %205, %206
  %208 = fmul float %204, %207
  %209 = fadd float %202, %208
  store float %209, float* @fuel_pump_cmd, align 4
  %210 = load float* @fuel_pump_cmd, align 4
  store float %210, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end50

redefine_start1.if.end49:                         ; preds = %redefine_start1.if.then48, %redefine_start1.if.end43
  br label %redefine_start1.if.end50

redefine_start1.if.end120:                        ; preds = %redefine_start1.if.end119, %redefine_start1.if.then58
  br label %redefine_start1.if.end121

redefine_start1.if.end121:                        ; preds = %redefine_start1.if.end120, %redefine_start1.if.then54
  br label %redefine_start1.if.end122

redefine_start1.if.end50:                         ; preds = %redefine_start1.if.end49, %redefine_start1.if.then7
  br label %redefine_start1.if.end122

redefine_start1.if.then2:                         ; preds = %redefine_start1.if.else
  br label %if.end123

redefine_start1.if.end122:                        ; preds = %redefine_start1.if.end50, %redefine_start1.if.end121
  br label %if.end123

redefine_start1.if.then:                          ; preds = %redefine_start1.entry
  store float 0.000000e+00, float* @fuel_pump_cmd, align 4
  %211 = load float* @fuel_pump_cmd, align 4
  store float %211, float* %1, align 4
  br label %redefine_start1.return

redefine_start1.return:                           ; preds = %redefine_start1.if.then
  ret void
}

define void @redefine_start2() {
redefine_start2.if.end123:
  br label %redefine_start2.return

redefine_start2.return:                           ; preds = %redefine_start2.if.end123
  ret void
}

define void @redefine_start3(float*, float*) {
redefine_start3.if.end124:
  %2 = load i32* bitcast (float* @redefine_start.fuel_press_integrator to i32*), align 4
  store i32 %2, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 0), align 4
  %3 = load i32* bitcast (float* @fuel_press_setpoint to i32*), align 4
  store i32 %3, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 1), align 4
  %4 = load i32* bitcast (float* @epsilon_global to i32*), align 4
  store i32 %4, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 2), align 4
  %5 = load i32* bitcast (float* @iTerm to i32*), align 4
  store i32 %5, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 3), align 4
  %6 = load i32* bitcast (float* @epsilon_modified to i32*), align 4
  store i32 %6, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 4), align 4
  %7 = load i32* bitcast (float* @dTerm_modified to i32*), align 4
  store i32 %7, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 5), align 4
  %8 = load i32* bitcast (float* @redefine_start.fuel_pump_integrator to i32*), align 4
  store i32 %8, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 6), align 4
  %9 = load i32* bitcast (float* @ramp_filter_memory to i32*), align 4
  store i32 %9, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 7), align 4
  %10 = bitcast float* %0 to i32*
  %11 = load i32* %10, align 4
  store i32 %11, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 8), align 4
  %12 = load i32* @stab_array_index, align 4
  store i32 %12, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 9), align 4
  %13 = bitcast float* %1 to i32*
  %14 = load i32* %13, align 4
  store i32 %14, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 10), align 4
  %15 = load i32* bitcast (float* @nh_idle to i32*), align 4
  store i32 %15, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 11), align 4
  br label %redefine_start3.return

redefine_start3.return:                           ; preds = %redefine_start3.if.end124
  ret void
}

define void @regulation_nh_init4(float*) {
regulation_nh_init4.newName01:
  %1 = load float* %0, align 4
  store float %1, float* @fuel_pump_integrator, align 4
  %2 = load float* @nh_setpoint, align 4
  store float %2, float* @ramp_filter_memory, align 4
  br label %regulation_nh_init4.return

regulation_nh_init4.return:                       ; preds = %regulation_nh_init4.newName01
  ret void
}

define void @regulation_nh_init5(float*) {
regulation_nh_init5.entry:
  %1 = load float* %0
  %2 = alloca float, align 4, !ConsumedBy !20
  store float %1, float* %2, align 4
  %3 = load float* %2, align 4
  br label %regulation_nh_init5.return

regulation_nh_init5.return:                       ; preds = %regulation_nh_init5.entry
  ret void
}

define void @pid_init6(float*) {
pid_init6.entry:
  %1 = load float* %0
  %2 = alloca float, align 4
  store float %1, float* %2, align 4
  store float 0.000000e+00, float* @epsilon_global, align 4
  %3 = load float* %2, align 4
  store float %3, float* @iTerm, align 4
  store float 0.000000e+00, float* @epsilon_modified, align 4
  store float 0.000000e+00, float* @dTerm_modified, align 4
  br label %pid_init6.return

pid_init6.return:                                 ; preds = %pid_init6.entry
  ret void
}

attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }

!redefine.annotations = !{!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10, !11}

!0 = metadata !{metadata !"HyperOp", void ()* @redefine_start1, metadata !"Static"}
!1 = metadata !{metadata !"Entry", metadata !0}
!2 = metadata !{metadata !"HyperOp", void ()* @redefine_start2, metadata !"Static"}
!3 = metadata !{metadata !"Intermediate", metadata !2}
!4 = metadata !{metadata !"HyperOp", void (float*, float*)* @redefine_start3, metadata !"Static"}
!5 = metadata !{metadata !"Exit", metadata !4}
!6 = metadata !{metadata !"HyperOp", void (float*)* @regulation_nh_init4, metadata !"Static"}
!7 = metadata !{metadata !"Intermediate", metadata !6}
!8 = metadata !{metadata !"HyperOp", void (float*)* @regulation_nh_init5, metadata !"Static"}
!9 = metadata !{metadata !"Intermediate", metadata !8}
!10 = metadata !{metadata !"HyperOp", void (float*)* @pid_init6, metadata !"Static"}
!11 = metadata !{metadata !"Intermediate", metadata !10}
!12 = metadata !{metadata !13}
!13 = metadata !{metadata !8, metadata !"1"}
!14 = metadata !{metadata !15}
!15 = metadata !{metadata !8, metadata !"LocalReference", i32 0}
!16 = metadata !{metadata !17}
!17 = metadata !{metadata !4, metadata !"LocalReference", i32 0}
!18 = metadata !{metadata !19}
!19 = metadata !{metadata !4, metadata !"LocalReference", i32 1}
!20 = metadata !{metadata !21, metadata !22}
!21 = metadata !{metadata !6, metadata !"LocalReference", i32 0}
!22 = metadata !{metadata !10, metadata !"LocalReference", i32 0}

-----------Patching created function redefine_start1--------------
accumulated bbs:
entry,if.else,if.else3,if.else51,if.else55,if.else62,if.then65,if.then68,if.else71,if.end74,if.then80,if.end81,if.then84,if.end85,if.then90,if.then5,if.end91,if.else9,if.then95,if.end96,if.else13,for.cond,for.body,for.inc,if.else19,for.end,if.then24,if.else30,if.then18,land.lhs.true,if.end,if.then12,if.end31,land.lhs.true107,if.end32,land.lhs.true109,if.then38,land.lhs.true111,if.end39,land.lhs.true113,if.then42,if.then116,if.else118,if.end117,if.end43,if.then58,if.end119,if.then48,if.then54,if.then7,if.end49,if.end120,if.end121,if.end50,if.then2,if.end122,if.then,

----------Adding consumed by metadata----------

----------Dealing with conditional branches from other HyperOps----------
number of conditional jump sources:0

----------Dealing with unconditional branches from other HyperOps----------
number of unconditional jump sources:0

----------Adding a predicate from entry hyperop if there are no incoming edges to the hyperop----------
after patching function redefine_start1, module:; ModuleID = './Compilation_Error/startuppump_original.ll'
target datalayout = "E-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-n32"
target triple = "redefine"

@CMD_FUEL_RAMP_START = global float 0x3FC1EB8520000000, align 4
@CMD_FUEL_RAMP_END = global float 0x3FC1EB8520000000, align 4
@NH_IDLE_GROUND = global float 5.350000e+01, align 4
@NL_IDLE_GROUND = global float 3.000000e+01, align 4
@zero_point_zero_zero_one_four = global float 0x3F56F00680000000, align 4
@zero_point_zero_zero_one = global float 0x3F50624DE0000000, align 4
@one_point_o = global float 1.000000e+00, align 4
@zero_point_one_eight = global float 0x3FC70A3D80000000, align 4
@NL_REF = global float 4.363600e+04, align 4
@NH_REF = global float 5.071900e+04, align 4
@hundred = global float 1.000000e+02, align 4
@zero_point_zero_two = global float 0x3F947AE140000000, align 4
@zero_point_zero_two_five = global float 0x3F999999A0000000, align 4
@zero_point_nine_nine_five = global float 0x3FEFD70A40000000, align 4
@zero_point_one = global float 0x3FB99999A0000000, align 4
@zero_point_zero_one = global float 0x3F847AE140000000, align 4
@exp1 = global float 0x3E8AD7F2A0000000, align 4
@exp3 = global float 0x3F0A36E2E0000000, align 4
@ten = global i32 10, align 4
@fifty = global i32 50, align 4
@thirty = global i32 30, align 4
@twenty = global i32 20, align 4
@two = global i32 2, align 4
@epsilon_global = common global float 0.000000e+00, align 4
@iTerm = common global float 0.000000e+00, align 4
@epsilon_modified = common global float 0.000000e+00, align 4
@dTerm_modified = common global float 0.000000e+00, align 4
@fuel_pump_integrator = common global float 0.000000e+00, align 4
@nh_setpoint = common global float 0.000000e+00, align 4
@ramp_filter_memory = common global float 0.000000e+00, align 4
@redefine_in_parameters = common global [16 x i32] zeroinitializer, align 4
@redefine_start.fuel_press_integrator = internal global float 0.000000e+00, align 4
@redefine_start.fuel_pump_integrator = internal global float 0.000000e+00, align 4
@redefine_start.dnhqdt = internal global float 0.000000e+00, align 4
@fuel_pump_cmd = common global float 0.000000e+00, align 4
@t_fuel_press_control = common global i32 0, align 4
@fuel_press_setpoint = common global float 0.000000e+00, align 4
@operation_mode = common global i32 0, align 4
@redefine_in_stab = common global [50 x i32] zeroinitializer, align 4
@stab_array_index = common global i32 0, align 4
@nh_idle = common global float 0.000000e+00, align 4
@redefine_out_parameters = common global [12 x i32] zeroinitializer, align 4
@nh_average = common global float 0.000000e+00, align 4

; Function Attrs: nounwind
define void @pid_init(float %iTermtemp) #0 {
entry:
  %iTermtemp.addr = alloca float, align 4
  store float %iTermtemp, float* %iTermtemp.addr, align 4
  store float 0.000000e+00, float* @epsilon_global, align 4
  %0 = load float* %iTermtemp.addr, align 4
  store float %0, float* @iTerm, align 4
  store float 0.000000e+00, float* @epsilon_modified, align 4
  store float 0.000000e+00, float* @dTerm_modified, align 4
  ret void
}

; Function Attrs: nounwind
define void @regulation_nh_init(float %cmd) #0 {
entry:
  %cmd.addr = alloca float, align 4
  store float %cmd, float* %cmd.addr, align 4
  %0 = load float* %cmd.addr, align 4
  br label %newName0

newName0:                                         ; preds = %entry
  call void @pid_init(float %0)
  br label %newName01

newName01:                                        ; preds = %newName0
  %1 = load float* %cmd.addr, align 4
  store float %1, float* @fuel_pump_integrator, align 4
  %2 = load float* @nh_setpoint, align 4
  store float %2, float* @ramp_filter_memory, align 4
  ret void
}

; Function Attrs: nounwind
define void @redefine_start() #0 {
entry:
  %0 = getelementptr inbounds float* @CMD_FUEL_RAMP_START, i32 0
  store float 0x3FC1EB8520000000, float* %0, align 4
  %1 = getelementptr inbounds float* @CMD_FUEL_RAMP_END, i32 0
  store float 0x3FC1EB8520000000, float* %1, align 4
  %2 = getelementptr inbounds float* @NH_IDLE_GROUND, i32 0
  store float 5.350000e+01, float* %2, align 4
  %3 = getelementptr inbounds float* @NL_IDLE_GROUND, i32 0
  store float 3.000000e+01, float* %3, align 4
  %4 = getelementptr inbounds float* @zero_point_zero_zero_one_four, i32 0
  store float 0x3F56F00680000000, float* %4, align 4
  %5 = getelementptr inbounds float* @zero_point_zero_zero_one, i32 0
  store float 0x3F50624DE0000000, float* %5, align 4
  %6 = getelementptr inbounds float* @one_point_o, i32 0
  store float 1.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds float* @zero_point_one_eight, i32 0
  store float 0x3FC70A3D80000000, float* %7, align 4
  %8 = getelementptr inbounds float* @NL_REF, i32 0
  store float 4.363600e+04, float* %8, align 4
  %9 = getelementptr inbounds float* @NH_REF, i32 0
  store float 5.071900e+04, float* %9, align 4
  %10 = getelementptr inbounds float* @hundred, i32 0
  store float 1.000000e+02, float* %10, align 4
  %11 = getelementptr inbounds float* @zero_point_zero_two, i32 0
  store float 0x3F947AE140000000, float* %11, align 4
  %12 = getelementptr inbounds float* @zero_point_zero_two_five, i32 0
  store float 0x3F999999A0000000, float* %12, align 4
  %13 = getelementptr inbounds float* @zero_point_nine_nine_five, i32 0
  store float 0x3FEFD70A40000000, float* %13, align 4
  %14 = getelementptr inbounds float* @zero_point_one, i32 0
  store float 0x3FB99999A0000000, float* %14, align 4
  %15 = getelementptr inbounds float* @zero_point_zero_one, i32 0
  store float 0x3F847AE140000000, float* %15, align 4
  %16 = getelementptr inbounds float* @exp1, i32 0
  store float 0x3E8AD7F2A0000000, float* %16, align 4
  %17 = getelementptr inbounds float* @exp3, i32 0
  store float 0x3F0A36E2E0000000, float* %17, align 4
  %18 = getelementptr inbounds i32* @ten, i32 0
  store i32 10, i32* %18, align 4
  %19 = getelementptr inbounds i32* @fifty, i32 0
  store i32 50, i32* %19, align 4
  %20 = getelementptr inbounds i32* @thirty, i32 0
  store i32 30, i32* %20, align 4
  %21 = getelementptr inbounds i32* @twenty, i32 0
  store i32 20, i32* %21, align 4
  %22 = getelementptr inbounds i32* @two, i32 0
  store i32 2, i32* %22, align 4
  %23 = getelementptr inbounds float* @epsilon_global, i32 0
  store float 0.000000e+00, float* %23, align 4
  %24 = getelementptr inbounds float* @iTerm, i32 0
  store float 0.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds float* @epsilon_modified, i32 0
  store float 0.000000e+00, float* %25, align 4
  %26 = getelementptr inbounds float* @dTerm_modified, i32 0
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds float* @fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds float* @nh_setpoint, i32 0
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds float* @ramp_filter_memory, i32 0
  store float 0.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds float* @redefine_start.fuel_press_integrator, i32 0
  store float 0.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds float* @redefine_start.fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %31, align 4
  %32 = getelementptr inbounds float* @redefine_start.dnhqdt, i32 0
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds float* @fuel_pump_cmd, i32 0
  store float 0.000000e+00, float* %33, align 4
  %34 = getelementptr inbounds i32* @t_fuel_press_control, i32 0
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds float* @fuel_press_setpoint, i32 0
  store float 0.000000e+00, float* %35, align 4
  %36 = getelementptr inbounds i32* @operation_mode, i32 0
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds i32* @stab_array_index, i32 0
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds float* @nh_idle, i32 0
  store float 0.000000e+00, float* %38, align 4
  %39 = getelementptr inbounds float* @nh_average, i32 0
  store float 0.000000e+00, float* %39, align 4
  %current_nh = alloca float, align 4
  %index_nh = alloca float, align 4
  %epsilon = alloca float, align 4
  %nh_average = alloca float, align 4
  %i = alloca i32, align 4
  %startup_time = alloca i32, align 4
  %fuel_press = alloca float, align 4
  %40 = load float* bitcast ([16 x i32]* @redefine_in_parameters to float*), align 4
  store float %40, float* %current_nh, align 4
  %41 = load float* bitcast (i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 5) to float*), align 4
  store float %41, float* %index_nh, align 4
  %42 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 1), align 4
  %cmp = icmp eq i32 %42, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* @fuel_pump_cmd, align 4
  %43 = load float* @fuel_pump_cmd, align 4
  br label %newName0

newName0:                                         ; preds = %if.then
  call void @regulation_nh_init(float %43)
  br label %if.end124

if.else:                                          ; preds = %entry
  %44 = load float* %current_nh, align 4
  %cmp1 = fcmp olt float %44, 2.700000e+03
  br i1 %cmp1, label %if.then2, label %if.else3

if.then2:                                         ; preds = %if.else
  br label %if.end123

if.else3:                                         ; preds = %if.else
  %45 = load float* %current_nh, align 4
  %cmp4 = fcmp olt float %45, 1.500000e+04
  br i1 %cmp4, label %if.then5, label %if.else51

if.then5:                                         ; preds = %if.else3
  %46 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 2), align 4
  %cmp6 = icmp eq i32 %46, -1
  br i1 %cmp6, label %if.then7, label %if.else9

if.then7:                                         ; preds = %if.then5
  %47 = load float* @CMD_FUEL_RAMP_START, align 4
  %48 = load float* %current_nh, align 4
  %sub = fsub float %48, 2.700000e+03
  %49 = load float* @CMD_FUEL_RAMP_END, align 4
  %50 = load float* @CMD_FUEL_RAMP_START, align 4
  %sub8 = fsub float %49, %50
  %mul = fmul float %sub, %sub8
  %add = fadd float %47, %mul
  store float %add, float* @fuel_pump_cmd, align 4
  %51 = load float* @fuel_pump_cmd, align 4
  store float %51, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end50

if.else9:                                         ; preds = %if.then5
  %52 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 14), align 4
  store i32 %52, i32* %startup_time, align 4
  %53 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 15), align 4
  %conv = sitofp i32 %53 to float
  store float %conv, float* %fuel_press, align 4
  %54 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 3), align 4
  %cmp10 = icmp eq i32 %54, -1
  br i1 %cmp10, label %if.then12, label %if.else13

if.then12:                                        ; preds = %if.else9
  %55 = load i32* %startup_time, align 4
  store i32 %55, i32* @t_fuel_press_control, align 4
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %if.end32

if.else13:                                        ; preds = %if.else9
  %56 = load i32* %startup_time, align 4
  %57 = load i32* @t_fuel_press_control, align 4
  %sub14 = sub nsw i32 %56, %57
  %58 = load i32* @ten, align 4
  %59 = load i32* @fifty, align 4
  %mul15 = mul nsw i32 %58, %59
  %cmp16 = icmp slt i32 %sub14, %mul15
  br i1 %cmp16, label %if.then18, label %if.else19

if.then18:                                        ; preds = %if.else13
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %if.end31

if.else19:                                        ; preds = %if.else13
  %60 = load i32* %startup_time, align 4
  %61 = load i32* @t_fuel_press_control, align 4
  %sub20 = sub nsw i32 %60, %61
  %62 = load i32* @thirty, align 4
  %63 = load i32* @fifty, align 4
  %mul21 = mul nsw i32 %62, %63
  %cmp22 = icmp slt i32 %sub20, %mul21
  br i1 %cmp22, label %if.then24, label %if.else30

if.then24:                                        ; preds = %if.else19
  %64 = load float* @zero_point_one_eight, align 4
  %65 = load i32* %startup_time, align 4
  %66 = load i32* @t_fuel_press_control, align 4
  %67 = load i32* @ten, align 4
  %68 = load i32* @fifty, align 4
  %mul25 = mul nsw i32 %67, %68
  %add26 = add nsw i32 %66, %mul25
  %sub27 = sub nsw i32 %65, %add26
  %conv28 = sitofp i32 %sub27 to float
  %add29 = fadd float %64, %conv28
  store float %add29, float* @fuel_press_setpoint, align 4
  br label %if.end

if.else30:                                        ; preds = %if.else19
  store float 1.000000e+00, float* @fuel_press_setpoint, align 4
  br label %if.end

if.end:                                           ; preds = %if.else30, %if.then24
  br label %if.end31

if.end31:                                         ; preds = %if.end, %if.then18
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then12
  %69 = load float* @fuel_press_setpoint, align 4
  %70 = load float* %fuel_press, align 4
  %sub33 = fsub float %69, %70
  store float %sub33, float* %epsilon, align 4
  %71 = load float* @redefine_start.fuel_press_integrator, align 4
  %72 = load float* %epsilon, align 4
  %73 = load float* @zero_point_zero_zero_one_four, align 4
  %mul34 = fmul float %72, %73
  %add35 = fadd float %71, %mul34
  store float %add35, float* @redefine_start.fuel_press_integrator, align 4
  %74 = load float* @redefine_start.fuel_press_integrator, align 4
  %75 = load float* @zero_point_zero_two_five, align 4
  %cmp36 = fcmp ogt float %74, %75
  br i1 %cmp36, label %if.then38, label %if.end39

if.then38:                                        ; preds = %if.end32
  store float 2.500000e-01, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end39

if.end39:                                         ; preds = %if.then38, %if.end32
  %76 = load float* @redefine_start.fuel_press_integrator, align 4
  %77 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp40 = fcmp olt float %76, %77
  br i1 %cmp40, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.end39
  %78 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %78, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.then42, %if.end39
  %79 = load float* @redefine_start.fuel_press_integrator, align 4
  %80 = load float* @zero_point_zero_zero_one, align 4
  %81 = load float* %epsilon, align 4
  %mul44 = fmul float %80, %81
  %add45 = fadd float %79, %mul44
  store float %add45, float* @fuel_pump_cmd, align 4
  %82 = load float* @fuel_pump_cmd, align 4
  %83 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp46 = fcmp olt float %82, %83
  br i1 %cmp46, label %if.then48, label %if.end49

if.then48:                                        ; preds = %if.end43
  %84 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %84, float* @fuel_pump_cmd, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.then48, %if.end43
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then7
  br label %if.end122

if.else51:                                        ; preds = %if.else3
  %85 = load float* %current_nh, align 4
  %cmp52 = fcmp olt float %85, 1.500000e+04
  br i1 %cmp52, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.else51
  br label %if.end121

if.else55:                                        ; preds = %if.else51
  %86 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 4), align 4
  store i32 %86, i32* @operation_mode, align 4
  %87 = load i32* @operation_mode, align 4
  %cmp56 = icmp eq i32 %87, 2
  br i1 %cmp56, label %if.then58, label %if.else62

if.then58:                                        ; preds = %if.else55
  store float 0.000000e+00, float* @fuel_press_setpoint, align 4
  %88 = load float* %current_nh, align 4
  store float %88, float* @nh_setpoint, align 4
  %89 = load float* @fuel_pump_cmd, align 4
  store float %89, float* @redefine_start.fuel_pump_integrator, align 4
  %90 = load float* %current_nh, align 4
  %91 = load float* %index_nh, align 4
  %sub59 = fsub float %90, %91
  %92 = load i32* @two, align 4
  %conv60 = sitofp i32 %92 to float
  %mul61 = fmul float %sub59, %conv60
  store float %mul61, float* @redefine_start.dnhqdt, align 4
  store i32 4, i32* @operation_mode, align 4
  br label %if.end120

if.else62:                                        ; preds = %if.else55
  %93 = load i32* @operation_mode, align 4
  %cmp63 = icmp eq i32 %93, 4
  br i1 %cmp63, label %if.then65, label %if.else118

if.then65:                                        ; preds = %if.else62
  %94 = load float* @nh_setpoint, align 4
  %95 = load float* @NH_IDLE_GROUND, align 4
  %cmp66 = fcmp olt float %94, %95
  br i1 %cmp66, label %if.then68, label %if.else71

if.then68:                                        ; preds = %if.then65
  %96 = load float* @nh_setpoint, align 4
  %97 = load float* @zero_point_zero_two, align 4
  %98 = load float* @redefine_start.dnhqdt, align 4
  %mul69 = fmul float %97, %98
  %add70 = fadd float %96, %mul69
  store float %add70, float* @nh_setpoint, align 4
  br label %if.end74

if.else71:                                        ; preds = %if.then65
  %99 = load float* @nh_setpoint, align 4
  %100 = load float* @zero_point_zero_two, align 4
  %101 = load float* @redefine_start.dnhqdt, align 4
  %mul72 = fmul float %100, %101
  %sub73 = fsub float %99, %mul72
  store float %sub73, float* @nh_setpoint, align 4
  br label %if.end74

if.end74:                                         ; preds = %if.else71, %if.then68
  %102 = load float* @nh_setpoint, align 4
  %103 = load float* %current_nh, align 4
  %sub75 = fsub float %102, %103
  store float %sub75, float* %epsilon, align 4
  %104 = load float* @redefine_start.fuel_pump_integrator, align 4
  %105 = load float* %epsilon, align 4
  %106 = load float* @exp1, align 4
  %mul76 = fmul float %105, %106
  %add77 = fadd float %104, %mul76
  store float %add77, float* @redefine_start.fuel_pump_integrator, align 4
  %107 = load float* @redefine_start.fuel_pump_integrator, align 4
  %108 = load float* @zero_point_zero_two_five, align 4
  %cmp78 = fcmp ogt float %107, %108
  br i1 %cmp78, label %if.then80, label %if.end81

if.then80:                                        ; preds = %if.end74
  store float 2.500000e-01, float* @redefine_start.fuel_pump_integrator, align 4
  br label %if.end81

if.end81:                                         ; preds = %if.then80, %if.end74
  %109 = load float* @redefine_start.fuel_pump_integrator, align 4
  %110 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp82 = fcmp olt float %109, %110
  br i1 %cmp82, label %if.then84, label %if.end85

if.then84:                                        ; preds = %if.end81
  %111 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %111, float* @redefine_start.fuel_pump_integrator, align 4
  br label %if.end85

if.end85:                                         ; preds = %if.then84, %if.end81
  %112 = load float* @redefine_start.fuel_pump_integrator, align 4
  %113 = load float* @exp3, align 4
  %114 = load float* %epsilon, align 4
  %mul86 = fmul float %113, %114
  %add87 = fadd float %112, %mul86
  store float %add87, float* @fuel_pump_cmd, align 4
  %115 = load float* @fuel_pump_cmd, align 4
  %116 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp88 = fcmp olt float %115, %116
  br i1 %cmp88, label %if.then90, label %if.end91

if.then90:                                        ; preds = %if.end85
  %117 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %117, float* @fuel_pump_cmd, align 4
  br label %if.end91

if.end91:                                         ; preds = %if.then90, %if.end85
  %118 = load float* %current_nh, align 4
  %conv92 = fptosi float %118 to i32
  %119 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 6), align 4
  %arrayidx = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %119
  store i32 %conv92, i32* %arrayidx, align 4
  %120 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 7), align 4
  store i32 %120, i32* @stab_array_index, align 4
  %121 = load i32* @stab_array_index, align 4
  %cmp93 = icmp eq i32 %121, 50
  br i1 %cmp93, label %if.then95, label %if.end96

if.then95:                                        ; preds = %if.end91
  store i32 0, i32* @stab_array_index, align 4
  br label %if.end96

if.end96:                                         ; preds = %if.then95, %if.end91
  store float 0.000000e+00, float* %nh_average, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end96
  %122 = load i32* %i, align 4
  %cmp97 = icmp slt i32 %122, 50
  br i1 %cmp97, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %123 = load i32* %i, align 4
  %arrayidx99 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %123
  %124 = load i32* %arrayidx99, align 4
  %conv100 = sitofp i32 %124 to float
  %125 = load float* %nh_average, align 4
  %add101 = fadd float %125, %conv100
  store float %add101, float* %nh_average, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %126 = load i32* %i, align 4
  %inc = add nsw i32 %126, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %127 = load float* @NH_IDLE_GROUND, align 4
  store float %127, float* @nh_idle, align 4
  %128 = load float* %nh_average, align 4
  %129 = load float* @nh_idle, align 4
  %130 = load float* @NH_REF, align 4
  %mul102 = fmul float %129, %130
  %131 = load float* @hundred, align 4
  %mul103 = fmul float %mul102, %131
  %132 = load float* @zero_point_nine_nine_five, align 4
  %mul104 = fmul float %mul103, %132
  %cmp105 = fcmp oge float %128, %mul104
  br i1 %cmp105, label %land.lhs.true, label %if.end117

land.lhs.true:                                    ; preds = %for.end
  %133 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 8), align 4
  %tobool = icmp ne i32 %133, 0
  br i1 %tobool, label %if.end117, label %land.lhs.true107

land.lhs.true107:                                 ; preds = %land.lhs.true
  %134 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 9), align 4
  %tobool108 = icmp ne i32 %134, 0
  br i1 %tobool108, label %if.end117, label %land.lhs.true109

land.lhs.true109:                                 ; preds = %land.lhs.true107
  %135 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 10), align 4
  %tobool110 = icmp ne i32 %135, 0
  br i1 %tobool110, label %if.end117, label %land.lhs.true111

land.lhs.true111:                                 ; preds = %land.lhs.true109
  %136 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 11), align 4
  %tobool112 = icmp ne i32 %136, 0
  br i1 %tobool112, label %if.end117, label %land.lhs.true113

land.lhs.true113:                                 ; preds = %land.lhs.true111
  %137 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 12), align 4
  %cmp114 = icmp sle i32 %137, 10
  br i1 %cmp114, label %if.then116, label %if.end117

if.then116:                                       ; preds = %land.lhs.true113
  store i32 8, i32* @operation_mode, align 4
  br label %if.end117

if.end117:                                        ; preds = %if.then116, %land.lhs.true113, %land.lhs.true111, %land.lhs.true109, %land.lhs.true107, %land.lhs.true, %for.end
  br label %if.end119

if.else118:                                       ; preds = %if.else62
  store i32 16, i32* @operation_mode, align 4
  br label %if.end119

if.end119:                                        ; preds = %if.else118, %if.end117
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then58
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.then54
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.end50
  br label %if.end123

if.end123:                                        ; preds = %redefine_start1.if.end122, %redefine_start1.if.then2, %if.end122, %if.then2
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %newName0
  %138 = load i32* bitcast (float* @redefine_start.fuel_press_integrator to i32*), align 4
  store i32 %138, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 0), align 4
  %139 = load i32* bitcast (float* @fuel_press_setpoint to i32*), align 4
  store i32 %139, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 1), align 4
  %140 = load i32* bitcast (float* @epsilon_global to i32*), align 4
  store i32 %140, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 2), align 4
  %141 = load i32* bitcast (float* @iTerm to i32*), align 4
  store i32 %141, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 3), align 4
  %142 = load i32* bitcast (float* @epsilon_modified to i32*), align 4
  store i32 %142, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 4), align 4
  %143 = load i32* bitcast (float* @dTerm_modified to i32*), align 4
  store i32 %143, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 5), align 4
  %144 = load i32* bitcast (float* @redefine_start.fuel_pump_integrator to i32*), align 4
  store i32 %144, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 6), align 4
  %145 = load i32* bitcast (float* @ramp_filter_memory to i32*), align 4
  store i32 %145, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 7), align 4
  %146 = bitcast float* %current_nh to i32*
  %147 = load i32* %146, align 4
  store i32 %147, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 8), align 4
  %148 = load i32* @stab_array_index, align 4
  store i32 %148, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 9), align 4
  %149 = bitcast float* %nh_average to i32*
  %150 = load i32* %149, align 4
  store i32 %150, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 10), align 4
  %151 = load i32* bitcast (float* @nh_idle to i32*), align 4
  store i32 %151, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 11), align 4
  ret void
}

define void @redefine_start1() {
redefine_start1.entry:
  %0 = alloca i1, align 4, !Controls !12
  %1 = alloca float, align 4, !ConsumedBy !14
  %2 = getelementptr inbounds float* @CMD_FUEL_RAMP_START, i32 0
  store float 0x3FC1EB8520000000, float* %2, align 4
  %3 = getelementptr inbounds float* @CMD_FUEL_RAMP_END, i32 0
  store float 0x3FC1EB8520000000, float* %3, align 4
  %4 = getelementptr inbounds float* @NH_IDLE_GROUND, i32 0
  store float 5.350000e+01, float* %4, align 4
  %5 = getelementptr inbounds float* @NL_IDLE_GROUND, i32 0
  store float 3.000000e+01, float* %5, align 4
  %6 = getelementptr inbounds float* @zero_point_zero_zero_one_four, i32 0
  store float 0x3F56F00680000000, float* %6, align 4
  %7 = getelementptr inbounds float* @zero_point_zero_zero_one, i32 0
  store float 0x3F50624DE0000000, float* %7, align 4
  %8 = getelementptr inbounds float* @one_point_o, i32 0
  store float 1.000000e+00, float* %8, align 4
  %9 = getelementptr inbounds float* @zero_point_one_eight, i32 0
  store float 0x3FC70A3D80000000, float* %9, align 4
  %10 = getelementptr inbounds float* @NL_REF, i32 0
  store float 4.363600e+04, float* %10, align 4
  %11 = getelementptr inbounds float* @NH_REF, i32 0
  store float 5.071900e+04, float* %11, align 4
  %12 = getelementptr inbounds float* @hundred, i32 0
  store float 1.000000e+02, float* %12, align 4
  %13 = getelementptr inbounds float* @zero_point_zero_two, i32 0
  store float 0x3F947AE140000000, float* %13, align 4
  %14 = getelementptr inbounds float* @zero_point_zero_two_five, i32 0
  store float 0x3F999999A0000000, float* %14, align 4
  %15 = getelementptr inbounds float* @zero_point_nine_nine_five, i32 0
  store float 0x3FEFD70A40000000, float* %15, align 4
  %16 = getelementptr inbounds float* @zero_point_one, i32 0
  store float 0x3FB99999A0000000, float* %16, align 4
  %17 = getelementptr inbounds float* @zero_point_zero_one, i32 0
  store float 0x3F847AE140000000, float* %17, align 4
  %18 = getelementptr inbounds float* @exp1, i32 0
  store float 0x3E8AD7F2A0000000, float* %18, align 4
  %19 = getelementptr inbounds float* @exp3, i32 0
  store float 0x3F0A36E2E0000000, float* %19, align 4
  %20 = getelementptr inbounds i32* @ten, i32 0
  store i32 10, i32* %20, align 4
  %21 = getelementptr inbounds i32* @fifty, i32 0
  store i32 50, i32* %21, align 4
  %22 = getelementptr inbounds i32* @thirty, i32 0
  store i32 30, i32* %22, align 4
  %23 = getelementptr inbounds i32* @twenty, i32 0
  store i32 20, i32* %23, align 4
  %24 = getelementptr inbounds i32* @two, i32 0
  store i32 2, i32* %24, align 4
  %25 = getelementptr inbounds float* @epsilon_global, i32 0
  store float 0.000000e+00, float* %25, align 4
  %26 = getelementptr inbounds float* @iTerm, i32 0
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds float* @epsilon_modified, i32 0
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds float* @dTerm_modified, i32 0
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds float* @fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds float* @nh_setpoint, i32 0
  store float 0.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds float* @ramp_filter_memory, i32 0
  store float 0.000000e+00, float* %31, align 4
  %32 = getelementptr inbounds float* @redefine_start.fuel_press_integrator, i32 0
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds float* @redefine_start.fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %33, align 4
  %34 = getelementptr inbounds float* @redefine_start.dnhqdt, i32 0
  store float 0.000000e+00, float* %34, align 4
  %35 = getelementptr inbounds float* @fuel_pump_cmd, i32 0
  store float 0.000000e+00, float* %35, align 4
  %36 = getelementptr inbounds i32* @t_fuel_press_control, i32 0
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds float* @fuel_press_setpoint, i32 0
  store float 0.000000e+00, float* %37, align 4
  %38 = getelementptr inbounds i32* @operation_mode, i32 0
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds i32* @stab_array_index, i32 0
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds float* @nh_idle, i32 0
  store float 0.000000e+00, float* %40, align 4
  %41 = getelementptr inbounds float* @nh_average, i32 0
  store float 0.000000e+00, float* %41, align 4
  %42 = alloca float, align 4, !ConsumedBy !16
  %43 = alloca float, align 4
  %44 = alloca float, align 4
  %45 = alloca float, align 4, !ConsumedBy !18
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca float, align 4
  %49 = load float* bitcast ([16 x i32]* @redefine_in_parameters to float*), align 4
  store float %49, float* %42, align 4
  %50 = load float* bitcast (i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 5) to float*), align 4
  store float %50, float* %43, align 4
  %51 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 1), align 4
  %52 = icmp eq i32 %51, 0
  store i1 %52, i1* %0, align 4
  br i1 %52, label %redefine_start1.if.then, label %redefine_start1.if.else

redefine_start1.if.else:                          ; preds = %redefine_start1.entry
  %53 = load float* %42, align 4
  %54 = fcmp olt float %53, 2.700000e+03
  br i1 %54, label %redefine_start1.if.then2, label %redefine_start1.if.else3

redefine_start1.if.else3:                         ; preds = %redefine_start1.if.else
  %55 = load float* %42, align 4
  %56 = fcmp olt float %55, 1.500000e+04
  br i1 %56, label %redefine_start1.if.then5, label %redefine_start1.if.else51

redefine_start1.if.else51:                        ; preds = %redefine_start1.if.else3
  %57 = load float* %42, align 4
  %58 = fcmp olt float %57, 1.500000e+04
  br i1 %58, label %redefine_start1.if.then54, label %redefine_start1.if.else55

redefine_start1.if.else55:                        ; preds = %redefine_start1.if.else51
  %59 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 4), align 4
  store i32 %59, i32* @operation_mode, align 4
  %60 = load i32* @operation_mode, align 4
  %61 = icmp eq i32 %60, 2
  br i1 %61, label %redefine_start1.if.then58, label %redefine_start1.if.else62

redefine_start1.if.else62:                        ; preds = %redefine_start1.if.else55
  %62 = load i32* @operation_mode, align 4
  %63 = icmp eq i32 %62, 4
  br i1 %63, label %redefine_start1.if.then65, label %redefine_start1.if.else118

redefine_start1.if.then65:                        ; preds = %redefine_start1.if.else62
  %64 = load float* @nh_setpoint, align 4
  %65 = load float* @NH_IDLE_GROUND, align 4
  %66 = fcmp olt float %64, %65
  br i1 %66, label %redefine_start1.if.then68, label %redefine_start1.if.else71

redefine_start1.if.then68:                        ; preds = %redefine_start1.if.then65
  %67 = load float* @nh_setpoint, align 4
  %68 = load float* @zero_point_zero_two, align 4
  %69 = load float* @redefine_start.dnhqdt, align 4
  %70 = fmul float %68, %69
  %71 = fadd float %67, %70
  store float %71, float* @nh_setpoint, align 4
  br label %redefine_start1.if.end74

redefine_start1.if.else71:                        ; preds = %redefine_start1.if.then65
  %72 = load float* @nh_setpoint, align 4
  %73 = load float* @zero_point_zero_two, align 4
  %74 = load float* @redefine_start.dnhqdt, align 4
  %75 = fmul float %73, %74
  %76 = fsub float %72, %75
  store float %76, float* @nh_setpoint, align 4
  br label %redefine_start1.if.end74

redefine_start1.if.end74:                         ; preds = %redefine_start1.if.else71, %redefine_start1.if.then68
  %77 = load float* @nh_setpoint, align 4
  %78 = load float* %42, align 4
  %79 = fsub float %77, %78
  store float %79, float* %44, align 4
  %80 = load float* @redefine_start.fuel_pump_integrator, align 4
  %81 = load float* %44, align 4
  %82 = load float* @exp1, align 4
  %83 = fmul float %81, %82
  %84 = fadd float %80, %83
  store float %84, float* @redefine_start.fuel_pump_integrator, align 4
  %85 = load float* @redefine_start.fuel_pump_integrator, align 4
  %86 = load float* @zero_point_zero_two_five, align 4
  %87 = fcmp ogt float %85, %86
  br i1 %87, label %redefine_start1.if.then80, label %redefine_start1.if.end81

redefine_start1.if.then80:                        ; preds = %redefine_start1.if.end74
  store float 2.500000e-01, float* @redefine_start.fuel_pump_integrator, align 4
  br label %redefine_start1.if.end81

redefine_start1.if.end81:                         ; preds = %redefine_start1.if.then80, %redefine_start1.if.end74
  %88 = load float* @redefine_start.fuel_pump_integrator, align 4
  %89 = load float* @CMD_FUEL_RAMP_END, align 4
  %90 = fcmp olt float %88, %89
  br i1 %90, label %redefine_start1.if.then84, label %redefine_start1.if.end85

redefine_start1.if.then84:                        ; preds = %redefine_start1.if.end81
  %91 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %91, float* @redefine_start.fuel_pump_integrator, align 4
  br label %redefine_start1.if.end85

redefine_start1.if.end85:                         ; preds = %redefine_start1.if.then84, %redefine_start1.if.end81
  %92 = load float* @redefine_start.fuel_pump_integrator, align 4
  %93 = load float* @exp3, align 4
  %94 = load float* %44, align 4
  %95 = fmul float %93, %94
  %96 = fadd float %92, %95
  store float %96, float* @fuel_pump_cmd, align 4
  %97 = load float* @fuel_pump_cmd, align 4
  %98 = load float* @CMD_FUEL_RAMP_END, align 4
  %99 = fcmp olt float %97, %98
  br i1 %99, label %redefine_start1.if.then90, label %redefine_start1.if.end91

redefine_start1.if.then90:                        ; preds = %redefine_start1.if.end85
  %100 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %100, float* @fuel_pump_cmd, align 4
  br label %redefine_start1.if.end91

redefine_start1.if.then5:                         ; preds = %redefine_start1.if.else3
  %101 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 2), align 4
  %102 = icmp eq i32 %101, -1
  br i1 %102, label %redefine_start1.if.then7, label %redefine_start1.if.else9

redefine_start1.if.end91:                         ; preds = %redefine_start1.if.then90, %redefine_start1.if.end85
  %103 = load float* %42, align 4
  %104 = fptosi float %103 to i32
  %105 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 6), align 4
  %106 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %105
  store i32 %104, i32* %106, align 4
  %107 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 7), align 4
  store i32 %107, i32* @stab_array_index, align 4
  %108 = load i32* @stab_array_index, align 4
  %109 = icmp eq i32 %108, 50
  br i1 %109, label %redefine_start1.if.then95, label %redefine_start1.if.end96

redefine_start1.if.else9:                         ; preds = %redefine_start1.if.then5
  %110 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 14), align 4
  store i32 %110, i32* %47, align 4
  %111 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 15), align 4
  %112 = sitofp i32 %111 to float
  store float %112, float* %48, align 4
  %113 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 3), align 4
  %114 = icmp eq i32 %113, -1
  br i1 %114, label %redefine_start1.if.then12, label %redefine_start1.if.else13

redefine_start1.if.then95:                        ; preds = %redefine_start1.if.end91
  store i32 0, i32* @stab_array_index, align 4
  br label %redefine_start1.if.end96

redefine_start1.if.end96:                         ; preds = %redefine_start1.if.then95, %redefine_start1.if.end91
  store float 0.000000e+00, float* %45, align 4
  store i32 0, i32* %46, align 4
  br label %redefine_start1.for.cond

redefine_start1.if.else13:                        ; preds = %redefine_start1.if.else9
  %115 = load i32* %47, align 4
  %116 = load i32* @t_fuel_press_control, align 4
  %117 = sub nsw i32 %115, %116
  %118 = load i32* @ten, align 4
  %119 = load i32* @fifty, align 4
  %120 = mul nsw i32 %118, %119
  %121 = icmp slt i32 %117, %120
  br i1 %121, label %redefine_start1.if.then18, label %redefine_start1.if.else19

redefine_start1.for.cond:                         ; preds = %redefine_start1.for.inc, %redefine_start1.if.end96
  %122 = load i32* %46, align 4
  %123 = icmp slt i32 %122, 50
  br i1 %123, label %redefine_start1.for.body, label %redefine_start1.for.end

redefine_start1.for.body:                         ; preds = %redefine_start1.for.cond
  %124 = load i32* %46, align 4
  %125 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %124
  %126 = load i32* %125, align 4
  %127 = sitofp i32 %126 to float
  %128 = load float* %45, align 4
  %129 = fadd float %128, %127
  store float %129, float* %45, align 4
  br label %redefine_start1.for.inc

redefine_start1.for.inc:                          ; preds = %redefine_start1.for.body
  %130 = load i32* %46, align 4
  %131 = add nsw i32 %130, 1
  store i32 %131, i32* %46, align 4
  br label %redefine_start1.for.cond

redefine_start1.if.else19:                        ; preds = %redefine_start1.if.else13
  %132 = load i32* %47, align 4
  %133 = load i32* @t_fuel_press_control, align 4
  %134 = sub nsw i32 %132, %133
  %135 = load i32* @thirty, align 4
  %136 = load i32* @fifty, align 4
  %137 = mul nsw i32 %135, %136
  %138 = icmp slt i32 %134, %137
  br i1 %138, label %redefine_start1.if.then24, label %redefine_start1.if.else30

redefine_start1.for.end:                          ; preds = %redefine_start1.for.cond
  %139 = load float* @NH_IDLE_GROUND, align 4
  store float %139, float* @nh_idle, align 4
  %140 = load float* %45, align 4
  %141 = load float* @nh_idle, align 4
  %142 = load float* @NH_REF, align 4
  %143 = fmul float %141, %142
  %144 = load float* @hundred, align 4
  %145 = fmul float %143, %144
  %146 = load float* @zero_point_nine_nine_five, align 4
  %147 = fmul float %145, %146
  %148 = fcmp oge float %140, %147
  br i1 %148, label %redefine_start1.land.lhs.true, label %redefine_start1.if.end117

redefine_start1.if.then24:                        ; preds = %redefine_start1.if.else19
  %149 = load float* @zero_point_one_eight, align 4
  %150 = load i32* %47, align 4
  %151 = load i32* @t_fuel_press_control, align 4
  %152 = load i32* @ten, align 4
  %153 = load i32* @fifty, align 4
  %154 = mul nsw i32 %152, %153
  %155 = add nsw i32 %151, %154
  %156 = sub nsw i32 %150, %155
  %157 = sitofp i32 %156 to float
  %158 = fadd float %149, %157
  store float %158, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end

redefine_start1.if.else30:                        ; preds = %redefine_start1.if.else19
  store float 1.000000e+00, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end

redefine_start1.if.then18:                        ; preds = %redefine_start1.if.else13
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end31

redefine_start1.land.lhs.true:                    ; preds = %redefine_start1.for.end
  %159 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 8), align 4
  %160 = icmp ne i32 %159, 0
  br i1 %160, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true107

redefine_start1.if.end:                           ; preds = %redefine_start1.if.else30, %redefine_start1.if.then24
  br label %redefine_start1.if.end31

redefine_start1.if.then12:                        ; preds = %redefine_start1.if.else9
  %161 = load i32* %47, align 4
  store i32 %161, i32* @t_fuel_press_control, align 4
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end32

redefine_start1.if.end31:                         ; preds = %redefine_start1.if.end, %redefine_start1.if.then18
  br label %redefine_start1.if.end32

redefine_start1.land.lhs.true107:                 ; preds = %redefine_start1.land.lhs.true
  %162 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 9), align 4
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true109

redefine_start1.if.end32:                         ; preds = %redefine_start1.if.end31, %redefine_start1.if.then12
  %164 = load float* @fuel_press_setpoint, align 4
  %165 = load float* %48, align 4
  %166 = fsub float %164, %165
  store float %166, float* %44, align 4
  %167 = load float* @redefine_start.fuel_press_integrator, align 4
  %168 = load float* %44, align 4
  %169 = load float* @zero_point_zero_zero_one_four, align 4
  %170 = fmul float %168, %169
  %171 = fadd float %167, %170
  store float %171, float* @redefine_start.fuel_press_integrator, align 4
  %172 = load float* @redefine_start.fuel_press_integrator, align 4
  %173 = load float* @zero_point_zero_two_five, align 4
  %174 = fcmp ogt float %172, %173
  br i1 %174, label %redefine_start1.if.then38, label %redefine_start1.if.end39

redefine_start1.land.lhs.true109:                 ; preds = %redefine_start1.land.lhs.true107
  %175 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 10), align 4
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true111

redefine_start1.if.then38:                        ; preds = %redefine_start1.if.end32
  store float 2.500000e-01, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end39

redefine_start1.land.lhs.true111:                 ; preds = %redefine_start1.land.lhs.true109
  %177 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 11), align 4
  %178 = icmp ne i32 %177, 0
  br i1 %178, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true113

redefine_start1.if.end39:                         ; preds = %redefine_start1.if.then38, %redefine_start1.if.end32
  %179 = load float* @redefine_start.fuel_press_integrator, align 4
  %180 = load float* @CMD_FUEL_RAMP_END, align 4
  %181 = fcmp olt float %179, %180
  br i1 %181, label %redefine_start1.if.then42, label %redefine_start1.if.end43

redefine_start1.land.lhs.true113:                 ; preds = %redefine_start1.land.lhs.true111
  %182 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 12), align 4
  %183 = icmp sle i32 %182, 10
  br i1 %183, label %redefine_start1.if.then116, label %redefine_start1.if.end117

redefine_start1.if.then42:                        ; preds = %redefine_start1.if.end39
  %184 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %184, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end43

redefine_start1.if.then116:                       ; preds = %redefine_start1.land.lhs.true113
  store i32 8, i32* @operation_mode, align 4
  br label %redefine_start1.if.end117

redefine_start1.if.else118:                       ; preds = %redefine_start1.if.else62
  store i32 16, i32* @operation_mode, align 4
  br label %redefine_start1.if.end119

redefine_start1.if.end117:                        ; preds = %redefine_start1.if.then116, %redefine_start1.land.lhs.true113, %redefine_start1.land.lhs.true111, %redefine_start1.land.lhs.true109, %redefine_start1.land.lhs.true107, %redefine_start1.land.lhs.true, %redefine_start1.for.end
  br label %redefine_start1.if.end119

redefine_start1.if.end43:                         ; preds = %redefine_start1.if.then42, %redefine_start1.if.end39
  %185 = load float* @redefine_start.fuel_press_integrator, align 4
  %186 = load float* @zero_point_zero_zero_one, align 4
  %187 = load float* %44, align 4
  %188 = fmul float %186, %187
  %189 = fadd float %185, %188
  store float %189, float* @fuel_pump_cmd, align 4
  %190 = load float* @fuel_pump_cmd, align 4
  %191 = load float* @CMD_FUEL_RAMP_END, align 4
  %192 = fcmp olt float %190, %191
  br i1 %192, label %redefine_start1.if.then48, label %redefine_start1.if.end49

redefine_start1.if.then58:                        ; preds = %redefine_start1.if.else55
  store float 0.000000e+00, float* @fuel_press_setpoint, align 4
  %193 = load float* %42, align 4
  store float %193, float* @nh_setpoint, align 4
  %194 = load float* @fuel_pump_cmd, align 4
  store float %194, float* @redefine_start.fuel_pump_integrator, align 4
  %195 = load float* %42, align 4
  %196 = load float* %43, align 4
  %197 = fsub float %195, %196
  %198 = load i32* @two, align 4
  %199 = sitofp i32 %198 to float
  %200 = fmul float %197, %199
  store float %200, float* @redefine_start.dnhqdt, align 4
  store i32 4, i32* @operation_mode, align 4
  br label %redefine_start1.if.end120

redefine_start1.if.end119:                        ; preds = %redefine_start1.if.end117, %redefine_start1.if.else118
  br label %redefine_start1.if.end120

redefine_start1.if.then48:                        ; preds = %redefine_start1.if.end43
  %201 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %201, float* @fuel_pump_cmd, align 4
  br label %redefine_start1.if.end49

redefine_start1.if.then54:                        ; preds = %redefine_start1.if.else51
  br label %redefine_start1.if.end121

redefine_start1.if.then7:                         ; preds = %redefine_start1.if.then5
  %202 = load float* @CMD_FUEL_RAMP_START, align 4
  %203 = load float* %42, align 4
  %204 = fsub float %203, 2.700000e+03
  %205 = load float* @CMD_FUEL_RAMP_END, align 4
  %206 = load float* @CMD_FUEL_RAMP_START, align 4
  %207 = fsub float %205, %206
  %208 = fmul float %204, %207
  %209 = fadd float %202, %208
  store float %209, float* @fuel_pump_cmd, align 4
  %210 = load float* @fuel_pump_cmd, align 4
  store float %210, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end50

redefine_start1.if.end49:                         ; preds = %redefine_start1.if.then48, %redefine_start1.if.end43
  br label %redefine_start1.if.end50

redefine_start1.if.end120:                        ; preds = %redefine_start1.if.end119, %redefine_start1.if.then58
  br label %redefine_start1.if.end121

redefine_start1.if.end121:                        ; preds = %redefine_start1.if.end120, %redefine_start1.if.then54
  br label %redefine_start1.if.end122

redefine_start1.if.end50:                         ; preds = %redefine_start1.if.end49, %redefine_start1.if.then7
  br label %redefine_start1.if.end122

redefine_start1.if.then2:                         ; preds = %redefine_start1.if.else
  br label %if.end123

redefine_start1.if.end122:                        ; preds = %redefine_start1.if.end50, %redefine_start1.if.end121
  br label %if.end123

redefine_start1.if.then:                          ; preds = %redefine_start1.entry
  store float 0.000000e+00, float* @fuel_pump_cmd, align 4
  %211 = load float* @fuel_pump_cmd, align 4
  store float %211, float* %1, align 4
  br label %redefine_start1.return

redefine_start1.return:                           ; preds = %redefine_start1.if.then
  ret void
}

define void @redefine_start2() {
redefine_start2.if.end123:
  br label %redefine_start2.return

redefine_start2.return:                           ; preds = %redefine_start2.if.end123
  ret void
}

define void @redefine_start3(float*, float*) {
redefine_start3.if.end124:
  %2 = load i32* bitcast (float* @redefine_start.fuel_press_integrator to i32*), align 4
  store i32 %2, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 0), align 4
  %3 = load i32* bitcast (float* @fuel_press_setpoint to i32*), align 4
  store i32 %3, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 1), align 4
  %4 = load i32* bitcast (float* @epsilon_global to i32*), align 4
  store i32 %4, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 2), align 4
  %5 = load i32* bitcast (float* @iTerm to i32*), align 4
  store i32 %5, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 3), align 4
  %6 = load i32* bitcast (float* @epsilon_modified to i32*), align 4
  store i32 %6, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 4), align 4
  %7 = load i32* bitcast (float* @dTerm_modified to i32*), align 4
  store i32 %7, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 5), align 4
  %8 = load i32* bitcast (float* @redefine_start.fuel_pump_integrator to i32*), align 4
  store i32 %8, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 6), align 4
  %9 = load i32* bitcast (float* @ramp_filter_memory to i32*), align 4
  store i32 %9, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 7), align 4
  %10 = bitcast float* %0 to i32*
  %11 = load i32* %10, align 4
  store i32 %11, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 8), align 4
  %12 = load i32* @stab_array_index, align 4
  store i32 %12, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 9), align 4
  %13 = bitcast float* %1 to i32*
  %14 = load i32* %13, align 4
  store i32 %14, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 10), align 4
  %15 = load i32* bitcast (float* @nh_idle to i32*), align 4
  store i32 %15, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 11), align 4
  br label %redefine_start3.return

redefine_start3.return:                           ; preds = %redefine_start3.if.end124
  ret void
}

define void @regulation_nh_init4(float*) {
regulation_nh_init4.newName01:
  %1 = load float* %0, align 4
  store float %1, float* @fuel_pump_integrator, align 4
  %2 = load float* @nh_setpoint, align 4
  store float %2, float* @ramp_filter_memory, align 4
  br label %regulation_nh_init4.return

regulation_nh_init4.return:                       ; preds = %regulation_nh_init4.newName01
  ret void
}

define void @regulation_nh_init5(float*) {
regulation_nh_init5.entry:
  %1 = load float* %0
  %2 = alloca float, align 4, !ConsumedBy !20
  store float %1, float* %2, align 4
  %3 = load float* %2, align 4
  br label %regulation_nh_init5.return

regulation_nh_init5.return:                       ; preds = %regulation_nh_init5.entry
  ret void
}

define void @pid_init6(float*) {
pid_init6.entry:
  %1 = load float* %0
  %2 = alloca float, align 4
  store float %1, float* %2, align 4
  store float 0.000000e+00, float* @epsilon_global, align 4
  %3 = load float* %2, align 4
  store float %3, float* @iTerm, align 4
  store float 0.000000e+00, float* @epsilon_modified, align 4
  store float 0.000000e+00, float* @dTerm_modified, align 4
  br label %pid_init6.return

pid_init6.return:                                 ; preds = %pid_init6.entry
  ret void
}

attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }

!redefine.annotations = !{!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10, !11}

!0 = metadata !{metadata !"HyperOp", void ()* @redefine_start1, metadata !"Static"}
!1 = metadata !{metadata !"Entry", metadata !0}
!2 = metadata !{metadata !"HyperOp", void ()* @redefine_start2, metadata !"Static"}
!3 = metadata !{metadata !"Intermediate", metadata !2}
!4 = metadata !{metadata !"HyperOp", void (float*, float*)* @redefine_start3, metadata !"Static"}
!5 = metadata !{metadata !"Exit", metadata !4}
!6 = metadata !{metadata !"HyperOp", void (float*)* @regulation_nh_init4, metadata !"Static"}
!7 = metadata !{metadata !"Intermediate", metadata !6}
!8 = metadata !{metadata !"HyperOp", void (float*)* @regulation_nh_init5, metadata !"Static"}
!9 = metadata !{metadata !"Intermediate", metadata !8}
!10 = metadata !{metadata !"HyperOp", void (float*)* @pid_init6, metadata !"Static"}
!11 = metadata !{metadata !"Intermediate", metadata !10}
!12 = metadata !{metadata !13}
!13 = metadata !{metadata !8, metadata !"1"}
!14 = metadata !{metadata !15}
!15 = metadata !{metadata !8, metadata !"LocalReference", i32 0}
!16 = metadata !{metadata !17}
!17 = metadata !{metadata !4, metadata !"LocalReference", i32 0}
!18 = metadata !{metadata !19}
!19 = metadata !{metadata !4, metadata !"LocalReference", i32 1}
!20 = metadata !{metadata !21, metadata !22}
!21 = metadata !{metadata !6, metadata !"LocalReference", i32 0}
!22 = metadata !{metadata !10, metadata !"LocalReference", i32 0}

-----------Patching created function redefine_start2--------------
accumulated bbs:
if.end123,

----------Adding consumed by metadata----------

----------Dealing with conditional branches from other HyperOps----------
number of conditional jump sources:1
working on conditional branch instruction:  br i1 %cmp, label %if.then, label %if.else
target bb:
if.end123:                                        ; preds = %redefine_start1.if.end122, %redefine_start1.if.then2, %if.end122, %if.then2
  br label %if.end124

producer of data:redefine_start and its clone?redefine_start1, is it static?1

----------Dealing with unconditional branches from other HyperOps----------
number of unconditional jump sources:2
what was callsite size earlier??0
what was callsite size earlier??0

----------Adding a predicate from entry hyperop if there are no incoming edges to the hyperop----------
after patching function redefine_start2, module:; ModuleID = './Compilation_Error/startuppump_original.ll'
target datalayout = "E-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-n32"
target triple = "redefine"

@CMD_FUEL_RAMP_START = global float 0x3FC1EB8520000000, align 4
@CMD_FUEL_RAMP_END = global float 0x3FC1EB8520000000, align 4
@NH_IDLE_GROUND = global float 5.350000e+01, align 4
@NL_IDLE_GROUND = global float 3.000000e+01, align 4
@zero_point_zero_zero_one_four = global float 0x3F56F00680000000, align 4
@zero_point_zero_zero_one = global float 0x3F50624DE0000000, align 4
@one_point_o = global float 1.000000e+00, align 4
@zero_point_one_eight = global float 0x3FC70A3D80000000, align 4
@NL_REF = global float 4.363600e+04, align 4
@NH_REF = global float 5.071900e+04, align 4
@hundred = global float 1.000000e+02, align 4
@zero_point_zero_two = global float 0x3F947AE140000000, align 4
@zero_point_zero_two_five = global float 0x3F999999A0000000, align 4
@zero_point_nine_nine_five = global float 0x3FEFD70A40000000, align 4
@zero_point_one = global float 0x3FB99999A0000000, align 4
@zero_point_zero_one = global float 0x3F847AE140000000, align 4
@exp1 = global float 0x3E8AD7F2A0000000, align 4
@exp3 = global float 0x3F0A36E2E0000000, align 4
@ten = global i32 10, align 4
@fifty = global i32 50, align 4
@thirty = global i32 30, align 4
@twenty = global i32 20, align 4
@two = global i32 2, align 4
@epsilon_global = common global float 0.000000e+00, align 4
@iTerm = common global float 0.000000e+00, align 4
@epsilon_modified = common global float 0.000000e+00, align 4
@dTerm_modified = common global float 0.000000e+00, align 4
@fuel_pump_integrator = common global float 0.000000e+00, align 4
@nh_setpoint = common global float 0.000000e+00, align 4
@ramp_filter_memory = common global float 0.000000e+00, align 4
@redefine_in_parameters = common global [16 x i32] zeroinitializer, align 4
@redefine_start.fuel_press_integrator = internal global float 0.000000e+00, align 4
@redefine_start.fuel_pump_integrator = internal global float 0.000000e+00, align 4
@redefine_start.dnhqdt = internal global float 0.000000e+00, align 4
@fuel_pump_cmd = common global float 0.000000e+00, align 4
@t_fuel_press_control = common global i32 0, align 4
@fuel_press_setpoint = common global float 0.000000e+00, align 4
@operation_mode = common global i32 0, align 4
@redefine_in_stab = common global [50 x i32] zeroinitializer, align 4
@stab_array_index = common global i32 0, align 4
@nh_idle = common global float 0.000000e+00, align 4
@redefine_out_parameters = common global [12 x i32] zeroinitializer, align 4
@nh_average = common global float 0.000000e+00, align 4

; Function Attrs: nounwind
define void @pid_init(float %iTermtemp) #0 {
entry:
  %iTermtemp.addr = alloca float, align 4
  store float %iTermtemp, float* %iTermtemp.addr, align 4
  store float 0.000000e+00, float* @epsilon_global, align 4
  %0 = load float* %iTermtemp.addr, align 4
  store float %0, float* @iTerm, align 4
  store float 0.000000e+00, float* @epsilon_modified, align 4
  store float 0.000000e+00, float* @dTerm_modified, align 4
  ret void
}

; Function Attrs: nounwind
define void @regulation_nh_init(float %cmd) #0 {
entry:
  %cmd.addr = alloca float, align 4
  store float %cmd, float* %cmd.addr, align 4
  %0 = load float* %cmd.addr, align 4
  br label %newName0

newName0:                                         ; preds = %entry
  call void @pid_init(float %0)
  br label %newName01

newName01:                                        ; preds = %newName0
  %1 = load float* %cmd.addr, align 4
  store float %1, float* @fuel_pump_integrator, align 4
  %2 = load float* @nh_setpoint, align 4
  store float %2, float* @ramp_filter_memory, align 4
  ret void
}

; Function Attrs: nounwind
define void @redefine_start() #0 {
entry:
  %0 = getelementptr inbounds float* @CMD_FUEL_RAMP_START, i32 0
  store float 0x3FC1EB8520000000, float* %0, align 4
  %1 = getelementptr inbounds float* @CMD_FUEL_RAMP_END, i32 0
  store float 0x3FC1EB8520000000, float* %1, align 4
  %2 = getelementptr inbounds float* @NH_IDLE_GROUND, i32 0
  store float 5.350000e+01, float* %2, align 4
  %3 = getelementptr inbounds float* @NL_IDLE_GROUND, i32 0
  store float 3.000000e+01, float* %3, align 4
  %4 = getelementptr inbounds float* @zero_point_zero_zero_one_four, i32 0
  store float 0x3F56F00680000000, float* %4, align 4
  %5 = getelementptr inbounds float* @zero_point_zero_zero_one, i32 0
  store float 0x3F50624DE0000000, float* %5, align 4
  %6 = getelementptr inbounds float* @one_point_o, i32 0
  store float 1.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds float* @zero_point_one_eight, i32 0
  store float 0x3FC70A3D80000000, float* %7, align 4
  %8 = getelementptr inbounds float* @NL_REF, i32 0
  store float 4.363600e+04, float* %8, align 4
  %9 = getelementptr inbounds float* @NH_REF, i32 0
  store float 5.071900e+04, float* %9, align 4
  %10 = getelementptr inbounds float* @hundred, i32 0
  store float 1.000000e+02, float* %10, align 4
  %11 = getelementptr inbounds float* @zero_point_zero_two, i32 0
  store float 0x3F947AE140000000, float* %11, align 4
  %12 = getelementptr inbounds float* @zero_point_zero_two_five, i32 0
  store float 0x3F999999A0000000, float* %12, align 4
  %13 = getelementptr inbounds float* @zero_point_nine_nine_five, i32 0
  store float 0x3FEFD70A40000000, float* %13, align 4
  %14 = getelementptr inbounds float* @zero_point_one, i32 0
  store float 0x3FB99999A0000000, float* %14, align 4
  %15 = getelementptr inbounds float* @zero_point_zero_one, i32 0
  store float 0x3F847AE140000000, float* %15, align 4
  %16 = getelementptr inbounds float* @exp1, i32 0
  store float 0x3E8AD7F2A0000000, float* %16, align 4
  %17 = getelementptr inbounds float* @exp3, i32 0
  store float 0x3F0A36E2E0000000, float* %17, align 4
  %18 = getelementptr inbounds i32* @ten, i32 0
  store i32 10, i32* %18, align 4
  %19 = getelementptr inbounds i32* @fifty, i32 0
  store i32 50, i32* %19, align 4
  %20 = getelementptr inbounds i32* @thirty, i32 0
  store i32 30, i32* %20, align 4
  %21 = getelementptr inbounds i32* @twenty, i32 0
  store i32 20, i32* %21, align 4
  %22 = getelementptr inbounds i32* @two, i32 0
  store i32 2, i32* %22, align 4
  %23 = getelementptr inbounds float* @epsilon_global, i32 0
  store float 0.000000e+00, float* %23, align 4
  %24 = getelementptr inbounds float* @iTerm, i32 0
  store float 0.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds float* @epsilon_modified, i32 0
  store float 0.000000e+00, float* %25, align 4
  %26 = getelementptr inbounds float* @dTerm_modified, i32 0
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds float* @fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds float* @nh_setpoint, i32 0
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds float* @ramp_filter_memory, i32 0
  store float 0.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds float* @redefine_start.fuel_press_integrator, i32 0
  store float 0.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds float* @redefine_start.fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %31, align 4
  %32 = getelementptr inbounds float* @redefine_start.dnhqdt, i32 0
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds float* @fuel_pump_cmd, i32 0
  store float 0.000000e+00, float* %33, align 4
  %34 = getelementptr inbounds i32* @t_fuel_press_control, i32 0
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds float* @fuel_press_setpoint, i32 0
  store float 0.000000e+00, float* %35, align 4
  %36 = getelementptr inbounds i32* @operation_mode, i32 0
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds i32* @stab_array_index, i32 0
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds float* @nh_idle, i32 0
  store float 0.000000e+00, float* %38, align 4
  %39 = getelementptr inbounds float* @nh_average, i32 0
  store float 0.000000e+00, float* %39, align 4
  %current_nh = alloca float, align 4
  %index_nh = alloca float, align 4
  %epsilon = alloca float, align 4
  %nh_average = alloca float, align 4
  %i = alloca i32, align 4
  %startup_time = alloca i32, align 4
  %fuel_press = alloca float, align 4
  %40 = load float* bitcast ([16 x i32]* @redefine_in_parameters to float*), align 4
  store float %40, float* %current_nh, align 4
  %41 = load float* bitcast (i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 5) to float*), align 4
  store float %41, float* %index_nh, align 4
  %42 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 1), align 4
  %cmp = icmp eq i32 %42, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* @fuel_pump_cmd, align 4
  %43 = load float* @fuel_pump_cmd, align 4
  br label %newName0

newName0:                                         ; preds = %if.then
  call void @regulation_nh_init(float %43)
  br label %if.end124

if.else:                                          ; preds = %entry
  %44 = load float* %current_nh, align 4
  %cmp1 = fcmp olt float %44, 2.700000e+03
  br i1 %cmp1, label %if.then2, label %if.else3

if.then2:                                         ; preds = %if.else
  br label %if.end123

if.else3:                                         ; preds = %if.else
  %45 = load float* %current_nh, align 4
  %cmp4 = fcmp olt float %45, 1.500000e+04
  br i1 %cmp4, label %if.then5, label %if.else51

if.then5:                                         ; preds = %if.else3
  %46 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 2), align 4
  %cmp6 = icmp eq i32 %46, -1
  br i1 %cmp6, label %if.then7, label %if.else9

if.then7:                                         ; preds = %if.then5
  %47 = load float* @CMD_FUEL_RAMP_START, align 4
  %48 = load float* %current_nh, align 4
  %sub = fsub float %48, 2.700000e+03
  %49 = load float* @CMD_FUEL_RAMP_END, align 4
  %50 = load float* @CMD_FUEL_RAMP_START, align 4
  %sub8 = fsub float %49, %50
  %mul = fmul float %sub, %sub8
  %add = fadd float %47, %mul
  store float %add, float* @fuel_pump_cmd, align 4
  %51 = load float* @fuel_pump_cmd, align 4
  store float %51, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end50

if.else9:                                         ; preds = %if.then5
  %52 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 14), align 4
  store i32 %52, i32* %startup_time, align 4
  %53 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 15), align 4
  %conv = sitofp i32 %53 to float
  store float %conv, float* %fuel_press, align 4
  %54 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 3), align 4
  %cmp10 = icmp eq i32 %54, -1
  br i1 %cmp10, label %if.then12, label %if.else13

if.then12:                                        ; preds = %if.else9
  %55 = load i32* %startup_time, align 4
  store i32 %55, i32* @t_fuel_press_control, align 4
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %if.end32

if.else13:                                        ; preds = %if.else9
  %56 = load i32* %startup_time, align 4
  %57 = load i32* @t_fuel_press_control, align 4
  %sub14 = sub nsw i32 %56, %57
  %58 = load i32* @ten, align 4
  %59 = load i32* @fifty, align 4
  %mul15 = mul nsw i32 %58, %59
  %cmp16 = icmp slt i32 %sub14, %mul15
  br i1 %cmp16, label %if.then18, label %if.else19

if.then18:                                        ; preds = %if.else13
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %if.end31

if.else19:                                        ; preds = %if.else13
  %60 = load i32* %startup_time, align 4
  %61 = load i32* @t_fuel_press_control, align 4
  %sub20 = sub nsw i32 %60, %61
  %62 = load i32* @thirty, align 4
  %63 = load i32* @fifty, align 4
  %mul21 = mul nsw i32 %62, %63
  %cmp22 = icmp slt i32 %sub20, %mul21
  br i1 %cmp22, label %if.then24, label %if.else30

if.then24:                                        ; preds = %if.else19
  %64 = load float* @zero_point_one_eight, align 4
  %65 = load i32* %startup_time, align 4
  %66 = load i32* @t_fuel_press_control, align 4
  %67 = load i32* @ten, align 4
  %68 = load i32* @fifty, align 4
  %mul25 = mul nsw i32 %67, %68
  %add26 = add nsw i32 %66, %mul25
  %sub27 = sub nsw i32 %65, %add26
  %conv28 = sitofp i32 %sub27 to float
  %add29 = fadd float %64, %conv28
  store float %add29, float* @fuel_press_setpoint, align 4
  br label %if.end

if.else30:                                        ; preds = %if.else19
  store float 1.000000e+00, float* @fuel_press_setpoint, align 4
  br label %if.end

if.end:                                           ; preds = %if.else30, %if.then24
  br label %if.end31

if.end31:                                         ; preds = %if.end, %if.then18
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then12
  %69 = load float* @fuel_press_setpoint, align 4
  %70 = load float* %fuel_press, align 4
  %sub33 = fsub float %69, %70
  store float %sub33, float* %epsilon, align 4
  %71 = load float* @redefine_start.fuel_press_integrator, align 4
  %72 = load float* %epsilon, align 4
  %73 = load float* @zero_point_zero_zero_one_four, align 4
  %mul34 = fmul float %72, %73
  %add35 = fadd float %71, %mul34
  store float %add35, float* @redefine_start.fuel_press_integrator, align 4
  %74 = load float* @redefine_start.fuel_press_integrator, align 4
  %75 = load float* @zero_point_zero_two_five, align 4
  %cmp36 = fcmp ogt float %74, %75
  br i1 %cmp36, label %if.then38, label %if.end39

if.then38:                                        ; preds = %if.end32
  store float 2.500000e-01, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end39

if.end39:                                         ; preds = %if.then38, %if.end32
  %76 = load float* @redefine_start.fuel_press_integrator, align 4
  %77 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp40 = fcmp olt float %76, %77
  br i1 %cmp40, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.end39
  %78 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %78, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.then42, %if.end39
  %79 = load float* @redefine_start.fuel_press_integrator, align 4
  %80 = load float* @zero_point_zero_zero_one, align 4
  %81 = load float* %epsilon, align 4
  %mul44 = fmul float %80, %81
  %add45 = fadd float %79, %mul44
  store float %add45, float* @fuel_pump_cmd, align 4
  %82 = load float* @fuel_pump_cmd, align 4
  %83 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp46 = fcmp olt float %82, %83
  br i1 %cmp46, label %if.then48, label %if.end49

if.then48:                                        ; preds = %if.end43
  %84 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %84, float* @fuel_pump_cmd, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.then48, %if.end43
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then7
  br label %if.end122

if.else51:                                        ; preds = %if.else3
  %85 = load float* %current_nh, align 4
  %cmp52 = fcmp olt float %85, 1.500000e+04
  br i1 %cmp52, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.else51
  br label %if.end121

if.else55:                                        ; preds = %if.else51
  %86 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 4), align 4
  store i32 %86, i32* @operation_mode, align 4
  %87 = load i32* @operation_mode, align 4
  %cmp56 = icmp eq i32 %87, 2
  br i1 %cmp56, label %if.then58, label %if.else62

if.then58:                                        ; preds = %if.else55
  store float 0.000000e+00, float* @fuel_press_setpoint, align 4
  %88 = load float* %current_nh, align 4
  store float %88, float* @nh_setpoint, align 4
  %89 = load float* @fuel_pump_cmd, align 4
  store float %89, float* @redefine_start.fuel_pump_integrator, align 4
  %90 = load float* %current_nh, align 4
  %91 = load float* %index_nh, align 4
  %sub59 = fsub float %90, %91
  %92 = load i32* @two, align 4
  %conv60 = sitofp i32 %92 to float
  %mul61 = fmul float %sub59, %conv60
  store float %mul61, float* @redefine_start.dnhqdt, align 4
  store i32 4, i32* @operation_mode, align 4
  br label %if.end120

if.else62:                                        ; preds = %if.else55
  %93 = load i32* @operation_mode, align 4
  %cmp63 = icmp eq i32 %93, 4
  br i1 %cmp63, label %if.then65, label %if.else118

if.then65:                                        ; preds = %if.else62
  %94 = load float* @nh_setpoint, align 4
  %95 = load float* @NH_IDLE_GROUND, align 4
  %cmp66 = fcmp olt float %94, %95
  br i1 %cmp66, label %if.then68, label %if.else71

if.then68:                                        ; preds = %if.then65
  %96 = load float* @nh_setpoint, align 4
  %97 = load float* @zero_point_zero_two, align 4
  %98 = load float* @redefine_start.dnhqdt, align 4
  %mul69 = fmul float %97, %98
  %add70 = fadd float %96, %mul69
  store float %add70, float* @nh_setpoint, align 4
  br label %if.end74

if.else71:                                        ; preds = %if.then65
  %99 = load float* @nh_setpoint, align 4
  %100 = load float* @zero_point_zero_two, align 4
  %101 = load float* @redefine_start.dnhqdt, align 4
  %mul72 = fmul float %100, %101
  %sub73 = fsub float %99, %mul72
  store float %sub73, float* @nh_setpoint, align 4
  br label %if.end74

if.end74:                                         ; preds = %if.else71, %if.then68
  %102 = load float* @nh_setpoint, align 4
  %103 = load float* %current_nh, align 4
  %sub75 = fsub float %102, %103
  store float %sub75, float* %epsilon, align 4
  %104 = load float* @redefine_start.fuel_pump_integrator, align 4
  %105 = load float* %epsilon, align 4
  %106 = load float* @exp1, align 4
  %mul76 = fmul float %105, %106
  %add77 = fadd float %104, %mul76
  store float %add77, float* @redefine_start.fuel_pump_integrator, align 4
  %107 = load float* @redefine_start.fuel_pump_integrator, align 4
  %108 = load float* @zero_point_zero_two_five, align 4
  %cmp78 = fcmp ogt float %107, %108
  br i1 %cmp78, label %if.then80, label %if.end81

if.then80:                                        ; preds = %if.end74
  store float 2.500000e-01, float* @redefine_start.fuel_pump_integrator, align 4
  br label %if.end81

if.end81:                                         ; preds = %if.then80, %if.end74
  %109 = load float* @redefine_start.fuel_pump_integrator, align 4
  %110 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp82 = fcmp olt float %109, %110
  br i1 %cmp82, label %if.then84, label %if.end85

if.then84:                                        ; preds = %if.end81
  %111 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %111, float* @redefine_start.fuel_pump_integrator, align 4
  br label %if.end85

if.end85:                                         ; preds = %if.then84, %if.end81
  %112 = load float* @redefine_start.fuel_pump_integrator, align 4
  %113 = load float* @exp3, align 4
  %114 = load float* %epsilon, align 4
  %mul86 = fmul float %113, %114
  %add87 = fadd float %112, %mul86
  store float %add87, float* @fuel_pump_cmd, align 4
  %115 = load float* @fuel_pump_cmd, align 4
  %116 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp88 = fcmp olt float %115, %116
  br i1 %cmp88, label %if.then90, label %if.end91

if.then90:                                        ; preds = %if.end85
  %117 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %117, float* @fuel_pump_cmd, align 4
  br label %if.end91

if.end91:                                         ; preds = %if.then90, %if.end85
  %118 = load float* %current_nh, align 4
  %conv92 = fptosi float %118 to i32
  %119 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 6), align 4
  %arrayidx = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %119
  store i32 %conv92, i32* %arrayidx, align 4
  %120 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 7), align 4
  store i32 %120, i32* @stab_array_index, align 4
  %121 = load i32* @stab_array_index, align 4
  %cmp93 = icmp eq i32 %121, 50
  br i1 %cmp93, label %if.then95, label %if.end96

if.then95:                                        ; preds = %if.end91
  store i32 0, i32* @stab_array_index, align 4
  br label %if.end96

if.end96:                                         ; preds = %if.then95, %if.end91
  store float 0.000000e+00, float* %nh_average, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end96
  %122 = load i32* %i, align 4
  %cmp97 = icmp slt i32 %122, 50
  br i1 %cmp97, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %123 = load i32* %i, align 4
  %arrayidx99 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %123
  %124 = load i32* %arrayidx99, align 4
  %conv100 = sitofp i32 %124 to float
  %125 = load float* %nh_average, align 4
  %add101 = fadd float %125, %conv100
  store float %add101, float* %nh_average, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %126 = load i32* %i, align 4
  %inc = add nsw i32 %126, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %127 = load float* @NH_IDLE_GROUND, align 4
  store float %127, float* @nh_idle, align 4
  %128 = load float* %nh_average, align 4
  %129 = load float* @nh_idle, align 4
  %130 = load float* @NH_REF, align 4
  %mul102 = fmul float %129, %130
  %131 = load float* @hundred, align 4
  %mul103 = fmul float %mul102, %131
  %132 = load float* @zero_point_nine_nine_five, align 4
  %mul104 = fmul float %mul103, %132
  %cmp105 = fcmp oge float %128, %mul104
  br i1 %cmp105, label %land.lhs.true, label %if.end117

land.lhs.true:                                    ; preds = %for.end
  %133 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 8), align 4
  %tobool = icmp ne i32 %133, 0
  br i1 %tobool, label %if.end117, label %land.lhs.true107

land.lhs.true107:                                 ; preds = %land.lhs.true
  %134 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 9), align 4
  %tobool108 = icmp ne i32 %134, 0
  br i1 %tobool108, label %if.end117, label %land.lhs.true109

land.lhs.true109:                                 ; preds = %land.lhs.true107
  %135 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 10), align 4
  %tobool110 = icmp ne i32 %135, 0
  br i1 %tobool110, label %if.end117, label %land.lhs.true111

land.lhs.true111:                                 ; preds = %land.lhs.true109
  %136 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 11), align 4
  %tobool112 = icmp ne i32 %136, 0
  br i1 %tobool112, label %if.end117, label %land.lhs.true113

land.lhs.true113:                                 ; preds = %land.lhs.true111
  %137 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 12), align 4
  %cmp114 = icmp sle i32 %137, 10
  br i1 %cmp114, label %if.then116, label %if.end117

if.then116:                                       ; preds = %land.lhs.true113
  store i32 8, i32* @operation_mode, align 4
  br label %if.end117

if.end117:                                        ; preds = %if.then116, %land.lhs.true113, %land.lhs.true111, %land.lhs.true109, %land.lhs.true107, %land.lhs.true, %for.end
  br label %if.end119

if.else118:                                       ; preds = %if.else62
  store i32 16, i32* @operation_mode, align 4
  br label %if.end119

if.end119:                                        ; preds = %if.else118, %if.end117
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then58
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.then54
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.end50
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %if.then2
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %newName0
  %138 = load i32* bitcast (float* @redefine_start.fuel_press_integrator to i32*), align 4
  store i32 %138, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 0), align 4
  %139 = load i32* bitcast (float* @fuel_press_setpoint to i32*), align 4
  store i32 %139, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 1), align 4
  %140 = load i32* bitcast (float* @epsilon_global to i32*), align 4
  store i32 %140, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 2), align 4
  %141 = load i32* bitcast (float* @iTerm to i32*), align 4
  store i32 %141, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 3), align 4
  %142 = load i32* bitcast (float* @epsilon_modified to i32*), align 4
  store i32 %142, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 4), align 4
  %143 = load i32* bitcast (float* @dTerm_modified to i32*), align 4
  store i32 %143, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 5), align 4
  %144 = load i32* bitcast (float* @redefine_start.fuel_pump_integrator to i32*), align 4
  store i32 %144, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 6), align 4
  %145 = load i32* bitcast (float* @ramp_filter_memory to i32*), align 4
  store i32 %145, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 7), align 4
  %146 = bitcast float* %current_nh to i32*
  %147 = load i32* %146, align 4
  store i32 %147, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 8), align 4
  %148 = load i32* @stab_array_index, align 4
  store i32 %148, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 9), align 4
  %149 = bitcast float* %nh_average to i32*
  %150 = load i32* %149, align 4
  store i32 %150, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 10), align 4
  %151 = load i32* bitcast (float* @nh_idle to i32*), align 4
  store i32 %151, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 11), align 4
  ret void
}

define void @redefine_start1() {
redefine_start1.entry:
  %0 = alloca i1, align 4, !Controls !12
  %1 = alloca float, align 4, !ConsumedBy !15
  %2 = getelementptr inbounds float* @CMD_FUEL_RAMP_START, i32 0
  store float 0x3FC1EB8520000000, float* %2, align 4
  %3 = getelementptr inbounds float* @CMD_FUEL_RAMP_END, i32 0
  store float 0x3FC1EB8520000000, float* %3, align 4
  %4 = getelementptr inbounds float* @NH_IDLE_GROUND, i32 0
  store float 5.350000e+01, float* %4, align 4
  %5 = getelementptr inbounds float* @NL_IDLE_GROUND, i32 0
  store float 3.000000e+01, float* %5, align 4
  %6 = getelementptr inbounds float* @zero_point_zero_zero_one_four, i32 0
  store float 0x3F56F00680000000, float* %6, align 4
  %7 = getelementptr inbounds float* @zero_point_zero_zero_one, i32 0
  store float 0x3F50624DE0000000, float* %7, align 4
  %8 = getelementptr inbounds float* @one_point_o, i32 0
  store float 1.000000e+00, float* %8, align 4
  %9 = getelementptr inbounds float* @zero_point_one_eight, i32 0
  store float 0x3FC70A3D80000000, float* %9, align 4
  %10 = getelementptr inbounds float* @NL_REF, i32 0
  store float 4.363600e+04, float* %10, align 4
  %11 = getelementptr inbounds float* @NH_REF, i32 0
  store float 5.071900e+04, float* %11, align 4
  %12 = getelementptr inbounds float* @hundred, i32 0
  store float 1.000000e+02, float* %12, align 4
  %13 = getelementptr inbounds float* @zero_point_zero_two, i32 0
  store float 0x3F947AE140000000, float* %13, align 4
  %14 = getelementptr inbounds float* @zero_point_zero_two_five, i32 0
  store float 0x3F999999A0000000, float* %14, align 4
  %15 = getelementptr inbounds float* @zero_point_nine_nine_five, i32 0
  store float 0x3FEFD70A40000000, float* %15, align 4
  %16 = getelementptr inbounds float* @zero_point_one, i32 0
  store float 0x3FB99999A0000000, float* %16, align 4
  %17 = getelementptr inbounds float* @zero_point_zero_one, i32 0
  store float 0x3F847AE140000000, float* %17, align 4
  %18 = getelementptr inbounds float* @exp1, i32 0
  store float 0x3E8AD7F2A0000000, float* %18, align 4
  %19 = getelementptr inbounds float* @exp3, i32 0
  store float 0x3F0A36E2E0000000, float* %19, align 4
  %20 = getelementptr inbounds i32* @ten, i32 0
  store i32 10, i32* %20, align 4
  %21 = getelementptr inbounds i32* @fifty, i32 0
  store i32 50, i32* %21, align 4
  %22 = getelementptr inbounds i32* @thirty, i32 0
  store i32 30, i32* %22, align 4
  %23 = getelementptr inbounds i32* @twenty, i32 0
  store i32 20, i32* %23, align 4
  %24 = getelementptr inbounds i32* @two, i32 0
  store i32 2, i32* %24, align 4
  %25 = getelementptr inbounds float* @epsilon_global, i32 0
  store float 0.000000e+00, float* %25, align 4
  %26 = getelementptr inbounds float* @iTerm, i32 0
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds float* @epsilon_modified, i32 0
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds float* @dTerm_modified, i32 0
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds float* @fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds float* @nh_setpoint, i32 0
  store float 0.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds float* @ramp_filter_memory, i32 0
  store float 0.000000e+00, float* %31, align 4
  %32 = getelementptr inbounds float* @redefine_start.fuel_press_integrator, i32 0
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds float* @redefine_start.fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %33, align 4
  %34 = getelementptr inbounds float* @redefine_start.dnhqdt, i32 0
  store float 0.000000e+00, float* %34, align 4
  %35 = getelementptr inbounds float* @fuel_pump_cmd, i32 0
  store float 0.000000e+00, float* %35, align 4
  %36 = getelementptr inbounds i32* @t_fuel_press_control, i32 0
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds float* @fuel_press_setpoint, i32 0
  store float 0.000000e+00, float* %37, align 4
  %38 = getelementptr inbounds i32* @operation_mode, i32 0
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds i32* @stab_array_index, i32 0
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds float* @nh_idle, i32 0
  store float 0.000000e+00, float* %40, align 4
  %41 = getelementptr inbounds float* @nh_average, i32 0
  store float 0.000000e+00, float* %41, align 4
  %42 = alloca float, align 4, !ConsumedBy !17
  %43 = alloca float, align 4
  %44 = alloca float, align 4
  %45 = alloca float, align 4, !ConsumedBy !19
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca float, align 4
  %49 = load float* bitcast ([16 x i32]* @redefine_in_parameters to float*), align 4
  store float %49, float* %42, align 4
  %50 = load float* bitcast (i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 5) to float*), align 4
  store float %50, float* %43, align 4
  %51 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 1), align 4
  %52 = icmp eq i32 %51, 0
  store i1 %52, i1* %0, align 4
  br i1 %52, label %redefine_start1.if.then, label %redefine_start1.if.else

redefine_start1.if.else:                          ; preds = %redefine_start1.entry
  %53 = load float* %42, align 4
  %54 = fcmp olt float %53, 2.700000e+03
  br i1 %54, label %redefine_start1.if.then2, label %redefine_start1.if.else3

redefine_start1.if.else3:                         ; preds = %redefine_start1.if.else
  %55 = load float* %42, align 4
  %56 = fcmp olt float %55, 1.500000e+04
  br i1 %56, label %redefine_start1.if.then5, label %redefine_start1.if.else51

redefine_start1.if.else51:                        ; preds = %redefine_start1.if.else3
  %57 = load float* %42, align 4
  %58 = fcmp olt float %57, 1.500000e+04
  br i1 %58, label %redefine_start1.if.then54, label %redefine_start1.if.else55

redefine_start1.if.else55:                        ; preds = %redefine_start1.if.else51
  %59 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 4), align 4
  store i32 %59, i32* @operation_mode, align 4
  %60 = load i32* @operation_mode, align 4
  %61 = icmp eq i32 %60, 2
  br i1 %61, label %redefine_start1.if.then58, label %redefine_start1.if.else62

redefine_start1.if.else62:                        ; preds = %redefine_start1.if.else55
  %62 = load i32* @operation_mode, align 4
  %63 = icmp eq i32 %62, 4
  br i1 %63, label %redefine_start1.if.then65, label %redefine_start1.if.else118

redefine_start1.if.then65:                        ; preds = %redefine_start1.if.else62
  %64 = load float* @nh_setpoint, align 4
  %65 = load float* @NH_IDLE_GROUND, align 4
  %66 = fcmp olt float %64, %65
  br i1 %66, label %redefine_start1.if.then68, label %redefine_start1.if.else71

redefine_start1.if.then68:                        ; preds = %redefine_start1.if.then65
  %67 = load float* @nh_setpoint, align 4
  %68 = load float* @zero_point_zero_two, align 4
  %69 = load float* @redefine_start.dnhqdt, align 4
  %70 = fmul float %68, %69
  %71 = fadd float %67, %70
  store float %71, float* @nh_setpoint, align 4
  br label %redefine_start1.if.end74

redefine_start1.if.else71:                        ; preds = %redefine_start1.if.then65
  %72 = load float* @nh_setpoint, align 4
  %73 = load float* @zero_point_zero_two, align 4
  %74 = load float* @redefine_start.dnhqdt, align 4
  %75 = fmul float %73, %74
  %76 = fsub float %72, %75
  store float %76, float* @nh_setpoint, align 4
  br label %redefine_start1.if.end74

redefine_start1.if.end74:                         ; preds = %redefine_start1.if.else71, %redefine_start1.if.then68
  %77 = load float* @nh_setpoint, align 4
  %78 = load float* %42, align 4
  %79 = fsub float %77, %78
  store float %79, float* %44, align 4
  %80 = load float* @redefine_start.fuel_pump_integrator, align 4
  %81 = load float* %44, align 4
  %82 = load float* @exp1, align 4
  %83 = fmul float %81, %82
  %84 = fadd float %80, %83
  store float %84, float* @redefine_start.fuel_pump_integrator, align 4
  %85 = load float* @redefine_start.fuel_pump_integrator, align 4
  %86 = load float* @zero_point_zero_two_five, align 4
  %87 = fcmp ogt float %85, %86
  br i1 %87, label %redefine_start1.if.then80, label %redefine_start1.if.end81

redefine_start1.if.then80:                        ; preds = %redefine_start1.if.end74
  store float 2.500000e-01, float* @redefine_start.fuel_pump_integrator, align 4
  br label %redefine_start1.if.end81

redefine_start1.if.end81:                         ; preds = %redefine_start1.if.then80, %redefine_start1.if.end74
  %88 = load float* @redefine_start.fuel_pump_integrator, align 4
  %89 = load float* @CMD_FUEL_RAMP_END, align 4
  %90 = fcmp olt float %88, %89
  br i1 %90, label %redefine_start1.if.then84, label %redefine_start1.if.end85

redefine_start1.if.then84:                        ; preds = %redefine_start1.if.end81
  %91 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %91, float* @redefine_start.fuel_pump_integrator, align 4
  br label %redefine_start1.if.end85

redefine_start1.if.end85:                         ; preds = %redefine_start1.if.then84, %redefine_start1.if.end81
  %92 = load float* @redefine_start.fuel_pump_integrator, align 4
  %93 = load float* @exp3, align 4
  %94 = load float* %44, align 4
  %95 = fmul float %93, %94
  %96 = fadd float %92, %95
  store float %96, float* @fuel_pump_cmd, align 4
  %97 = load float* @fuel_pump_cmd, align 4
  %98 = load float* @CMD_FUEL_RAMP_END, align 4
  %99 = fcmp olt float %97, %98
  br i1 %99, label %redefine_start1.if.then90, label %redefine_start1.if.end91

redefine_start1.if.then90:                        ; preds = %redefine_start1.if.end85
  %100 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %100, float* @fuel_pump_cmd, align 4
  br label %redefine_start1.if.end91

redefine_start1.if.then5:                         ; preds = %redefine_start1.if.else3
  %101 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 2), align 4
  %102 = icmp eq i32 %101, -1
  br i1 %102, label %redefine_start1.if.then7, label %redefine_start1.if.else9

redefine_start1.if.end91:                         ; preds = %redefine_start1.if.then90, %redefine_start1.if.end85
  %103 = load float* %42, align 4
  %104 = fptosi float %103 to i32
  %105 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 6), align 4
  %106 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %105
  store i32 %104, i32* %106, align 4
  %107 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 7), align 4
  store i32 %107, i32* @stab_array_index, align 4
  %108 = load i32* @stab_array_index, align 4
  %109 = icmp eq i32 %108, 50
  br i1 %109, label %redefine_start1.if.then95, label %redefine_start1.if.end96

redefine_start1.if.else9:                         ; preds = %redefine_start1.if.then5
  %110 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 14), align 4
  store i32 %110, i32* %47, align 4
  %111 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 15), align 4
  %112 = sitofp i32 %111 to float
  store float %112, float* %48, align 4
  %113 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 3), align 4
  %114 = icmp eq i32 %113, -1
  br i1 %114, label %redefine_start1.if.then12, label %redefine_start1.if.else13

redefine_start1.if.then95:                        ; preds = %redefine_start1.if.end91
  store i32 0, i32* @stab_array_index, align 4
  br label %redefine_start1.if.end96

redefine_start1.if.end96:                         ; preds = %redefine_start1.if.then95, %redefine_start1.if.end91
  store float 0.000000e+00, float* %45, align 4
  store i32 0, i32* %46, align 4
  br label %redefine_start1.for.cond

redefine_start1.if.else13:                        ; preds = %redefine_start1.if.else9
  %115 = load i32* %47, align 4
  %116 = load i32* @t_fuel_press_control, align 4
  %117 = sub nsw i32 %115, %116
  %118 = load i32* @ten, align 4
  %119 = load i32* @fifty, align 4
  %120 = mul nsw i32 %118, %119
  %121 = icmp slt i32 %117, %120
  br i1 %121, label %redefine_start1.if.then18, label %redefine_start1.if.else19

redefine_start1.for.cond:                         ; preds = %redefine_start1.for.inc, %redefine_start1.if.end96
  %122 = load i32* %46, align 4
  %123 = icmp slt i32 %122, 50
  br i1 %123, label %redefine_start1.for.body, label %redefine_start1.for.end

redefine_start1.for.body:                         ; preds = %redefine_start1.for.cond
  %124 = load i32* %46, align 4
  %125 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %124
  %126 = load i32* %125, align 4
  %127 = sitofp i32 %126 to float
  %128 = load float* %45, align 4
  %129 = fadd float %128, %127
  store float %129, float* %45, align 4
  br label %redefine_start1.for.inc

redefine_start1.for.inc:                          ; preds = %redefine_start1.for.body
  %130 = load i32* %46, align 4
  %131 = add nsw i32 %130, 1
  store i32 %131, i32* %46, align 4
  br label %redefine_start1.for.cond

redefine_start1.if.else19:                        ; preds = %redefine_start1.if.else13
  %132 = load i32* %47, align 4
  %133 = load i32* @t_fuel_press_control, align 4
  %134 = sub nsw i32 %132, %133
  %135 = load i32* @thirty, align 4
  %136 = load i32* @fifty, align 4
  %137 = mul nsw i32 %135, %136
  %138 = icmp slt i32 %134, %137
  br i1 %138, label %redefine_start1.if.then24, label %redefine_start1.if.else30

redefine_start1.for.end:                          ; preds = %redefine_start1.for.cond
  %139 = load float* @NH_IDLE_GROUND, align 4
  store float %139, float* @nh_idle, align 4
  %140 = load float* %45, align 4
  %141 = load float* @nh_idle, align 4
  %142 = load float* @NH_REF, align 4
  %143 = fmul float %141, %142
  %144 = load float* @hundred, align 4
  %145 = fmul float %143, %144
  %146 = load float* @zero_point_nine_nine_five, align 4
  %147 = fmul float %145, %146
  %148 = fcmp oge float %140, %147
  br i1 %148, label %redefine_start1.land.lhs.true, label %redefine_start1.if.end117

redefine_start1.if.then24:                        ; preds = %redefine_start1.if.else19
  %149 = load float* @zero_point_one_eight, align 4
  %150 = load i32* %47, align 4
  %151 = load i32* @t_fuel_press_control, align 4
  %152 = load i32* @ten, align 4
  %153 = load i32* @fifty, align 4
  %154 = mul nsw i32 %152, %153
  %155 = add nsw i32 %151, %154
  %156 = sub nsw i32 %150, %155
  %157 = sitofp i32 %156 to float
  %158 = fadd float %149, %157
  store float %158, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end

redefine_start1.if.else30:                        ; preds = %redefine_start1.if.else19
  store float 1.000000e+00, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end

redefine_start1.if.then18:                        ; preds = %redefine_start1.if.else13
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end31

redefine_start1.land.lhs.true:                    ; preds = %redefine_start1.for.end
  %159 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 8), align 4
  %160 = icmp ne i32 %159, 0
  br i1 %160, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true107

redefine_start1.if.end:                           ; preds = %redefine_start1.if.else30, %redefine_start1.if.then24
  br label %redefine_start1.if.end31

redefine_start1.if.then12:                        ; preds = %redefine_start1.if.else9
  %161 = load i32* %47, align 4
  store i32 %161, i32* @t_fuel_press_control, align 4
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end32

redefine_start1.if.end31:                         ; preds = %redefine_start1.if.end, %redefine_start1.if.then18
  br label %redefine_start1.if.end32

redefine_start1.land.lhs.true107:                 ; preds = %redefine_start1.land.lhs.true
  %162 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 9), align 4
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true109

redefine_start1.if.end32:                         ; preds = %redefine_start1.if.end31, %redefine_start1.if.then12
  %164 = load float* @fuel_press_setpoint, align 4
  %165 = load float* %48, align 4
  %166 = fsub float %164, %165
  store float %166, float* %44, align 4
  %167 = load float* @redefine_start.fuel_press_integrator, align 4
  %168 = load float* %44, align 4
  %169 = load float* @zero_point_zero_zero_one_four, align 4
  %170 = fmul float %168, %169
  %171 = fadd float %167, %170
  store float %171, float* @redefine_start.fuel_press_integrator, align 4
  %172 = load float* @redefine_start.fuel_press_integrator, align 4
  %173 = load float* @zero_point_zero_two_five, align 4
  %174 = fcmp ogt float %172, %173
  br i1 %174, label %redefine_start1.if.then38, label %redefine_start1.if.end39

redefine_start1.land.lhs.true109:                 ; preds = %redefine_start1.land.lhs.true107
  %175 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 10), align 4
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true111

redefine_start1.if.then38:                        ; preds = %redefine_start1.if.end32
  store float 2.500000e-01, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end39

redefine_start1.land.lhs.true111:                 ; preds = %redefine_start1.land.lhs.true109
  %177 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 11), align 4
  %178 = icmp ne i32 %177, 0
  br i1 %178, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true113

redefine_start1.if.end39:                         ; preds = %redefine_start1.if.then38, %redefine_start1.if.end32
  %179 = load float* @redefine_start.fuel_press_integrator, align 4
  %180 = load float* @CMD_FUEL_RAMP_END, align 4
  %181 = fcmp olt float %179, %180
  br i1 %181, label %redefine_start1.if.then42, label %redefine_start1.if.end43

redefine_start1.land.lhs.true113:                 ; preds = %redefine_start1.land.lhs.true111
  %182 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 12), align 4
  %183 = icmp sle i32 %182, 10
  br i1 %183, label %redefine_start1.if.then116, label %redefine_start1.if.end117

redefine_start1.if.then42:                        ; preds = %redefine_start1.if.end39
  %184 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %184, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end43

redefine_start1.if.then116:                       ; preds = %redefine_start1.land.lhs.true113
  store i32 8, i32* @operation_mode, align 4
  br label %redefine_start1.if.end117

redefine_start1.if.else118:                       ; preds = %redefine_start1.if.else62
  store i32 16, i32* @operation_mode, align 4
  br label %redefine_start1.if.end119

redefine_start1.if.end117:                        ; preds = %redefine_start1.if.then116, %redefine_start1.land.lhs.true113, %redefine_start1.land.lhs.true111, %redefine_start1.land.lhs.true109, %redefine_start1.land.lhs.true107, %redefine_start1.land.lhs.true, %redefine_start1.for.end
  br label %redefine_start1.if.end119

redefine_start1.if.end43:                         ; preds = %redefine_start1.if.then42, %redefine_start1.if.end39
  %185 = load float* @redefine_start.fuel_press_integrator, align 4
  %186 = load float* @zero_point_zero_zero_one, align 4
  %187 = load float* %44, align 4
  %188 = fmul float %186, %187
  %189 = fadd float %185, %188
  store float %189, float* @fuel_pump_cmd, align 4
  %190 = load float* @fuel_pump_cmd, align 4
  %191 = load float* @CMD_FUEL_RAMP_END, align 4
  %192 = fcmp olt float %190, %191
  br i1 %192, label %redefine_start1.if.then48, label %redefine_start1.if.end49

redefine_start1.if.then58:                        ; preds = %redefine_start1.if.else55
  store float 0.000000e+00, float* @fuel_press_setpoint, align 4
  %193 = load float* %42, align 4
  store float %193, float* @nh_setpoint, align 4
  %194 = load float* @fuel_pump_cmd, align 4
  store float %194, float* @redefine_start.fuel_pump_integrator, align 4
  %195 = load float* %42, align 4
  %196 = load float* %43, align 4
  %197 = fsub float %195, %196
  %198 = load i32* @two, align 4
  %199 = sitofp i32 %198 to float
  %200 = fmul float %197, %199
  store float %200, float* @redefine_start.dnhqdt, align 4
  store i32 4, i32* @operation_mode, align 4
  br label %redefine_start1.if.end120

redefine_start1.if.end119:                        ; preds = %redefine_start1.if.end117, %redefine_start1.if.else118
  br label %redefine_start1.if.end120

redefine_start1.if.then48:                        ; preds = %redefine_start1.if.end43
  %201 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %201, float* @fuel_pump_cmd, align 4
  br label %redefine_start1.if.end49

redefine_start1.if.then54:                        ; preds = %redefine_start1.if.else51
  br label %redefine_start1.if.end121

redefine_start1.if.then7:                         ; preds = %redefine_start1.if.then5
  %202 = load float* @CMD_FUEL_RAMP_START, align 4
  %203 = load float* %42, align 4
  %204 = fsub float %203, 2.700000e+03
  %205 = load float* @CMD_FUEL_RAMP_END, align 4
  %206 = load float* @CMD_FUEL_RAMP_START, align 4
  %207 = fsub float %205, %206
  %208 = fmul float %204, %207
  %209 = fadd float %202, %208
  store float %209, float* @fuel_pump_cmd, align 4
  %210 = load float* @fuel_pump_cmd, align 4
  store float %210, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end50

redefine_start1.if.end49:                         ; preds = %redefine_start1.if.then48, %redefine_start1.if.end43
  br label %redefine_start1.if.end50

redefine_start1.if.end120:                        ; preds = %redefine_start1.if.end119, %redefine_start1.if.then58
  br label %redefine_start1.if.end121

redefine_start1.if.end121:                        ; preds = %redefine_start1.if.end120, %redefine_start1.if.then54
  br label %redefine_start1.if.end122

redefine_start1.if.end50:                         ; preds = %redefine_start1.if.end49, %redefine_start1.if.then7
  br label %redefine_start1.if.end122

redefine_start1.if.then2:                         ; preds = %redefine_start1.if.else
  br label %redefine_start1.return

redefine_start1.if.end122:                        ; preds = %redefine_start1.if.end50, %redefine_start1.if.end121
  br label %redefine_start1.return

redefine_start1.if.then:                          ; preds = %redefine_start1.entry
  store float 0.000000e+00, float* @fuel_pump_cmd, align 4
  %211 = load float* @fuel_pump_cmd, align 4
  store float %211, float* %1, align 4
  br label %redefine_start1.return

redefine_start1.return:                           ; preds = %redefine_start1.if.end122, %redefine_start1.if.then2, %redefine_start1.if.then
  ret void
}

define void @redefine_start2() {
redefine_start2.if.end123:
  br label %redefine_start2.return

redefine_start2.return:                           ; preds = %redefine_start2.if.end123
  ret void
}

define void @redefine_start3(float*, float*) {
redefine_start3.if.end124:
  %2 = load i32* bitcast (float* @redefine_start.fuel_press_integrator to i32*), align 4
  store i32 %2, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 0), align 4
  %3 = load i32* bitcast (float* @fuel_press_setpoint to i32*), align 4
  store i32 %3, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 1), align 4
  %4 = load i32* bitcast (float* @epsilon_global to i32*), align 4
  store i32 %4, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 2), align 4
  %5 = load i32* bitcast (float* @iTerm to i32*), align 4
  store i32 %5, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 3), align 4
  %6 = load i32* bitcast (float* @epsilon_modified to i32*), align 4
  store i32 %6, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 4), align 4
  %7 = load i32* bitcast (float* @dTerm_modified to i32*), align 4
  store i32 %7, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 5), align 4
  %8 = load i32* bitcast (float* @redefine_start.fuel_pump_integrator to i32*), align 4
  store i32 %8, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 6), align 4
  %9 = load i32* bitcast (float* @ramp_filter_memory to i32*), align 4
  store i32 %9, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 7), align 4
  %10 = bitcast float* %0 to i32*
  %11 = load i32* %10, align 4
  store i32 %11, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 8), align 4
  %12 = load i32* @stab_array_index, align 4
  store i32 %12, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 9), align 4
  %13 = bitcast float* %1 to i32*
  %14 = load i32* %13, align 4
  store i32 %14, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 10), align 4
  %15 = load i32* bitcast (float* @nh_idle to i32*), align 4
  store i32 %15, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 11), align 4
  br label %redefine_start3.return

redefine_start3.return:                           ; preds = %redefine_start3.if.end124
  ret void
}

define void @regulation_nh_init4(float*) {
regulation_nh_init4.newName01:
  %1 = load float* %0, align 4
  store float %1, float* @fuel_pump_integrator, align 4
  %2 = load float* @nh_setpoint, align 4
  store float %2, float* @ramp_filter_memory, align 4
  br label %regulation_nh_init4.return

regulation_nh_init4.return:                       ; preds = %regulation_nh_init4.newName01
  ret void
}

define void @regulation_nh_init5(float*) {
regulation_nh_init5.entry:
  %1 = load float* %0
  %2 = alloca float, align 4, !ConsumedBy !21
  store float %1, float* %2, align 4
  %3 = load float* %2, align 4
  br label %regulation_nh_init5.return

regulation_nh_init5.return:                       ; preds = %regulation_nh_init5.entry
  ret void
}

define void @pid_init6(float*) {
pid_init6.entry:
  %1 = load float* %0
  %2 = alloca float, align 4
  store float %1, float* %2, align 4
  store float 0.000000e+00, float* @epsilon_global, align 4
  %3 = load float* %2, align 4
  store float %3, float* @iTerm, align 4
  store float 0.000000e+00, float* @epsilon_modified, align 4
  store float 0.000000e+00, float* @dTerm_modified, align 4
  br label %pid_init6.return

pid_init6.return:                                 ; preds = %pid_init6.entry
  ret void
}

attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }

!redefine.annotations = !{!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10, !11}

!0 = metadata !{metadata !"HyperOp", void ()* @redefine_start1, metadata !"Static"}
!1 = metadata !{metadata !"Entry", metadata !0}
!2 = metadata !{metadata !"HyperOp", void ()* @redefine_start2, metadata !"Static"}
!3 = metadata !{metadata !"Intermediate", metadata !2}
!4 = metadata !{metadata !"HyperOp", void (float*, float*)* @redefine_start3, metadata !"Static"}
!5 = metadata !{metadata !"Exit", metadata !4}
!6 = metadata !{metadata !"HyperOp", void (float*)* @regulation_nh_init4, metadata !"Static"}
!7 = metadata !{metadata !"Intermediate", metadata !6}
!8 = metadata !{metadata !"HyperOp", void (float*)* @regulation_nh_init5, metadata !"Static"}
!9 = metadata !{metadata !"Intermediate", metadata !8}
!10 = metadata !{metadata !"HyperOp", void (float*)* @pid_init6, metadata !"Static"}
!11 = metadata !{metadata !"Intermediate", metadata !10}
!12 = metadata !{metadata !13, metadata !14}
!13 = metadata !{metadata !8, metadata !"1"}
!14 = metadata !{metadata !2, metadata !"0"}
!15 = metadata !{metadata !16}
!16 = metadata !{metadata !8, metadata !"LocalReference", i32 0}
!17 = metadata !{metadata !18}
!18 = metadata !{metadata !4, metadata !"LocalReference", i32 0}
!19 = metadata !{metadata !20}
!20 = metadata !{metadata !4, metadata !"LocalReference", i32 1}
!21 = metadata !{metadata !22, metadata !23}
!22 = metadata !{metadata !6, metadata !"LocalReference", i32 0}
!23 = metadata !{metadata !10, metadata !"LocalReference", i32 0}

----------Adding sync edges to dangling HyperOps----------
added sync edge between regulation_nh_init4 and redefine_start3
added sync edge between pid_init6 and redefine_start3
added sync edge between redefine_start2 and redefine_start3

-----------Re-routing sync edges from end hyperop to the newly created end HyperOp-----------
whats in module now?; ModuleID = './Compilation_Error/startuppump_original.ll'
target datalayout = "E-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-n32"
target triple = "redefine"

@CMD_FUEL_RAMP_START = global float 0x3FC1EB8520000000, align 4
@CMD_FUEL_RAMP_END = global float 0x3FC1EB8520000000, align 4
@NH_IDLE_GROUND = global float 5.350000e+01, align 4
@NL_IDLE_GROUND = global float 3.000000e+01, align 4
@zero_point_zero_zero_one_four = global float 0x3F56F00680000000, align 4
@zero_point_zero_zero_one = global float 0x3F50624DE0000000, align 4
@one_point_o = global float 1.000000e+00, align 4
@zero_point_one_eight = global float 0x3FC70A3D80000000, align 4
@NL_REF = global float 4.363600e+04, align 4
@NH_REF = global float 5.071900e+04, align 4
@hundred = global float 1.000000e+02, align 4
@zero_point_zero_two = global float 0x3F947AE140000000, align 4
@zero_point_zero_two_five = global float 0x3F999999A0000000, align 4
@zero_point_nine_nine_five = global float 0x3FEFD70A40000000, align 4
@zero_point_one = global float 0x3FB99999A0000000, align 4
@zero_point_zero_one = global float 0x3F847AE140000000, align 4
@exp1 = global float 0x3E8AD7F2A0000000, align 4
@exp3 = global float 0x3F0A36E2E0000000, align 4
@ten = global i32 10, align 4
@fifty = global i32 50, align 4
@thirty = global i32 30, align 4
@twenty = global i32 20, align 4
@two = global i32 2, align 4
@epsilon_global = common global float 0.000000e+00, align 4
@iTerm = common global float 0.000000e+00, align 4
@epsilon_modified = common global float 0.000000e+00, align 4
@dTerm_modified = common global float 0.000000e+00, align 4
@fuel_pump_integrator = common global float 0.000000e+00, align 4
@nh_setpoint = common global float 0.000000e+00, align 4
@ramp_filter_memory = common global float 0.000000e+00, align 4
@redefine_in_parameters = common global [16 x i32] zeroinitializer, align 4
@redefine_start.fuel_press_integrator = internal global float 0.000000e+00, align 4
@redefine_start.fuel_pump_integrator = internal global float 0.000000e+00, align 4
@redefine_start.dnhqdt = internal global float 0.000000e+00, align 4
@fuel_pump_cmd = common global float 0.000000e+00, align 4
@t_fuel_press_control = common global i32 0, align 4
@fuel_press_setpoint = common global float 0.000000e+00, align 4
@operation_mode = common global i32 0, align 4
@redefine_in_stab = common global [50 x i32] zeroinitializer, align 4
@stab_array_index = common global i32 0, align 4
@nh_idle = common global float 0.000000e+00, align 4
@redefine_out_parameters = common global [12 x i32] zeroinitializer, align 4
@nh_average = common global float 0.000000e+00, align 4

; Function Attrs: nounwind
define void @pid_init(float %iTermtemp) #0 {
entry:
  %iTermtemp.addr = alloca float, align 4
  store float %iTermtemp, float* %iTermtemp.addr, align 4
  store float 0.000000e+00, float* @epsilon_global, align 4
  %0 = load float* %iTermtemp.addr, align 4
  store float %0, float* @iTerm, align 4
  store float 0.000000e+00, float* @epsilon_modified, align 4
  store float 0.000000e+00, float* @dTerm_modified, align 4
  ret void
}

; Function Attrs: nounwind
define void @regulation_nh_init(float %cmd) #0 {
entry:
  %cmd.addr = alloca float, align 4
  store float %cmd, float* %cmd.addr, align 4
  %0 = load float* %cmd.addr, align 4
  br label %newName0

newName0:                                         ; preds = %entry
  call void @pid_init(float %0)
  br label %newName01

newName01:                                        ; preds = %newName0
  %1 = load float* %cmd.addr, align 4
  store float %1, float* @fuel_pump_integrator, align 4
  %2 = load float* @nh_setpoint, align 4
  store float %2, float* @ramp_filter_memory, align 4
  ret void
}

; Function Attrs: nounwind
define void @redefine_start() #0 {
entry:
  %0 = getelementptr inbounds float* @CMD_FUEL_RAMP_START, i32 0
  store float 0x3FC1EB8520000000, float* %0, align 4
  %1 = getelementptr inbounds float* @CMD_FUEL_RAMP_END, i32 0
  store float 0x3FC1EB8520000000, float* %1, align 4
  %2 = getelementptr inbounds float* @NH_IDLE_GROUND, i32 0
  store float 5.350000e+01, float* %2, align 4
  %3 = getelementptr inbounds float* @NL_IDLE_GROUND, i32 0
  store float 3.000000e+01, float* %3, align 4
  %4 = getelementptr inbounds float* @zero_point_zero_zero_one_four, i32 0
  store float 0x3F56F00680000000, float* %4, align 4
  %5 = getelementptr inbounds float* @zero_point_zero_zero_one, i32 0
  store float 0x3F50624DE0000000, float* %5, align 4
  %6 = getelementptr inbounds float* @one_point_o, i32 0
  store float 1.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds float* @zero_point_one_eight, i32 0
  store float 0x3FC70A3D80000000, float* %7, align 4
  %8 = getelementptr inbounds float* @NL_REF, i32 0
  store float 4.363600e+04, float* %8, align 4
  %9 = getelementptr inbounds float* @NH_REF, i32 0
  store float 5.071900e+04, float* %9, align 4
  %10 = getelementptr inbounds float* @hundred, i32 0
  store float 1.000000e+02, float* %10, align 4
  %11 = getelementptr inbounds float* @zero_point_zero_two, i32 0
  store float 0x3F947AE140000000, float* %11, align 4
  %12 = getelementptr inbounds float* @zero_point_zero_two_five, i32 0
  store float 0x3F999999A0000000, float* %12, align 4
  %13 = getelementptr inbounds float* @zero_point_nine_nine_five, i32 0
  store float 0x3FEFD70A40000000, float* %13, align 4
  %14 = getelementptr inbounds float* @zero_point_one, i32 0
  store float 0x3FB99999A0000000, float* %14, align 4
  %15 = getelementptr inbounds float* @zero_point_zero_one, i32 0
  store float 0x3F847AE140000000, float* %15, align 4
  %16 = getelementptr inbounds float* @exp1, i32 0
  store float 0x3E8AD7F2A0000000, float* %16, align 4
  %17 = getelementptr inbounds float* @exp3, i32 0
  store float 0x3F0A36E2E0000000, float* %17, align 4
  %18 = getelementptr inbounds i32* @ten, i32 0
  store i32 10, i32* %18, align 4
  %19 = getelementptr inbounds i32* @fifty, i32 0
  store i32 50, i32* %19, align 4
  %20 = getelementptr inbounds i32* @thirty, i32 0
  store i32 30, i32* %20, align 4
  %21 = getelementptr inbounds i32* @twenty, i32 0
  store i32 20, i32* %21, align 4
  %22 = getelementptr inbounds i32* @two, i32 0
  store i32 2, i32* %22, align 4
  %23 = getelementptr inbounds float* @epsilon_global, i32 0
  store float 0.000000e+00, float* %23, align 4
  %24 = getelementptr inbounds float* @iTerm, i32 0
  store float 0.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds float* @epsilon_modified, i32 0
  store float 0.000000e+00, float* %25, align 4
  %26 = getelementptr inbounds float* @dTerm_modified, i32 0
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds float* @fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds float* @nh_setpoint, i32 0
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds float* @ramp_filter_memory, i32 0
  store float 0.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds float* @redefine_start.fuel_press_integrator, i32 0
  store float 0.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds float* @redefine_start.fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %31, align 4
  %32 = getelementptr inbounds float* @redefine_start.dnhqdt, i32 0
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds float* @fuel_pump_cmd, i32 0
  store float 0.000000e+00, float* %33, align 4
  %34 = getelementptr inbounds i32* @t_fuel_press_control, i32 0
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds float* @fuel_press_setpoint, i32 0
  store float 0.000000e+00, float* %35, align 4
  %36 = getelementptr inbounds i32* @operation_mode, i32 0
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds i32* @stab_array_index, i32 0
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds float* @nh_idle, i32 0
  store float 0.000000e+00, float* %38, align 4
  %39 = getelementptr inbounds float* @nh_average, i32 0
  store float 0.000000e+00, float* %39, align 4
  %current_nh = alloca float, align 4
  %index_nh = alloca float, align 4
  %epsilon = alloca float, align 4
  %nh_average = alloca float, align 4
  %i = alloca i32, align 4
  %startup_time = alloca i32, align 4
  %fuel_press = alloca float, align 4
  %40 = load float* bitcast ([16 x i32]* @redefine_in_parameters to float*), align 4
  store float %40, float* %current_nh, align 4
  %41 = load float* bitcast (i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 5) to float*), align 4
  store float %41, float* %index_nh, align 4
  %42 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 1), align 4
  %cmp = icmp eq i32 %42, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* @fuel_pump_cmd, align 4
  %43 = load float* @fuel_pump_cmd, align 4
  br label %newName0

newName0:                                         ; preds = %if.then
  call void @regulation_nh_init(float %43)
  br label %if.end124

if.else:                                          ; preds = %entry
  %44 = load float* %current_nh, align 4
  %cmp1 = fcmp olt float %44, 2.700000e+03
  br i1 %cmp1, label %if.then2, label %if.else3

if.then2:                                         ; preds = %if.else
  br label %if.end123

if.else3:                                         ; preds = %if.else
  %45 = load float* %current_nh, align 4
  %cmp4 = fcmp olt float %45, 1.500000e+04
  br i1 %cmp4, label %if.then5, label %if.else51

if.then5:                                         ; preds = %if.else3
  %46 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 2), align 4
  %cmp6 = icmp eq i32 %46, -1
  br i1 %cmp6, label %if.then7, label %if.else9

if.then7:                                         ; preds = %if.then5
  %47 = load float* @CMD_FUEL_RAMP_START, align 4
  %48 = load float* %current_nh, align 4
  %sub = fsub float %48, 2.700000e+03
  %49 = load float* @CMD_FUEL_RAMP_END, align 4
  %50 = load float* @CMD_FUEL_RAMP_START, align 4
  %sub8 = fsub float %49, %50
  %mul = fmul float %sub, %sub8
  %add = fadd float %47, %mul
  store float %add, float* @fuel_pump_cmd, align 4
  %51 = load float* @fuel_pump_cmd, align 4
  store float %51, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end50

if.else9:                                         ; preds = %if.then5
  %52 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 14), align 4
  store i32 %52, i32* %startup_time, align 4
  %53 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 15), align 4
  %conv = sitofp i32 %53 to float
  store float %conv, float* %fuel_press, align 4
  %54 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 3), align 4
  %cmp10 = icmp eq i32 %54, -1
  br i1 %cmp10, label %if.then12, label %if.else13

if.then12:                                        ; preds = %if.else9
  %55 = load i32* %startup_time, align 4
  store i32 %55, i32* @t_fuel_press_control, align 4
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %if.end32

if.else13:                                        ; preds = %if.else9
  %56 = load i32* %startup_time, align 4
  %57 = load i32* @t_fuel_press_control, align 4
  %sub14 = sub nsw i32 %56, %57
  %58 = load i32* @ten, align 4
  %59 = load i32* @fifty, align 4
  %mul15 = mul nsw i32 %58, %59
  %cmp16 = icmp slt i32 %sub14, %mul15
  br i1 %cmp16, label %if.then18, label %if.else19

if.then18:                                        ; preds = %if.else13
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %if.end31

if.else19:                                        ; preds = %if.else13
  %60 = load i32* %startup_time, align 4
  %61 = load i32* @t_fuel_press_control, align 4
  %sub20 = sub nsw i32 %60, %61
  %62 = load i32* @thirty, align 4
  %63 = load i32* @fifty, align 4
  %mul21 = mul nsw i32 %62, %63
  %cmp22 = icmp slt i32 %sub20, %mul21
  br i1 %cmp22, label %if.then24, label %if.else30

if.then24:                                        ; preds = %if.else19
  %64 = load float* @zero_point_one_eight, align 4
  %65 = load i32* %startup_time, align 4
  %66 = load i32* @t_fuel_press_control, align 4
  %67 = load i32* @ten, align 4
  %68 = load i32* @fifty, align 4
  %mul25 = mul nsw i32 %67, %68
  %add26 = add nsw i32 %66, %mul25
  %sub27 = sub nsw i32 %65, %add26
  %conv28 = sitofp i32 %sub27 to float
  %add29 = fadd float %64, %conv28
  store float %add29, float* @fuel_press_setpoint, align 4
  br label %if.end

if.else30:                                        ; preds = %if.else19
  store float 1.000000e+00, float* @fuel_press_setpoint, align 4
  br label %if.end

if.end:                                           ; preds = %if.else30, %if.then24
  br label %if.end31

if.end31:                                         ; preds = %if.end, %if.then18
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then12
  %69 = load float* @fuel_press_setpoint, align 4
  %70 = load float* %fuel_press, align 4
  %sub33 = fsub float %69, %70
  store float %sub33, float* %epsilon, align 4
  %71 = load float* @redefine_start.fuel_press_integrator, align 4
  %72 = load float* %epsilon, align 4
  %73 = load float* @zero_point_zero_zero_one_four, align 4
  %mul34 = fmul float %72, %73
  %add35 = fadd float %71, %mul34
  store float %add35, float* @redefine_start.fuel_press_integrator, align 4
  %74 = load float* @redefine_start.fuel_press_integrator, align 4
  %75 = load float* @zero_point_zero_two_five, align 4
  %cmp36 = fcmp ogt float %74, %75
  br i1 %cmp36, label %if.then38, label %if.end39

if.then38:                                        ; preds = %if.end32
  store float 2.500000e-01, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end39

if.end39:                                         ; preds = %if.then38, %if.end32
  %76 = load float* @redefine_start.fuel_press_integrator, align 4
  %77 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp40 = fcmp olt float %76, %77
  br i1 %cmp40, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.end39
  %78 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %78, float* @redefine_start.fuel_press_integrator, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.then42, %if.end39
  %79 = load float* @redefine_start.fuel_press_integrator, align 4
  %80 = load float* @zero_point_zero_zero_one, align 4
  %81 = load float* %epsilon, align 4
  %mul44 = fmul float %80, %81
  %add45 = fadd float %79, %mul44
  store float %add45, float* @fuel_pump_cmd, align 4
  %82 = load float* @fuel_pump_cmd, align 4
  %83 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp46 = fcmp olt float %82, %83
  br i1 %cmp46, label %if.then48, label %if.end49

if.then48:                                        ; preds = %if.end43
  %84 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %84, float* @fuel_pump_cmd, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.then48, %if.end43
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then7
  br label %if.end122

if.else51:                                        ; preds = %if.else3
  %85 = load float* %current_nh, align 4
  %cmp52 = fcmp olt float %85, 1.500000e+04
  br i1 %cmp52, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.else51
  br label %if.end121

if.else55:                                        ; preds = %if.else51
  %86 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 4), align 4
  store i32 %86, i32* @operation_mode, align 4
  %87 = load i32* @operation_mode, align 4
  %cmp56 = icmp eq i32 %87, 2
  br i1 %cmp56, label %if.then58, label %if.else62

if.then58:                                        ; preds = %if.else55
  store float 0.000000e+00, float* @fuel_press_setpoint, align 4
  %88 = load float* %current_nh, align 4
  store float %88, float* @nh_setpoint, align 4
  %89 = load float* @fuel_pump_cmd, align 4
  store float %89, float* @redefine_start.fuel_pump_integrator, align 4
  %90 = load float* %current_nh, align 4
  %91 = load float* %index_nh, align 4
  %sub59 = fsub float %90, %91
  %92 = load i32* @two, align 4
  %conv60 = sitofp i32 %92 to float
  %mul61 = fmul float %sub59, %conv60
  store float %mul61, float* @redefine_start.dnhqdt, align 4
  store i32 4, i32* @operation_mode, align 4
  br label %if.end120

if.else62:                                        ; preds = %if.else55
  %93 = load i32* @operation_mode, align 4
  %cmp63 = icmp eq i32 %93, 4
  br i1 %cmp63, label %if.then65, label %if.else118

if.then65:                                        ; preds = %if.else62
  %94 = load float* @nh_setpoint, align 4
  %95 = load float* @NH_IDLE_GROUND, align 4
  %cmp66 = fcmp olt float %94, %95
  br i1 %cmp66, label %if.then68, label %if.else71

if.then68:                                        ; preds = %if.then65
  %96 = load float* @nh_setpoint, align 4
  %97 = load float* @zero_point_zero_two, align 4
  %98 = load float* @redefine_start.dnhqdt, align 4
  %mul69 = fmul float %97, %98
  %add70 = fadd float %96, %mul69
  store float %add70, float* @nh_setpoint, align 4
  br label %if.end74

if.else71:                                        ; preds = %if.then65
  %99 = load float* @nh_setpoint, align 4
  %100 = load float* @zero_point_zero_two, align 4
  %101 = load float* @redefine_start.dnhqdt, align 4
  %mul72 = fmul float %100, %101
  %sub73 = fsub float %99, %mul72
  store float %sub73, float* @nh_setpoint, align 4
  br label %if.end74

if.end74:                                         ; preds = %if.else71, %if.then68
  %102 = load float* @nh_setpoint, align 4
  %103 = load float* %current_nh, align 4
  %sub75 = fsub float %102, %103
  store float %sub75, float* %epsilon, align 4
  %104 = load float* @redefine_start.fuel_pump_integrator, align 4
  %105 = load float* %epsilon, align 4
  %106 = load float* @exp1, align 4
  %mul76 = fmul float %105, %106
  %add77 = fadd float %104, %mul76
  store float %add77, float* @redefine_start.fuel_pump_integrator, align 4
  %107 = load float* @redefine_start.fuel_pump_integrator, align 4
  %108 = load float* @zero_point_zero_two_five, align 4
  %cmp78 = fcmp ogt float %107, %108
  br i1 %cmp78, label %if.then80, label %if.end81

if.then80:                                        ; preds = %if.end74
  store float 2.500000e-01, float* @redefine_start.fuel_pump_integrator, align 4
  br label %if.end81

if.end81:                                         ; preds = %if.then80, %if.end74
  %109 = load float* @redefine_start.fuel_pump_integrator, align 4
  %110 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp82 = fcmp olt float %109, %110
  br i1 %cmp82, label %if.then84, label %if.end85

if.then84:                                        ; preds = %if.end81
  %111 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %111, float* @redefine_start.fuel_pump_integrator, align 4
  br label %if.end85

if.end85:                                         ; preds = %if.then84, %if.end81
  %112 = load float* @redefine_start.fuel_pump_integrator, align 4
  %113 = load float* @exp3, align 4
  %114 = load float* %epsilon, align 4
  %mul86 = fmul float %113, %114
  %add87 = fadd float %112, %mul86
  store float %add87, float* @fuel_pump_cmd, align 4
  %115 = load float* @fuel_pump_cmd, align 4
  %116 = load float* @CMD_FUEL_RAMP_END, align 4
  %cmp88 = fcmp olt float %115, %116
  br i1 %cmp88, label %if.then90, label %if.end91

if.then90:                                        ; preds = %if.end85
  %117 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %117, float* @fuel_pump_cmd, align 4
  br label %if.end91

if.end91:                                         ; preds = %if.then90, %if.end85
  %118 = load float* %current_nh, align 4
  %conv92 = fptosi float %118 to i32
  %119 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 6), align 4
  %arrayidx = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %119
  store i32 %conv92, i32* %arrayidx, align 4
  %120 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 7), align 4
  store i32 %120, i32* @stab_array_index, align 4
  %121 = load i32* @stab_array_index, align 4
  %cmp93 = icmp eq i32 %121, 50
  br i1 %cmp93, label %if.then95, label %if.end96

if.then95:                                        ; preds = %if.end91
  store i32 0, i32* @stab_array_index, align 4
  br label %if.end96

if.end96:                                         ; preds = %if.then95, %if.end91
  store float 0.000000e+00, float* %nh_average, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end96
  %122 = load i32* %i, align 4
  %cmp97 = icmp slt i32 %122, 50
  br i1 %cmp97, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %123 = load i32* %i, align 4
  %arrayidx99 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %123
  %124 = load i32* %arrayidx99, align 4
  %conv100 = sitofp i32 %124 to float
  %125 = load float* %nh_average, align 4
  %add101 = fadd float %125, %conv100
  store float %add101, float* %nh_average, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %126 = load i32* %i, align 4
  %inc = add nsw i32 %126, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %127 = load float* @NH_IDLE_GROUND, align 4
  store float %127, float* @nh_idle, align 4
  %128 = load float* %nh_average, align 4
  %129 = load float* @nh_idle, align 4
  %130 = load float* @NH_REF, align 4
  %mul102 = fmul float %129, %130
  %131 = load float* @hundred, align 4
  %mul103 = fmul float %mul102, %131
  %132 = load float* @zero_point_nine_nine_five, align 4
  %mul104 = fmul float %mul103, %132
  %cmp105 = fcmp oge float %128, %mul104
  br i1 %cmp105, label %land.lhs.true, label %if.end117

land.lhs.true:                                    ; preds = %for.end
  %133 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 8), align 4
  %tobool = icmp ne i32 %133, 0
  br i1 %tobool, label %if.end117, label %land.lhs.true107

land.lhs.true107:                                 ; preds = %land.lhs.true
  %134 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 9), align 4
  %tobool108 = icmp ne i32 %134, 0
  br i1 %tobool108, label %if.end117, label %land.lhs.true109

land.lhs.true109:                                 ; preds = %land.lhs.true107
  %135 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 10), align 4
  %tobool110 = icmp ne i32 %135, 0
  br i1 %tobool110, label %if.end117, label %land.lhs.true111

land.lhs.true111:                                 ; preds = %land.lhs.true109
  %136 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 11), align 4
  %tobool112 = icmp ne i32 %136, 0
  br i1 %tobool112, label %if.end117, label %land.lhs.true113

land.lhs.true113:                                 ; preds = %land.lhs.true111
  %137 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 12), align 4
  %cmp114 = icmp sle i32 %137, 10
  br i1 %cmp114, label %if.then116, label %if.end117

if.then116:                                       ; preds = %land.lhs.true113
  store i32 8, i32* @operation_mode, align 4
  br label %if.end117

if.end117:                                        ; preds = %if.then116, %land.lhs.true113, %land.lhs.true111, %land.lhs.true109, %land.lhs.true107, %land.lhs.true, %for.end
  br label %if.end119

if.else118:                                       ; preds = %if.else62
  store i32 16, i32* @operation_mode, align 4
  br label %if.end119

if.end119:                                        ; preds = %if.else118, %if.end117
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then58
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.then54
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.end50
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %if.then2
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %newName0
  %138 = load i32* bitcast (float* @redefine_start.fuel_press_integrator to i32*), align 4
  store i32 %138, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 0), align 4
  %139 = load i32* bitcast (float* @fuel_press_setpoint to i32*), align 4
  store i32 %139, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 1), align 4
  %140 = load i32* bitcast (float* @epsilon_global to i32*), align 4
  store i32 %140, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 2), align 4
  %141 = load i32* bitcast (float* @iTerm to i32*), align 4
  store i32 %141, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 3), align 4
  %142 = load i32* bitcast (float* @epsilon_modified to i32*), align 4
  store i32 %142, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 4), align 4
  %143 = load i32* bitcast (float* @dTerm_modified to i32*), align 4
  store i32 %143, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 5), align 4
  %144 = load i32* bitcast (float* @redefine_start.fuel_pump_integrator to i32*), align 4
  store i32 %144, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 6), align 4
  %145 = load i32* bitcast (float* @ramp_filter_memory to i32*), align 4
  store i32 %145, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 7), align 4
  %146 = bitcast float* %current_nh to i32*
  %147 = load i32* %146, align 4
  store i32 %147, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 8), align 4
  %148 = load i32* @stab_array_index, align 4
  store i32 %148, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 9), align 4
  %149 = bitcast float* %nh_average to i32*
  %150 = load i32* %149, align 4
  store i32 %150, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 10), align 4
  %151 = load i32* bitcast (float* @nh_idle to i32*), align 4
  store i32 %151, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 11), align 4
  ret void
}

define void @redefine_start1() {
redefine_start1.entry:
  %0 = alloca i1, align 4, !Controls !12
  %1 = alloca float, align 4, !ConsumedBy !15
  %2 = getelementptr inbounds float* @CMD_FUEL_RAMP_START, i32 0
  store float 0x3FC1EB8520000000, float* %2, align 4
  %3 = getelementptr inbounds float* @CMD_FUEL_RAMP_END, i32 0
  store float 0x3FC1EB8520000000, float* %3, align 4
  %4 = getelementptr inbounds float* @NH_IDLE_GROUND, i32 0
  store float 5.350000e+01, float* %4, align 4
  %5 = getelementptr inbounds float* @NL_IDLE_GROUND, i32 0
  store float 3.000000e+01, float* %5, align 4
  %6 = getelementptr inbounds float* @zero_point_zero_zero_one_four, i32 0
  store float 0x3F56F00680000000, float* %6, align 4
  %7 = getelementptr inbounds float* @zero_point_zero_zero_one, i32 0
  store float 0x3F50624DE0000000, float* %7, align 4
  %8 = getelementptr inbounds float* @one_point_o, i32 0
  store float 1.000000e+00, float* %8, align 4
  %9 = getelementptr inbounds float* @zero_point_one_eight, i32 0
  store float 0x3FC70A3D80000000, float* %9, align 4
  %10 = getelementptr inbounds float* @NL_REF, i32 0
  store float 4.363600e+04, float* %10, align 4
  %11 = getelementptr inbounds float* @NH_REF, i32 0
  store float 5.071900e+04, float* %11, align 4
  %12 = getelementptr inbounds float* @hundred, i32 0
  store float 1.000000e+02, float* %12, align 4
  %13 = getelementptr inbounds float* @zero_point_zero_two, i32 0
  store float 0x3F947AE140000000, float* %13, align 4
  %14 = getelementptr inbounds float* @zero_point_zero_two_five, i32 0
  store float 0x3F999999A0000000, float* %14, align 4
  %15 = getelementptr inbounds float* @zero_point_nine_nine_five, i32 0
  store float 0x3FEFD70A40000000, float* %15, align 4
  %16 = getelementptr inbounds float* @zero_point_one, i32 0
  store float 0x3FB99999A0000000, float* %16, align 4
  %17 = getelementptr inbounds float* @zero_point_zero_one, i32 0
  store float 0x3F847AE140000000, float* %17, align 4
  %18 = getelementptr inbounds float* @exp1, i32 0
  store float 0x3E8AD7F2A0000000, float* %18, align 4
  %19 = getelementptr inbounds float* @exp3, i32 0
  store float 0x3F0A36E2E0000000, float* %19, align 4
  %20 = getelementptr inbounds i32* @ten, i32 0
  store i32 10, i32* %20, align 4
  %21 = getelementptr inbounds i32* @fifty, i32 0
  store i32 50, i32* %21, align 4
  %22 = getelementptr inbounds i32* @thirty, i32 0
  store i32 30, i32* %22, align 4
  %23 = getelementptr inbounds i32* @twenty, i32 0
  store i32 20, i32* %23, align 4
  %24 = getelementptr inbounds i32* @two, i32 0
  store i32 2, i32* %24, align 4
  %25 = getelementptr inbounds float* @epsilon_global, i32 0
  store float 0.000000e+00, float* %25, align 4
  %26 = getelementptr inbounds float* @iTerm, i32 0
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds float* @epsilon_modified, i32 0
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds float* @dTerm_modified, i32 0
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds float* @fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds float* @nh_setpoint, i32 0
  store float 0.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds float* @ramp_filter_memory, i32 0
  store float 0.000000e+00, float* %31, align 4
  %32 = getelementptr inbounds float* @redefine_start.fuel_press_integrator, i32 0
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds float* @redefine_start.fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %33, align 4
  %34 = getelementptr inbounds float* @redefine_start.dnhqdt, i32 0
  store float 0.000000e+00, float* %34, align 4
  %35 = getelementptr inbounds float* @fuel_pump_cmd, i32 0
  store float 0.000000e+00, float* %35, align 4
  %36 = getelementptr inbounds i32* @t_fuel_press_control, i32 0
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds float* @fuel_press_setpoint, i32 0
  store float 0.000000e+00, float* %37, align 4
  %38 = getelementptr inbounds i32* @operation_mode, i32 0
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds i32* @stab_array_index, i32 0
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds float* @nh_idle, i32 0
  store float 0.000000e+00, float* %40, align 4
  %41 = getelementptr inbounds float* @nh_average, i32 0
  store float 0.000000e+00, float* %41, align 4
  %42 = alloca float, align 4, !ConsumedBy !17
  %43 = alloca float, align 4
  %44 = alloca float, align 4
  %45 = alloca float, align 4, !ConsumedBy !19
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca float, align 4
  %49 = load float* bitcast ([16 x i32]* @redefine_in_parameters to float*), align 4
  store float %49, float* %42, align 4
  %50 = load float* bitcast (i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 5) to float*), align 4
  store float %50, float* %43, align 4
  %51 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 1), align 4
  %52 = icmp eq i32 %51, 0
  store i1 %52, i1* %0, align 4
  br i1 %52, label %redefine_start1.if.then, label %redefine_start1.if.else

redefine_start1.if.else:                          ; preds = %redefine_start1.entry
  %53 = load float* %42, align 4
  %54 = fcmp olt float %53, 2.700000e+03
  br i1 %54, label %redefine_start1.if.then2, label %redefine_start1.if.else3

redefine_start1.if.else3:                         ; preds = %redefine_start1.if.else
  %55 = load float* %42, align 4
  %56 = fcmp olt float %55, 1.500000e+04
  br i1 %56, label %redefine_start1.if.then5, label %redefine_start1.if.else51

redefine_start1.if.else51:                        ; preds = %redefine_start1.if.else3
  %57 = load float* %42, align 4
  %58 = fcmp olt float %57, 1.500000e+04
  br i1 %58, label %redefine_start1.if.then54, label %redefine_start1.if.else55

redefine_start1.if.else55:                        ; preds = %redefine_start1.if.else51
  %59 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 4), align 4
  store i32 %59, i32* @operation_mode, align 4
  %60 = load i32* @operation_mode, align 4
  %61 = icmp eq i32 %60, 2
  br i1 %61, label %redefine_start1.if.then58, label %redefine_start1.if.else62

redefine_start1.if.else62:                        ; preds = %redefine_start1.if.else55
  %62 = load i32* @operation_mode, align 4
  %63 = icmp eq i32 %62, 4
  br i1 %63, label %redefine_start1.if.then65, label %redefine_start1.if.else118

redefine_start1.if.then65:                        ; preds = %redefine_start1.if.else62
  %64 = load float* @nh_setpoint, align 4
  %65 = load float* @NH_IDLE_GROUND, align 4
  %66 = fcmp olt float %64, %65
  br i1 %66, label %redefine_start1.if.then68, label %redefine_start1.if.else71

redefine_start1.if.then68:                        ; preds = %redefine_start1.if.then65
  %67 = load float* @nh_setpoint, align 4
  %68 = load float* @zero_point_zero_two, align 4
  %69 = load float* @redefine_start.dnhqdt, align 4
  %70 = fmul float %68, %69
  %71 = fadd float %67, %70
  store float %71, float* @nh_setpoint, align 4
  br label %redefine_start1.if.end74

redefine_start1.if.else71:                        ; preds = %redefine_start1.if.then65
  %72 = load float* @nh_setpoint, align 4
  %73 = load float* @zero_point_zero_two, align 4
  %74 = load float* @redefine_start.dnhqdt, align 4
  %75 = fmul float %73, %74
  %76 = fsub float %72, %75
  store float %76, float* @nh_setpoint, align 4
  br label %redefine_start1.if.end74

redefine_start1.if.end74:                         ; preds = %redefine_start1.if.else71, %redefine_start1.if.then68
  %77 = load float* @nh_setpoint, align 4
  %78 = load float* %42, align 4
  %79 = fsub float %77, %78
  store float %79, float* %44, align 4
  %80 = load float* @redefine_start.fuel_pump_integrator, align 4
  %81 = load float* %44, align 4
  %82 = load float* @exp1, align 4
  %83 = fmul float %81, %82
  %84 = fadd float %80, %83
  store float %84, float* @redefine_start.fuel_pump_integrator, align 4
  %85 = load float* @redefine_start.fuel_pump_integrator, align 4
  %86 = load float* @zero_point_zero_two_five, align 4
  %87 = fcmp ogt float %85, %86
  br i1 %87, label %redefine_start1.if.then80, label %redefine_start1.if.end81

redefine_start1.if.then80:                        ; preds = %redefine_start1.if.end74
  store float 2.500000e-01, float* @redefine_start.fuel_pump_integrator, align 4
  br label %redefine_start1.if.end81

redefine_start1.if.end81:                         ; preds = %redefine_start1.if.then80, %redefine_start1.if.end74
  %88 = load float* @redefine_start.fuel_pump_integrator, align 4
  %89 = load float* @CMD_FUEL_RAMP_END, align 4
  %90 = fcmp olt float %88, %89
  br i1 %90, label %redefine_start1.if.then84, label %redefine_start1.if.end85

redefine_start1.if.then84:                        ; preds = %redefine_start1.if.end81
  %91 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %91, float* @redefine_start.fuel_pump_integrator, align 4
  br label %redefine_start1.if.end85

redefine_start1.if.end85:                         ; preds = %redefine_start1.if.then84, %redefine_start1.if.end81
  %92 = load float* @redefine_start.fuel_pump_integrator, align 4
  %93 = load float* @exp3, align 4
  %94 = load float* %44, align 4
  %95 = fmul float %93, %94
  %96 = fadd float %92, %95
  store float %96, float* @fuel_pump_cmd, align 4
  %97 = load float* @fuel_pump_cmd, align 4
  %98 = load float* @CMD_FUEL_RAMP_END, align 4
  %99 = fcmp olt float %97, %98
  br i1 %99, label %redefine_start1.if.then90, label %redefine_start1.if.end91

redefine_start1.if.then90:                        ; preds = %redefine_start1.if.end85
  %100 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %100, float* @fuel_pump_cmd, align 4
  br label %redefine_start1.if.end91

redefine_start1.if.then5:                         ; preds = %redefine_start1.if.else3
  %101 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 2), align 4
  %102 = icmp eq i32 %101, -1
  br i1 %102, label %redefine_start1.if.then7, label %redefine_start1.if.else9

redefine_start1.if.end91:                         ; preds = %redefine_start1.if.then90, %redefine_start1.if.end85
  %103 = load float* %42, align 4
  %104 = fptosi float %103 to i32
  %105 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 6), align 4
  %106 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %105
  store i32 %104, i32* %106, align 4
  %107 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 7), align 4
  store i32 %107, i32* @stab_array_index, align 4
  %108 = load i32* @stab_array_index, align 4
  %109 = icmp eq i32 %108, 50
  br i1 %109, label %redefine_start1.if.then95, label %redefine_start1.if.end96

redefine_start1.if.else9:                         ; preds = %redefine_start1.if.then5
  %110 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 14), align 4
  store i32 %110, i32* %47, align 4
  %111 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 15), align 4
  %112 = sitofp i32 %111 to float
  store float %112, float* %48, align 4
  %113 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 3), align 4
  %114 = icmp eq i32 %113, -1
  br i1 %114, label %redefine_start1.if.then12, label %redefine_start1.if.else13

redefine_start1.if.then95:                        ; preds = %redefine_start1.if.end91
  store i32 0, i32* @stab_array_index, align 4
  br label %redefine_start1.if.end96

redefine_start1.if.end96:                         ; preds = %redefine_start1.if.then95, %redefine_start1.if.end91
  store float 0.000000e+00, float* %45, align 4
  store i32 0, i32* %46, align 4
  br label %redefine_start1.for.cond

redefine_start1.if.else13:                        ; preds = %redefine_start1.if.else9
  %115 = load i32* %47, align 4
  %116 = load i32* @t_fuel_press_control, align 4
  %117 = sub nsw i32 %115, %116
  %118 = load i32* @ten, align 4
  %119 = load i32* @fifty, align 4
  %120 = mul nsw i32 %118, %119
  %121 = icmp slt i32 %117, %120
  br i1 %121, label %redefine_start1.if.then18, label %redefine_start1.if.else19

redefine_start1.for.cond:                         ; preds = %redefine_start1.for.inc, %redefine_start1.if.end96
  %122 = load i32* %46, align 4
  %123 = icmp slt i32 %122, 50
  br i1 %123, label %redefine_start1.for.body, label %redefine_start1.for.end

redefine_start1.for.body:                         ; preds = %redefine_start1.for.cond
  %124 = load i32* %46, align 4
  %125 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %124
  %126 = load i32* %125, align 4
  %127 = sitofp i32 %126 to float
  %128 = load float* %45, align 4
  %129 = fadd float %128, %127
  store float %129, float* %45, align 4
  br label %redefine_start1.for.inc

redefine_start1.for.inc:                          ; preds = %redefine_start1.for.body
  %130 = load i32* %46, align 4
  %131 = add nsw i32 %130, 1
  store i32 %131, i32* %46, align 4
  br label %redefine_start1.for.cond

redefine_start1.if.else19:                        ; preds = %redefine_start1.if.else13
  %132 = load i32* %47, align 4
  %133 = load i32* @t_fuel_press_control, align 4
  %134 = sub nsw i32 %132, %133
  %135 = load i32* @thirty, align 4
  %136 = load i32* @fifty, align 4
  %137 = mul nsw i32 %135, %136
  %138 = icmp slt i32 %134, %137
  br i1 %138, label %redefine_start1.if.then24, label %redefine_start1.if.else30

redefine_start1.for.end:                          ; preds = %redefine_start1.for.cond
  %139 = load float* @NH_IDLE_GROUND, align 4
  store float %139, float* @nh_idle, align 4
  %140 = load float* %45, align 4
  %141 = load float* @nh_idle, align 4
  %142 = load float* @NH_REF, align 4
  %143 = fmul float %141, %142
  %144 = load float* @hundred, align 4
  %145 = fmul float %143, %144
  %146 = load float* @zero_point_nine_nine_five, align 4
  %147 = fmul float %145, %146
  %148 = fcmp oge float %140, %147
  br i1 %148, label %redefine_start1.land.lhs.true, label %redefine_start1.if.end117

redefine_start1.if.then24:                        ; preds = %redefine_start1.if.else19
  %149 = load float* @zero_point_one_eight, align 4
  %150 = load i32* %47, align 4
  %151 = load i32* @t_fuel_press_control, align 4
  %152 = load i32* @ten, align 4
  %153 = load i32* @fifty, align 4
  %154 = mul nsw i32 %152, %153
  %155 = add nsw i32 %151, %154
  %156 = sub nsw i32 %150, %155
  %157 = sitofp i32 %156 to float
  %158 = fadd float %149, %157
  store float %158, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end

redefine_start1.if.else30:                        ; preds = %redefine_start1.if.else19
  store float 1.000000e+00, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end

redefine_start1.if.then18:                        ; preds = %redefine_start1.if.else13
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end31

redefine_start1.land.lhs.true:                    ; preds = %redefine_start1.for.end
  %159 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 8), align 4
  %160 = icmp ne i32 %159, 0
  br i1 %160, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true107

redefine_start1.if.end:                           ; preds = %redefine_start1.if.else30, %redefine_start1.if.then24
  br label %redefine_start1.if.end31

redefine_start1.if.then12:                        ; preds = %redefine_start1.if.else9
  %161 = load i32* %47, align 4
  store i32 %161, i32* @t_fuel_press_control, align 4
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end32

redefine_start1.if.end31:                         ; preds = %redefine_start1.if.end, %redefine_start1.if.then18
  br label %redefine_start1.if.end32

redefine_start1.land.lhs.true107:                 ; preds = %redefine_start1.land.lhs.true
  %162 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 9), align 4
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true109

redefine_start1.if.end32:                         ; preds = %redefine_start1.if.end31, %redefine_start1.if.then12
  %164 = load float* @fuel_press_setpoint, align 4
  %165 = load float* %48, align 4
  %166 = fsub float %164, %165
  store float %166, float* %44, align 4
  %167 = load float* @redefine_start.fuel_press_integrator, align 4
  %168 = load float* %44, align 4
  %169 = load float* @zero_point_zero_zero_one_four, align 4
  %170 = fmul float %168, %169
  %171 = fadd float %167, %170
  store float %171, float* @redefine_start.fuel_press_integrator, align 4
  %172 = load float* @redefine_start.fuel_press_integrator, align 4
  %173 = load float* @zero_point_zero_two_five, align 4
  %174 = fcmp ogt float %172, %173
  br i1 %174, label %redefine_start1.if.then38, label %redefine_start1.if.end39

redefine_start1.land.lhs.true109:                 ; preds = %redefine_start1.land.lhs.true107
  %175 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 10), align 4
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true111

redefine_start1.if.then38:                        ; preds = %redefine_start1.if.end32
  store float 2.500000e-01, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end39

redefine_start1.land.lhs.true111:                 ; preds = %redefine_start1.land.lhs.true109
  %177 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 11), align 4
  %178 = icmp ne i32 %177, 0
  br i1 %178, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true113

redefine_start1.if.end39:                         ; preds = %redefine_start1.if.then38, %redefine_start1.if.end32
  %179 = load float* @redefine_start.fuel_press_integrator, align 4
  %180 = load float* @CMD_FUEL_RAMP_END, align 4
  %181 = fcmp olt float %179, %180
  br i1 %181, label %redefine_start1.if.then42, label %redefine_start1.if.end43

redefine_start1.land.lhs.true113:                 ; preds = %redefine_start1.land.lhs.true111
  %182 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 12), align 4
  %183 = icmp sle i32 %182, 10
  br i1 %183, label %redefine_start1.if.then116, label %redefine_start1.if.end117

redefine_start1.if.then42:                        ; preds = %redefine_start1.if.end39
  %184 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %184, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end43

redefine_start1.if.then116:                       ; preds = %redefine_start1.land.lhs.true113
  store i32 8, i32* @operation_mode, align 4
  br label %redefine_start1.if.end117

redefine_start1.if.else118:                       ; preds = %redefine_start1.if.else62
  store i32 16, i32* @operation_mode, align 4
  br label %redefine_start1.if.end119

redefine_start1.if.end117:                        ; preds = %redefine_start1.if.then116, %redefine_start1.land.lhs.true113, %redefine_start1.land.lhs.true111, %redefine_start1.land.lhs.true109, %redefine_start1.land.lhs.true107, %redefine_start1.land.lhs.true, %redefine_start1.for.end
  br label %redefine_start1.if.end119

redefine_start1.if.end43:                         ; preds = %redefine_start1.if.then42, %redefine_start1.if.end39
  %185 = load float* @redefine_start.fuel_press_integrator, align 4
  %186 = load float* @zero_point_zero_zero_one, align 4
  %187 = load float* %44, align 4
  %188 = fmul float %186, %187
  %189 = fadd float %185, %188
  store float %189, float* @fuel_pump_cmd, align 4
  %190 = load float* @fuel_pump_cmd, align 4
  %191 = load float* @CMD_FUEL_RAMP_END, align 4
  %192 = fcmp olt float %190, %191
  br i1 %192, label %redefine_start1.if.then48, label %redefine_start1.if.end49

redefine_start1.if.then58:                        ; preds = %redefine_start1.if.else55
  store float 0.000000e+00, float* @fuel_press_setpoint, align 4
  %193 = load float* %42, align 4
  store float %193, float* @nh_setpoint, align 4
  %194 = load float* @fuel_pump_cmd, align 4
  store float %194, float* @redefine_start.fuel_pump_integrator, align 4
  %195 = load float* %42, align 4
  %196 = load float* %43, align 4
  %197 = fsub float %195, %196
  %198 = load i32* @two, align 4
  %199 = sitofp i32 %198 to float
  %200 = fmul float %197, %199
  store float %200, float* @redefine_start.dnhqdt, align 4
  store i32 4, i32* @operation_mode, align 4
  br label %redefine_start1.if.end120

redefine_start1.if.end119:                        ; preds = %redefine_start1.if.end117, %redefine_start1.if.else118
  br label %redefine_start1.if.end120

redefine_start1.if.then48:                        ; preds = %redefine_start1.if.end43
  %201 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %201, float* @fuel_pump_cmd, align 4
  br label %redefine_start1.if.end49

redefine_start1.if.then54:                        ; preds = %redefine_start1.if.else51
  br label %redefine_start1.if.end121

redefine_start1.if.then7:                         ; preds = %redefine_start1.if.then5
  %202 = load float* @CMD_FUEL_RAMP_START, align 4
  %203 = load float* %42, align 4
  %204 = fsub float %203, 2.700000e+03
  %205 = load float* @CMD_FUEL_RAMP_END, align 4
  %206 = load float* @CMD_FUEL_RAMP_START, align 4
  %207 = fsub float %205, %206
  %208 = fmul float %204, %207
  %209 = fadd float %202, %208
  store float %209, float* @fuel_pump_cmd, align 4
  %210 = load float* @fuel_pump_cmd, align 4
  store float %210, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end50

redefine_start1.if.end49:                         ; preds = %redefine_start1.if.then48, %redefine_start1.if.end43
  br label %redefine_start1.if.end50

redefine_start1.if.end120:                        ; preds = %redefine_start1.if.end119, %redefine_start1.if.then58
  br label %redefine_start1.if.end121

redefine_start1.if.end121:                        ; preds = %redefine_start1.if.end120, %redefine_start1.if.then54
  br label %redefine_start1.if.end122

redefine_start1.if.end50:                         ; preds = %redefine_start1.if.end49, %redefine_start1.if.then7
  br label %redefine_start1.if.end122

redefine_start1.if.then2:                         ; preds = %redefine_start1.if.else
  br label %redefine_start1.return

redefine_start1.if.end122:                        ; preds = %redefine_start1.if.end50, %redefine_start1.if.end121
  br label %redefine_start1.return

redefine_start1.if.then:                          ; preds = %redefine_start1.entry
  store float 0.000000e+00, float* @fuel_pump_cmd, align 4
  %211 = load float* @fuel_pump_cmd, align 4
  store float %211, float* %1, align 4
  br label %redefine_start1.return

redefine_start1.return:                           ; preds = %redefine_start1.if.end122, %redefine_start1.if.then2, %redefine_start1.if.then
  ret void
}

define void @redefine_start2() {
redefine_start2.if.end123:
  br label %redefine_start2.return, !Sync !21

redefine_start2.return:                           ; preds = %redefine_start2.if.end123
  ret void
}

define void @redefine_start3(float*, float*) {
redefine_start3.if.end124:
  %2 = load i32* bitcast (float* @redefine_start.fuel_press_integrator to i32*), align 4
  store i32 %2, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 0), align 4
  %3 = load i32* bitcast (float* @fuel_press_setpoint to i32*), align 4
  store i32 %3, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 1), align 4
  %4 = load i32* bitcast (float* @epsilon_global to i32*), align 4
  store i32 %4, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 2), align 4
  %5 = load i32* bitcast (float* @iTerm to i32*), align 4
  store i32 %5, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 3), align 4
  %6 = load i32* bitcast (float* @epsilon_modified to i32*), align 4
  store i32 %6, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 4), align 4
  %7 = load i32* bitcast (float* @dTerm_modified to i32*), align 4
  store i32 %7, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 5), align 4
  %8 = load i32* bitcast (float* @redefine_start.fuel_pump_integrator to i32*), align 4
  store i32 %8, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 6), align 4
  %9 = load i32* bitcast (float* @ramp_filter_memory to i32*), align 4
  store i32 %9, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 7), align 4
  %10 = bitcast float* %0 to i32*
  %11 = load i32* %10, align 4
  store i32 %11, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 8), align 4
  %12 = load i32* @stab_array_index, align 4
  store i32 %12, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 9), align 4
  %13 = bitcast float* %1 to i32*
  %14 = load i32* %13, align 4
  store i32 %14, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 10), align 4
  %15 = load i32* bitcast (float* @nh_idle to i32*), align 4
  store i32 %15, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 11), align 4
  br label %redefine_start3.return

redefine_start3.return:                           ; preds = %redefine_start3.if.end124
  ret void
}

define void @regulation_nh_init4(float*) {
regulation_nh_init4.newName01:
  %1 = load float* %0, align 4, !Sync !21
  store float %1, float* @fuel_pump_integrator, align 4
  %2 = load float* @nh_setpoint, align 4
  store float %2, float* @ramp_filter_memory, align 4
  br label %regulation_nh_init4.return

regulation_nh_init4.return:                       ; preds = %regulation_nh_init4.newName01
  ret void
}

define void @regulation_nh_init5(float*) {
regulation_nh_init5.entry:
  %1 = load float* %0
  %2 = alloca float, align 4, !ConsumedBy !23
  store float %1, float* %2, align 4
  %3 = load float* %2, align 4
  br label %regulation_nh_init5.return

regulation_nh_init5.return:                       ; preds = %regulation_nh_init5.entry
  ret void
}

define void @pid_init6(float*) {
pid_init6.entry:
  %1 = load float* %0, !Sync !21
  %2 = alloca float, align 4
  store float %1, float* %2, align 4
  store float 0.000000e+00, float* @epsilon_global, align 4
  %3 = load float* %2, align 4
  store float %3, float* @iTerm, align 4
  store float 0.000000e+00, float* @epsilon_modified, align 4
  store float 0.000000e+00, float* @dTerm_modified, align 4
  br label %pid_init6.return

pid_init6.return:                                 ; preds = %pid_init6.entry
  ret void
}

attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }

!redefine.annotations = !{!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10, !11}

!0 = metadata !{metadata !"HyperOp", void ()* @redefine_start1, metadata !"Static"}
!1 = metadata !{metadata !"Entry", metadata !0}
!2 = metadata !{metadata !"HyperOp", void ()* @redefine_start2, metadata !"Static"}
!3 = metadata !{metadata !"Intermediate", metadata !2}
!4 = metadata !{metadata !"HyperOp", void (float*, float*)* @redefine_start3, metadata !"Static"}
!5 = metadata !{metadata !"Exit", metadata !4}
!6 = metadata !{metadata !"HyperOp", void (float*)* @regulation_nh_init4, metadata !"Static"}
!7 = metadata !{metadata !"Intermediate", metadata !6}
!8 = metadata !{metadata !"HyperOp", void (float*)* @regulation_nh_init5, metadata !"Static"}
!9 = metadata !{metadata !"Intermediate", metadata !8}
!10 = metadata !{metadata !"HyperOp", void (float*)* @pid_init6, metadata !"Static"}
!11 = metadata !{metadata !"Intermediate", metadata !10}
!12 = metadata !{metadata !13, metadata !14}
!13 = metadata !{metadata !8, metadata !"1"}
!14 = metadata !{metadata !2, metadata !"0"}
!15 = metadata !{metadata !16}
!16 = metadata !{metadata !8, metadata !"LocalReference", i32 0}
!17 = metadata !{metadata !18}
!18 = metadata !{metadata !4, metadata !"LocalReference", i32 0}
!19 = metadata !{metadata !20}
!20 = metadata !{metadata !4, metadata !"LocalReference", i32 1}
!21 = metadata !{metadata !22}
!22 = metadata !{metadata !4}
!23 = metadata !{metadata !24, metadata !25}
!24 = metadata !{metadata !6, metadata !"LocalReference", i32 0}
!25 = metadata !{metadata !10, metadata !"LocalReference", i32 0}

-----------Deleting unused functions-----------
deleting contents of function:pid_init
deleting contents of function:regulation_nh_init
deleting contents of function:redefine_start
Final module contents:; ModuleID = './Compilation_Error/startuppump_original.ll'
target datalayout = "E-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-n32"
target triple = "redefine"

@CMD_FUEL_RAMP_START = global float 0x3FC1EB8520000000, align 4
@CMD_FUEL_RAMP_END = global float 0x3FC1EB8520000000, align 4
@NH_IDLE_GROUND = global float 5.350000e+01, align 4
@NL_IDLE_GROUND = global float 3.000000e+01, align 4
@zero_point_zero_zero_one_four = global float 0x3F56F00680000000, align 4
@zero_point_zero_zero_one = global float 0x3F50624DE0000000, align 4
@one_point_o = global float 1.000000e+00, align 4
@zero_point_one_eight = global float 0x3FC70A3D80000000, align 4
@NL_REF = global float 4.363600e+04, align 4
@NH_REF = global float 5.071900e+04, align 4
@hundred = global float 1.000000e+02, align 4
@zero_point_zero_two = global float 0x3F947AE140000000, align 4
@zero_point_zero_two_five = global float 0x3F999999A0000000, align 4
@zero_point_nine_nine_five = global float 0x3FEFD70A40000000, align 4
@zero_point_one = global float 0x3FB99999A0000000, align 4
@zero_point_zero_one = global float 0x3F847AE140000000, align 4
@exp1 = global float 0x3E8AD7F2A0000000, align 4
@exp3 = global float 0x3F0A36E2E0000000, align 4
@ten = global i32 10, align 4
@fifty = global i32 50, align 4
@thirty = global i32 30, align 4
@twenty = global i32 20, align 4
@two = global i32 2, align 4
@epsilon_global = common global float 0.000000e+00, align 4
@iTerm = common global float 0.000000e+00, align 4
@epsilon_modified = common global float 0.000000e+00, align 4
@dTerm_modified = common global float 0.000000e+00, align 4
@fuel_pump_integrator = common global float 0.000000e+00, align 4
@nh_setpoint = common global float 0.000000e+00, align 4
@ramp_filter_memory = common global float 0.000000e+00, align 4
@redefine_in_parameters = common global [16 x i32] zeroinitializer, align 4
@redefine_start.fuel_press_integrator = internal global float 0.000000e+00, align 4
@redefine_start.fuel_pump_integrator = internal global float 0.000000e+00, align 4
@redefine_start.dnhqdt = internal global float 0.000000e+00, align 4
@fuel_pump_cmd = common global float 0.000000e+00, align 4
@t_fuel_press_control = common global i32 0, align 4
@fuel_press_setpoint = common global float 0.000000e+00, align 4
@operation_mode = common global i32 0, align 4
@redefine_in_stab = common global [50 x i32] zeroinitializer, align 4
@stab_array_index = common global i32 0, align 4
@nh_idle = common global float 0.000000e+00, align 4
@redefine_out_parameters = common global [12 x i32] zeroinitializer, align 4
@nh_average = common global float 0.000000e+00, align 4

define void @redefine_start1() {
redefine_start1.entry:
  %0 = alloca i1, align 4, !Controls !12
  %1 = alloca float, align 4, !ConsumedBy !15
  %2 = getelementptr inbounds float* @CMD_FUEL_RAMP_START, i32 0
  store float 0x3FC1EB8520000000, float* %2, align 4
  %3 = getelementptr inbounds float* @CMD_FUEL_RAMP_END, i32 0
  store float 0x3FC1EB8520000000, float* %3, align 4
  %4 = getelementptr inbounds float* @NH_IDLE_GROUND, i32 0
  store float 5.350000e+01, float* %4, align 4
  %5 = getelementptr inbounds float* @NL_IDLE_GROUND, i32 0
  store float 3.000000e+01, float* %5, align 4
  %6 = getelementptr inbounds float* @zero_point_zero_zero_one_four, i32 0
  store float 0x3F56F00680000000, float* %6, align 4
  %7 = getelementptr inbounds float* @zero_point_zero_zero_one, i32 0
  store float 0x3F50624DE0000000, float* %7, align 4
  %8 = getelementptr inbounds float* @one_point_o, i32 0
  store float 1.000000e+00, float* %8, align 4
  %9 = getelementptr inbounds float* @zero_point_one_eight, i32 0
  store float 0x3FC70A3D80000000, float* %9, align 4
  %10 = getelementptr inbounds float* @NL_REF, i32 0
  store float 4.363600e+04, float* %10, align 4
  %11 = getelementptr inbounds float* @NH_REF, i32 0
  store float 5.071900e+04, float* %11, align 4
  %12 = getelementptr inbounds float* @hundred, i32 0
  store float 1.000000e+02, float* %12, align 4
  %13 = getelementptr inbounds float* @zero_point_zero_two, i32 0
  store float 0x3F947AE140000000, float* %13, align 4
  %14 = getelementptr inbounds float* @zero_point_zero_two_five, i32 0
  store float 0x3F999999A0000000, float* %14, align 4
  %15 = getelementptr inbounds float* @zero_point_nine_nine_five, i32 0
  store float 0x3FEFD70A40000000, float* %15, align 4
  %16 = getelementptr inbounds float* @zero_point_one, i32 0
  store float 0x3FB99999A0000000, float* %16, align 4
  %17 = getelementptr inbounds float* @zero_point_zero_one, i32 0
  store float 0x3F847AE140000000, float* %17, align 4
  %18 = getelementptr inbounds float* @exp1, i32 0
  store float 0x3E8AD7F2A0000000, float* %18, align 4
  %19 = getelementptr inbounds float* @exp3, i32 0
  store float 0x3F0A36E2E0000000, float* %19, align 4
  %20 = getelementptr inbounds i32* @ten, i32 0
  store i32 10, i32* %20, align 4
  %21 = getelementptr inbounds i32* @fifty, i32 0
  store i32 50, i32* %21, align 4
  %22 = getelementptr inbounds i32* @thirty, i32 0
  store i32 30, i32* %22, align 4
  %23 = getelementptr inbounds i32* @twenty, i32 0
  store i32 20, i32* %23, align 4
  %24 = getelementptr inbounds i32* @two, i32 0
  store i32 2, i32* %24, align 4
  %25 = getelementptr inbounds float* @epsilon_global, i32 0
  store float 0.000000e+00, float* %25, align 4
  %26 = getelementptr inbounds float* @iTerm, i32 0
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds float* @epsilon_modified, i32 0
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds float* @dTerm_modified, i32 0
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds float* @fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds float* @nh_setpoint, i32 0
  store float 0.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds float* @ramp_filter_memory, i32 0
  store float 0.000000e+00, float* %31, align 4
  %32 = getelementptr inbounds float* @redefine_start.fuel_press_integrator, i32 0
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds float* @redefine_start.fuel_pump_integrator, i32 0
  store float 0.000000e+00, float* %33, align 4
  %34 = getelementptr inbounds float* @redefine_start.dnhqdt, i32 0
  store float 0.000000e+00, float* %34, align 4
  %35 = getelementptr inbounds float* @fuel_pump_cmd, i32 0
  store float 0.000000e+00, float* %35, align 4
  %36 = getelementptr inbounds i32* @t_fuel_press_control, i32 0
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds float* @fuel_press_setpoint, i32 0
  store float 0.000000e+00, float* %37, align 4
  %38 = getelementptr inbounds i32* @operation_mode, i32 0
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds i32* @stab_array_index, i32 0
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds float* @nh_idle, i32 0
  store float 0.000000e+00, float* %40, align 4
  %41 = getelementptr inbounds float* @nh_average, i32 0
  store float 0.000000e+00, float* %41, align 4
  %42 = alloca float, align 4, !ConsumedBy !17
  %43 = alloca float, align 4
  %44 = alloca float, align 4
  %45 = alloca float, align 4, !ConsumedBy !19
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca float, align 4
  %49 = load float* bitcast ([16 x i32]* @redefine_in_parameters to float*), align 4
  store float %49, float* %42, align 4
  %50 = load float* bitcast (i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 5) to float*), align 4
  store float %50, float* %43, align 4
  %51 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 1), align 4
  %52 = icmp eq i32 %51, 0
  store i1 %52, i1* %0, align 4
  br i1 %52, label %redefine_start1.if.then, label %redefine_start1.if.else

redefine_start1.if.else:                          ; preds = %redefine_start1.entry
  %53 = load float* %42, align 4
  %54 = fcmp olt float %53, 2.700000e+03
  br i1 %54, label %redefine_start1.if.then2, label %redefine_start1.if.else3

redefine_start1.if.else3:                         ; preds = %redefine_start1.if.else
  %55 = load float* %42, align 4
  %56 = fcmp olt float %55, 1.500000e+04
  br i1 %56, label %redefine_start1.if.then5, label %redefine_start1.if.else51

redefine_start1.if.else51:                        ; preds = %redefine_start1.if.else3
  %57 = load float* %42, align 4
  %58 = fcmp olt float %57, 1.500000e+04
  br i1 %58, label %redefine_start1.if.then54, label %redefine_start1.if.else55

redefine_start1.if.else55:                        ; preds = %redefine_start1.if.else51
  %59 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 4), align 4
  store i32 %59, i32* @operation_mode, align 4
  %60 = load i32* @operation_mode, align 4
  %61 = icmp eq i32 %60, 2
  br i1 %61, label %redefine_start1.if.then58, label %redefine_start1.if.else62

redefine_start1.if.else62:                        ; preds = %redefine_start1.if.else55
  %62 = load i32* @operation_mode, align 4
  %63 = icmp eq i32 %62, 4
  br i1 %63, label %redefine_start1.if.then65, label %redefine_start1.if.else118

redefine_start1.if.then65:                        ; preds = %redefine_start1.if.else62
  %64 = load float* @nh_setpoint, align 4
  %65 = load float* @NH_IDLE_GROUND, align 4
  %66 = fcmp olt float %64, %65
  br i1 %66, label %redefine_start1.if.then68, label %redefine_start1.if.else71

redefine_start1.if.then68:                        ; preds = %redefine_start1.if.then65
  %67 = load float* @nh_setpoint, align 4
  %68 = load float* @zero_point_zero_two, align 4
  %69 = load float* @redefine_start.dnhqdt, align 4
  %70 = fmul float %68, %69
  %71 = fadd float %67, %70
  store float %71, float* @nh_setpoint, align 4
  br label %redefine_start1.if.end74

redefine_start1.if.else71:                        ; preds = %redefine_start1.if.then65
  %72 = load float* @nh_setpoint, align 4
  %73 = load float* @zero_point_zero_two, align 4
  %74 = load float* @redefine_start.dnhqdt, align 4
  %75 = fmul float %73, %74
  %76 = fsub float %72, %75
  store float %76, float* @nh_setpoint, align 4
  br label %redefine_start1.if.end74

redefine_start1.if.end74:                         ; preds = %redefine_start1.if.else71, %redefine_start1.if.then68
  %77 = load float* @nh_setpoint, align 4
  %78 = load float* %42, align 4
  %79 = fsub float %77, %78
  store float %79, float* %44, align 4
  %80 = load float* @redefine_start.fuel_pump_integrator, align 4
  %81 = load float* %44, align 4
  %82 = load float* @exp1, align 4
  %83 = fmul float %81, %82
  %84 = fadd float %80, %83
  store float %84, float* @redefine_start.fuel_pump_integrator, align 4
  %85 = load float* @redefine_start.fuel_pump_integrator, align 4
  %86 = load float* @zero_point_zero_two_five, align 4
  %87 = fcmp ogt float %85, %86
  br i1 %87, label %redefine_start1.if.then80, label %redefine_start1.if.end81

redefine_start1.if.then80:                        ; preds = %redefine_start1.if.end74
  store float 2.500000e-01, float* @redefine_start.fuel_pump_integrator, align 4
  br label %redefine_start1.if.end81

redefine_start1.if.end81:                         ; preds = %redefine_start1.if.then80, %redefine_start1.if.end74
  %88 = load float* @redefine_start.fuel_pump_integrator, align 4
  %89 = load float* @CMD_FUEL_RAMP_END, align 4
  %90 = fcmp olt float %88, %89
  br i1 %90, label %redefine_start1.if.then84, label %redefine_start1.if.end85

redefine_start1.if.then84:                        ; preds = %redefine_start1.if.end81
  %91 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %91, float* @redefine_start.fuel_pump_integrator, align 4
  br label %redefine_start1.if.end85

redefine_start1.if.end85:                         ; preds = %redefine_start1.if.then84, %redefine_start1.if.end81
  %92 = load float* @redefine_start.fuel_pump_integrator, align 4
  %93 = load float* @exp3, align 4
  %94 = load float* %44, align 4
  %95 = fmul float %93, %94
  %96 = fadd float %92, %95
  store float %96, float* @fuel_pump_cmd, align 4
  %97 = load float* @fuel_pump_cmd, align 4
  %98 = load float* @CMD_FUEL_RAMP_END, align 4
  %99 = fcmp olt float %97, %98
  br i1 %99, label %redefine_start1.if.then90, label %redefine_start1.if.end91

redefine_start1.if.then90:                        ; preds = %redefine_start1.if.end85
  %100 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %100, float* @fuel_pump_cmd, align 4
  br label %redefine_start1.if.end91

redefine_start1.if.then5:                         ; preds = %redefine_start1.if.else3
  %101 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 2), align 4
  %102 = icmp eq i32 %101, -1
  br i1 %102, label %redefine_start1.if.then7, label %redefine_start1.if.else9

redefine_start1.if.end91:                         ; preds = %redefine_start1.if.then90, %redefine_start1.if.end85
  %103 = load float* %42, align 4
  %104 = fptosi float %103 to i32
  %105 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 6), align 4
  %106 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %105
  store i32 %104, i32* %106, align 4
  %107 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 7), align 4
  store i32 %107, i32* @stab_array_index, align 4
  %108 = load i32* @stab_array_index, align 4
  %109 = icmp eq i32 %108, 50
  br i1 %109, label %redefine_start1.if.then95, label %redefine_start1.if.end96

redefine_start1.if.else9:                         ; preds = %redefine_start1.if.then5
  %110 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 14), align 4
  store i32 %110, i32* %47, align 4
  %111 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 15), align 4
  %112 = sitofp i32 %111 to float
  store float %112, float* %48, align 4
  %113 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 3), align 4
  %114 = icmp eq i32 %113, -1
  br i1 %114, label %redefine_start1.if.then12, label %redefine_start1.if.else13

redefine_start1.if.then95:                        ; preds = %redefine_start1.if.end91
  store i32 0, i32* @stab_array_index, align 4
  br label %redefine_start1.if.end96

redefine_start1.if.end96:                         ; preds = %redefine_start1.if.then95, %redefine_start1.if.end91
  store float 0.000000e+00, float* %45, align 4
  store i32 0, i32* %46, align 4
  br label %redefine_start1.for.cond

redefine_start1.if.else13:                        ; preds = %redefine_start1.if.else9
  %115 = load i32* %47, align 4
  %116 = load i32* @t_fuel_press_control, align 4
  %117 = sub nsw i32 %115, %116
  %118 = load i32* @ten, align 4
  %119 = load i32* @fifty, align 4
  %120 = mul nsw i32 %118, %119
  %121 = icmp slt i32 %117, %120
  br i1 %121, label %redefine_start1.if.then18, label %redefine_start1.if.else19

redefine_start1.for.cond:                         ; preds = %redefine_start1.for.inc, %redefine_start1.if.end96
  %122 = load i32* %46, align 4
  %123 = icmp slt i32 %122, 50
  br i1 %123, label %redefine_start1.for.body, label %redefine_start1.for.end

redefine_start1.for.body:                         ; preds = %redefine_start1.for.cond
  %124 = load i32* %46, align 4
  %125 = getelementptr inbounds [50 x i32]* @redefine_in_stab, i32 0, i32 %124
  %126 = load i32* %125, align 4
  %127 = sitofp i32 %126 to float
  %128 = load float* %45, align 4
  %129 = fadd float %128, %127
  store float %129, float* %45, align 4
  br label %redefine_start1.for.inc

redefine_start1.for.inc:                          ; preds = %redefine_start1.for.body
  %130 = load i32* %46, align 4
  %131 = add nsw i32 %130, 1
  store i32 %131, i32* %46, align 4
  br label %redefine_start1.for.cond

redefine_start1.if.else19:                        ; preds = %redefine_start1.if.else13
  %132 = load i32* %47, align 4
  %133 = load i32* @t_fuel_press_control, align 4
  %134 = sub nsw i32 %132, %133
  %135 = load i32* @thirty, align 4
  %136 = load i32* @fifty, align 4
  %137 = mul nsw i32 %135, %136
  %138 = icmp slt i32 %134, %137
  br i1 %138, label %redefine_start1.if.then24, label %redefine_start1.if.else30

redefine_start1.for.end:                          ; preds = %redefine_start1.for.cond
  %139 = load float* @NH_IDLE_GROUND, align 4
  store float %139, float* @nh_idle, align 4
  %140 = load float* %45, align 4
  %141 = load float* @nh_idle, align 4
  %142 = load float* @NH_REF, align 4
  %143 = fmul float %141, %142
  %144 = load float* @hundred, align 4
  %145 = fmul float %143, %144
  %146 = load float* @zero_point_nine_nine_five, align 4
  %147 = fmul float %145, %146
  %148 = fcmp oge float %140, %147
  br i1 %148, label %redefine_start1.land.lhs.true, label %redefine_start1.if.end117

redefine_start1.if.then24:                        ; preds = %redefine_start1.if.else19
  %149 = load float* @zero_point_one_eight, align 4
  %150 = load i32* %47, align 4
  %151 = load i32* @t_fuel_press_control, align 4
  %152 = load i32* @ten, align 4
  %153 = load i32* @fifty, align 4
  %154 = mul nsw i32 %152, %153
  %155 = add nsw i32 %151, %154
  %156 = sub nsw i32 %150, %155
  %157 = sitofp i32 %156 to float
  %158 = fadd float %149, %157
  store float %158, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end

redefine_start1.if.else30:                        ; preds = %redefine_start1.if.else19
  store float 1.000000e+00, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end

redefine_start1.if.then18:                        ; preds = %redefine_start1.if.else13
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end31

redefine_start1.land.lhs.true:                    ; preds = %redefine_start1.for.end
  %159 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 8), align 4
  %160 = icmp ne i32 %159, 0
  br i1 %160, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true107

redefine_start1.if.end:                           ; preds = %redefine_start1.if.else30, %redefine_start1.if.then24
  br label %redefine_start1.if.end31

redefine_start1.if.then12:                        ; preds = %redefine_start1.if.else9
  %161 = load i32* %47, align 4
  store i32 %161, i32* @t_fuel_press_control, align 4
  store float 0x3FC70A3D80000000, float* @fuel_press_setpoint, align 4
  br label %redefine_start1.if.end32

redefine_start1.if.end31:                         ; preds = %redefine_start1.if.end, %redefine_start1.if.then18
  br label %redefine_start1.if.end32

redefine_start1.land.lhs.true107:                 ; preds = %redefine_start1.land.lhs.true
  %162 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 9), align 4
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true109

redefine_start1.if.end32:                         ; preds = %redefine_start1.if.end31, %redefine_start1.if.then12
  %164 = load float* @fuel_press_setpoint, align 4
  %165 = load float* %48, align 4
  %166 = fsub float %164, %165
  store float %166, float* %44, align 4
  %167 = load float* @redefine_start.fuel_press_integrator, align 4
  %168 = load float* %44, align 4
  %169 = load float* @zero_point_zero_zero_one_four, align 4
  %170 = fmul float %168, %169
  %171 = fadd float %167, %170
  store float %171, float* @redefine_start.fuel_press_integrator, align 4
  %172 = load float* @redefine_start.fuel_press_integrator, align 4
  %173 = load float* @zero_point_zero_two_five, align 4
  %174 = fcmp ogt float %172, %173
  br i1 %174, label %redefine_start1.if.then38, label %redefine_start1.if.end39

redefine_start1.land.lhs.true109:                 ; preds = %redefine_start1.land.lhs.true107
  %175 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 10), align 4
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true111

redefine_start1.if.then38:                        ; preds = %redefine_start1.if.end32
  store float 2.500000e-01, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end39

redefine_start1.land.lhs.true111:                 ; preds = %redefine_start1.land.lhs.true109
  %177 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 11), align 4
  %178 = icmp ne i32 %177, 0
  br i1 %178, label %redefine_start1.if.end117, label %redefine_start1.land.lhs.true113

redefine_start1.if.end39:                         ; preds = %redefine_start1.if.then38, %redefine_start1.if.end32
  %179 = load float* @redefine_start.fuel_press_integrator, align 4
  %180 = load float* @CMD_FUEL_RAMP_END, align 4
  %181 = fcmp olt float %179, %180
  br i1 %181, label %redefine_start1.if.then42, label %redefine_start1.if.end43

redefine_start1.land.lhs.true113:                 ; preds = %redefine_start1.land.lhs.true111
  %182 = load i32* getelementptr inbounds ([16 x i32]* @redefine_in_parameters, i32 0, i32 12), align 4
  %183 = icmp sle i32 %182, 10
  br i1 %183, label %redefine_start1.if.then116, label %redefine_start1.if.end117

redefine_start1.if.then42:                        ; preds = %redefine_start1.if.end39
  %184 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %184, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end43

redefine_start1.if.then116:                       ; preds = %redefine_start1.land.lhs.true113
  store i32 8, i32* @operation_mode, align 4
  br label %redefine_start1.if.end117

redefine_start1.if.else118:                       ; preds = %redefine_start1.if.else62
  store i32 16, i32* @operation_mode, align 4
  br label %redefine_start1.if.end119

redefine_start1.if.end117:                        ; preds = %redefine_start1.if.then116, %redefine_start1.land.lhs.true113, %redefine_start1.land.lhs.true111, %redefine_start1.land.lhs.true109, %redefine_start1.land.lhs.true107, %redefine_start1.land.lhs.true, %redefine_start1.for.end
  br label %redefine_start1.if.end119

redefine_start1.if.end43:                         ; preds = %redefine_start1.if.then42, %redefine_start1.if.end39
  %185 = load float* @redefine_start.fuel_press_integrator, align 4
  %186 = load float* @zero_point_zero_zero_one, align 4
  %187 = load float* %44, align 4
  %188 = fmul float %186, %187
  %189 = fadd float %185, %188
  store float %189, float* @fuel_pump_cmd, align 4
  %190 = load float* @fuel_pump_cmd, align 4
  %191 = load float* @CMD_FUEL_RAMP_END, align 4
  %192 = fcmp olt float %190, %191
  br i1 %192, label %redefine_start1.if.then48, label %redefine_start1.if.end49

redefine_start1.if.then58:                        ; preds = %redefine_start1.if.else55
  store float 0.000000e+00, float* @fuel_press_setpoint, align 4
  %193 = load float* %42, align 4
  store float %193, float* @nh_setpoint, align 4
  %194 = load float* @fuel_pump_cmd, align 4
  store float %194, float* @redefine_start.fuel_pump_integrator, align 4
  %195 = load float* %42, align 4
  %196 = load float* %43, align 4
  %197 = fsub float %195, %196
  %198 = load i32* @two, align 4
  %199 = sitofp i32 %198 to float
  %200 = fmul float %197, %199
  store float %200, float* @redefine_start.dnhqdt, align 4
  store i32 4, i32* @operation_mode, align 4
  br label %redefine_start1.if.end120

redefine_start1.if.end119:                        ; preds = %redefine_start1.if.end117, %redefine_start1.if.else118
  br label %redefine_start1.if.end120

redefine_start1.if.then48:                        ; preds = %redefine_start1.if.end43
  %201 = load float* @CMD_FUEL_RAMP_END, align 4
  store float %201, float* @fuel_pump_cmd, align 4
  br label %redefine_start1.if.end49

redefine_start1.if.then54:                        ; preds = %redefine_start1.if.else51
  br label %redefine_start1.if.end121

redefine_start1.if.then7:                         ; preds = %redefine_start1.if.then5
  %202 = load float* @CMD_FUEL_RAMP_START, align 4
  %203 = load float* %42, align 4
  %204 = fsub float %203, 2.700000e+03
  %205 = load float* @CMD_FUEL_RAMP_END, align 4
  %206 = load float* @CMD_FUEL_RAMP_START, align 4
  %207 = fsub float %205, %206
  %208 = fmul float %204, %207
  %209 = fadd float %202, %208
  store float %209, float* @fuel_pump_cmd, align 4
  %210 = load float* @fuel_pump_cmd, align 4
  store float %210, float* @redefine_start.fuel_press_integrator, align 4
  br label %redefine_start1.if.end50

redefine_start1.if.end49:                         ; preds = %redefine_start1.if.then48, %redefine_start1.if.end43
  br label %redefine_start1.if.end50

redefine_start1.if.end120:                        ; preds = %redefine_start1.if.end119, %redefine_start1.if.then58
  br label %redefine_start1.if.end121

redefine_start1.if.end121:                        ; preds = %redefine_start1.if.end120, %redefine_start1.if.then54
  br label %redefine_start1.if.end122

redefine_start1.if.end50:                         ; preds = %redefine_start1.if.end49, %redefine_start1.if.then7
  br label %redefine_start1.if.end122

redefine_start1.if.then2:                         ; preds = %redefine_start1.if.else
  br label %redefine_start1.return

redefine_start1.if.end122:                        ; preds = %redefine_start1.if.end50, %redefine_start1.if.end121
  br label %redefine_start1.return

redefine_start1.if.then:                          ; preds = %redefine_start1.entry
  store float 0.000000e+00, float* @fuel_pump_cmd, align 4
  %211 = load float* @fuel_pump_cmd, align 4
  store float %211, float* %1, align 4
  br label %redefine_start1.return

redefine_start1.return:                           ; preds = %redefine_start1.if.end122, %redefine_start1.if.then2, %redefine_start1.if.then
  ret void
}

define void @redefine_start2() {
redefine_start2.if.end123:
  br label %redefine_start2.return, !Sync !21

redefine_start2.return:                           ; preds = %redefine_start2.if.end123
  ret void
}

define void @redefine_start3(float*, float*) {
redefine_start3.if.end124:
  %2 = load i32* bitcast (float* @redefine_start.fuel_press_integrator to i32*), align 4
  store i32 %2, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 0), align 4
  %3 = load i32* bitcast (float* @fuel_press_setpoint to i32*), align 4
  store i32 %3, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 1), align 4
  %4 = load i32* bitcast (float* @epsilon_global to i32*), align 4
  store i32 %4, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 2), align 4
  %5 = load i32* bitcast (float* @iTerm to i32*), align 4
  store i32 %5, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 3), align 4
  %6 = load i32* bitcast (float* @epsilon_modified to i32*), align 4
  store i32 %6, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 4), align 4
  %7 = load i32* bitcast (float* @dTerm_modified to i32*), align 4
  store i32 %7, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 5), align 4
  %8 = load i32* bitcast (float* @redefine_start.fuel_pump_integrator to i32*), align 4
  store i32 %8, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 6), align 4
  %9 = load i32* bitcast (float* @ramp_filter_memory to i32*), align 4
  store i32 %9, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 7), align 4
  %10 = bitcast float* %0 to i32*
  %11 = load i32* %10, align 4
  store i32 %11, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 8), align 4
  %12 = load i32* @stab_array_index, align 4
  store i32 %12, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 9), align 4
  %13 = bitcast float* %1 to i32*
  %14 = load i32* %13, align 4
  store i32 %14, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 10), align 4
  %15 = load i32* bitcast (float* @nh_idle to i32*), align 4
  store i32 %15, i32* getelementptr inbounds ([12 x i32]* @redefine_out_parameters, i32 0, i32 11), align 4
  br label %redefine_start3.return

redefine_start3.return:                           ; preds = %redefine_start3.if.end124
  ret void
}

define void @regulation_nh_init4(float*) {
regulation_nh_init4.newName01:
  %1 = load float* %0, align 4, !Sync !21
  store float %1, float* @fuel_pump_integrator, align 4
  %2 = load float* @nh_setpoint, align 4
  store float %2, float* @ramp_filter_memory, align 4
  br label %regulation_nh_init4.return

regulation_nh_init4.return:                       ; preds = %regulation_nh_init4.newName01
  ret void
}

define void @regulation_nh_init5(float*) {
regulation_nh_init5.entry:
  %1 = load float* %0
  %2 = alloca float, align 4, !ConsumedBy !23
  store float %1, float* %2, align 4
  %3 = load float* %2, align 4
  br label %regulation_nh_init5.return

regulation_nh_init5.return:                       ; preds = %regulation_nh_init5.entry
  ret void
}

define void @pid_init6(float*) {
pid_init6.entry:
  %1 = load float* %0, !Sync !21
  %2 = alloca float, align 4
  store float %1, float* %2, align 4
  store float 0.000000e+00, float* @epsilon_global, align 4
  %3 = load float* %2, align 4
  store float %3, float* @iTerm, align 4
  store float 0.000000e+00, float* @epsilon_modified, align 4
  store float 0.000000e+00, float* @dTerm_modified, align 4
  br label %pid_init6.return

pid_init6.return:                                 ; preds = %pid_init6.entry
  ret void
}

!redefine.annotations = !{!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10, !11}

!0 = metadata !{metadata !"HyperOp", void ()* @redefine_start1, metadata !"Static"}
!1 = metadata !{metadata !"Entry", metadata !0}
!2 = metadata !{metadata !"HyperOp", void ()* @redefine_start2, metadata !"Static"}
!3 = metadata !{metadata !"Intermediate", metadata !2}
!4 = metadata !{metadata !"HyperOp", void (float*, float*)* @redefine_start3, metadata !"Static"}
!5 = metadata !{metadata !"Exit", metadata !4}
!6 = metadata !{metadata !"HyperOp", void (float*)* @regulation_nh_init4, metadata !"Static"}
!7 = metadata !{metadata !"Intermediate", metadata !6}
!8 = metadata !{metadata !"HyperOp", void (float*)* @regulation_nh_init5, metadata !"Static"}
!9 = metadata !{metadata !"Intermediate", metadata !8}
!10 = metadata !{metadata !"HyperOp", void (float*)* @pid_init6, metadata !"Static"}
!11 = metadata !{metadata !"Intermediate", metadata !10}
!12 = metadata !{metadata !13, metadata !14}
!13 = metadata !{metadata !8, metadata !"1"}
!14 = metadata !{metadata !2, metadata !"0"}
!15 = metadata !{metadata !16}
!16 = metadata !{metadata !8, metadata !"LocalReference", i32 0}
!17 = metadata !{metadata !18}
!18 = metadata !{metadata !4, metadata !"LocalReference", i32 0}
!19 = metadata !{metadata !20}
!20 = metadata !{metadata !4, metadata !"LocalReference", i32 1}
!21 = metadata !{metadata !22}
!22 = metadata !{metadata !4}
!23 = metadata !{metadata !24, metadata !25}
!24 = metadata !{metadata !6, metadata !"LocalReference", i32 0}
!25 = metadata !{metadata !10, metadata !"LocalReference", i32 0}
